name: Performance Testing

on:
  schedule:
    # 每天凌晨2点运行性能测试
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of performance test to run'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - unit
        - integration
        - e2e
        - load

jobs:
  performance-test:
    name: Performance Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      matrix:
        test-suite: [unit, integration, e2e, load]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Warm up Node.js
      run: node -e "console.log('Node.js warmed up')"
      
    - name: Run performance tests - ${{ matrix.test-suite }}
      run: |
        case "${{ matrix.test-suite }}" in
          "unit")
            npm run test:unit -- --verbose --detectOpenHandles
            ;;
          "integration")
            npm run test:integration -- --verbose --detectOpenHandles
            ;;
          "e2e")
            npm run test:e2e -- --verbose --detectOpenHandles --maxWorkers=1
            ;;
          "load")
            npm run test:performance -- --verbose --detectOpenHandles
            ;;
        esac
      env:
        NODE_OPTIONS: '--max-old-space-size=4096'
        
    - name: Collect performance metrics
      run: |
        echo "=== Performance Metrics ===" > performance-${{ matrix.test-suite }}.log
        echo "Test Suite: ${{ matrix.test-suite }}" >> performance-${{ matrix.test-suite }}.log
        echo "Timestamp: $(date)" >> performance-${{ matrix.test-suite }}.log
        echo "Node Version: $(node --version)" >> performance-${{ matrix.test-suite }}.log
        echo "NPM Version: $(npm --version)" >> performance-${{ matrix.test-suite }}.log
        echo "Memory Usage:" >> performance-${{ matrix.test-suite }}.log
        node -e "console.log(JSON.stringify(process.memoryUsage(), null, 2))" >> performance-${{ matrix.test-suite }}.log
        
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: performance-results-${{ matrix.test-suite }}
        path: |
          performance-*.log
          coverage/
          test-results/
          
  benchmark:
    name: Benchmark Tests
    runs-on: ubuntu-latest
    needs: performance-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run benchmark tests
      run: |
        echo "Running component render benchmarks..."
        time npm run test:unit -- --testNamePattern="benchmark|performance" --verbose
        
        echo "Running API response time tests..."
        time npm run test:integration -- --testNamePattern="performance|speed" --verbose
        
    - name: Generate benchmark report
      run: |
        echo "# Performance Benchmark Report" > benchmark-report.md
        echo "Generated on: $(date)" >> benchmark-report.md
        echo "" >> benchmark-report.md
        echo "## Test Results Summary" >> benchmark-report.md
        echo "- Unit Tests: ✅ Completed" >> benchmark-report.md
        echo "- Integration Tests: ✅ Completed" >> benchmark-report.md
        echo "- E2E Tests: ✅ Completed" >> benchmark-report.md
        echo "- Load Tests: ✅ Completed" >> benchmark-report.md
        
    - name: Upload benchmark report
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-report
        path: benchmark-report.md
        
  memory-leak-test:
    name: Memory Leak Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run memory leak tests
      run: |
        echo "Checking for memory leaks in tests..."
        npm test -- --detectOpenHandles --forceExit --logHeapUsage
      env:
        NODE_OPTIONS: '--expose-gc --max-old-space-size=2048'
        
    - name: Analyze heap usage
      run: |
        echo "Heap usage analysis completed"
        # Add heap dump analysis if needed
        
  notify-performance:
    name: Notify Performance Results
    runs-on: ubuntu-latest
    needs: [performance-test, benchmark, memory-leak-test]
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Generate summary report
      run: |
        echo "# Performance Test Summary" > performance-summary.md
        echo "Date: $(date)" >> performance-summary.md
        echo "" >> performance-summary.md
        
        if [ "${{ needs.performance-test.result }}" == "success" ]; then
          echo "✅ Performance Tests: PASSED" >> performance-summary.md
        else
          echo "❌ Performance Tests: FAILED" >> performance-summary.md
        fi
        
        if [ "${{ needs.benchmark.result }}" == "success" ]; then
          echo "✅ Benchmark Tests: PASSED" >> performance-summary.md
        else
          echo "❌ Benchmark Tests: FAILED" >> performance-summary.md
        fi
        
        if [ "${{ needs.memory-leak-test.result }}" == "success" ]; then
          echo "✅ Memory Leak Tests: PASSED" >> performance-summary.md
        else
          echo "❌ Memory Leak Tests: FAILED" >> performance-summary.md
        fi
        
        cat performance-summary.md
        
    - name: Upload summary report
      uses: actions/upload-artifact@v3
      with:
        name: performance-summary
        path: performance-summary.md