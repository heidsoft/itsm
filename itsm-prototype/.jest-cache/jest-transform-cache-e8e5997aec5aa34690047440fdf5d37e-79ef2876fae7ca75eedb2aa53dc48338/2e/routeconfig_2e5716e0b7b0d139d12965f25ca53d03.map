{"version":3,"names":["NavigationBuilder","cov_ox4t11pdn","f","s","RoutePermissionChecker","default","_default","routeConfig","routes","path","name","title","icon","component","permissions","resource","action","meta","requireAuth","breadcrumb","children","keepAlive","hidden","roles","hasRoutePermission","route","userPermissions","userRoles","b","length","hasRole","some","role","includes","every","requiredPermission","userPermission","filterAccessibleRoutes","filter","map","undefined","getBreadcrumbs","currentPath","breadcrumbs","findRoute","parents","fullPath","startsWith","forEach","parent","push","findRouteByName","found","findRouteByPath","buildNavigation","child","getFlatRoutes","flatRoutes","flatten"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/router/route-config.ts"],"sourcesContent":["/**\n * 路由配置和权限管理\n */\n\n// 路由权限类型\nexport interface RoutePermission {\n  resource: string;\n  action: string;\n}\n\n// 路由配置接口\nexport interface RouteConfig {\n  path: string;\n  name: string;\n  title: string;\n  icon?: string;\n  component?: string;\n  children?: RouteConfig[];\n  permissions?: RoutePermission[];\n  hidden?: boolean;\n  redirect?: string;\n  meta?: {\n    requireAuth?: boolean;\n    roles?: string[];\n    keepAlive?: boolean;\n    breadcrumb?: boolean;\n  };\n}\n\n// 主要路由配置\nexport const routes: RouteConfig[] = [\n  {\n    path: '/',\n    name: 'dashboard',\n    title: '仪表盘',\n    icon: 'LayoutDashboard',\n    component: 'Dashboard',\n    permissions: [{ resource: 'dashboard', action: 'read' }],\n    meta: {\n      requireAuth: true,\n      breadcrumb: true,\n    },\n  },\n  {\n    path: '/tickets',\n    name: 'tickets',\n    title: '工单管理',\n    icon: 'Ticket',\n    permissions: [{ resource: 'ticket', action: 'read' }],\n    meta: {\n      requireAuth: true,\n      breadcrumb: true,\n    },\n    children: [\n      {\n        path: '/tickets',\n        name: 'ticket-list',\n        title: '工单列表',\n        component: 'TicketList',\n        permissions: [{ resource: 'ticket', action: 'read' }],\n        meta: {\n          requireAuth: true,\n          keepAlive: true,\n        },\n      },\n      {\n        path: '/tickets/create',\n        name: 'ticket-create',\n        title: '创建工单',\n        component: 'TicketCreate',\n        permissions: [{ resource: 'ticket', action: 'create' }],\n        meta: {\n          requireAuth: true,\n        },\n      },\n      {\n        path: '/tickets/:id',\n        name: 'ticket-detail',\n        title: '工单详情',\n        component: 'TicketDetail',\n        permissions: [{ resource: 'ticket', action: 'read' }],\n        hidden: true,\n        meta: {\n          requireAuth: true,\n        },\n      },\n      {\n        path: '/tickets/:id/edit',\n        name: 'ticket-edit',\n        title: '编辑工单',\n        component: 'TicketEdit',\n        permissions: [{ resource: 'ticket', action: 'update' }],\n        hidden: true,\n        meta: {\n          requireAuth: true,\n        },\n      },\n    ],\n  },\n  {\n    path: '/incidents',\n    name: 'incidents',\n    title: '事件管理',\n    icon: 'AlertTriangle',\n    permissions: [{ resource: 'incident', action: 'read' }],\n    meta: {\n      requireAuth: true,\n      breadcrumb: true,\n    },\n    children: [\n      {\n        path: '/incidents',\n        name: 'incident-list',\n        title: '事件列表',\n        component: 'IncidentList',\n        permissions: [{ resource: 'incident', action: 'read' }],\n        meta: {\n          requireAuth: true,\n          keepAlive: true,\n        },\n      },\n      {\n        path: '/incidents/create',\n        name: 'incident-create',\n        title: '创建事件',\n        component: 'IncidentCreate',\n        permissions: [{ resource: 'incident', action: 'create' }],\n        meta: {\n          requireAuth: true,\n        },\n      },\n      {\n        path: '/incidents/:id',\n        name: 'incident-detail',\n        title: '事件详情',\n        component: 'IncidentDetail',\n        permissions: [{ resource: 'incident', action: 'read' }],\n        hidden: true,\n        meta: {\n          requireAuth: true,\n        },\n      },\n    ],\n  },\n  {\n    path: '/problems',\n    name: 'problems',\n    title: '问题管理',\n    icon: 'Bug',\n    permissions: [{ resource: 'problem', action: 'read' }],\n    meta: {\n      requireAuth: true,\n      breadcrumb: true,\n    },\n    children: [\n      {\n        path: '/problems',\n        name: 'problem-list',\n        title: '问题列表',\n        component: 'ProblemList',\n        permissions: [{ resource: 'problem', action: 'read' }],\n        meta: {\n          requireAuth: true,\n          keepAlive: true,\n        },\n      },\n      {\n        path: '/problems/create',\n        name: 'problem-create',\n        title: '创建问题',\n        component: 'ProblemCreate',\n        permissions: [{ resource: 'problem', action: 'create' }],\n        meta: {\n          requireAuth: true,\n        },\n      },\n      {\n        path: '/problems/:id',\n        name: 'problem-detail',\n        title: '问题详情',\n        component: 'ProblemDetail',\n        permissions: [{ resource: 'problem', action: 'read' }],\n        hidden: true,\n        meta: {\n          requireAuth: true,\n        },\n      },\n    ],\n  },\n  {\n    path: '/changes',\n    name: 'changes',\n    title: '变更管理',\n    icon: 'GitBranch',\n    permissions: [{ resource: 'change', action: 'read' }],\n    meta: {\n      requireAuth: true,\n      breadcrumb: true,\n    },\n    children: [\n      {\n        path: '/changes',\n        name: 'change-list',\n        title: '变更列表',\n        component: 'ChangeList',\n        permissions: [{ resource: 'change', action: 'read' }],\n        meta: {\n          requireAuth: true,\n          keepAlive: true,\n        },\n      },\n      {\n        path: '/changes/create',\n        name: 'change-create',\n        title: '创建变更',\n        component: 'ChangeCreate',\n        permissions: [{ resource: 'change', action: 'create' }],\n        meta: {\n          requireAuth: true,\n        },\n      },\n      {\n        path: '/changes/:id',\n        name: 'change-detail',\n        title: '变更详情',\n        component: 'ChangeDetail',\n        permissions: [{ resource: 'change', action: 'read' }],\n        hidden: true,\n        meta: {\n          requireAuth: true,\n        },\n      },\n    ],\n  },\n  {\n    path: '/knowledge',\n    name: 'knowledge',\n    title: '知识库',\n    icon: 'BookOpen',\n    permissions: [{ resource: 'knowledge', action: 'read' }],\n    meta: {\n      requireAuth: true,\n      breadcrumb: true,\n    },\n    children: [\n      {\n        path: '/knowledge',\n        name: 'knowledge-list',\n        title: '知识文章',\n        component: 'KnowledgeList',\n        permissions: [{ resource: 'knowledge', action: 'read' }],\n        meta: {\n          requireAuth: true,\n          keepAlive: true,\n        },\n      },\n      {\n        path: '/knowledge/create',\n        name: 'knowledge-create',\n        title: '创建文章',\n        component: 'KnowledgeCreate',\n        permissions: [{ resource: 'knowledge', action: 'create' }],\n        meta: {\n          requireAuth: true,\n        },\n      },\n      {\n        path: '/knowledge/:id',\n        name: 'knowledge-detail',\n        title: '文章详情',\n        component: 'KnowledgeDetail',\n        permissions: [{ resource: 'knowledge', action: 'read' }],\n        hidden: true,\n        meta: {\n          requireAuth: true,\n        },\n      },\n    ],\n  },\n  {\n    path: '/cmdb',\n    name: 'cmdb',\n    title: '配置管理',\n    icon: 'Database',\n    permissions: [{ resource: 'cmdb', action: 'read' }],\n    meta: {\n      requireAuth: true,\n      breadcrumb: true,\n    },\n    children: [\n      {\n        path: '/cmdb/ci',\n        name: 'ci-list',\n        title: '配置项',\n        component: 'CIList',\n        permissions: [{ resource: 'cmdb', action: 'read' }],\n        meta: {\n          requireAuth: true,\n          keepAlive: true,\n        },\n      },\n      {\n        path: '/cmdb/ci-types',\n        name: 'ci-type-list',\n        title: '配置项类型',\n        component: 'CITypeList',\n        permissions: [{ resource: 'cmdb', action: 'manage' }],\n        meta: {\n          requireAuth: true,\n        },\n      },\n      {\n        path: '/cmdb/relationships',\n        name: 'ci-relationship-list',\n        title: '关系管理',\n        component: 'CIRelationshipList',\n        permissions: [{ resource: 'cmdb', action: 'read' }],\n        meta: {\n          requireAuth: true,\n        },\n      },\n    ],\n  },\n  {\n    path: '/reports',\n    name: 'reports',\n    title: '报表分析',\n    icon: 'BarChart3',\n    permissions: [{ resource: 'report', action: 'read' }],\n    meta: {\n      requireAuth: true,\n      breadcrumb: true,\n    },\n    children: [\n      {\n        path: '/reports/dashboard',\n        name: 'report-dashboard',\n        title: '报表仪表盘',\n        component: 'ReportDashboard',\n        permissions: [{ resource: 'report', action: 'read' }],\n        meta: {\n          requireAuth: true,\n        },\n      },\n      {\n        path: '/reports/tickets',\n        name: 'ticket-reports',\n        title: '工单报表',\n        component: 'TicketReports',\n        permissions: [{ resource: 'report', action: 'read' }],\n        meta: {\n          requireAuth: true,\n        },\n      },\n      {\n        path: '/reports/sla',\n        name: 'sla-reports',\n        title: 'SLA报表',\n        component: 'SLAReports',\n        permissions: [{ resource: 'report', action: 'read' }],\n        meta: {\n          requireAuth: true,\n        },\n      },\n    ],\n  },\n  {\n    path: '/testing',\n    name: 'testing',\n    title: '测试管理',\n    icon: 'Code',\n    permissions: [{ resource: 'testing', action: 'read' }],\n    meta: {\n      requireAuth: true,\n      roles: ['admin', 'developer'],\n      breadcrumb: true,\n    },\n    children: [\n      {\n        path: '/testing/runner',\n        name: 'test-runner',\n        title: '测试运行器',\n        component: 'TestRunner',\n        permissions: [{ resource: 'testing', action: 'execute' }],\n        meta: {\n          requireAuth: true,\n        },\n      },\n      {\n        path: '/testing/coverage',\n        name: 'test-coverage',\n        title: '测试覆盖率',\n        component: 'TestCoverage',\n        permissions: [{ resource: 'testing', action: 'read' }],\n        meta: {\n          requireAuth: true,\n        },\n      },\n    ],\n  },\n  {\n    path: '/admin',\n    name: 'admin',\n    title: '系统管理',\n    icon: 'Settings',\n    permissions: [{ resource: 'admin', action: 'read' }],\n    meta: {\n      requireAuth: true,\n      roles: ['admin', 'super_admin'],\n      breadcrumb: true,\n    },\n    children: [\n      {\n        path: '/admin/users',\n        name: 'user-management',\n        title: '用户管理',\n        component: 'UserManagement',\n        permissions: [{ resource: 'user', action: 'manage' }],\n        meta: {\n          requireAuth: true,\n          roles: ['admin', 'super_admin'],\n        },\n      },\n      {\n        path: '/admin/roles',\n        name: 'role-management',\n        title: '角色管理',\n        component: 'RoleManagement',\n        permissions: [{ resource: 'role', action: 'manage' }],\n        meta: {\n          requireAuth: true,\n          roles: ['admin', 'super_admin'],\n        },\n      },\n      {\n        path: '/admin/tenants',\n        name: 'tenant-management',\n        title: '租户管理',\n        component: 'TenantManagement',\n        permissions: [{ resource: 'tenant', action: 'manage' }],\n        meta: {\n          requireAuth: true,\n          roles: ['super_admin'],\n        },\n      },\n      {\n        path: '/admin/system',\n        name: 'system-settings',\n        title: '系统设置',\n        component: 'SystemSettings',\n        permissions: [{ resource: 'system', action: 'manage' }],\n        meta: {\n          requireAuth: true,\n          roles: ['admin', 'super_admin'],\n        },\n      },\n    ],\n  },\n];\n\n// 权限检查工具函数\nexport class RoutePermissionChecker {\n  /**\n   * 检查用户是否有访问路由的权限\n   */\n  static hasRoutePermission(\n    route: RouteConfig,\n    userPermissions: RoutePermission[],\n    userRoles: string[] = []\n  ): boolean {\n    // 检查角色权限\n    if (route.meta?.roles && route.meta.roles.length > 0) {\n      const hasRole = route.meta.roles.some(role => userRoles.includes(role));\n      if (!hasRole) {\n        return false;\n      }\n    }\n\n    // 检查资源权限\n    if (route.permissions && route.permissions.length > 0) {\n      return route.permissions.every(requiredPermission =>\n        userPermissions.some(userPermission =>\n          userPermission.resource === requiredPermission.resource &&\n          userPermission.action === requiredPermission.action\n        )\n      );\n    }\n\n    return true;\n  }\n\n  /**\n   * 过滤用户可访问的路由\n   */\n  static filterAccessibleRoutes(\n    routes: RouteConfig[],\n    userPermissions: RoutePermission[],\n    userRoles: string[] = []\n  ): RouteConfig[] {\n    return routes\n      .filter(route => this.hasRoutePermission(route, userPermissions, userRoles))\n      .map(route => ({\n        ...route,\n        children: route.children\n          ? this.filterAccessibleRoutes(route.children, userPermissions, userRoles)\n          : undefined,\n      }))\n      .filter(route => !route.hidden);\n  }\n\n  /**\n   * 获取面包屑导航\n   */\n  static getBreadcrumbs(\n    currentPath: string,\n    routes: RouteConfig[] = []\n  ): Array<{ name: string; title: string; path: string }> {\n    const breadcrumbs: Array<{ name: string; title: string; path: string }> = [];\n\n    const findRoute = (routes: RouteConfig[], path: string, parents: RouteConfig[] = []): boolean => {\n      for (const route of routes) {\n        const fullPath = route.path;\n        \n        if (fullPath === path || (route.children && path.startsWith(fullPath))) {\n          // 添加父级路由到面包屑\n          parents.forEach(parent => {\n            if (parent.meta?.breadcrumb !== false) {\n              breadcrumbs.push({\n                name: parent.name,\n                title: parent.title,\n                path: parent.path,\n              });\n            }\n          });\n\n          // 添加当前路由到面包屑\n          if (route.meta?.breadcrumb !== false) {\n            breadcrumbs.push({\n              name: route.name,\n              title: route.title,\n              path: route.path,\n            });\n          }\n\n          // 如果有子路由，继续查找\n          if (route.children && fullPath !== path) {\n            return findRoute(route.children, path, [...parents, route]);\n          }\n\n          return true;\n        }\n      }\n      return false;\n    };\n\n    findRoute(routes, currentPath);\n    return breadcrumbs;\n  }\n\n  /**\n   * 根据路由名称查找路由配置\n   */\n  static findRouteByName(name: string, routes: RouteConfig[] = []): RouteConfig | null {\n    for (const route of routes) {\n      if (route.name === name) {\n        return route;\n      }\n      if (route.children) {\n        const found = this.findRouteByName(name, route.children);\n        if (found) {\n          return found;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 根据路径查找路由配置\n   */\n  static findRouteByPath(path: string, routes: RouteConfig[] = []): RouteConfig | null {\n    for (const route of routes) {\n      if (route.path === path) {\n        return route;\n      }\n      if (route.children) {\n        const found = this.findRouteByPath(path, route.children);\n        if (found) {\n          return found;\n        }\n      }\n    }\n    return null;\n  }\n}\n\n// 导航菜单生成器\nexport class NavigationBuilder {\n  /**\n   * 生成导航菜单数据\n   */\n  static buildNavigation(\n    routes: RouteConfig[],\n    userPermissions: RoutePermission[],\n    userRoles: string[] = []\n  ): RouteConfig[] {\n    return RoutePermissionChecker.filterAccessibleRoutes(routes, userPermissions, userRoles)\n      .filter(route => !route.hidden)\n      .map(route => ({\n        ...route,\n        children: route.children?.filter(child => !child.hidden),\n      }));\n  }\n\n  /**\n   * 获取扁平化的路由列表（用于权限检查）\n   */\n  static getFlatRoutes(routes: RouteConfig[]): RouteConfig[] {\n    const flatRoutes: RouteConfig[] = [];\n\n    const flatten = (routes: RouteConfig[]) => {\n      routes.forEach(route => {\n        flatRoutes.push(route);\n        if (route.children) {\n          flatten(route.children);\n        }\n      });\n    };\n\n    flatten(routes);\n    return flatRoutes;\n  }\n}\n\n// 默认导出\n// 导出配置对象\nexport const routeConfig = {\n  routes,\n  RoutePermissionChecker,\n  NavigationBuilder,\n};\n\nexport default routeConfig;"],"mappingsilBaA,iBAAiB,WAAAA,CAAA;IAAA;IAAAC,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAAjBH,iBAAA;;EAxIAI,sBAAsB,WAAAA,CAAA;IAAA;IAAAH,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAAtBC,sBAAA;;EAqLbC,OAA2B,WAAAA,CAAA;IAAA;IAAAJ,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAA3BG,QAAA;;EANaC,WAAW,WAAAA,CAAA;IAAA;IAAAN,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAAXI,WAAA;;EA9lBAC,MAAM,WAAAA,CAAA;IAAA;IAAAP,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAANK,MAAA;;;AAAN,MAAMA,MAAA;AAAA;AAAA,CAAAP,aAAA,GAAAE,CAAA,OAAwB,CACnC;EACEM,IAAA,EAAM;EACNC,IAAA,EAAM;EACNC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNC,SAAA,EAAW;EACXC,WAAA,EAAa,CAAC;IAAEC,QAAA,EAAU;IAAaC,MAAA,EAAQ;EAAO,EAAE;EACxDC,IAAA,EAAM;IACJC,WAAA,EAAa;IACbC,UAAA,EAAY;EACd;AACF,GACA;EACEV,IAAA,EAAM;EACNC,IAAA,EAAM;EACNC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNE,WAAA,EAAa,CAAC;IAAEC,QAAA,EAAU;IAAUC,MAAA,EAAQ;EAAO,EAAE;EACrDC,IAAA,EAAM;IACJC,WAAA,EAAa;IACbC,UAAA,EAAY;EACd;EACAC,QAAA,EAAU,CACR;IACEX,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAUC,MAAA,EAAQ;IAAO,EAAE;IACrDC,IAAA,EAAM;MACJC,WAAA,EAAa;MACbG,SAAA,EAAW;IACb;EACF,GACA;IACEZ,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAUC,MAAA,EAAQ;IAAS,EAAE;IACvDC,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF,GACA;IACET,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAUC,MAAA,EAAQ;IAAO,EAAE;IACrDM,MAAA,EAAQ;IACRL,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF,GACA;IACET,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAUC,MAAA,EAAQ;IAAS,EAAE;IACvDM,MAAA,EAAQ;IACRL,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF;AAEJ,GACA;EACET,IAAA,EAAM;EACNC,IAAA,EAAM;EACNC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNE,WAAA,EAAa,CAAC;IAAEC,QAAA,EAAU;IAAYC,MAAA,EAAQ;EAAO,EAAE;EACvDC,IAAA,EAAM;IACJC,WAAA,EAAa;IACbC,UAAA,EAAY;EACd;EACAC,QAAA,EAAU,CACR;IACEX,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAYC,MAAA,EAAQ;IAAO,EAAE;IACvDC,IAAA,EAAM;MACJC,WAAA,EAAa;MACbG,SAAA,EAAW;IACb;EACF,GACA;IACEZ,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAYC,MAAA,EAAQ;IAAS,EAAE;IACzDC,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF,GACA;IACET,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAYC,MAAA,EAAQ;IAAO,EAAE;IACvDM,MAAA,EAAQ;IACRL,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF;AAEJ,GACA;EACET,IAAA,EAAM;EACNC,IAAA,EAAM;EACNC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNE,WAAA,EAAa,CAAC;IAAEC,QAAA,EAAU;IAAWC,MAAA,EAAQ;EAAO,EAAE;EACtDC,IAAA,EAAM;IACJC,WAAA,EAAa;IACbC,UAAA,EAAY;EACd;EACAC,QAAA,EAAU,CACR;IACEX,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAWC,MAAA,EAAQ;IAAO,EAAE;IACtDC,IAAA,EAAM;MACJC,WAAA,EAAa;MACbG,SAAA,EAAW;IACb;EACF,GACA;IACEZ,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAWC,MAAA,EAAQ;IAAS,EAAE;IACxDC,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF,GACA;IACET,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAWC,MAAA,EAAQ;IAAO,EAAE;IACtDM,MAAA,EAAQ;IACRL,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF;AAEJ,GACA;EACET,IAAA,EAAM;EACNC,IAAA,EAAM;EACNC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNE,WAAA,EAAa,CAAC;IAAEC,QAAA,EAAU;IAAUC,MAAA,EAAQ;EAAO,EAAE;EACrDC,IAAA,EAAM;IACJC,WAAA,EAAa;IACbC,UAAA,EAAY;EACd;EACAC,QAAA,EAAU,CACR;IACEX,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAUC,MAAA,EAAQ;IAAO,EAAE;IACrDC,IAAA,EAAM;MACJC,WAAA,EAAa;MACbG,SAAA,EAAW;IACb;EACF,GACA;IACEZ,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAUC,MAAA,EAAQ;IAAS,EAAE;IACvDC,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF,GACA;IACET,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAUC,MAAA,EAAQ;IAAO,EAAE;IACrDM,MAAA,EAAQ;IACRL,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF;AAEJ,GACA;EACET,IAAA,EAAM;EACNC,IAAA,EAAM;EACNC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNE,WAAA,EAAa,CAAC;IAAEC,QAAA,EAAU;IAAaC,MAAA,EAAQ;EAAO,EAAE;EACxDC,IAAA,EAAM;IACJC,WAAA,EAAa;IACbC,UAAA,EAAY;EACd;EACAC,QAAA,EAAU,CACR;IACEX,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAaC,MAAA,EAAQ;IAAO,EAAE;IACxDC,IAAA,EAAM;MACJC,WAAA,EAAa;MACbG,SAAA,EAAW;IACb;EACF,GACA;IACEZ,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAaC,MAAA,EAAQ;IAAS,EAAE;IAC1DC,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF,GACA;IACET,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAaC,MAAA,EAAQ;IAAO,EAAE;IACxDM,MAAA,EAAQ;IACRL,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF;AAEJ,GACA;EACET,IAAA,EAAM;EACNC,IAAA,EAAM;EACNC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNE,WAAA,EAAa,CAAC;IAAEC,QAAA,EAAU;IAAQC,MAAA,EAAQ;EAAO,EAAE;EACnDC,IAAA,EAAM;IACJC,WAAA,EAAa;IACbC,UAAA,EAAY;EACd;EACAC,QAAA,EAAU,CACR;IACEX,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAQC,MAAA,EAAQ;IAAO,EAAE;IACnDC,IAAA,EAAM;MACJC,WAAA,EAAa;MACbG,SAAA,EAAW;IACb;EACF,GACA;IACEZ,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAQC,MAAA,EAAQ;IAAS,EAAE;IACrDC,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF,GACA;IACET,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAQC,MAAA,EAAQ;IAAO,EAAE;IACnDC,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF;AAEJ,GACA;EACET,IAAA,EAAM;EACNC,IAAA,EAAM;EACNC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNE,WAAA,EAAa,CAAC;IAAEC,QAAA,EAAU;IAAUC,MAAA,EAAQ;EAAO,EAAE;EACrDC,IAAA,EAAM;IACJC,WAAA,EAAa;IACbC,UAAA,EAAY;EACd;EACAC,QAAA,EAAU,CACR;IACEX,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAUC,MAAA,EAAQ;IAAO,EAAE;IACrDC,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF,GACA;IACET,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAUC,MAAA,EAAQ;IAAO,EAAE;IACrDC,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF,GACA;IACET,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAUC,MAAA,EAAQ;IAAO,EAAE;IACrDC,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF;AAEJ,GACA;EACET,IAAA,EAAM;EACNC,IAAA,EAAM;EACNC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNE,WAAA,EAAa,CAAC;IAAEC,QAAA,EAAU;IAAWC,MAAA,EAAQ;EAAO,EAAE;EACtDC,IAAA,EAAM;IACJC,WAAA,EAAa;IACbK,KAAA,EAAO,CAAC,SAAS,YAAY;IAC7BJ,UAAA,EAAY;EACd;EACAC,QAAA,EAAU,CACR;IACEX,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAWC,MAAA,EAAQ;IAAU,EAAE;IACzDC,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF,GACA;IACET,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAWC,MAAA,EAAQ;IAAO,EAAE;IACtDC,IAAA,EAAM;MACJC,WAAA,EAAa;IACf;EACF;AAEJ,GACA;EACET,IAAA,EAAM;EACNC,IAAA,EAAM;EACNC,KAAA,EAAO;EACPC,IAAA,EAAM;EACNE,WAAA,EAAa,CAAC;IAAEC,QAAA,EAAU;IAASC,MAAA,EAAQ;EAAO,EAAE;EACpDC,IAAA,EAAM;IACJC,WAAA,EAAa;IACbK,KAAA,EAAO,CAAC,SAAS,cAAc;IAC/BJ,UAAA,EAAY;EACd;EACAC,QAAA,EAAU,CACR;IACEX,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAQC,MAAA,EAAQ;IAAS,EAAE;IACrDC,IAAA,EAAM;MACJC,WAAA,EAAa;MACbK,KAAA,EAAO,CAAC,SAAS;IACnB;EACF,GACA;IACEd,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAQC,MAAA,EAAQ;IAAS,EAAE;IACrDC,IAAA,EAAM;MACJC,WAAA,EAAa;MACbK,KAAA,EAAO,CAAC,SAAS;IACnB;EACF,GACA;IACEd,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAUC,MAAA,EAAQ;IAAS,EAAE;IACvDC,IAAA,EAAM;MACJC,WAAA,EAAa;MACbK,KAAA,EAAO,CAAC;IACV;EACF,GACA;IACEd,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPE,SAAA,EAAW;IACXC,WAAA,EAAa,CAAC;MAAEC,QAAA,EAAU;MAAUC,MAAA,EAAQ;IAAS,EAAE;IACvDC,IAAA,EAAM;MACJC,WAAA,EAAa;MACbK,KAAA,EAAO,CAAC,SAAS;IACnB;EACF;AAEJ,EACD;AAGM,MAAMnB,sBAAA;EACX;;;EAGA,OAAOoB,mBACLC,KAAkB,EAClBC,eAAkC,EAClCC,SAAA;EAAA;EAAA,CAAA1B,aAAA,GAAA2B,CAAA,UAAsB,EAAE,GACf;IAAA;IAAA3B,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;IACT;IACA;IAAI;IAAA,CAAAF,aAAA,GAAA2B,CAAA,UAAAH,KAAA,CAAMR,IAAI,EAAEM,KAAA;IAAA;IAAA,CAAAtB,aAAA,GAAA2B,CAAA,UAASH,KAAA,CAAMR,IAAI,CAACM,KAAK,CAACM,MAAM,GAAG,IAAG;MAAA;MAAA5B,aAAA,GAAA2B,CAAA;MACpD,MAAME,OAAA;MAAA;MAAA,CAAA7B,aAAA,GAAAE,CAAA,QAAUsB,KAAA,CAAMR,IAAI,CAACM,KAAK,CAACQ,IAAI,CAACC,IAAA,IAAQ;QAAA;QAAA/B,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAE,CAAA;QAAA,OAAAwB,SAAA,CAAUM,QAAQ,CAACD,IAAA;MAAA;MAAA;MAAA/B,aAAA,GAAAE,CAAA;MACjE,IAAI,CAAC2B,OAAA,EAAS;QAAA;QAAA7B,aAAA,GAAA2B,CAAA;QAAA3B,aAAA,GAAAE,CAAA;QACZ,OAAO;MACT;MAAA;MAAA;QAAAF,aAAA,GAAA2B,CAAA;MAAA;IACF;IAAA;IAAA;MAAA3B,aAAA,GAAA2B,CAAA;IAAA;IAEA;IAAA3B,aAAA,GAAAE,CAAA;IACA;IAAI;IAAA,CAAAF,aAAA,GAAA2B,CAAA,UAAAH,KAAA,CAAMX,WAAW;IAAA;IAAA,CAAAb,aAAA,GAAA2B,CAAA,UAAIH,KAAA,CAAMX,WAAW,CAACe,MAAM,GAAG,IAAG;MAAA;MAAA5B,aAAA,GAAA2B,CAAA;MAAA3B,aAAA,GAAAE,CAAA;MACrD,OAAOsB,KAAA,CAAMX,WAAW,CAACoB,KAAK,CAACC,kBAAA,IAC7B;QAAA;QAAAlC,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAE,CAAA;QAAA,OAAAuB,eAAA,CAAgBK,IAAI,CAACK,cAAA,IACnB;UAAA;UAAAnC,aAAA,GAAAC,CAAA;UAAAD,aAAA,GAAAE,CAAA;UAAA,kCAAAF,aAAA,GAAA2B,CAAA,UAAAQ,cAAA,CAAerB,QAAQ,KAAKoB,kBAAA,CAAmBpB,QAAQ;UAAA;UAAA,CAAAd,aAAA,GAAA2B,CAAA,UACvDQ,cAAA,CAAepB,MAAM,KAAKmB,kBAAA,CAAmBnB,MAAM;QAAN,CAAM;MAAA;IAGzD;IAAA;IAAA;MAAAf,aAAA,GAAA2B,CAAA;IAAA;IAAA3B,aAAA,GAAAE,CAAA;IAEA,OAAO;EACT;EAEA;;;EAGA,OAAOkC,uBACL7B,MAAqB,EACrBkB,eAAkC,EAClCC,SAAA;EAAA;EAAA,CAAA1B,aAAA,GAAA2B,CAAA,UAAsB,EAAE,GACT;IAAA;IAAA3B,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;IACf,OAAOK,MAAA,CACJ8B,MAAM,CAACb,KAAA,IAAS;MAAA;MAAAxB,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAE,CAAA;MAAA,WAAI,CAACqB,kBAAkB,CAACC,KAAA,EAAOC,eAAA,EAAiBC,SAAA;IAAA,GAChEY,GAAG,CAACd,KAAA,IAAU;MAAA;MAAAxB,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAE,CAAA;MAAA;QACb,GAAGsB,KAAK;QACRL,QAAA,EAAUK,KAAA,CAAML,QAAQ;QAAA;QAAA,CAAAnB,aAAA,GAAA2B,CAAA,UACpB,IAAI,CAACS,sBAAsB,CAACZ,KAAA,CAAML,QAAQ,EAAEM,eAAA,EAAiBC,SAAA;QAAA;QAAA,CAAA1B,aAAA,GAAA2B,CAAA,UAC7DY,SAAA;MACN;IAAA,GACCF,MAAM,CAACb,KAAA,IAAS;MAAA;MAAAxB,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAE,CAAA;MAAA,QAACsB,KAAA,CAAMH,MAAM;IAAN,CAAM;EAClC;EAEA;;;EAGA,OAAOmB,eACLC,WAAmB,EACnBlC,MAAA;EAAA;EAAA,CAAAP,aAAA,GAAA2B,CAAA,UAAwB,EAAE,GAC4B;IAAA;IAAA3B,aAAA,GAAAC,CAAA;IACtD,MAAMyC,WAAA;IAAA;IAAA,CAAA1C,aAAA,GAAAE,CAAA,QAAoE,EAAE;IAAA;IAAAF,aAAA,GAAAE,CAAA;IAE5E,MAAMyC,SAAA,GAAYA,CAACpC,MAAA,EAAuBC,IAAA,EAAcoC,OAAA;IAAA;IAAA,CAAA5C,aAAA,GAAA2B,CAAA,WAAyB,EAAE;MAAA;MAAA3B,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAE,CAAA;MACjF,KAAK,MAAMsB,KAAA,IAASjB,MAAA,EAAQ;QAC1B,MAAMsC,QAAA;QAAA;QAAA,CAAA7C,aAAA,GAAAE,CAAA,QAAWsB,KAAA,CAAMhB,IAAI;QAAA;QAAAR,aAAA,GAAAE,CAAA;QAE3B;QAAI;QAAA,CAAAF,aAAA,GAAA2B,CAAA,WAAAkB,QAAA,KAAarC,IAAA;QAAS;QAAA,CAAAR,aAAA,GAAA2B,CAAA,WAAAH,KAAA,CAAML,QAAQ;QAAA;QAAA,CAAAnB,aAAA,GAAA2B,CAAA,WAAInB,IAAA,CAAKsC,UAAU,CAACD,QAAA,IAAY;UAAA;UAAA7C,aAAA,GAAA2B,CAAA;UAAA3B,aAAA,GAAAE,CAAA;UACtE;UACA0C,OAAA,CAAQG,OAAO,CAACC,MAAA;YAAA;YAAAhD,aAAA,GAAAC,CAAA;YAAAD,aAAA,GAAAE,CAAA;YACd,IAAI8C,MAAA,CAAOhC,IAAI,EAAEE,UAAA,KAAe,OAAO;cAAA;cAAAlB,aAAA,GAAA2B,CAAA;cAAA3B,aAAA,GAAAE,CAAA;cACrCwC,WAAA,CAAYO,IAAI,CAAC;gBACfxC,IAAA,EAAMuC,MAAA,CAAOvC,IAAI;gBACjBC,KAAA,EAAOsC,MAAA,CAAOtC,KAAK;gBACnBF,IAAA,EAAMwC,MAAA,CAAOxC;cACf;YACF;YAAA;YAAA;cAAAR,aAAA,GAAA2B,CAAA;YAAA;UACF;UAEA;UAAA;UAAA3B,aAAA,GAAAE,CAAA;UACA,IAAIsB,KAAA,CAAMR,IAAI,EAAEE,UAAA,KAAe,OAAO;YAAA;YAAAlB,aAAA,GAAA2B,CAAA;YAAA3B,aAAA,GAAAE,CAAA;YACpCwC,WAAA,CAAYO,IAAI,CAAC;cACfxC,IAAA,EAAMe,KAAA,CAAMf,IAAI;cAChBC,KAAA,EAAOc,KAAA,CAAMd,KAAK;cAClBF,IAAA,EAAMgB,KAAA,CAAMhB;YACd;UACF;UAAA;UAAA;YAAAR,aAAA,GAAA2B,CAAA;UAAA;UAEA;UAAA3B,aAAA,GAAAE,CAAA;UACA;UAAI;UAAA,CAAAF,aAAA,GAAA2B,CAAA,WAAAH,KAAA,CAAML,QAAQ;UAAA;UAAA,CAAAnB,aAAA,GAAA2B,CAAA,WAAIkB,QAAA,KAAarC,IAAA,GAAM;YAAA;YAAAR,aAAA,GAAA2B,CAAA;YAAA3B,aAAA,GAAAE,CAAA;YACvC,OAAOyC,SAAA,CAAUnB,KAAA,CAAML,QAAQ,EAAEX,IAAA,EAAM,C,GAAIoC,OAAA,EAASpB,KAAA,CAAM;UAC5D;UAAA;UAAA;YAAAxB,aAAA,GAAA2B,CAAA;UAAA;UAAA3B,aAAA,GAAAE,CAAA;UAEA,OAAO;QACT;QAAA;QAAA;UAAAF,aAAA,GAAA2B,CAAA;QAAA;MACF;MAAA;MAAA3B,aAAA,GAAAE,CAAA;MACA,OAAO;IACT;IAAA;IAAAF,aAAA,GAAAE,CAAA;IAEAyC,SAAA,CAAUpC,MAAA,EAAQkC,WAAA;IAAA;IAAAzC,aAAA,GAAAE,CAAA;IAClB,OAAOwC,WAAA;EACT;EAEA;;;EAGA,OAAOQ,gBAAgBzC,IAAY,EAAEF,MAAA;EAAA;EAAA,CAAAP,aAAA,GAAA2B,CAAA,WAAwB,EAAE,GAAsB;IAAA;IAAA3B,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;IACnF,KAAK,MAAMsB,KAAA,IAASjB,MAAA,EAAQ;MAAA;MAAAP,aAAA,GAAAE,CAAA;MAC1B,IAAIsB,KAAA,CAAMf,IAAI,KAAKA,IAAA,EAAM;QAAA;QAAAT,aAAA,GAAA2B,CAAA;QAAA3B,aAAA,GAAAE,CAAA;QACvB,OAAOsB,KAAA;MACT;MAAA;MAAA;QAAAxB,aAAA,GAAA2B,CAAA;MAAA;MAAA3B,aAAA,GAAAE,CAAA;MACA,IAAIsB,KAAA,CAAML,QAAQ,EAAE;QAAA;QAAAnB,aAAA,GAAA2B,CAAA;QAClB,MAAMwB,KAAA;QAAA;QAAA,CAAAnD,aAAA,GAAAE,CAAA,QAAQ,IAAI,CAACgD,eAAe,CAACzC,IAAA,EAAMe,KAAA,CAAML,QAAQ;QAAA;QAAAnB,aAAA,GAAAE,CAAA;QACvD,IAAIiD,KAAA,EAAO;UAAA;UAAAnD,aAAA,GAAA2B,CAAA;UAAA3B,aAAA,GAAAE,CAAA;UACT,OAAOiD,KAAA;QACT;QAAA;QAAA;UAAAnD,aAAA,GAAA2B,CAAA;QAAA;MACF;MAAA;MAAA;QAAA3B,aAAA,GAAA2B,CAAA;MAAA;IACF;IAAA;IAAA3B,aAAA,GAAAE,CAAA;IACA,OAAO;EACT;EAEA;;;EAGA,OAAOkD,gBAAgB5C,IAAY,EAAED,MAAA;EAAA;EAAA,CAAAP,aAAA,GAAA2B,CAAA,WAAwB,EAAE,GAAsB;IAAA;IAAA3B,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;IACnF,KAAK,MAAMsB,KAAA,IAASjB,MAAA,EAAQ;MAAA;MAAAP,aAAA,GAAAE,CAAA;MAC1B,IAAIsB,KAAA,CAAMhB,IAAI,KAAKA,IAAA,EAAM;QAAA;QAAAR,aAAA,GAAA2B,CAAA;QAAA3B,aAAA,GAAAE,CAAA;QACvB,OAAOsB,KAAA;MACT;MAAA;MAAA;QAAAxB,aAAA,GAAA2B,CAAA;MAAA;MAAA3B,aAAA,GAAAE,CAAA;MACA,IAAIsB,KAAA,CAAML,QAAQ,EAAE;QAAA;QAAAnB,aAAA,GAAA2B,CAAA;QAClB,MAAMwB,KAAA;QAAA;QAAA,CAAAnD,aAAA,GAAAE,CAAA,QAAQ,IAAI,CAACkD,eAAe,CAAC5C,IAAA,EAAMgB,KAAA,CAAML,QAAQ;QAAA;QAAAnB,aAAA,GAAAE,CAAA;QACvD,IAAIiD,KAAA,EAAO;UAAA;UAAAnD,aAAA,GAAA2B,CAAA;UAAA3B,aAAA,GAAAE,CAAA;UACT,OAAOiD,KAAA;QACT;QAAA;QAAA;UAAAnD,aAAA,GAAA2B,CAAA;QAAA;MACF;MAAA;MAAA;QAAA3B,aAAA,GAAA2B,CAAA;MAAA;IACF;IAAA;IAAA3B,aAAA,GAAAE,CAAA;IACA,OAAO;EACT;AACF;AAGO,MAAMH,iBAAA;EACX;;;EAGA,OAAOsD,gBACL9C,MAAqB,EACrBkB,eAAkC,EAClCC,SAAA;EAAA;EAAA,CAAA1B,aAAA,GAAA2B,CAAA,WAAsB,EAAE,GACT;IAAA;IAAA3B,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;IACf,OAAOC,sBAAA,CAAuBiC,sBAAsB,CAAC7B,MAAA,EAAQkB,eAAA,EAAiBC,SAAA,EAC3EW,MAAM,CAACb,KAAA,IAAS;MAAA;MAAAxB,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAE,CAAA;MAAA,QAACsB,KAAA,CAAMH,MAAM;IAAN,CAAM,EAC7BiB,GAAG,CAACd,KAAA,IAAU;MAAA;MAAAxB,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAE,CAAA;MAAA;QACb,GAAGsB,KAAK;QACRL,QAAA,EAAUK,KAAA,CAAML,QAAQ,EAAEkB,MAAA,CAAOiB,KAAA,IAAS;UAAA;UAAAtD,aAAA,GAAAC,CAAA;UAAAD,aAAA,GAAAE,CAAA;UAAA,QAACoD,KAAA,CAAMjC,MAAM;QAAN,CAAM;MACzD;IAAA;EACJ;EAEA;;;EAGA,OAAOkC,cAAchD,MAAqB,EAAiB;IAAA;IAAAP,aAAA,GAAAC,CAAA;IACzD,MAAMuD,UAAA;IAAA;IAAA,CAAAxD,aAAA,GAAAE,CAAA,QAA4B,EAAE;IAAA;IAAAF,aAAA,GAAAE,CAAA;IAEpC,MAAMuD,OAAA,GAAWlD,MAAA;MAAA;MAAAP,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAE,CAAA;MACfK,MAAA,CAAOwC,OAAO,CAACvB,KAAA;QAAA;QAAAxB,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAE,CAAA;QACbsD,UAAA,CAAWP,IAAI,CAACzB,KAAA;QAAA;QAAAxB,aAAA,GAAAE,CAAA;QAChB,IAAIsB,KAAA,CAAML,QAAQ,EAAE;UAAA;UAAAnB,aAAA,GAAA2B,CAAA;UAAA3B,aAAA,GAAAE,CAAA;UAClBuD,OAAA,CAAQjC,KAAA,CAAML,QAAQ;QACxB;QAAA;QAAA;UAAAnB,aAAA,GAAA2B,CAAA;QAAA;MACF;IACF;IAAA;IAAA3B,aAAA,GAAAE,CAAA;IAEAuD,OAAA,CAAQlD,MAAA;IAAA;IAAAP,aAAA,GAAAE,CAAA;IACR,OAAOsD,UAAA;EACT;AACF;AAIO,MAAMlD,WAAA;AAAA;AAAA,CAAAN,aAAA,GAAAE,CAAA,QAAc;EACzBK,MAAA;EACAJ,sBAAA;EACAJ;AACF;MAEAM,QAAA;AAAA;AAAA,CAAAL,aAAA,GAAAE,CAAA,QAAeI,WAAA","ignoreList":[]}