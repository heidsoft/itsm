{"version":3,"names":["cov_yismc3mjh","actualCoverage","s","BREAKPOINTS","f","MEDIA_QUERIES","useDeviceType","useMediaQuery","useResponsive","useScrollPosition","useViewportSize","xs","sm","md","lg","xl","breakpoint","setBreakpoint","_react","useState","isMobile","setIsMobile","isTablet","setIsTablet","isDesktop","setIsDesktop","useEffect","updateBreakpoint","width","window","innerWidth","b","addEventListener","removeEventListener","isGreaterThan","bp","isLessThan","isBetween","min","max","isTouch","isLandscape","innerHeight","size","setSize","height","updateSize","scrollPosition","setScrollPosition","x","y","updatePosition","pageXOffset","pageYOffset","query","matches","setMatches","mediaQuery","matchMedia","handler","event","mobile","tablet","desktop","darkMode","lightMode","reducedMotion","highContrast"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/hooks/useResponsive.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\n// 断点定义\nexport const BREAKPOINTS = {\n  xs: 480,\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280,\n  '2xl': 1536,\n} as const;\n\nexport type Breakpoint = keyof typeof BREAKPOINTS;\n\n// 响应式 Hook\nexport const useResponsive = () => {\n  const [breakpoint, setBreakpoint] = useState<Breakpoint>('lg');\n  const [isMobile, setIsMobile] = useState(false);\n  const [isTablet, setIsTablet] = useState(false);\n  const [isDesktop, setIsDesktop] = useState(false);\n\n  useEffect(() => {\n    const updateBreakpoint = () => {\n      const width = window.innerWidth;\n      \n      if (width < BREAKPOINTS.sm) {\n        setBreakpoint('xs');\n        setIsMobile(true);\n        setIsTablet(false);\n        setIsDesktop(false);\n      } else if (width < BREAKPOINTS.md) {\n        setBreakpoint('sm');\n        setIsMobile(true);\n        setIsTablet(false);\n        setIsDesktop(false);\n      } else if (width < BREAKPOINTS.lg) {\n        setBreakpoint('md');\n        setIsMobile(false);\n        setIsTablet(true);\n        setIsDesktop(false);\n      } else if (width < BREAKPOINTS.xl) {\n        setBreakpoint('lg');\n        setIsMobile(false);\n        setIsTablet(false);\n        setIsDesktop(true);\n      } else {\n        setBreakpoint('2xl');\n        setIsMobile(false);\n        setIsTablet(false);\n        setIsDesktop(true);\n      }\n    };\n\n    // 初始化\n    updateBreakpoint();\n\n    // 监听窗口大小变化\n    window.addEventListener('resize', updateBreakpoint);\n\n    // 清理\n    return () => window.removeEventListener('resize', updateBreakpoint);\n  }, []);\n\n  // 检查是否大于等于指定断点\n  const isGreaterThan = (bp: Breakpoint) => {\n    return window.innerWidth >= BREAKPOINTS[bp];\n  };\n\n  // 检查是否小于指定断点\n  const isLessThan = (bp: Breakpoint) => {\n    return window.innerWidth < BREAKPOINTS[bp];\n  };\n\n  // 检查是否在指定断点范围内\n  const isBetween = (min: Breakpoint, max: Breakpoint) => {\n    const width = window.innerWidth;\n    return width >= BREAKPOINTS[min] && width < BREAKPOINTS[max];\n  };\n\n  return {\n    breakpoint,\n    isMobile,\n    isTablet,\n    isDesktop,\n    isGreaterThan,\n    isLessThan,\n    isBetween,\n    BREAKPOINTS,\n  };\n};\n\n// 设备类型 Hook\nexport const useDeviceType = () => {\n  const { isMobile, isTablet, isDesktop } = useResponsive();\n\n  return {\n    isMobile,\n    isTablet,\n    isDesktop,\n    isTouch: typeof window !== 'undefined' && 'ontouchstart' in window,\n    isLandscape: typeof window !== 'undefined' && window.innerWidth > window.innerHeight,\n  };\n};\n\n// 视口尺寸 Hook\nexport const useViewportSize = () => {\n  const [size, setSize] = useState({\n    width: typeof window !== 'undefined' ? window.innerWidth : 0,\n    height: typeof window !== 'undefined' ? window.innerHeight : 0,\n  });\n\n  useEffect(() => {\n    const updateSize = () => {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    updateSize();\n    window.addEventListener('resize', updateSize);\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  return size;\n};\n\n// 滚动位置 Hook\nexport const useScrollPosition = () => {\n  const [scrollPosition, setScrollPosition] = useState({\n    x: 0,\n    y: 0,\n  });\n\n  useEffect(() => {\n    const updatePosition = () => {\n      setScrollPosition({\n        x: window.pageXOffset,\n        y: window.pageYOffset,\n      });\n    };\n\n    updatePosition();\n    window.addEventListener('scroll', updatePosition);\n    return () => window.removeEventListener('scroll', updatePosition);\n  }, []);\n\n  return scrollPosition;\n};\n\n// 媒体查询 Hook\nexport const useMediaQuery = (query: string) => {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(query);\n    setMatches(mediaQuery.matches);\n\n    const handler = (event: MediaQueryListEvent) => {\n      setMatches(event.matches);\n    };\n\n    mediaQuery.addEventListener('change', handler);\n    return () => mediaQuery.removeEventListener('change', handler);\n  }, [query]);\n\n  return matches;\n};\n\n// 预定义的媒体查询\nexport const MEDIA_QUERIES = {\n  mobile: '(max-width: 767px)',\n  tablet: '(min-width: 768px) and (max-width: 1023px)',\n  desktop: '(min-width: 1024px)',\n  darkMode: '(prefers-color-scheme: dark)',\n  lightMode: '(prefers-color-scheme: light)',\n  reducedMotion: '(prefers-reduced-motion: reduce)',\n  highContrast: '(prefers-contrast: high)',\n} as const;\n"],"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","ignoreList":[]}