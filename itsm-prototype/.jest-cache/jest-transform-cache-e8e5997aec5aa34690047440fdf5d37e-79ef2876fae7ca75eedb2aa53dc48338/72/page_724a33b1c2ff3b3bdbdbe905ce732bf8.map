{"version":3,"names":["_default","Title","Text","cov_2lrykdf8zn","s","_antd","Typography","ProblemEfficiencyPage","f","isClient","setIsClient","_react","useState","useEffect","problemsByStatus","_mockdata","mockProblemsData","reduce","acc","problem","status","b","problemsByPriority","priority","totalProblems","length","resolvedProblems","inProgressProblems","highPriorityProblems","getStatusColor","getPriorityColor","_jsxruntime","jsx","className","jsxs","level","type","Row","gutter","Col","span","Card","Statistic","title","value","prefix","_lucidereact","AlertTriangle","valueStyle","color","CheckCircle","Clock","XCircle","Object","entries","map","count","Tag","toFixed","List","dataSource","renderItem","Item","id","assignee","createdAt"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/reports/problem-efficiency/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Statistic, Row, Col, List, Tag, Typography } from \"antd\";\nimport { AlertTriangle, CheckCircle, Clock, XCircle } from \"lucide-react\";\nimport { mockProblemsData } from \"../../lib/mock-data\";\n\nconst { Title, Text } = Typography;\n\nconst ProblemEfficiencyPage = () => {\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // Aggregate data for charts\n  const problemsByStatus = mockProblemsData.reduce(\n    (acc: Record<string, number>, problem) => {\n      acc[problem.status] = (acc[problem.status] || 0) + 1;\n      return acc;\n    },\n    {}\n  );\n\n  const problemsByPriority = mockProblemsData.reduce(\n    (acc: Record<string, number>, problem) => {\n      acc[problem.priority] = (acc[problem.priority] || 0) + 1;\n      return acc;\n    },\n    {}\n  );\n\n  const totalProblems = mockProblemsData.length;\n  const resolvedProblems = problemsByStatus[\"Resolved\"] || 0;\n  const inProgressProblems = problemsByStatus[\"Investigating\"] || 0;\n  const highPriorityProblems = problemsByPriority[\"High\"] || 0;\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"Resolved\":\n        return \"success\";\n      case \"Investigating\":\n        return \"processing\";\n      case \"Known Error\":\n        return \"warning\";\n      case \"Closed\":\n        return \"default\";\n      default:\n        return \"default\";\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case \"High\":\n        return \"error\";\n      case \"Medium\":\n        return \"warning\";\n      case \"Low\":\n        return \"default\";\n      default:\n        return \"default\";\n    }\n  };\n\n  if (!isClient) {\n    return (\n      <div className=\"p-10 bg-gray-50 min-h-full flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Page loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-10 bg-gray-50 min-h-full\">\n      <header className=\"mb-8\">\n        <Title level={2} className=\"mb-2\">\n          Problem Management Efficiency Report\n        </Title>\n        <Text type=\"secondary\">This report shows efficiency metrics for the problem management process</Text>\n      </header>\n\n      {/* Statistics Cards */}\n      <Row gutter={16} className=\"mb-8\">\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Total Problems\"\n              value={totalProblems}\n              prefix={<AlertTriangle className=\"text-blue-500\" />}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Resolved Problems\"\n              value={resolvedProblems}\n              valueStyle={{ color: \"#3f8600\" }}\n              prefix={<CheckCircle className=\"text-green-500\" />}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Problems in Progress\"\n              value={inProgressProblems}\n              valueStyle={{ color: \"#1890ff\" }}\n              prefix={<Clock className=\"text-blue-500\" />}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"High Priority Problems\"\n              value={highPriorityProblems}\n              valueStyle={{ color: \"#cf1322\" }}\n              prefix={<XCircle className=\"text-red-500\" />}\n            />\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Problem Status Distribution */}\n      <Row gutter={16} className=\"mb-8\">\n        <Col span={12}>\n          <Card title=\"Problem Status Distribution\" className=\"h-80\">\n            <div className=\"space-y-4\">\n              {Object.entries(problemsByStatus).map(([status, count]) => (\n                <div key={status} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Tag color={getStatusColor(status)}>{status}</Tag>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-lg font-semibold\">{count}</span>\n                    <span className=\"text-sm text-gray-500\">\n                      ({((count / totalProblems) * 100).toFixed(1)}%)\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card title=\"Problem Priority Distribution\" className=\"h-80\">\n            <div className=\"space-y-4\">\n              {Object.entries(problemsByPriority).map(([priority, count]) => (\n                <div\n                  key={priority}\n                  className=\"flex items-center justify-between\"\n                >\n                  <div className=\"flex items-center gap-2\">\n                    <Tag color={getPriorityColor(priority)}>{priority}</Tag>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-lg font-semibold\">{count}</span>\n                    <span className=\"text-sm text-gray-500\">\n                      ({((count / totalProblems) * 100).toFixed(1)}%)\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Problem List */}\n      <Card title=\"Problem Details List\" className=\"mb-8\">\n        <List\n          dataSource={mockProblemsData}\n          renderItem={(problem) => (\n            <List.Item>\n              <div className=\"w-full\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center gap-3\">\n                    <span className=\"font-medium text-blue-600\">\n                      {problem.id}\n                    </span>\n                    <span className=\"font-medium\">{problem.title}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Tag color={getStatusColor(problem.status)}>\n                      {problem.status}\n                    </Tag>\n                    <Tag color={getPriorityColor(problem.priority)}>\n                      {problem.priority}\n                    </Tag>\n                  </div>\n                </div>\n                <div className=\"flex items-center justify-between text-sm text-gray-500\">\n                  <span>Assignee: {problem.assignee}</span>\n                  <span>Created: {problem.createdAt}</span>\n                </div>\n              </div>\n            </List.Item>\n          )}\n        />\n      </Card>\n\n      {/* Efficiency Metrics */}\n      <Card title=\"Efficiency Metrics\" className=\"mb-8\">\n        <Row gutter={16}>\n          <Col span={8}>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-green-600\">\n                {totalProblems > 0\n                  ? ((resolvedProblems / totalProblems) * 100).toFixed(1)\n                  : 0}\n                %\n              </div>\n              <div className=\"text-gray-500\">Problem Resolution Rate</div>\n            </div>\n          </Col>\n          <Col span={8}>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600\">\n                {totalProblems > 0\n                  ? ((inProgressProblems / totalProblems) * 100).toFixed(1)\n                  : 0}\n                %\n              </div>\n              <div className=\"text-gray-500\">In Progress Ratio</div>\n            </div>\n          </Col>\n          <Col span={8}>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-red-600\">\n                {totalProblems > 0\n                  ? ((highPriorityProblems / totalProblems) * 100).toFixed(1)\n                  : 0}\n                %\n              </div>\n              <div className=\"text-gray-500\">High Priority Ratio</div>\n            </div>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default ProblemEfficiencyPage;\n"],"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","ignoreList":[]}