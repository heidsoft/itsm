27e97134f2305517c647a4f8209e6c8e
"use client";
"use strict";

/* istanbul ignore next */
function cov_2lrykdf8zn() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/reports/problem-efficiency/page.tsx";
  var hash = "c2dda07929e91179c8c3aee58b2c0fa7bd89266f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/reports/problem-efficiency/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "6": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "7": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 48
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "9": {
        start: {
          line: 18,
          column: 39
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "10": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "11": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 20
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "14": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "15": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "16": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "17": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "18": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 53
        }
      },
      "19": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "20": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "21": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "22": {
        start: {
          line: 41,
          column: 32
        },
        end: {
          line: 41,
          column: 88
        }
      },
      "23": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "24": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "25": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 44,
          column: 95
        }
      },
      "26": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "27": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 57
        }
      },
      "28": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 39
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 25
        }
      },
      "30": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "31": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 31
        }
      },
      "32": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 18
        }
      },
      "33": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 40
        }
      },
      "34": {
        start: {
          line: 59,
          column: 30
        },
        end: {
          line: 414,
          column: 1
        }
      },
      "35": {
        start: {
          line: 60,
          column: 36
        },
        end: {
          line: 60,
          column: 63
        }
      },
      "36": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "37": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 26
        }
      },
      "38": {
        start: {
          line: 65,
          column: 29
        },
        end: {
          line: 68,
          column: 10
        }
      },
      "39": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 61
        }
      },
      "40": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 19
        }
      },
      "41": {
        start: {
          line: 69,
          column: 31
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "42": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 65
        }
      },
      "43": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 19
        }
      },
      "44": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 73,
          column: 59
        }
      },
      "45": {
        start: {
          line: 74,
          column: 29
        },
        end: {
          line: 74,
          column: 62
        }
      },
      "46": {
        start: {
          line: 75,
          column: 31
        },
        end: {
          line: 75,
          column: 69
        }
      },
      "47": {
        start: {
          line: 76,
          column: 33
        },
        end: {
          line: 76,
          column: 64
        }
      },
      "48": {
        start: {
          line: 77,
          column: 27
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "49": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "50": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 33
        }
      },
      "51": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 36
        }
      },
      "52": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 33
        }
      },
      "53": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 33
        }
      },
      "54": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 33
        }
      },
      "55": {
        start: {
          line: 91,
          column: 29
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "56": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "57": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 31
        }
      },
      "58": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 33
        }
      },
      "59": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 33
        }
      },
      "60": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 33
        }
      },
      "61": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "62": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "63": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 413,
          column: 7
        }
      },
      "64": {
        start: {
          line: 211,
          column: 112
        },
        end: {
          line: 239,
          column: 46
        }
      },
      "65": {
        start: {
          line: 250,
          column: 116
        },
        end: {
          line: 278,
          column: 48
        }
      },
      "66": {
        start: {
          line: 289,
          column: 57
        },
        end: {
          line: 343,
          column: 26
        }
      },
      "67": {
        start: {
          line: 415,
          column: 17
        },
        end: {
          line: 415,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 47
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 21,
            column: 40
          }
        },
        loc: {
          start: {
            line: 21,
            column: 61
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 34
          }
        },
        loc: {
          start: {
            line: 25,
            column: 53
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 59,
            column: 31
          }
        },
        loc: {
          start: {
            line: 59,
            column: 34
          },
          end: {
            line: 414,
            column: 1
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 61,
            column: 27
          }
        },
        loc: {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 61
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 63
          },
          end: {
            line: 65,
            column: 64
          }
        },
        loc: {
          start: {
            line: 65,
            column: 79
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 69,
            column: 65
          },
          end: {
            line: 69,
            column: 66
          }
        },
        loc: {
          start: {
            line: 69,
            column: 81
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 69
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 77,
            column: 27
          },
          end: {
            line: 77,
            column: 28
          }
        },
        loc: {
          start: {
            line: 77,
            column: 37
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 77
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 91,
            column: 29
          },
          end: {
            line: 91,
            column: 30
          }
        },
        loc: {
          start: {
            line: 91,
            column: 41
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 91
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 211,
            column: 79
          },
          end: {
            line: 211,
            column: 80
          }
        },
        loc: {
          start: {
            line: 211,
            column: 112
          },
          end: {
            line: 239,
            column: 46
          }
        },
        line: 211
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 250,
            column: 81
          },
          end: {
            line: 250,
            column: 82
          }
        },
        loc: {
          start: {
            line: 250,
            column: 116
          },
          end: {
            line: 278,
            column: 48
          }
        },
        line: 250
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 289,
            column: 32
          },
          end: {
            line: 289,
            column: 33
          }
        },
        loc: {
          start: {
            line: 289,
            column: 57
          },
          end: {
            line: 343,
            column: 26
          }
        },
        line: 289
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 45
          }
        }, {
          start: {
            line: 22,
            column: 48
          },
          end: {
            line: 22,
            column: 65
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 20
          }
        }, {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 27
          }
        }, {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 26,
            column: 45
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 20
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 47
          }
        }, {
          start: {
            line: 29,
            column: 51
          },
          end: {
            line: 29,
            column: 76
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 13
          }
        }, {
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 31
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 53
          }
        }, {
          start: {
            line: 41,
            column: 57
          },
          end: {
            line: 41,
            column: 88
          }
        }],
        line: 41
      },
      "9": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "10": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 29
          }
        }, {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 43,
            column: 79
          }
        }],
        line: 43
      },
      "11": {
        loc: {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 44,
            column: 88
          }
        }, {
          start: {
            line: 44,
            column: 91
          },
          end: {
            line: 44,
            column: 95
          }
        }],
        line: 44
      },
      "12": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 49,
            column: 13
          }
        }],
        line: 45
      },
      "13": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 20
          }
        }, {
          start: {
            line: 45,
            column: 25
          },
          end: {
            line: 45,
            column: 33
          }
        }, {
          start: {
            line: 45,
            column: 37
          },
          end: {
            line: 45,
            column: 45
          }
        }],
        line: 45
      },
      "14": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "15": {
        loc: {
          start: {
            line: 66,
            column: 31
          },
          end: {
            line: 66,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 31
          },
          end: {
            line: 66,
            column: 50
          }
        }, {
          start: {
            line: 66,
            column: 54
          },
          end: {
            line: 66,
            column: 55
          }
        }],
        line: 66
      },
      "16": {
        loc: {
          start: {
            line: 70,
            column: 33
          },
          end: {
            line: 70,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 33
          },
          end: {
            line: 70,
            column: 54
          }
        }, {
          start: {
            line: 70,
            column: 58
          },
          end: {
            line: 70,
            column: 59
          }
        }],
        line: 70
      },
      "17": {
        loc: {
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 74,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 74,
            column: 57
          }
        }, {
          start: {
            line: 74,
            column: 61
          },
          end: {
            line: 74,
            column: 62
          }
        }],
        line: 74
      },
      "18": {
        loc: {
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 64
          }
        }, {
          start: {
            line: 75,
            column: 68
          },
          end: {
            line: 75,
            column: 69
          }
        }],
        line: 75
      },
      "19": {
        loc: {
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 76,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 76,
            column: 59
          }
        }, {
          start: {
            line: 76,
            column: 63
          },
          end: {
            line: 76,
            column: 64
          }
        }],
        line: 76
      },
      "20": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 80,
            column: 33
          }
        }, {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 82,
            column: 36
          }
        }, {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 84,
            column: 33
          }
        }, {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 86,
            column: 33
          }
        }, {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 88,
            column: 33
          }
        }],
        line: 78
      },
      "21": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 94,
            column: 31
          }
        }, {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 96,
            column: 33
          }
        }, {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 98,
            column: 33
          }
        }, {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 100,
            column: 33
          }
        }],
        line: 92
      },
      "22": {
        loc: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "23": {
        loc: {
          start: {
            line: 360,
            column: 44
          },
          end: {
            line: 360,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 360,
            column: 64
          },
          end: {
            line: 360,
            column: 115
          }
        }, {
          start: {
            line: 360,
            column: 118
          },
          end: {
            line: 360,
            column: 119
          }
        }],
        line: 360
      },
      "24": {
        loc: {
          start: {
            line: 379,
            column: 44
          },
          end: {
            line: 379,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 379,
            column: 64
          },
          end: {
            line: 379,
            column: 117
          }
        }, {
          start: {
            line: 379,
            column: 120
          },
          end: {
            line: 379,
            column: 121
          }
        }],
        line: 379
      },
      "25": {
        loc: {
          start: {
            line: 398,
            column: 44
          },
          end: {
            line: 398,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 398,
            column: 64
          },
          end: {
            line: 398,
            column: 119
          }
        }, {
          start: {
            line: 398,
            column: 122
          },
          end: {
            line: 398,
            column: 123
          }
        }],
        line: 398
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0, 0],
      "21": [0, 0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/reports/problem-efficiency/page.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Statistic, Row, Col, List, Tag, Typography } from \"antd\";\nimport { AlertTriangle, CheckCircle, Clock, XCircle } from \"lucide-react\";\nimport { mockProblemsData } from \"../../lib/mock-data\";\n\nconst { Title, Text } = Typography;\n\nconst ProblemEfficiencyPage = () => {\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // Aggregate data for charts\n  const problemsByStatus = mockProblemsData.reduce(\n    (acc: Record<string, number>, problem) => {\n      acc[problem.status] = (acc[problem.status] || 0) + 1;\n      return acc;\n    },\n    {}\n  );\n\n  const problemsByPriority = mockProblemsData.reduce(\n    (acc: Record<string, number>, problem) => {\n      acc[problem.priority] = (acc[problem.priority] || 0) + 1;\n      return acc;\n    },\n    {}\n  );\n\n  const totalProblems = mockProblemsData.length;\n  const resolvedProblems = problemsByStatus[\"Resolved\"] || 0;\n  const inProgressProblems = problemsByStatus[\"Investigating\"] || 0;\n  const highPriorityProblems = problemsByPriority[\"High\"] || 0;\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"Resolved\":\n        return \"success\";\n      case \"Investigating\":\n        return \"processing\";\n      case \"Known Error\":\n        return \"warning\";\n      case \"Closed\":\n        return \"default\";\n      default:\n        return \"default\";\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case \"High\":\n        return \"error\";\n      case \"Medium\":\n        return \"warning\";\n      case \"Low\":\n        return \"default\";\n      default:\n        return \"default\";\n    }\n  };\n\n  if (!isClient) {\n    return (\n      <div className=\"p-10 bg-gray-50 min-h-full flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Page loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-10 bg-gray-50 min-h-full\">\n      <header className=\"mb-8\">\n        <Title level={2} className=\"mb-2\">\n          Problem Management Efficiency Report\n        </Title>\n        <Text type=\"secondary\">This report shows efficiency metrics for the problem management process</Text>\n      </header>\n\n      {/* Statistics Cards */}\n      <Row gutter={16} className=\"mb-8\">\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Total Problems\"\n              value={totalProblems}\n              prefix={<AlertTriangle className=\"text-blue-500\" />}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Resolved Problems\"\n              value={resolvedProblems}\n              valueStyle={{ color: \"#3f8600\" }}\n              prefix={<CheckCircle className=\"text-green-500\" />}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Problems in Progress\"\n              value={inProgressProblems}\n              valueStyle={{ color: \"#1890ff\" }}\n              prefix={<Clock className=\"text-blue-500\" />}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"High Priority Problems\"\n              value={highPriorityProblems}\n              valueStyle={{ color: \"#cf1322\" }}\n              prefix={<XCircle className=\"text-red-500\" />}\n            />\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Problem Status Distribution */}\n      <Row gutter={16} className=\"mb-8\">\n        <Col span={12}>\n          <Card title=\"Problem Status Distribution\" className=\"h-80\">\n            <div className=\"space-y-4\">\n              {Object.entries(problemsByStatus).map(([status, count]) => (\n                <div key={status} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Tag color={getStatusColor(status)}>{status}</Tag>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-lg font-semibold\">{count}</span>\n                    <span className=\"text-sm text-gray-500\">\n                      ({((count / totalProblems) * 100).toFixed(1)}%)\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card title=\"Problem Priority Distribution\" className=\"h-80\">\n            <div className=\"space-y-4\">\n              {Object.entries(problemsByPriority).map(([priority, count]) => (\n                <div\n                  key={priority}\n                  className=\"flex items-center justify-between\"\n                >\n                  <div className=\"flex items-center gap-2\">\n                    <Tag color={getPriorityColor(priority)}>{priority}</Tag>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-lg font-semibold\">{count}</span>\n                    <span className=\"text-sm text-gray-500\">\n                      ({((count / totalProblems) * 100).toFixed(1)}%)\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Problem List */}\n      <Card title=\"Problem Details List\" className=\"mb-8\">\n        <List\n          dataSource={mockProblemsData}\n          renderItem={(problem) => (\n            <List.Item>\n              <div className=\"w-full\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center gap-3\">\n                    <span className=\"font-medium text-blue-600\">\n                      {problem.id}\n                    </span>\n                    <span className=\"font-medium\">{problem.title}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Tag color={getStatusColor(problem.status)}>\n                      {problem.status}\n                    </Tag>\n                    <Tag color={getPriorityColor(problem.priority)}>\n                      {problem.priority}\n                    </Tag>\n                  </div>\n                </div>\n                <div className=\"flex items-center justify-between text-sm text-gray-500\">\n                  <span>Assignee: {problem.assignee}</span>\n                  <span>Created: {problem.createdAt}</span>\n                </div>\n              </div>\n            </List.Item>\n          )}\n        />\n      </Card>\n\n      {/* Efficiency Metrics */}\n      <Card title=\"Efficiency Metrics\" className=\"mb-8\">\n        <Row gutter={16}>\n          <Col span={8}>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-green-600\">\n                {totalProblems > 0\n                  ? ((resolvedProblems / totalProblems) * 100).toFixed(1)\n                  : 0}\n                %\n              </div>\n              <div className=\"text-gray-500\">Problem Resolution Rate</div>\n            </div>\n          </Col>\n          <Col span={8}>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600\">\n                {totalProblems > 0\n                  ? ((inProgressProblems / totalProblems) * 100).toFixed(1)\n                  : 0}\n                %\n              </div>\n              <div className=\"text-gray-500\">In Progress Ratio</div>\n            </div>\n          </Col>\n          <Col span={8}>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-red-600\">\n                {totalProblems > 0\n                  ? ((highPriorityProblems / totalProblems) * 100).toFixed(1)\n                  : 0}\n                %\n              </div>\n              <div className=\"text-gray-500\">High Priority Ratio</div>\n            </div>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default ProblemEfficiencyPage;\n"],
      names: ["Title", "Text", "Typography", "ProblemEfficiencyPage", "isClient", "setIsClient", "useState", "useEffect", "problemsByStatus", "mockProblemsData", "reduce", "acc", "problem", "status", "problemsByPriority", "priority", "totalProblems", "length", "resolvedProblems", "inProgressProblems", "highPriorityProblems", "getStatusColor", "getPriorityColor", "div", "className", "p", "header", "level", "type", "Row", "gutter", "Col", "span", "Card", "Statistic", "title", "value", "prefix", "AlertTriangle", "valueStyle", "color", "CheckCircle", "Clock", "XCircle", "Object", "entries", "map", "count", "Tag", "toFixed", "List", "dataSource", "renderItem", "Item", "id", "assignee", "createdAt"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c2dda07929e91179c8c3aee58b2c0fa7bd89266f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2lrykdf8zn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lrykdf8zn();
cov_2lrykdf8zn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2lrykdf8zn().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2lrykdf8zn().f[0]++;
    cov_2lrykdf8zn().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2lrykdf8zn().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2lrykdf8zn().s[4]++, _interop_require_wildcard(require("react")));
const _antd =
/* istanbul ignore next */
(cov_2lrykdf8zn().s[5]++, require("antd"));
const _lucidereact =
/* istanbul ignore next */
(cov_2lrykdf8zn().s[6]++, require("lucide-react"));
const _mockdata =
/* istanbul ignore next */
(cov_2lrykdf8zn().s[7]++, require("../../lib/mock-data"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2lrykdf8zn().f[1]++;
  cov_2lrykdf8zn().s[8]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2lrykdf8zn().b[0][0]++;
    cov_2lrykdf8zn().s[9]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2lrykdf8zn().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2lrykdf8zn().s[10]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2lrykdf8zn().s[11]++, new WeakMap());
  /* istanbul ignore next */
  cov_2lrykdf8zn().s[12]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2lrykdf8zn().f[2]++;
    cov_2lrykdf8zn().s[13]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2lrykdf8zn().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2lrykdf8zn().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2lrykdf8zn().f[3]++;
  cov_2lrykdf8zn().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2lrykdf8zn().b[2][0]++;
    cov_2lrykdf8zn().s[15]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2lrykdf8zn().b[2][1]++;
  }
  cov_2lrykdf8zn().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2lrykdf8zn().b[4][0]++;
    cov_2lrykdf8zn().s[17]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2lrykdf8zn().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2lrykdf8zn().s[18]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2lrykdf8zn().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2lrykdf8zn().b[6][0]++;
    cov_2lrykdf8zn().s[20]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2lrykdf8zn().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2lrykdf8zn().s[21]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2lrykdf8zn().s[22]++,
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2lrykdf8zn().s[23]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2lrykdf8zn().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2lrykdf8zn().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2lrykdf8zn().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2lrykdf8zn().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2lrykdf8zn().s[25]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2lrykdf8zn().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2lrykdf8zn().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2lrykdf8zn().s[26]++;
      if (
      /* istanbul ignore next */
      (cov_2lrykdf8zn().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2lrykdf8zn().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2lrykdf8zn().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2lrykdf8zn().b[12][0]++;
        cov_2lrykdf8zn().s[27]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2lrykdf8zn().b[12][1]++;
        cov_2lrykdf8zn().s[28]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2lrykdf8zn().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2lrykdf8zn().s[29]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2lrykdf8zn().s[30]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2lrykdf8zn().b[14][0]++;
    cov_2lrykdf8zn().s[31]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2lrykdf8zn().b[14][1]++;
  }
  cov_2lrykdf8zn().s[32]++;
  return newObj;
}
const {
  Title,
  Text
} =
/* istanbul ignore next */
(cov_2lrykdf8zn().s[33]++, _antd.Typography);
/* istanbul ignore next */
cov_2lrykdf8zn().s[34]++;
const ProblemEfficiencyPage = () => {
  /* istanbul ignore next */
  cov_2lrykdf8zn().f[4]++;
  const [isClient, setIsClient] =
  /* istanbul ignore next */
  (cov_2lrykdf8zn().s[35]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_2lrykdf8zn().s[36]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2lrykdf8zn().f[5]++;
    cov_2lrykdf8zn().s[37]++;
    setIsClient(true);
  }, []);
  // Aggregate data for charts
  const problemsByStatus =
  /* istanbul ignore next */
  (cov_2lrykdf8zn().s[38]++, _mockdata.mockProblemsData.reduce((acc, problem) => {
    /* istanbul ignore next */
    cov_2lrykdf8zn().f[6]++;
    cov_2lrykdf8zn().s[39]++;
    acc[problem.status] = (
    /* istanbul ignore next */
    (cov_2lrykdf8zn().b[15][0]++, acc[problem.status]) ||
    /* istanbul ignore next */
    (cov_2lrykdf8zn().b[15][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_2lrykdf8zn().s[40]++;
    return acc;
  }, {}));
  const problemsByPriority =
  /* istanbul ignore next */
  (cov_2lrykdf8zn().s[41]++, _mockdata.mockProblemsData.reduce((acc, problem) => {
    /* istanbul ignore next */
    cov_2lrykdf8zn().f[7]++;
    cov_2lrykdf8zn().s[42]++;
    acc[problem.priority] = (
    /* istanbul ignore next */
    (cov_2lrykdf8zn().b[16][0]++, acc[problem.priority]) ||
    /* istanbul ignore next */
    (cov_2lrykdf8zn().b[16][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_2lrykdf8zn().s[43]++;
    return acc;
  }, {}));
  const totalProblems =
  /* istanbul ignore next */
  (cov_2lrykdf8zn().s[44]++, _mockdata.mockProblemsData.length);
  const resolvedProblems =
  /* istanbul ignore next */
  (cov_2lrykdf8zn().s[45]++,
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[17][0]++, problemsByStatus["Resolved"]) ||
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[17][1]++, 0));
  const inProgressProblems =
  /* istanbul ignore next */
  (cov_2lrykdf8zn().s[46]++,
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[18][0]++, problemsByStatus["Investigating"]) ||
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[18][1]++, 0));
  const highPriorityProblems =
  /* istanbul ignore next */
  (cov_2lrykdf8zn().s[47]++,
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[19][0]++, problemsByPriority["High"]) ||
  /* istanbul ignore next */
  (cov_2lrykdf8zn().b[19][1]++, 0));
  /* istanbul ignore next */
  cov_2lrykdf8zn().s[48]++;
  const getStatusColor = status => {
    /* istanbul ignore next */
    cov_2lrykdf8zn().f[8]++;
    cov_2lrykdf8zn().s[49]++;
    switch (status) {
      case "Resolved":
        /* istanbul ignore next */
        cov_2lrykdf8zn().b[20][0]++;
        cov_2lrykdf8zn().s[50]++;
        return "success";
      case "Investigating":
        /* istanbul ignore next */
        cov_2lrykdf8zn().b[20][1]++;
        cov_2lrykdf8zn().s[51]++;
        return "processing";
      case "Known Error":
        /* istanbul ignore next */
        cov_2lrykdf8zn().b[20][2]++;
        cov_2lrykdf8zn().s[52]++;
        return "warning";
      case "Closed":
        /* istanbul ignore next */
        cov_2lrykdf8zn().b[20][3]++;
        cov_2lrykdf8zn().s[53]++;
        return "default";
      default:
        /* istanbul ignore next */
        cov_2lrykdf8zn().b[20][4]++;
        cov_2lrykdf8zn().s[54]++;
        return "default";
    }
  };
  /* istanbul ignore next */
  cov_2lrykdf8zn().s[55]++;
  const getPriorityColor = priority => {
    /* istanbul ignore next */
    cov_2lrykdf8zn().f[9]++;
    cov_2lrykdf8zn().s[56]++;
    switch (priority) {
      case "High":
        /* istanbul ignore next */
        cov_2lrykdf8zn().b[21][0]++;
        cov_2lrykdf8zn().s[57]++;
        return "error";
      case "Medium":
        /* istanbul ignore next */
        cov_2lrykdf8zn().b[21][1]++;
        cov_2lrykdf8zn().s[58]++;
        return "warning";
      case "Low":
        /* istanbul ignore next */
        cov_2lrykdf8zn().b[21][2]++;
        cov_2lrykdf8zn().s[59]++;
        return "default";
      default:
        /* istanbul ignore next */
        cov_2lrykdf8zn().b[21][3]++;
        cov_2lrykdf8zn().s[60]++;
        return "default";
    }
  };
  /* istanbul ignore next */
  cov_2lrykdf8zn().s[61]++;
  if (!isClient) {
    /* istanbul ignore next */
    cov_2lrykdf8zn().b[22][0]++;
    cov_2lrykdf8zn().s[62]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "p-10 bg-gray-50 min-h-full flex items-center justify-center",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "mt-4 text-gray-600",
          children: "Page loading..."
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_2lrykdf8zn().b[22][1]++;
  }
  cov_2lrykdf8zn().s[63]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "p-10 bg-gray-50 min-h-full",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("header", {
      className: "mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(Title, {
        level: 2,
        className: "mb-2",
        children: "Problem Management Efficiency Report"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(Text, {
        type: "secondary",
        children: "This report shows efficiency metrics for the problem management process"
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Row, {
      gutter: 16,
      className: "mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
        span: 6,
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
            title: "Total Problems",
            value: totalProblems,
            prefix: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
              className: "text-blue-500"
            })
          })
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
        span: 6,
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
            title: "Resolved Problems",
            value: resolvedProblems,
            valueStyle: {
              color: "#3f8600"
            },
            prefix: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
              className: "text-green-500"
            })
          })
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
        span: 6,
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
            title: "Problems in Progress",
            value: inProgressProblems,
            valueStyle: {
              color: "#1890ff"
            },
            prefix: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
              className: "text-blue-500"
            })
          })
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
        span: 6,
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
            title: "High Priority Problems",
            value: highPriorityProblems,
            valueStyle: {
              color: "#cf1322"
            },
            prefix: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.XCircle, {
              className: "text-red-500"
            })
          })
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Row, {
      gutter: 16,
      className: "mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
        span: 12,
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
          title: "Problem Status Distribution",
          className: "h-80",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "space-y-4",
            children: Object.entries(problemsByStatus).map(([status, count]) => {
              /* istanbul ignore next */
              cov_2lrykdf8zn().f[10]++;
              cov_2lrykdf8zn().s[64]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "flex items-center gap-2",
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Tag, {
                    color: getStatusColor(status),
                    children: status
                  })
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center gap-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "text-lg font-semibold",
                    children: count
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                    className: "text-sm text-gray-500",
                    children: ["(", (count / totalProblems * 100).toFixed(1), "%)"]
                  })]
                })]
              }, status);
            })
          })
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
        span: 12,
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
          title: "Problem Priority Distribution",
          className: "h-80",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "space-y-4",
            children: Object.entries(problemsByPriority).map(([priority, count]) => {
              /* istanbul ignore next */
              cov_2lrykdf8zn().f[11]++;
              cov_2lrykdf8zn().s[65]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "flex items-center gap-2",
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Tag, {
                    color: getPriorityColor(priority),
                    children: priority
                  })
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center gap-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "text-lg font-semibold",
                    children: count
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                    className: "text-sm text-gray-500",
                    children: ["(", (count / totalProblems * 100).toFixed(1), "%)"]
                  })]
                })]
              }, priority);
            })
          })
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
      title: "Problem Details List",
      className: "mb-8",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.List, {
        dataSource: _mockdata.mockProblemsData,
        renderItem: problem => {
          /* istanbul ignore next */
          cov_2lrykdf8zn().f[12]++;
          cov_2lrykdf8zn().s[66]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.List.Item, {
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "w-full",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between mb-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center gap-3",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "font-medium text-blue-600",
                    children: problem.id
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "font-medium",
                    children: problem.title
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center gap-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Tag, {
                    color: getStatusColor(problem.status),
                    children: problem.status
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Tag, {
                    color: getPriorityColor(problem.priority),
                    children: problem.priority
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between text-sm text-gray-500",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  children: ["Assignee: ", problem.assignee]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  children: ["Created: ", problem.createdAt]
                })]
              })]
            })
          });
        }
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
      title: "Efficiency Metrics",
      className: "mb-8",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Row, {
        gutter: 16,
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
          span: 8,
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-3xl font-bold text-green-600",
              children: [totalProblems > 0 ?
              /* istanbul ignore next */
              (cov_2lrykdf8zn().b[23][0]++, (resolvedProblems / totalProblems * 100).toFixed(1)) :
              /* istanbul ignore next */
              (cov_2lrykdf8zn().b[23][1]++, 0), "%"]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-gray-500",
              children: "Problem Resolution Rate"
            })]
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
          span: 8,
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-3xl font-bold text-blue-600",
              children: [totalProblems > 0 ?
              /* istanbul ignore next */
              (cov_2lrykdf8zn().b[24][0]++, (inProgressProblems / totalProblems * 100).toFixed(1)) :
              /* istanbul ignore next */
              (cov_2lrykdf8zn().b[24][1]++, 0), "%"]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-gray-500",
              children: "In Progress Ratio"
            })]
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
          span: 8,
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-3xl font-bold text-red-600",
              children: [totalProblems > 0 ?
              /* istanbul ignore next */
              (cov_2lrykdf8zn().b[25][0]++, (highPriorityProblems / totalProblems * 100).toFixed(1)) :
              /* istanbul ignore next */
              (cov_2lrykdf8zn().b[25][1]++, 0), "%"]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-gray-500",
              children: "High Priority Ratio"
            })]
          })
        })]
      })
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_2lrykdf8zn().s[67]++, ProblemEfficiencyPage);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,