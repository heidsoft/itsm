f981ece884dd655cf2c4ff9c646efc15
"use strict";

/* istanbul ignore next */
function cov_2199ausm69() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/system-config-api.ts";
  var hash = "8ead62872fefba5393ed7a417e69792298e869b5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/system-config-api.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 31
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 44
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 73
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 71
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 76
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 77
        }
      },
      "8": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 77
        }
      },
      "9": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 72
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 36
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 40
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 37
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 35
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/system-config-api.ts"],
      sourcesContent: ["import { httpClient } from './http-client';\nimport {\n  SystemConfig,\n  SystemConfigListResponse,\n  UpdateSystemConfigRequest,\n  GetSystemConfigsParams,\n} from './api-config';\n\nexport class SystemConfigAPI {\n  // \u83B7\u53D6\u7CFB\u7EDF\u914D\u7F6E\u5217\u8868\n  static async getConfigs(params?: GetSystemConfigsParams): Promise<SystemConfigListResponse> {\n    return httpClient.get<SystemConfigListResponse>('/api/system-configs', params);\n  }\n\n  // \u83B7\u53D6\u5355\u4E2A\u914D\u7F6E\u9879\n  static async getConfig(id: number): Promise<SystemConfig> {\n    return httpClient.get<SystemConfig>(`/api/system-configs/${id}`);\n  }\n\n  // \u6839\u636E\u952E\u540D\u83B7\u53D6\u914D\u7F6E\u9879\n  static async getConfigByKey(key: string): Promise<SystemConfig> {\n    return httpClient.get<SystemConfig>(`/api/system-configs/key/${key}`);\n  }\n\n  // \u66F4\u65B0\u914D\u7F6E\u9879\n  static async updateConfig(id: number, data: UpdateSystemConfigRequest): Promise<SystemConfig> {\n    return httpClient.put<SystemConfig>(`/api/system-configs/${id}`, data);\n  }\n\n  // \u6279\u91CF\u66F4\u65B0\u914D\u7F6E\u9879\n  static async updateConfigs(data: UpdateSystemConfigRequest[]): Promise<SystemConfig[]> {\n    return httpClient.put<SystemConfig[]>('/api/system-configs/batch', data);\n  }\n\n  // \u83B7\u53D6\u7CFB\u7EDF\u72B6\u6001\u4FE1\u606F\n  static async getSystemStatus(): Promise<any> {\n    return httpClient.get<any>('/api/system-configs/status');\n  }\n}"],
      names: ["SystemConfigAPI", "getConfigs", "params", "httpClient", "get", "getConfig", "id", "getConfigByKey", "key", "updateConfig", "data", "put", "updateConfigs", "getSystemStatus"],
      mappings: ";;;;+BAQaA;;;eAAAA;;;4BARc;AAQpB,MAAMA;IACX,WAAW;IACX,aAAaC,WAAWC,MAA+B,EAAqC;QAC1F,OAAOC,sBAAU,CAACC,GAAG,CAA2B,uBAAuBF;IACzE;IAEA,UAAU;IACV,aAAaG,UAAUC,EAAU,EAAyB;QACxD,OAAOH,sBAAU,CAACC,GAAG,CAAe,CAAC,oBAAoB,EAAEE,IAAI;IACjE;IAEA,YAAY;IACZ,aAAaC,eAAeC,GAAW,EAAyB;QAC9D,OAAOL,sBAAU,CAACC,GAAG,CAAe,CAAC,wBAAwB,EAAEI,KAAK;IACtE;IAEA,QAAQ;IACR,aAAaC,aAAaH,EAAU,EAAEI,IAA+B,EAAyB;QAC5F,OAAOP,sBAAU,CAACQ,GAAG,CAAe,CAAC,oBAAoB,EAAEL,IAAI,EAAEI;IACnE;IAEA,UAAU;IACV,aAAaE,cAAcF,IAAiC,EAA2B;QACrF,OAAOP,sBAAU,CAACQ,GAAG,CAAiB,6BAA6BD;IACrE;IAEA,WAAW;IACX,aAAaG,kBAAgC;QAC3C,OAAOV,sBAAU,CAACC,GAAG,CAAM;IAC7B;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8ead62872fefba5393ed7a417e69792298e869b5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2199ausm69 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2199ausm69();
cov_2199ausm69().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2199ausm69().s[1]++;
Object.defineProperty(exports, "SystemConfigAPI", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2199ausm69().f[0]++;
    cov_2199ausm69().s[2]++;
    return SystemConfigAPI;
  }
});
const _httpclient =
/* istanbul ignore next */
(cov_2199ausm69().s[3]++, require("./http-client"));
class SystemConfigAPI {
  // 获取系统配置列表
  static async getConfigs(params) {
    /* istanbul ignore next */
    cov_2199ausm69().f[1]++;
    cov_2199ausm69().s[4]++;
    return _httpclient.httpClient.get('/api/system-configs', params);
  }
  // 获取单个配置项
  static async getConfig(id) {
    /* istanbul ignore next */
    cov_2199ausm69().f[2]++;
    cov_2199ausm69().s[5]++;
    return _httpclient.httpClient.get(`/api/system-configs/${id}`);
  }
  // 根据键名获取配置项
  static async getConfigByKey(key) {
    /* istanbul ignore next */
    cov_2199ausm69().f[3]++;
    cov_2199ausm69().s[6]++;
    return _httpclient.httpClient.get(`/api/system-configs/key/${key}`);
  }
  // 更新配置项
  static async updateConfig(id, data) {
    /* istanbul ignore next */
    cov_2199ausm69().f[4]++;
    cov_2199ausm69().s[7]++;
    return _httpclient.httpClient.put(`/api/system-configs/${id}`, data);
  }
  // 批量更新配置项
  static async updateConfigs(data) {
    /* istanbul ignore next */
    cov_2199ausm69().f[5]++;
    cov_2199ausm69().s[8]++;
    return _httpclient.httpClient.put('/api/system-configs/batch', data);
  }
  // 获取系统状态信息
  static async getSystemStatus() {
    /* istanbul ignore next */
    cov_2199ausm69().f[6]++;
    cov_2199ausm69().s[9]++;
    return _httpclient.httpClient.get('/api/system-configs/status');
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjE5OWF1c202OSIsImFjdHVhbENvdmVyYWdlIiwicyIsIlN5c3RlbUNvbmZpZ0FQSSIsImdldENvbmZpZ3MiLCJwYXJhbXMiLCJmIiwiX2h0dHBjbGllbnQiLCJodHRwQ2xpZW50IiwiZ2V0IiwiZ2V0Q29uZmlnIiwiaWQiLCJnZXRDb25maWdCeUtleSIsImtleSIsInVwZGF0ZUNvbmZpZyIsImRhdGEiLCJwdXQiLCJ1cGRhdGVDb25maWdzIiwiZ2V0U3lzdGVtU3RhdHVzIl0sInNvdXJjZXMiOlsiL1VzZXJzL2hlaWRzb2Z0L0Rvd25sb2Fkcy9yZXNlYXJjaC9pdHNtL2l0c20tcHJvdG90eXBlL3NyYy9hcHAvbGliL3N5c3RlbS1jb25maWctYXBpLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGh0dHBDbGllbnQgfSBmcm9tICcuL2h0dHAtY2xpZW50JztcbmltcG9ydCB7XG4gIFN5c3RlbUNvbmZpZyxcbiAgU3lzdGVtQ29uZmlnTGlzdFJlc3BvbnNlLFxuICBVcGRhdGVTeXN0ZW1Db25maWdSZXF1ZXN0LFxuICBHZXRTeXN0ZW1Db25maWdzUGFyYW1zLFxufSBmcm9tICcuL2FwaS1jb25maWcnO1xuXG5leHBvcnQgY2xhc3MgU3lzdGVtQ29uZmlnQVBJIHtcbiAgLy8g6I635Y+W57O757uf6YWN572u5YiX6KGoXG4gIHN0YXRpYyBhc3luYyBnZXRDb25maWdzKHBhcmFtcz86IEdldFN5c3RlbUNvbmZpZ3NQYXJhbXMpOiBQcm9taXNlPFN5c3RlbUNvbmZpZ0xpc3RSZXNwb25zZT4ge1xuICAgIHJldHVybiBodHRwQ2xpZW50LmdldDxTeXN0ZW1Db25maWdMaXN0UmVzcG9uc2U+KCcvYXBpL3N5c3RlbS1jb25maWdzJywgcGFyYW1zKTtcbiAgfVxuXG4gIC8vIOiOt+WPluWNleS4qumFjee9rumhuVxuICBzdGF0aWMgYXN5bmMgZ2V0Q29uZmlnKGlkOiBudW1iZXIpOiBQcm9taXNlPFN5c3RlbUNvbmZpZz4ge1xuICAgIHJldHVybiBodHRwQ2xpZW50LmdldDxTeXN0ZW1Db25maWc+KGAvYXBpL3N5c3RlbS1jb25maWdzLyR7aWR9YCk7XG4gIH1cblxuICAvLyDmoLnmja7plK7lkI3ojrflj5bphY3nva7poblcbiAgc3RhdGljIGFzeW5jIGdldENvbmZpZ0J5S2V5KGtleTogc3RyaW5nKTogUHJvbWlzZTxTeXN0ZW1Db25maWc+IHtcbiAgICByZXR1cm4gaHR0cENsaWVudC5nZXQ8U3lzdGVtQ29uZmlnPihgL2FwaS9zeXN0ZW0tY29uZmlncy9rZXkvJHtrZXl9YCk7XG4gIH1cblxuICAvLyDmm7TmlrDphY3nva7poblcbiAgc3RhdGljIGFzeW5jIHVwZGF0ZUNvbmZpZyhpZDogbnVtYmVyLCBkYXRhOiBVcGRhdGVTeXN0ZW1Db25maWdSZXF1ZXN0KTogUHJvbWlzZTxTeXN0ZW1Db25maWc+IHtcbiAgICByZXR1cm4gaHR0cENsaWVudC5wdXQ8U3lzdGVtQ29uZmlnPihgL2FwaS9zeXN0ZW0tY29uZmlncy8ke2lkfWAsIGRhdGEpO1xuICB9XG5cbiAgLy8g5om56YeP5pu05paw6YWN572u6aG5XG4gIHN0YXRpYyBhc3luYyB1cGRhdGVDb25maWdzKGRhdGE6IFVwZGF0ZVN5c3RlbUNvbmZpZ1JlcXVlc3RbXSk6IFByb21pc2U8U3lzdGVtQ29uZmlnW10+IHtcbiAgICByZXR1cm4gaHR0cENsaWVudC5wdXQ8U3lzdGVtQ29uZmlnW10+KCcvYXBpL3N5c3RlbS1jb25maWdzL2JhdGNoJywgZGF0YSk7XG4gIH1cblxuICAvLyDojrflj5bns7vnu5/nirbmgIHkv6Hmga9cbiAgc3RhdGljIGFzeW5jIGdldFN5c3RlbVN0YXR1cygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybiBodHRwQ2xpZW50LmdldDxhbnk+KCcvYXBpL3N5c3RlbS1jb25maWdzL3N0YXR1cycpO1xuICB9XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFZRTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7OytCQUpXOzs7Ozs7V0FBQUMsZUFBQTs7Ozs7a0NBUmM7QUFRcEIsTUFBTUEsZUFBQTtFQUNYO0VBQ0EsYUFBYUMsV0FBV0MsTUFBK0IsRUFBcUM7SUFBQTtJQUFBTCxjQUFBLEdBQUFNLENBQUE7SUFBQU4sY0FBQSxHQUFBRSxDQUFBO0lBQzFGLE9BQU9LLFdBQUEsQ0FBQUMsVUFBVSxDQUFDQyxHQUFHLENBQTJCLHVCQUF1QkosTUFBQTtFQUN6RTtFQUVBO0VBQ0EsYUFBYUssVUFBVUMsRUFBVSxFQUF5QjtJQUFBO0lBQUFYLGNBQUEsR0FBQU0sQ0FBQTtJQUFBTixjQUFBLEdBQUFFLENBQUE7SUFDeEQsT0FBT0ssV0FBQSxDQUFBQyxVQUFVLENBQUNDLEdBQUcsQ0FBZSx1QkFBdUJFLEVBQUEsRUFBSTtFQUNqRTtFQUVBO0VBQ0EsYUFBYUMsZUFBZUMsR0FBVyxFQUF5QjtJQUFBO0lBQUFiLGNBQUEsR0FBQU0sQ0FBQTtJQUFBTixjQUFBLEdBQUFFLENBQUE7SUFDOUQsT0FBT0ssV0FBQSxDQUFBQyxVQUFVLENBQUNDLEdBQUcsQ0FBZSwyQkFBMkJJLEdBQUEsRUFBSztFQUN0RTtFQUVBO0VBQ0EsYUFBYUMsYUFBYUgsRUFBVSxFQUFFSSxJQUErQixFQUF5QjtJQUFBO0lBQUFmLGNBQUEsR0FBQU0sQ0FBQTtJQUFBTixjQUFBLEdBQUFFLENBQUE7SUFDNUYsT0FBT0ssV0FBQSxDQUFBQyxVQUFVLENBQUNRLEdBQUcsQ0FBZSx1QkFBdUJMLEVBQUEsRUFBSSxFQUFFSSxJQUFBO0VBQ25FO0VBRUE7RUFDQSxhQUFhRSxjQUFjRixJQUFpQyxFQUEyQjtJQUFBO0lBQUFmLGNBQUEsR0FBQU0sQ0FBQTtJQUFBTixjQUFBLEdBQUFFLENBQUE7SUFDckYsT0FBT0ssV0FBQSxDQUFBQyxVQUFVLENBQUNRLEdBQUcsQ0FBaUIsNkJBQTZCRCxJQUFBO0VBQ3JFO0VBRUE7RUFDQSxhQUFhRyxnQkFBQSxFQUFnQztJQUFBO0lBQUFsQixjQUFBLEdBQUFNLENBQUE7SUFBQU4sY0FBQSxHQUFBRSxDQUFBO0lBQzNDLE9BQU9LLFdBQUEsQ0FBQUMsVUFBVSxDQUFDQyxHQUFHLENBQU07RUFDN0I7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==