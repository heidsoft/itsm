7b3b2ee6d2fd4e429c4ac4a329f7a779
"use strict";

/* istanbul ignore next */
function cov_1cnul5fvwt() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/service-catalog-api.ts";
  var hash = "c0a6e1c6d4846ca9ecfa813372d49d4830277385";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/service-catalog-api.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 44
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 70
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 81
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 79
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 77
        }
      },
      "8": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 93
        }
      },
      "9": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 81
        }
      },
      "10": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 77
        }
      },
      "11": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 86
        }
      },
      "12": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 80
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 44
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 47
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 48
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 43
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 57
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 47
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 43
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 51
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 42
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/service-catalog-api.ts"],
      sourcesContent: ["import { httpClient } from './http-client';\n\n// Service catalog related interface definitions\nexport interface ServiceCatalog {\n  id: number;\n  name: string;\n  category: string;\n  description: string;\n  delivery_time: string;\n  status: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface ServiceCatalogListResponse {\n  catalogs: ServiceCatalog[];\n  total: number;\n  page: number;\n  size: number;\n}\n\nexport interface GetServiceCatalogsParams {\n  page?: number;\n  size?: number;\n  category?: string;\n  status?: string;\n  [key: string]: unknown;\n}\n\nexport interface CreateServiceRequestRequest {\n  catalog_id: number;\n  reason?: string;\n}\n\nexport interface ServiceRequest {\n  id: number;\n  catalog_id: number;\n  requester_id: number;\n  status: string;\n  reason: string;\n  created_at: string;\n  catalog?: ServiceCatalog;\n  requester?: {\n    id: number;\n    username: string;\n    name: string;\n    email: string;\n    department: string;\n  };\n}\n\nexport interface ServiceRequestListResponse {\n  requests: ServiceRequest[];\n  total: number;\n  page: number;\n  size: number;\n}\n\nexport interface GetServiceRequestsParams {\n  page?: number;\n  size?: number;\n  status?: string;\n  [key: string]: unknown;\n}\n\nexport interface UpdateServiceRequestStatusRequest {\n  status: string;\n}\n\n// Create service catalog request interface\nexport interface CreateServiceCatalogRequest {\n  name: string;\n  category: string;\n  description?: string;\n  delivery_time: string;\n  status?: 'enabled' | 'disabled';\n}\n\n// Update service catalog request interface\nexport interface UpdateServiceCatalogRequest {\n  name?: string;\n  category?: string;\n  description?: string;\n  delivery_time?: string;\n  status?: 'enabled' | 'disabled';\n}\n\nexport class ServiceCatalogApi {\n  // Get service catalog list\n  static async getServiceCatalogs(params?: GetServiceCatalogsParams): Promise<ServiceCatalogListResponse> {\n    return httpClient.get<ServiceCatalogListResponse>('/api/v1/services', params);\n  }\n\n  // Create service request\n  static async createServiceRequest(request: CreateServiceRequestRequest): Promise<ServiceRequest> {\n    return httpClient.post<ServiceRequest>('/api/v1/services/requests', request);\n  }\n\n  // Get current user's service request list\n  static async getUserServiceRequests(params?: GetServiceRequestsParams): Promise<ServiceRequestListResponse> {\n    return httpClient.get<ServiceRequestListResponse>('/api/v1/services/requests', params);\n  }\n\n  // Get service request by ID\n  static async getServiceRequestById(id: number): Promise<ServiceRequest> {\n    return httpClient.get<ServiceRequest>(`/api/v1/services/requests/${id}`);\n  }\n\n  // Update service request status\n  static async updateServiceRequestStatus(id: number, request: UpdateServiceRequestStatusRequest): Promise<ServiceRequest> {\n    return httpClient.put<ServiceRequest>(`/api/v1/services/requests/${id}/status`, request);\n  }\n\n  // Create service catalog\n  static async createServiceCatalog(request: CreateServiceCatalogRequest): Promise<ServiceCatalog> {\n    return httpClient.post<ServiceCatalog>('/api/v1/services/catalogs', request);\n  }\n\n  // Get service catalog by ID\n  static async getServiceCatalogById(id: number): Promise<ServiceCatalog> {\n    return httpClient.get<ServiceCatalog>(`/api/v1/services/catalogs/${id}`);\n  }\n\n  // Update service catalog\n  static async updateServiceCatalog(id: number, request: UpdateServiceCatalogRequest): Promise<ServiceCatalog> {\n    return httpClient.put<ServiceCatalog>(`/api/v1/services/catalogs/${id}`, request);\n  }\n\n  // Delete service catalog\n  static async deleteServiceCatalog(id: number): Promise<void> {\n    return httpClient.delete(`/api/v1/services/catalogs/${id}`);\n  }\n}"],
      names: ["ServiceCatalogApi", "getServiceCatalogs", "params", "httpClient", "get", "createServiceRequest", "request", "post", "getUserServiceRequests", "getServiceRequestById", "id", "updateServiceRequestStatus", "put", "createServiceCatalog", "getServiceCatalogById", "updateServiceCatalog", "deleteServiceCatalog", "delete"],
      mappings: ";;;;+BAuFaA;;;eAAAA;;;4BAvFc;AAuFpB,MAAMA;IACX,2BAA2B;IAC3B,aAAaC,mBAAmBC,MAAiC,EAAuC;QACtG,OAAOC,sBAAU,CAACC,GAAG,CAA6B,oBAAoBF;IACxE;IAEA,yBAAyB;IACzB,aAAaG,qBAAqBC,OAAoC,EAA2B;QAC/F,OAAOH,sBAAU,CAACI,IAAI,CAAiB,6BAA6BD;IACtE;IAEA,0CAA0C;IAC1C,aAAaE,uBAAuBN,MAAiC,EAAuC;QAC1G,OAAOC,sBAAU,CAACC,GAAG,CAA6B,6BAA6BF;IACjF;IAEA,4BAA4B;IAC5B,aAAaO,sBAAsBC,EAAU,EAA2B;QACtE,OAAOP,sBAAU,CAACC,GAAG,CAAiB,CAAC,0BAA0B,EAAEM,IAAI;IACzE;IAEA,gCAAgC;IAChC,aAAaC,2BAA2BD,EAAU,EAAEJ,OAA0C,EAA2B;QACvH,OAAOH,sBAAU,CAACS,GAAG,CAAiB,CAAC,0BAA0B,EAAEF,GAAG,OAAO,CAAC,EAAEJ;IAClF;IAEA,yBAAyB;IACzB,aAAaO,qBAAqBP,OAAoC,EAA2B;QAC/F,OAAOH,sBAAU,CAACI,IAAI,CAAiB,6BAA6BD;IACtE;IAEA,4BAA4B;IAC5B,aAAaQ,sBAAsBJ,EAAU,EAA2B;QACtE,OAAOP,sBAAU,CAACC,GAAG,CAAiB,CAAC,0BAA0B,EAAEM,IAAI;IACzE;IAEA,yBAAyB;IACzB,aAAaK,qBAAqBL,EAAU,EAAEJ,OAAoC,EAA2B;QAC3G,OAAOH,sBAAU,CAACS,GAAG,CAAiB,CAAC,0BAA0B,EAAEF,IAAI,EAAEJ;IAC3E;IAEA,yBAAyB;IACzB,aAAaU,qBAAqBN,EAAU,EAAiB;QAC3D,OAAOP,sBAAU,CAACc,MAAM,CAAC,CAAC,0BAA0B,EAAEP,IAAI;IAC5D;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c0a6e1c6d4846ca9ecfa813372d49d4830277385"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1cnul5fvwt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1cnul5fvwt();
cov_1cnul5fvwt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1cnul5fvwt().s[1]++;
Object.defineProperty(exports, "ServiceCatalogApi", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1cnul5fvwt().f[0]++;
    cov_1cnul5fvwt().s[2]++;
    return ServiceCatalogApi;
  }
});
const _httpclient =
/* istanbul ignore next */
(cov_1cnul5fvwt().s[3]++, require("./http-client"));
class ServiceCatalogApi {
  // Get service catalog list
  static async getServiceCatalogs(params) {
    /* istanbul ignore next */
    cov_1cnul5fvwt().f[1]++;
    cov_1cnul5fvwt().s[4]++;
    return _httpclient.httpClient.get('/api/v1/services', params);
  }
  // Create service request
  static async createServiceRequest(request) {
    /* istanbul ignore next */
    cov_1cnul5fvwt().f[2]++;
    cov_1cnul5fvwt().s[5]++;
    return _httpclient.httpClient.post('/api/v1/services/requests', request);
  }
  // Get current user's service request list
  static async getUserServiceRequests(params) {
    /* istanbul ignore next */
    cov_1cnul5fvwt().f[3]++;
    cov_1cnul5fvwt().s[6]++;
    return _httpclient.httpClient.get('/api/v1/services/requests', params);
  }
  // Get service request by ID
  static async getServiceRequestById(id) {
    /* istanbul ignore next */
    cov_1cnul5fvwt().f[4]++;
    cov_1cnul5fvwt().s[7]++;
    return _httpclient.httpClient.get(`/api/v1/services/requests/${id}`);
  }
  // Update service request status
  static async updateServiceRequestStatus(id, request) {
    /* istanbul ignore next */
    cov_1cnul5fvwt().f[5]++;
    cov_1cnul5fvwt().s[8]++;
    return _httpclient.httpClient.put(`/api/v1/services/requests/${id}/status`, request);
  }
  // Create service catalog
  static async createServiceCatalog(request) {
    /* istanbul ignore next */
    cov_1cnul5fvwt().f[6]++;
    cov_1cnul5fvwt().s[9]++;
    return _httpclient.httpClient.post('/api/v1/services/catalogs', request);
  }
  // Get service catalog by ID
  static async getServiceCatalogById(id) {
    /* istanbul ignore next */
    cov_1cnul5fvwt().f[7]++;
    cov_1cnul5fvwt().s[10]++;
    return _httpclient.httpClient.get(`/api/v1/services/catalogs/${id}`);
  }
  // Update service catalog
  static async updateServiceCatalog(id, request) {
    /* istanbul ignore next */
    cov_1cnul5fvwt().f[8]++;
    cov_1cnul5fvwt().s[11]++;
    return _httpclient.httpClient.put(`/api/v1/services/catalogs/${id}`, request);
  }
  // Delete service catalog
  static async deleteServiceCatalog(id) {
    /* istanbul ignore next */
    cov_1cnul5fvwt().f[9]++;
    cov_1cnul5fvwt().s[12]++;
    return _httpclient.httpClient.delete(`/api/v1/services/catalogs/${id}`);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,