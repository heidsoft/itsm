{"version":3,"names":["cov_237s3i9d3v","actualCoverage","s","RouteGuard","f","default","_default","useAuth","withRouteGuard","AuthService","TOKEN_KEY","USER_KEY","getToken","window","b","localStorage","getItem","setToken","token","setItem","removeToken","removeItem","getUser","userStr","JSON","parse","setUser","user","stringify","validateToken","_token","Promise","resolve","setTimeout","mockUser","id","username","email","roles","permissions","resource","action","isActive","console","error","login","password","Date","now","logout","authState","setAuthState","_react","useState","isAuthenticated","isLoading","router","_navigation","useRouter","useEffect","initAuth","cachedUser","prev","result","push","LoginPage","onLogin","loading","setLoading","setError","handleSubmit","e","preventDefault","formData","FormData","currentTarget","get","success","_jsxruntime","jsx","className","jsxs","_lucidereact","Lock","size","onSubmit","htmlFor","name","type","required","placeholder","defaultValue","disabled","_antd","Spin","PermissionGuard","children","route","hasPermission","_routeconfig","RoutePermissionChecker","hasRoutePermission","Result","status","title","subTitle","icon","AlertTriangle","extra","Button","onClick","history","back","Fragment","fallback","pathname","usePathname","publicRoutes","isPublicRoute","includes","location","href","meta","requireAuth","Component","GuardedComponent","props","displayName"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/RouteGuard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { Spin, Result, Button } from 'antd';\nimport { Lock, AlertTriangle } from 'lucide-react';\nimport { RoutePermissionChecker, type RouteConfig, type RoutePermission } from '../../lib/router/route-config';\n\ninterface User {\n  id: number;\n  username: string;\n  email: string;\n  roles: string[];\n  permissions: RoutePermission[];\n  isActive: boolean;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n}\n\ninterface RouteGuardProps {\n  children: React.ReactNode;\n  route?: RouteConfig;\n  fallback?: React.ReactNode;\n}\n\n// 模拟认证服务\nclass AuthService {\n  private static readonly TOKEN_KEY = 'itsm_token';\n  private static readonly USER_KEY = 'itsm_user';\n\n  static getToken(): string | null {\n    if (typeof window === 'undefined') return null;\n    return localStorage.getItem(this.TOKEN_KEY);\n  }\n\n  static setToken(token: string): void {\n    if (typeof window === 'undefined') return;\n    localStorage.setItem(this.TOKEN_KEY, token);\n  }\n\n  static removeToken(): void {\n    if (typeof window === 'undefined') return;\n    localStorage.removeItem(this.TOKEN_KEY);\n    localStorage.removeItem(this.USER_KEY);\n  }\n\n  static getUser(): User | null {\n    if (typeof window === 'undefined') return null;\n    const userStr = localStorage.getItem(this.USER_KEY);\n    if (!userStr) return null;\n    \n    try {\n      return JSON.parse(userStr);\n    } catch {\n      return null;\n    }\n  }\n\n  static setUser(user: User): void {\n    if (typeof window === 'undefined') return;\n    localStorage.setItem(this.USER_KEY, JSON.stringify(user));\n  }\n\n  static async validateToken(_token: string): Promise<User | null> {\n    try {\n      // 模拟API调用验证token\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // 模拟用户数据\n      const mockUser: User = {\n        id: 1,\n        username: 'admin',\n        email: 'admin@example.com',\n        roles: ['admin', 'user'],\n        permissions: [\n          { resource: 'dashboard', action: 'read' },\n          { resource: 'ticket', action: 'read' },\n          { resource: 'ticket', action: 'create' },\n          { resource: 'ticket', action: 'update' },\n          { resource: 'incident', action: 'read' },\n          { resource: 'incident', action: 'create' },\n          { resource: 'problem', action: 'read' },\n          { resource: 'change', action: 'read' },\n          { resource: 'knowledge', action: 'read' },\n          { resource: 'cmdb', action: 'read' },\n          { resource: 'report', action: 'read' },\n          { resource: 'admin', action: 'read' },\n          { resource: 'user', action: 'manage' },\n          { resource: 'role', action: 'manage' },\n        ],\n        isActive: true,\n      };\n\n      return mockUser;\n    } catch {\n      console.error('Token validation failed');\n      return null;\n    }\n  }\n\n  static async login(username: string, password: string): Promise<{ user: User; token: string } | null> {\n    try {\n      // 模拟登录API调用\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      if (username === 'admin' && password === 'admin123') {\n        const token = 'mock_jwt_token_' + Date.now();\n        const user = await this.validateToken(token);\n        \n        if (user) {\n          this.setToken(token);\n          this.setUser(user);\n          return { user, token };\n        }\n      }\n      \n      return null;\n    } catch (error) {\n      console.error('Login failed:', error);\n      return null;\n    }\n  }\n\n  static logout(): void {\n    this.removeToken();\n  }\n}\n\n// 认证Hook\nexport const useAuth = () => {\n  const [authState, setAuthState] = useState<AuthState>({\n    user: null,\n    token: null,\n    isAuthenticated: false,\n    isLoading: true,\n  });\n\n  const router = useRouter();\n\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = AuthService.getToken();\n      const cachedUser = AuthService.getUser();\n\n      if (token && cachedUser) {\n        // 验证token是否仍然有效\n        const user = await AuthService.validateToken(token);\n        if (user) {\n          setAuthState({\n            user,\n            token,\n            isAuthenticated: true,\n            isLoading: false,\n          });\n        } else {\n          // Token无效，清除本地存储\n          AuthService.logout();\n          setAuthState({\n            user: null,\n            token: null,\n            isAuthenticated: false,\n            isLoading: false,\n          });\n        }\n      } else {\n        setAuthState({\n          user: null,\n          token: null,\n          isAuthenticated: false,\n          isLoading: false,\n        });\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (username: string, password: string): Promise<boolean> => {\n    setAuthState(prev => ({ ...prev, isLoading: true }));\n    \n    const result = await AuthService.login(username, password);\n    \n    if (result) {\n      setAuthState({\n        user: result.user,\n        token: result.token,\n        isAuthenticated: true,\n        isLoading: false,\n      });\n      return true;\n    } else {\n      setAuthState(prev => ({ ...prev, isLoading: false }));\n      return false;\n    }\n  };\n\n  const logout = () => {\n    AuthService.logout();\n    setAuthState({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      isLoading: false,\n    });\n    router.push('/login');\n  };\n\n  return {\n    ...authState,\n    login,\n    logout,\n  };\n};\n\n// 登录页面组件\nconst LoginPage: React.FC<{ onLogin: (username: string, password: string) => Promise<boolean> }> = ({ onLogin }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    const formData = new FormData(e.currentTarget);\n    const username = formData.get('username') as string;\n    const password = formData.get('password') as string;\n\n    try {\n      const success = await onLogin(username, password);\n      if (!success) {\n        setError('用户名或密码错误');\n      }\n    } catch (error) {\n      setError('登录失败，请稍后重试');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <Lock size={48} className=\"mx-auto text-blue-600\" />\n          <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\n            ITSM 系统登录\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            请输入您的账号和密码\n          </p>\n        </div>\n        \n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\n                用户名\n              </label>\n              <input\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"请输入用户名\"\n                defaultValue=\"admin\"\n              />\n            </div>\n            \n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                密码\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"请输入密码\"\n                defaultValue=\"admin123\"\n              />\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"text-red-600 text-sm text-center\">\n              {error}\n            </div>\n          )}\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {loading ? (\n                <Spin size=\"small\" className=\"mr-2\" />\n              ) : null}\n              {loading ? '登录中...' : '登录'}\n            </button>\n          </div>\n\n          <div className=\"text-xs text-gray-500 text-center\">\n            <p>测试账号: admin / admin123</p>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// 权限检查组件\nconst PermissionGuard: React.FC<{\n  children: React.ReactNode;\n  route: RouteConfig;\n  user: User;\n}> = ({ children, route, user }) => {\n  const hasPermission = RoutePermissionChecker.hasRoutePermission(\n    route,\n    user.permissions,\n    user.roles\n  );\n\n  if (!hasPermission) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <Result\n          status=\"403\"\n          title=\"403\"\n          subTitle=\"抱歉，您没有权限访问此页面\"\n          icon={<AlertTriangle size={64} className=\"text-red-500\" />}\n          extra={\n            <Button type=\"primary\" onClick={() => window.history.back()}>\n              返回上一页\n            </Button>\n          }\n        />\n      </div>\n    );\n  }\n\n  return <>{children}</>;\n};\n\n// 主路由守卫组件\nexport const RouteGuard: React.FC<RouteGuardProps> = ({ \n  children, \n  route,\n  fallback \n}) => {\n  const { user, isAuthenticated, isLoading, login } = useAuth();\n  const pathname = usePathname();\n\n  // 公共路由，不需要认证\n  const publicRoutes = ['/login', '/register', '/forgot-password'];\n  const isPublicRoute = publicRoutes.includes(pathname);\n\n  // 加载状态\n  if (isLoading) {\n    return (\n      fallback || (\n        <div className=\"min-h-screen flex items-center justify-center\">\n          <Spin size=\"large\" />\n        </div>\n      )\n    );\n  }\n\n  // 未认证且不是公共路由\n  if (!isAuthenticated && !isPublicRoute) {\n    return <LoginPage onLogin={login} />;\n  }\n\n  // 已认证但访问登录页面，重定向到首页\n  if (isAuthenticated && pathname === '/login') {\n    window.location.href = '/';\n    return null;\n  }\n\n  // 需要权限检查的路由\n  if (route && user && route.meta?.requireAuth) {\n    return (\n      <PermissionGuard route={route} user={user}>\n        {children}\n      </PermissionGuard>\n    );\n  }\n\n  return <>{children}</>;\n};\n\n// 页面级路由守卫HOC\nexport const withRouteGuard = <P extends object>(\n  Component: React.ComponentType<P>,\n  route?: RouteConfig\n) => {\n  const GuardedComponent: React.FC<P> = (props) => {\n    return (\n      <RouteGuard route={route}>\n        <Component {...props} />\n      </RouteGuard>\n    );\n  };\n\n  GuardedComponent.displayName = `withRouteGuard(${Component.displayName || Component.name})`;\n  \n  return GuardedComponent;\n};\n\nexport default RouteGuard;"],"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","ignoreList":[]}