{"version":3,"names":["cov_1n3q87sv3","actualCoverage","s","IncidentAPI","listIncidents","params","b","f","console","log","response","_httpclient","httpClient","get","error","getIncident","id","createIncident","data","post","updateIncident","patch","updateIncidentStatus","put","addComment","getIncidentMetrics","getRootCauseAnalysis","incidentId","createRootCauseAnalysis","request","updateRootCauseAnalysis","getImpactAssessment","createImpactAssessment","updateImpactAssessment","getIncidentClassification","createIncidentClassification","updateIncidentClassification","analyzeIncidentWithAI","getConfigurationItems","search","type","status","createIncidentFromAlibabaCloudAlert","createIncidentFromSecurityEvent","createIncidentFromCloudProductEvent","simulateAlibabaCloudAlert","mockAlert","alert_id","Date","now","alert_name","alert_description","alert_level","instance_id","region","service","metrics","cpu_usage","memory_usage","disk_usage","alert_data","alert_rule","threshold","current_value","duration","detected_at","toISOString","simulateSecurityEvent","mockSecurityEvent","event_id","event_type","event_name","event_description","source_ip","target","severity","event_details","failed_attempts","time_window","target_port","attack_type","simulateCloudProductEvent","mockCloudEvent","product","event_data","sync_delay","master_status","slave_status"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/incident-api.ts"],"sourcesContent":["import { httpClient } from './http-client';\nimport { PaginationRequest, PaginationResponse } from './api-config';\n\n// 事件管理API接口\nexport interface Incident {\n  id: number;\n  title: string;\n  description: string;\n  status: string;\n  priority: string;\n  source: string;\n  type: string;\n  incident_number: string;\n  is_major_incident: boolean;\n  reporter?: {\n    id: number;\n    name: string;\n  };\n  assignee?: {\n    id: number;\n    name: string;\n  };\n  // 配置项关联\n  configuration_item_id?: number;\n  configuration_item?: {\n    id: number;\n    name: string;\n    type: string;\n    status: string;\n    description?: string;\n  };\n  // 阿里云相关字段\n  alibaba_cloud_instance_id?: string;\n  alibaba_cloud_region?: string;\n  alibaba_cloud_service?: string;\n  alibaba_cloud_alert_data?: unknown;\n  alibaba_cloud_metrics?: unknown;\n  // 安全事件相关字段\n  security_event_type?: string;\n  security_event_source_ip?: string;\n  security_event_target?: string;\n  security_event_details?: unknown;\n  // 时间字段\n  detected_at?: string;\n  confirmed_at?: string;\n  resolved_at?: string;\n  closed_at?: string;\n  created_at: string;\n  updated_at: string;\n  // 新增字段\n  category?: string;\n  subcategory?: string;\n  resolution?: string;\n}\n\nexport interface CreateIncidentRequest {\n  title: string;\n  description?: string;\n  priority: string;\n  source: string;\n  type: string;\n  is_major_incident?: boolean;\n  assignee_id?: number;\n  configuration_item_id?: number;\n  category?: string;\n  subcategory?: string;\n  // 阿里云相关字段\n  alibaba_cloud_instance_id?: string;\n  alibaba_cloud_region?: string;\n  alibaba_cloud_service?: string;\n  alibaba_cloud_alert_data?: unknown;\n  alibaba_cloud_metrics?: unknown;\n  // 安全事件相关字段\n  security_event_type?: string;\n  security_event_source_ip?: string;\n  security_event_target?: string;\n  security_event_details?: unknown;\n  // 关联的配置项\n  affected_configuration_item_ids?: number[];\n  form_fields?: Record<string, string | number | boolean>;\n}\n\n// 根因分析接口\nexport interface RootCauseAnalysis {\n  id?: number;\n  incident_id: number;\n  analysis_method: string; // \"5-whys\" | \"fishbone\" | \"timeline\" | \"fault-tree\"\n  root_cause: string;\n  contributing_factors: string[];\n  evidence: string[];\n  preventive_actions: string[];\n  status: \"draft\" | \"in-progress\" | \"completed\" | \"approved\";\n  analyst_id?: number;\n  analyst_name?: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\n// 影响评估接口\nexport interface ImpactAssessment {\n  id?: number;\n  incident_id: number;\n  business_impact: \"low\" | \"medium\" | \"high\" | \"critical\";\n  technical_impact: \"low\" | \"medium\" | \"high\" | \"critical\";\n  affected_services: string[];\n  affected_users_count: number;\n  financial_impact: number;\n  reputation_impact: \"low\" | \"medium\" | \"high\" | \"critical\";\n  compliance_impact: boolean;\n  assessment_notes: string;\n  assessor_id?: number;\n  assessor_name?: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\n// 事件分类接口\nexport interface IncidentClassification {\n  id?: number;\n  incident_id: number;\n  category: string;\n  subcategory: string;\n  service_type: string;\n  failure_type: string;\n  urgency: \"low\" | \"medium\" | \"high\" | \"critical\";\n  impact: \"low\" | \"medium\" | \"high\" | \"critical\";\n  classification_confidence: number; // 0-100\n  auto_classified: boolean;\n  classifier_id?: number;\n  classifier_name?: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface CreateRootCauseAnalysisRequest {\n  incident_id: number;\n  analysis_method: string;\n  root_cause: string;\n  contributing_factors: string[];\n  evidence: string[];\n  preventive_actions: string[];\n  status: string;\n}\n\nexport interface CreateImpactAssessmentRequest {\n  incident_id: number;\n  business_impact: string;\n  technical_impact: string;\n  affected_services: string[];\n  affected_users_count: number;\n  financial_impact: number;\n  reputation_impact: string;\n  compliance_impact: boolean;\n  assessment_notes: string;\n}\n\nexport interface CreateIncidentClassificationRequest {\n  incident_id: number;\n  category: string;\n  subcategory: string;\n  service_type: string;\n  failure_type: string;\n  urgency: string;\n  impact: string;\n  classification_confidence?: number;\n  auto_classified?: boolean;\n}\n\nexport interface UpdateIncidentRequest {\n  title?: string;\n  description?: string;\n  priority?: string;\n  type?: string;\n  status?: string;\n  assignee_id?: number;\n  is_major_incident?: boolean;\n  category?: string;\n  subcategory?: string;\n  resolution?: string;\n  resolution_notes?: string;\n  suspend_reason?: string;\n  resolved_at?: string;\n  closed_at?: string;\n  form_fields?: Record<string, string | number | boolean>;\n}\n\nexport interface UpdateIncidentStatusRequest {\n  status: string;\n  resolution_note?: string;\n  suspend_reason?: string;\n}\n\nexport interface ListIncidentsRequest extends PaginationRequest {\n  status?: string;\n  priority?: string;\n  source?: string;\n  type?: string;\n  category?: string;\n  assignee_id?: number;\n  is_major_incident?: boolean;\n  keyword?: string;\n  date_from?: string;\n  date_to?: string;\n  [key: string]: unknown;\n}\n\nexport interface ListIncidentsResponse extends PaginationResponse<Incident> {\n  incidents: Incident[]; // 保持向后兼容\n}\n\nexport interface IncidentMetrics {\n  total_incidents: number;\n  open_incidents: number;\n  critical_incidents: number;\n  major_incidents: number;\n  avg_resolution_time: number;\n  mtta: number;\n  mttr: number;\n}\n\n// 阿里云告警事件\nexport interface AlibabaCloudAlertRequest {\n  alert_id: string;\n  alert_name: string;\n  alert_description: string;\n  alert_level: string;\n  instance_id: string;\n  region: string;\n  service: string;\n  metrics: unknown;\n  alert_data: unknown;\n  detected_at: string;\n}\n\n// 安全事件\nexport interface SecurityEventRequest {\n  event_id: string;\n  event_type: string;\n  event_name: string;\n  event_description: string;\n  source_ip: string;\n  target: string;\n  severity: string;\n  event_details: unknown;\n  detected_at: string;\n}\n\n// 云产品事件\nexport interface CloudProductEventRequest {\n  event_id: string;\n  event_type: string;\n  event_name: string;\n  event_description: string;\n  product: string;\n  instance_id: string;\n  region: string;\n  event_data: unknown;\n  detected_at: string;\n}\n\n// 事件管理API类\nexport class IncidentAPI {\n  // 获取事件列表\n  static async listIncidents(params: ListIncidentsRequest = {}): Promise<ListIncidentsResponse> {\n    console.log('IncidentAPI.listIncidents called with params:', params);\n    try {\n      const response = await httpClient.get<ListIncidentsResponse>('/api/v1/incidents', params);\n      console.log('IncidentAPI.listIncidents response:', response);\n      return response;\n    } catch (error) {\n      console.error('IncidentAPI.listIncidents error:', error);\n      throw error;\n    }\n  }\n\n  // 获取事件详情\n  static async getIncident(id: number): Promise<Incident> {\n    const response = await httpClient.get<Incident>(`/api/v1/incidents/${id}`);\n    return response;\n  }\n\n  // 创建事件\n  static async createIncident(data: CreateIncidentRequest): Promise<Incident> {\n    const response = await httpClient.post<Incident>('/api/v1/incidents', data);\n    return response;\n  }\n\n  // 更新事件\n  static async updateIncident(id: number, data: UpdateIncidentRequest): Promise<Incident> {\n    const response = await httpClient.patch<Incident>(`/api/v1/incidents/${id}`, data);\n    return response;\n  }\n\n  // 更新事件状态\n  static async updateIncidentStatus(id: number, data: UpdateIncidentStatusRequest): Promise<Incident> {\n    const response = await httpClient.put<Incident>(`/api/v1/incidents/${id}/status`, data);\n    return response;\n  }\n\n  // 添加评论\n  static async addComment(id: number, data: { text: string }): Promise<Incident> {\n    const response = await httpClient.post<Incident>(`/api/v1/incidents/${id}/comments`, data);\n    return response;\n  }\n\n  // 获取事件指标\n  static async getIncidentMetrics(): Promise<IncidentMetrics> {\n    const response = await httpClient.get<IncidentMetrics>('/api/v1/incidents/stats');\n    return response;\n  }\n\n  // 根因分析相关API\n  static async getRootCauseAnalysis(incidentId: number): Promise<RootCauseAnalysis> {\n    try {\n      const response = await httpClient.get<RootCauseAnalysis>(`/api/incidents/${incidentId}/root-cause`);\n      return response;\n    } catch (error) {\n      console.error('IncidentAPI.getRootCauseAnalysis error:', error);\n      throw error;\n    }\n  }\n\n  static async createRootCauseAnalysis(request: CreateRootCauseAnalysisRequest): Promise<RootCauseAnalysis> {\n    try {\n      const response = await httpClient.post<RootCauseAnalysis>('/api/incidents/root-cause', request);\n      return response;\n    } catch (error) {\n      console.error('IncidentAPI.createRootCauseAnalysis error:', error);\n      throw error;\n    }\n  }\n\n  static async updateRootCauseAnalysis(id: number, request: Partial<CreateRootCauseAnalysisRequest>): Promise<RootCauseAnalysis> {\n    try {\n      const response = await httpClient.put<RootCauseAnalysis>(`/api/incidents/root-cause/${id}`, request);\n      return response;\n    } catch (error) {\n      console.error('IncidentAPI.updateRootCauseAnalysis error:', error);\n      throw error;\n    }\n  }\n\n  // 影响评估相关API\n  static async getImpactAssessment(incidentId: number): Promise<ImpactAssessment> {\n    try {\n      const response = await httpClient.get<ImpactAssessment>(`/api/incidents/${incidentId}/impact-assessment`);\n      return response;\n    } catch (error) {\n      console.error('IncidentAPI.getImpactAssessment error:', error);\n      throw error;\n    }\n  }\n\n  static async createImpactAssessment(request: CreateImpactAssessmentRequest): Promise<ImpactAssessment> {\n    try {\n      const response = await httpClient.post<ImpactAssessment>('/api/incidents/impact-assessment', request);\n      return response;\n    } catch (error) {\n      console.error('IncidentAPI.createImpactAssessment error:', error);\n      throw error;\n    }\n  }\n\n  static async updateImpactAssessment(id: number, request: Partial<CreateImpactAssessmentRequest>): Promise<ImpactAssessment> {\n    try {\n      const response = await httpClient.put<ImpactAssessment>(`/api/incidents/impact-assessment/${id}`, request);\n      return response;\n    } catch (error) {\n      console.error('IncidentAPI.updateImpactAssessment error:', error);\n      throw error;\n    }\n  }\n\n  // 事件分类相关API\n  static async getIncidentClassification(incidentId: number): Promise<IncidentClassification> {\n    try {\n      const response = await httpClient.get<IncidentClassification>(`/api/incidents/${incidentId}/classification`);\n      return response;\n    } catch (error) {\n      console.error('IncidentAPI.getIncidentClassification error:', error);\n      throw error;\n    }\n  }\n\n  static async createIncidentClassification(request: CreateIncidentClassificationRequest): Promise<IncidentClassification> {\n    try {\n      const response = await httpClient.post<IncidentClassification>('/api/incidents/classification', request);\n      return response;\n    } catch (error) {\n      console.error('IncidentAPI.createIncidentClassification error:', error);\n      throw error;\n    }\n  }\n\n  static async updateIncidentClassification(id: number, request: Partial<CreateIncidentClassificationRequest>): Promise<IncidentClassification> {\n    try {\n      const response = await httpClient.put<IncidentClassification>(`/api/incidents/classification/${id}`, request);\n      return response;\n    } catch (error) {\n      console.error('IncidentAPI.updateIncidentClassification error:', error);\n      throw error;\n    }\n  }\n\n  // AI辅助分析\n  static async analyzeIncidentWithAI(incidentId: number): Promise<{\n    suggested_classification: Partial<IncidentClassification>;\n    suggested_root_causes: string[];\n    similar_incidents: Incident[];\n  }> {\n    try {\n      const response = await httpClient.post<{\n        suggested_classification: Partial<IncidentClassification>;\n        suggested_root_causes: string[];\n        similar_incidents: Incident[];\n      }>(`/api/incidents/${incidentId}/ai-analysis`);\n      return response;\n    } catch (error) {\n      console.error('IncidentAPI.analyzeIncidentWithAI error:', error);\n      throw error;\n    }\n  }\n\n  // 获取可关联的配置项列表\n  static async getConfigurationItems(search?: string, type?: string, status?: string): Promise<Array<{\n    id: number;\n    name: string;\n    type: string;\n    status: string;\n    description?: string;\n  }>> {\n    const params: Record<string, string> = {};\n    if (search) params.search = search;\n    if (type) params.type = type;\n    if (status) params.status = status;\n    \n    const response = await httpClient.get<Array<{\n      id: number;\n      name: string;\n      type: string;\n      status: string;\n      description?: string;\n    }>>('/api/v1/incidents/configuration-items', params);\n    return response;\n  }\n\n  // 从阿里云告警创建事件\n  static async createIncidentFromAlibabaCloudAlert(data: AlibabaCloudAlertRequest): Promise<Incident> {\n    const response = await httpClient.post<Incident>('/api/v1/incidents/alibaba-cloud-alert', data);\n    return response;\n  }\n\n  // 从安全事件创建事件\n  static async createIncidentFromSecurityEvent(data: SecurityEventRequest): Promise<Incident> {\n    const response = await httpClient.post<Incident>('/api/v1/incidents/security-event', data);\n    return response;\n  }\n\n  // 从云产品事件创建事件\n  static async createIncidentFromCloudProductEvent(data: CloudProductEventRequest): Promise<Incident> {\n    const response = await httpClient.post<Incident>('/api/v1/incidents/cloud-product-event', data);\n    return response;\n  }\n\n  // 模拟阿里云告警事件\n  static async simulateAlibabaCloudAlert(): Promise<Incident> {\n    const mockAlert: AlibabaCloudAlertRequest = {\n      alert_id: `alert_${Date.now()}`,\n      alert_name: 'CPU使用率过高告警',\n      alert_description: '实例 i-bp1abcdefg 的CPU使用率在过去15分钟内持续高于95%',\n      alert_level: 'critical',\n      instance_id: 'i-bp1abcdefg',\n      region: 'cn-hangzhou',\n      service: 'ecs',\n      metrics: {\n        cpu_usage: 95.5,\n        memory_usage: 78.2,\n        disk_usage: 45.1\n      },\n      alert_data: {\n        alert_rule: 'CPU使用率 > 90%',\n        threshold: 90,\n        current_value: 95.5,\n        duration: '15分钟'\n      },\n      detected_at: new Date().toISOString()\n    };\n\n    return this.createIncidentFromAlibabaCloudAlert(mockAlert);\n  }\n\n  // 模拟安全事件\n  static async simulateSecurityEvent(): Promise<Incident> {\n    const mockSecurityEvent: SecurityEventRequest = {\n      event_id: `security_${Date.now()}`,\n      event_type: 'SSH暴力破解',\n      event_name: '检测到可疑的SSH登录尝试',\n      event_description: '安全系统检测到来自未知IP地址 (47.98.x.x) 对生产环境服务器的多次SSH登录失败尝试',\n      source_ip: '47.98.x.x',\n      target: 'PROD-BASTION-HOST',\n      severity: 'high',\n      event_details: {\n        failed_attempts: 15,\n        time_window: '10分钟',\n        target_port: 22,\n        attack_type: 'brute_force'\n      },\n      detected_at: new Date().toISOString()\n    };\n\n    return this.createIncidentFromSecurityEvent(mockSecurityEvent);\n  }\n\n  // 模拟云产品事件\n  static async simulateCloudProductEvent(): Promise<Incident> {\n    const mockCloudEvent: CloudProductEventRequest = {\n      event_id: `cloud_${Date.now()}`,\n      event_type: 'RDS主备同步延迟',\n      event_name: '数据库主备同步延迟告警',\n      event_description: '监控系统告警，生产数据库（RDS）主备同步延迟超过阈值（30秒）',\n      product: 'rds',\n      instance_id: 'rm-bp1abcdefg',\n      region: 'cn-hangzhou',\n      event_data: {\n        sync_delay: 45,\n        threshold: 30,\n        master_status: 'running',\n        slave_status: 'running'\n      },\n      detected_at: new Date().toISOString()\n    };\n\n    return this.createIncidentFromCloudProductEvent(mockCloudEvent);\n  }\n}"],"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","ignoreList":[]}