a8519d0b7e14ff9516a648705b40940c
"use strict";

/* istanbul ignore next */
function cov_19gzuhi7ob() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/services/ticket-category-service.ts";
  var hash = "b15af22ad16f7c4a378f7639d6452670a81c5ee7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/services/ticket-category-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 37
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 43
        }
      },
      "4": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 49
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 76
        }
      },
      "6": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 76
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 91
        }
      },
      "8": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 17,
          column: 91
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 105
        }
      },
      "10": {
        start: {
          line: 18,
          column: 44
        },
        end: {
          line: 18,
          column: 105
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 79
        }
      },
      "12": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 19,
          column: 79
        }
      },
      "13": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 102
        }
      },
      "14": {
        start: {
          line: 20,
          column: 44
        },
        end: {
          line: 20,
          column: 102
        }
      },
      "15": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 27,
          column: 10
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "17": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 64
        }
      },
      "18": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 44
        }
      },
      "19": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 27
        }
      },
      "20": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "21": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "22": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 63
        }
      },
      "23": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 44
        }
      },
      "24": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 27
        }
      },
      "25": {
        start: {
          line: 51,
          column: 25
        },
        end: {
          line: 57,
          column: 10
        }
      },
      "26": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "27": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 64
        }
      },
      "28": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 44
        }
      },
      "29": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 27
        }
      },
      "30": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "31": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "32": {
        start: {
          line: 75,
          column: 30
        },
        end: {
          line: 75,
          column: 51
        }
      },
      "33": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 83
        }
      },
      "34": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 78,
          column: 44
        }
      },
      "35": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 27
        }
      },
      "36": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 90,
          column: 10
        }
      },
      "37": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "38": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 51
        }
      },
      "39": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 83
        }
      },
      "40": {
        start: {
          line: 95,
          column: 23
        },
        end: {
          line: 95,
          column: 44
        }
      },
      "41": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 27
        }
      },
      "42": {
        start: {
          line: 100,
          column: 25
        },
        end: {
          line: 106,
          column: 10
        }
      },
      "43": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "44": {
        start: {
          line: 108,
          column: 30
        },
        end: {
          line: 108,
          column: 51
        }
      },
      "45": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 83
        }
      },
      "46": {
        start: {
          line: 114,
          column: 25
        },
        end: {
          line: 121,
          column: 10
        }
      },
      "47": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "48": {
        start: {
          line: 123,
          column: 30
        },
        end: {
          line: 123,
          column: 51
        }
      },
      "49": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 83
        }
      },
      "50": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "51": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 60
        }
      },
      "52": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 18
        }
      },
      "53": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 77
        }
      },
      "54": {
        start: {
          line: 138,
          column: 30
        },
        end: {
          line: 138,
          column: 57
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 38
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 28
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 26
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 50
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 65
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 35
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 82
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 29
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 99
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 33
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 113
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        loc: {
          start: {
            line: 128,
            column: 19
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 128
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 17
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 134
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 25
          },
          end: {
            line: 14,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 34
          },
          end: {
            line: 14,
            column: 36
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 16,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 16,
            column: 76
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 17,
            column: 91
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 17,
            column: 91
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 105
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 105
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 20,
            column: 102
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 20,
            column: 102
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "6": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "7": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "10": {
        loc: {
          start: {
            line: 76,
            column: 28
          },
          end: {
            line: 76,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 28
          },
          end: {
            line: 76,
            column: 45
          }
        }, {
          start: {
            line: 76,
            column: 49
          },
          end: {
            line: 76,
            column: 81
          }
        }],
        line: 76
      },
      "11": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "12": {
        loc: {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 45
          }
        }, {
          start: {
            line: 93,
            column: 49
          },
          end: {
            line: 93,
            column: 81
          }
        }],
        line: 93
      },
      "13": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "14": {
        loc: {
          start: {
            line: 109,
            column: 28
          },
          end: {
            line: 109,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 28
          },
          end: {
            line: 109,
            column: 45
          }
        }, {
          start: {
            line: 109,
            column: 49
          },
          end: {
            line: 109,
            column: 81
          }
        }],
        line: 109
      },
      "15": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "16": {
        loc: {
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 45
          }
        }, {
          start: {
            line: 124,
            column: 49
          },
          end: {
            line: 124,
            column: 81
          }
        }],
        line: 124
      },
      "17": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "18": {
        loc: {
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 130,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 130,
            column: 53
          }
        }, {
          start: {
            line: 130,
            column: 57
          },
          end: {
            line: 130,
            column: 59
          }
        }],
        line: 130
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/services/ticket-category-service.ts"],
      sourcesContent: ["import { API_BASE_URL } from '../api-config';\n\n// \u5DE5\u5355\u5206\u7C7B\u63A5\u53E3\nexport interface TicketCategory {\n  id: number;\n  name: string;\n  description: string;\n  code: string;\n  parent_id: number;\n  level: number;\n  sort_order: number;\n  is_active: boolean;\n  tenant_id: number;\n  created_at: string;\n  updated_at: string;\n  children?: TicketCategory[];\n}\n\n// \u521B\u5EFA\u5206\u7C7B\u8BF7\u6C42\nexport interface CreateCategoryRequest {\n  name: string;\n  description: string;\n  code: string;\n  parent_id: number;\n  sort_order: number;\n  is_active: boolean;\n}\n\n// \u66F4\u65B0\u5206\u7C7B\u8BF7\u6C42\nexport interface UpdateCategoryRequest {\n  name?: string;\n  description?: string;\n  code?: string;\n  parent_id?: number;\n  sort_order?: number;\n  is_active?: boolean;\n}\n\n// \u5206\u7C7B\u5217\u8868\u8BF7\u6C42\u53C2\u6570\nexport interface ListCategoriesParams {\n  page?: number;\n  page_size?: number;\n  parent_id?: number;\n  level?: number;\n  is_active?: boolean;\n}\n\n// \u5206\u7C7B\u5217\u8868\u54CD\u5E94\nexport interface ListCategoriesResponse {\n  categories: TicketCategory[];\n  total: number;\n}\n\n// \u5206\u7C7B\u6811\u9879\u76EE\nexport interface CategoryTreeItem {\n  id: number;\n  name: string;\n  description: string;\n  code: string;\n  level: number;\n  sort_order: number;\n  is_active: boolean;\n  children: CategoryTreeItem[];\n  created_at?: string;\n  updated_at?: string;\n  created_by?: string;\n  updated_by?: string;\n}\n\n// \u79FB\u52A8\u5206\u7C7B\u8BF7\u6C42\nexport interface MoveCategoryRequest {\n  new_parent_id?: number;\n  new_sort_order?: number;\n}\n\nclass TicketCategoryService {\n  private baseUrl = `${API_BASE_URL}/api/v1/ticket-categories`;\n\n  // \u83B7\u53D6\u5206\u7C7B\u5217\u8868\n  async listCategories(params: ListCategoriesParams = {}): Promise<ListCategoriesResponse> {\n    const queryParams = new URLSearchParams();\n    \n    if (params.page) queryParams.append('page', params.page.toString());\n    if (params.page_size) queryParams.append('page_size', params.page_size.toString());\n    if (params.parent_id !== undefined) queryParams.append('parent_id', params.parent_id.toString());\n    if (params.level) queryParams.append('level', params.level.toString());\n    if (params.is_active !== undefined) queryParams.append('active', params.is_active.toString());\n\n    const response = await fetch(`${this.baseUrl}?${queryParams}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`\u83B7\u53D6\u5206\u7C7B\u5217\u8868\u5931\u8D25: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // \u83B7\u53D6\u5206\u7C7B\u6811\u5F62\u7ED3\u6784\n  async getCategoryTree(): Promise<CategoryTreeItem[]> {\n    const response = await fetch(`${this.baseUrl}/tree`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`\u83B7\u53D6\u5206\u7C7B\u6811\u5931\u8D25: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // \u83B7\u53D6\u5206\u7C7B\u8BE6\u60C5\n  async getCategory(id: number): Promise<TicketCategory> {\n    const response = await fetch(`${this.baseUrl}/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`\u83B7\u53D6\u5206\u7C7B\u8BE6\u60C5\u5931\u8D25: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // \u521B\u5EFA\u5206\u7C7B\n  async createCategory(data: CreateCategoryRequest): Promise<TicketCategory> {\n    const response = await fetch(this.baseUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || `\u521B\u5EFA\u5206\u7C7B\u5931\u8D25: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // \u66F4\u65B0\u5206\u7C7B\n  async updateCategory(id: number, data: UpdateCategoryRequest): Promise<TicketCategory> {\n    const response = await fetch(`${this.baseUrl}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || `\u66F4\u65B0\u5206\u7C7B\u5931\u8D25: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // \u5220\u9664\u5206\u7C7B\n  async deleteCategory(id: number): Promise<void> {\n    const response = await fetch(`${this.baseUrl}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || `\u5220\u9664\u5206\u7C7B\u5931\u8D25: ${response.statusText}`);\n    }\n  }\n\n  // \u79FB\u52A8\u5206\u7C7B\u4F4D\u7F6E\n  async moveCategory(id: number, data: MoveCategoryRequest): Promise<void> {\n    const response = await fetch(`${this.baseUrl}/${id}/move`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || `\u79FB\u52A8\u5206\u7C7B\u5931\u8D25: ${response.statusText}`);\n    }\n  }\n\n  // \u83B7\u53D6\u8BA4\u8BC1token\n  private getAuthToken(): string {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('auth_token') || '';\n    }\n    return '';\n  }\n}\n\nexport const ticketCategoryService = new TicketCategoryService();\n"],
      names: ["ticketCategoryService", "TicketCategoryService", "listCategories", "params", "queryParams", "URLSearchParams", "page", "append", "toString", "page_size", "parent_id", "undefined", "level", "is_active", "response", "fetch", "baseUrl", "method", "headers", "getAuthToken", "ok", "Error", "statusText", "result", "json", "data", "getCategoryTree", "getCategory", "id", "createCategory", "body", "JSON", "stringify", "errorData", "message", "updateCategory", "deleteCategory", "moveCategory", "window", "localStorage", "getItem", "API_BASE_URL"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b15af22ad16f7c4a378f7639d6452670a81c5ee7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19gzuhi7ob = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19gzuhi7ob();
cov_19gzuhi7ob().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_19gzuhi7ob().s[1]++;
Object.defineProperty(exports, "ticketCategoryService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_19gzuhi7ob().f[0]++;
    cov_19gzuhi7ob().s[2]++;
    return ticketCategoryService;
  }
});
const _apiconfig =
/* istanbul ignore next */
(cov_19gzuhi7ob().s[3]++, require("../api-config"));
class TicketCategoryService {
  // 获取分类列表
  async listCategories(params =
  /* istanbul ignore next */
  (cov_19gzuhi7ob().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_19gzuhi7ob().f[1]++;
    const queryParams =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[4]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[5]++;
    if (params.page) {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[1][0]++;
      cov_19gzuhi7ob().s[6]++;
      queryParams.append('page', params.page.toString());
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[1][1]++;
    }
    cov_19gzuhi7ob().s[7]++;
    if (params.page_size) {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[2][0]++;
      cov_19gzuhi7ob().s[8]++;
      queryParams.append('page_size', params.page_size.toString());
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[2][1]++;
    }
    cov_19gzuhi7ob().s[9]++;
    if (params.parent_id !== undefined) {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[3][0]++;
      cov_19gzuhi7ob().s[10]++;
      queryParams.append('parent_id', params.parent_id.toString());
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[3][1]++;
    }
    cov_19gzuhi7ob().s[11]++;
    if (params.level) {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[4][0]++;
      cov_19gzuhi7ob().s[12]++;
      queryParams.append('level', params.level.toString());
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[4][1]++;
    }
    cov_19gzuhi7ob().s[13]++;
    if (params.is_active !== undefined) {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[5][0]++;
      cov_19gzuhi7ob().s[14]++;
      queryParams.append('active', params.is_active.toString());
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[5][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[15]++, await fetch(`${this.baseUrl}?${queryParams}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getAuthToken()}`
      }
    }));
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[16]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[6][0]++;
      cov_19gzuhi7ob().s[17]++;
      throw new Error(`获取分类列表失败: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[6][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[18]++, await response.json());
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[19]++;
    return result.data;
  }
  // 获取分类树形结构
  async getCategoryTree() {
    /* istanbul ignore next */
    cov_19gzuhi7ob().f[2]++;
    const response =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[20]++, await fetch(`${this.baseUrl}/tree`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getAuthToken()}`
      }
    }));
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[21]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[7][0]++;
      cov_19gzuhi7ob().s[22]++;
      throw new Error(`获取分类树失败: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[7][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[23]++, await response.json());
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[24]++;
    return result.data;
  }
  // 获取分类详情
  async getCategory(id) {
    /* istanbul ignore next */
    cov_19gzuhi7ob().f[3]++;
    const response =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[25]++, await fetch(`${this.baseUrl}/${id}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getAuthToken()}`
      }
    }));
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[26]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[8][0]++;
      cov_19gzuhi7ob().s[27]++;
      throw new Error(`获取分类详情失败: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[8][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[28]++, await response.json());
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[29]++;
    return result.data;
  }
  // 创建分类
  async createCategory(data) {
    /* istanbul ignore next */
    cov_19gzuhi7ob().f[4]++;
    const response =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[30]++, await fetch(this.baseUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getAuthToken()}`
      },
      body: JSON.stringify(data)
    }));
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[31]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[9][0]++;
      const errorData =
      /* istanbul ignore next */
      (cov_19gzuhi7ob().s[32]++, await response.json());
      /* istanbul ignore next */
      cov_19gzuhi7ob().s[33]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_19gzuhi7ob().b[10][0]++, errorData.message) ||
      /* istanbul ignore next */
      (cov_19gzuhi7ob().b[10][1]++, `创建分类失败: ${response.statusText}`));
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[9][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[34]++, await response.json());
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[35]++;
    return result.data;
  }
  // 更新分类
  async updateCategory(id, data) {
    /* istanbul ignore next */
    cov_19gzuhi7ob().f[5]++;
    const response =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[36]++, await fetch(`${this.baseUrl}/${id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getAuthToken()}`
      },
      body: JSON.stringify(data)
    }));
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[37]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[11][0]++;
      const errorData =
      /* istanbul ignore next */
      (cov_19gzuhi7ob().s[38]++, await response.json());
      /* istanbul ignore next */
      cov_19gzuhi7ob().s[39]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_19gzuhi7ob().b[12][0]++, errorData.message) ||
      /* istanbul ignore next */
      (cov_19gzuhi7ob().b[12][1]++, `更新分类失败: ${response.statusText}`));
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[11][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[40]++, await response.json());
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[41]++;
    return result.data;
  }
  // 删除分类
  async deleteCategory(id) {
    /* istanbul ignore next */
    cov_19gzuhi7ob().f[6]++;
    const response =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[42]++, await fetch(`${this.baseUrl}/${id}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getAuthToken()}`
      }
    }));
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[43]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[13][0]++;
      const errorData =
      /* istanbul ignore next */
      (cov_19gzuhi7ob().s[44]++, await response.json());
      /* istanbul ignore next */
      cov_19gzuhi7ob().s[45]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_19gzuhi7ob().b[14][0]++, errorData.message) ||
      /* istanbul ignore next */
      (cov_19gzuhi7ob().b[14][1]++, `删除分类失败: ${response.statusText}`));
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[13][1]++;
    }
  }
  // 移动分类位置
  async moveCategory(id, data) {
    /* istanbul ignore next */
    cov_19gzuhi7ob().f[7]++;
    const response =
    /* istanbul ignore next */
    (cov_19gzuhi7ob().s[46]++, await fetch(`${this.baseUrl}/${id}/move`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getAuthToken()}`
      },
      body: JSON.stringify(data)
    }));
    /* istanbul ignore next */
    cov_19gzuhi7ob().s[47]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[15][0]++;
      const errorData =
      /* istanbul ignore next */
      (cov_19gzuhi7ob().s[48]++, await response.json());
      /* istanbul ignore next */
      cov_19gzuhi7ob().s[49]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_19gzuhi7ob().b[16][0]++, errorData.message) ||
      /* istanbul ignore next */
      (cov_19gzuhi7ob().b[16][1]++, `移动分类失败: ${response.statusText}`));
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[15][1]++;
    }
  }
  // 获取认证token
  getAuthToken() {
    /* istanbul ignore next */
    cov_19gzuhi7ob().f[8]++;
    cov_19gzuhi7ob().s[50]++;
    if (typeof window !== 'undefined') {
      /* istanbul ignore next */
      cov_19gzuhi7ob().b[17][0]++;
      cov_19gzuhi7ob().s[51]++;
      return /* istanbul ignore next */(cov_19gzuhi7ob().b[18][0]++, localStorage.getItem('auth_token')) ||
      /* istanbul ignore next */
      (cov_19gzuhi7ob().b[18][1]++, '');
    } else
    /* istanbul ignore next */
    {
      cov_19gzuhi7ob().b[17][1]++;
    }
    cov_19gzuhi7ob().s[52]++;
    return '';
  }
  constructor() {
    /* istanbul ignore next */
    cov_19gzuhi7ob().f[9]++;
    cov_19gzuhi7ob().s[53]++;
    this.baseUrl = `${_apiconfig.API_BASE_URL}/api/v1/ticket-categories`;
  }
}
const ticketCategoryService =
/* istanbul ignore next */
(cov_19gzuhi7ob().s[54]++, new TicketCategoryService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,