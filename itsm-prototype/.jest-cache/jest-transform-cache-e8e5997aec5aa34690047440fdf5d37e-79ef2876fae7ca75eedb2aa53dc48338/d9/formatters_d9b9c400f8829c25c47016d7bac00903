b65cac39b1da76a5adb4a1e7da550c90
"use strict";

/* istanbul ignore next */
function cov_trc4vr1a3() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/formatters.ts";
  var hash = "689a908781aacd310d4956bd11a1cb286b738b24";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/formatters.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "7": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 24
        }
      },
      "8": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 20,
          column: 24
        }
      },
      "9": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "10": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 53
        }
      },
      "11": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 25
        }
      },
      "12": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 26
        }
      },
      "14": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 26
        }
      },
      "15": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 12,
            column: 21
          }
        },
        loc: {
          start: {
            line: 12,
            column: 31
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 14
          },
          end: {
            line: 15,
            column: 15
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 24
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 27
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 18
          }
        }, {
          start: {
            line: 24,
            column: 22
          },
          end: {
            line: 24,
            column: 24
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 21
          }
        }, {
          start: {
            line: 29,
            column: 25
          },
          end: {
            line: 29,
            column: 30
          }
        }],
        line: 29
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/formatters.ts"],
      sourcesContent: ["export const formatDateTime = (iso?: string) => {\n  if (!iso) return '';\n  try {\n    return new Date(iso).toLocaleString('zh-CN');\n  } catch {\n    return iso || '';\n  }\n};\n\nexport const mapLabel = (map: Record<string, string>, value?: string) => {\n  if (!value) return '';\n  return map[value] || value;\n};\n"],
      names: ["formatDateTime", "mapLabel", "iso", "Date", "toLocaleString", "map", "value"],
      mappings: ";;;;;;;;;;;IAAaA,cAAc;eAAdA;;IASAC,QAAQ;eAARA;;;AATN,MAAMD,iBAAiB,CAACE;IAC7B,IAAI,CAACA,KAAK,OAAO;IACjB,IAAI;QACF,OAAO,IAAIC,KAAKD,KAAKE,cAAc,CAAC;IACtC,EAAE,OAAM;QACN,OAAOF,OAAO;IAChB;AACF;AAEO,MAAMD,WAAW,CAACI,KAA6BC;IACpD,IAAI,CAACA,OAAO,OAAO;IACnB,OAAOD,GAAG,CAACC,MAAM,IAAIA;AACvB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "689a908781aacd310d4956bd11a1cb286b738b24"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_trc4vr1a3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_trc4vr1a3();
cov_trc4vr1a3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_trc4vr1a3().f[0]++;
  cov_trc4vr1a3().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_trc4vr1a3().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_trc4vr1a3().s[3]++;
_export(exports, {
  formatDateTime: function () {
    /* istanbul ignore next */
    cov_trc4vr1a3().f[1]++;
    cov_trc4vr1a3().s[4]++;
    return formatDateTime;
  },
  mapLabel: function () {
    /* istanbul ignore next */
    cov_trc4vr1a3().f[2]++;
    cov_trc4vr1a3().s[5]++;
    return mapLabel;
  }
});
/* istanbul ignore next */
cov_trc4vr1a3().s[6]++;
const formatDateTime = iso => {
  /* istanbul ignore next */
  cov_trc4vr1a3().f[3]++;
  cov_trc4vr1a3().s[7]++;
  if (!iso) {
    /* istanbul ignore next */
    cov_trc4vr1a3().b[0][0]++;
    cov_trc4vr1a3().s[8]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_trc4vr1a3().b[0][1]++;
  }
  cov_trc4vr1a3().s[9]++;
  try {
    /* istanbul ignore next */
    cov_trc4vr1a3().s[10]++;
    return new Date(iso).toLocaleString('zh-CN');
  } catch {
    /* istanbul ignore next */
    cov_trc4vr1a3().s[11]++;
    return /* istanbul ignore next */(cov_trc4vr1a3().b[1][0]++, iso) ||
    /* istanbul ignore next */
    (cov_trc4vr1a3().b[1][1]++, '');
  }
};
/* istanbul ignore next */
cov_trc4vr1a3().s[12]++;
const mapLabel = (map, value) => {
  /* istanbul ignore next */
  cov_trc4vr1a3().f[4]++;
  cov_trc4vr1a3().s[13]++;
  if (!value) {
    /* istanbul ignore next */
    cov_trc4vr1a3().b[2][0]++;
    cov_trc4vr1a3().s[14]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_trc4vr1a3().b[2][1]++;
  }
  cov_trc4vr1a3().s[15]++;
  return /* istanbul ignore next */(cov_trc4vr1a3().b[3][0]++, map[value]) ||
  /* istanbul ignore next */
  (cov_trc4vr1a3().b[3][1]++, value);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmb3JtYXREYXRlVGltZSIsImNvdl90cmM0dnIxYTMiLCJmIiwicyIsIm1hcExhYmVsIiwiaXNvIiwiYiIsIkRhdGUiLCJ0b0xvY2FsZVN0cmluZyIsIm1hcCIsInZhbHVlIl0sInNvdXJjZXMiOlsiL1VzZXJzL2hlaWRzb2Z0L0Rvd25sb2Fkcy9yZXNlYXJjaC9pdHNtL2l0c20tcHJvdG90eXBlL3NyYy9hcHAvbGliL2Zvcm1hdHRlcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGZvcm1hdERhdGVUaW1lID0gKGlzbz86IHN0cmluZykgPT4ge1xuICBpZiAoIWlzbykgcmV0dXJuICcnO1xuICB0cnkge1xuICAgIHJldHVybiBuZXcgRGF0ZShpc28pLnRvTG9jYWxlU3RyaW5nKCd6aC1DTicpO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gaXNvIHx8ICcnO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgbWFwTGFiZWwgPSAobWFwOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+LCB2YWx1ZT86IHN0cmluZykgPT4ge1xuICBpZiAoIXZhbHVlKSByZXR1cm4gJyc7XG4gIHJldHVybiBtYXBbdmFsdWVdIHx8IHZhbHVlO1xufTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFBYUEsY0FBYyxXQUFBQSxDQUFBO0lBQUE7SUFBQUMsYUFBQSxHQUFBQyxDQUFBO0lBQUFELGFBQUEsR0FBQUUsQ0FBQTtXQUFkSCxjQUFBOztFQVNBSSxRQUFRLFdBQUFBLENBQUE7SUFBQTtJQUFBSCxhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO1dBQVJDLFFBQUE7Ozs7O0FBVE4sTUFBTUosY0FBQSxHQUFrQkssR0FBQTtFQUFBO0VBQUFKLGFBQUEsR0FBQUMsQ0FBQTtFQUFBRCxhQUFBLEdBQUFFLENBQUE7RUFDN0IsSUFBSSxDQUFDRSxHQUFBLEVBQUs7SUFBQTtJQUFBSixhQUFBLEdBQUFLLENBQUE7SUFBQUwsYUFBQSxHQUFBRSxDQUFBO0lBQUEsT0FBTztFQUFBO0VBQUE7RUFBQTtJQUFBRixhQUFBLEdBQUFLLENBQUE7RUFBQTtFQUFBTCxhQUFBLEdBQUFFLENBQUE7RUFDakIsSUFBSTtJQUFBO0lBQUFGLGFBQUEsR0FBQUUsQ0FBQTtJQUNGLE9BQU8sSUFBSUksSUFBQSxDQUFLRixHQUFBLEVBQUtHLGNBQWMsQ0FBQztFQUN0QyxFQUFFLE1BQU07SUFBQTtJQUFBUCxhQUFBLEdBQUFFLENBQUE7SUFDTixPQUFPLDJCQUFBRixhQUFBLEdBQUFLLENBQUEsVUFBQUQsR0FBQTtJQUFBO0lBQUEsQ0FBQUosYUFBQSxHQUFBSyxDQUFBLFVBQU87RUFDaEI7QUFDRjtBQUFBO0FBQUFMLGFBQUEsR0FBQUUsQ0FBQTtBQUVPLE1BQU1DLFFBQUEsR0FBV0EsQ0FBQ0ssR0FBQSxFQUE2QkMsS0FBQTtFQUFBO0VBQUFULGFBQUEsR0FBQUMsQ0FBQTtFQUFBRCxhQUFBLEdBQUFFLENBQUE7RUFDcEQsSUFBSSxDQUFDTyxLQUFBLEVBQU87SUFBQTtJQUFBVCxhQUFBLEdBQUFLLENBQUE7SUFBQUwsYUFBQSxHQUFBRSxDQUFBO0lBQUEsT0FBTztFQUFBO0VBQUE7RUFBQTtJQUFBRixhQUFBLEdBQUFLLENBQUE7RUFBQTtFQUFBTCxhQUFBLEdBQUFFLENBQUE7RUFDbkIsT0FBTywyQkFBQUYsYUFBQSxHQUFBSyxDQUFBLFVBQUFHLEdBQUcsQ0FBQ0MsS0FBQSxDQUFNO0VBQUE7RUFBQSxDQUFBVCxhQUFBLEdBQUFLLENBQUEsVUFBSUksS0FBQTtBQUN2QiIsImlnbm9yZUxpc3QiOltdfQ==