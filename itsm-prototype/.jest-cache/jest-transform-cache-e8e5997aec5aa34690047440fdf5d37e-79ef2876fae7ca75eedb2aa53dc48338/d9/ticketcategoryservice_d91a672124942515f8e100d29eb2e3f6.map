{"version":3,"names":["cov_19gzuhi7ob","actualCoverage","s","ticketCategoryService","TicketCategoryService","listCategories","params","b","f","queryParams","URLSearchParams","page","append","toString","page_size","parent_id","undefined","level","is_active","response","fetch","baseUrl","method","headers","getAuthToken","ok","Error","statusText","result","json","data","getCategoryTree","getCategory","id","createCategory","body","JSON","stringify","errorData","message","updateCategory","deleteCategory","moveCategory","window","localStorage","getItem","_apiconfig","API_BASE_URL"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/services/ticket-category-service.ts"],"sourcesContent":["import { API_BASE_URL } from '../api-config';\n\n// 工单分类接口\nexport interface TicketCategory {\n  id: number;\n  name: string;\n  description: string;\n  code: string;\n  parent_id: number;\n  level: number;\n  sort_order: number;\n  is_active: boolean;\n  tenant_id: number;\n  created_at: string;\n  updated_at: string;\n  children?: TicketCategory[];\n}\n\n// 创建分类请求\nexport interface CreateCategoryRequest {\n  name: string;\n  description: string;\n  code: string;\n  parent_id: number;\n  sort_order: number;\n  is_active: boolean;\n}\n\n// 更新分类请求\nexport interface UpdateCategoryRequest {\n  name?: string;\n  description?: string;\n  code?: string;\n  parent_id?: number;\n  sort_order?: number;\n  is_active?: boolean;\n}\n\n// 分类列表请求参数\nexport interface ListCategoriesParams {\n  page?: number;\n  page_size?: number;\n  parent_id?: number;\n  level?: number;\n  is_active?: boolean;\n}\n\n// 分类列表响应\nexport interface ListCategoriesResponse {\n  categories: TicketCategory[];\n  total: number;\n}\n\n// 分类树项目\nexport interface CategoryTreeItem {\n  id: number;\n  name: string;\n  description: string;\n  code: string;\n  level: number;\n  sort_order: number;\n  is_active: boolean;\n  children: CategoryTreeItem[];\n  created_at?: string;\n  updated_at?: string;\n  created_by?: string;\n  updated_by?: string;\n}\n\n// 移动分类请求\nexport interface MoveCategoryRequest {\n  new_parent_id?: number;\n  new_sort_order?: number;\n}\n\nclass TicketCategoryService {\n  private baseUrl = `${API_BASE_URL}/api/v1/ticket-categories`;\n\n  // 获取分类列表\n  async listCategories(params: ListCategoriesParams = {}): Promise<ListCategoriesResponse> {\n    const queryParams = new URLSearchParams();\n    \n    if (params.page) queryParams.append('page', params.page.toString());\n    if (params.page_size) queryParams.append('page_size', params.page_size.toString());\n    if (params.parent_id !== undefined) queryParams.append('parent_id', params.parent_id.toString());\n    if (params.level) queryParams.append('level', params.level.toString());\n    if (params.is_active !== undefined) queryParams.append('active', params.is_active.toString());\n\n    const response = await fetch(`${this.baseUrl}?${queryParams}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`获取分类列表失败: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // 获取分类树形结构\n  async getCategoryTree(): Promise<CategoryTreeItem[]> {\n    const response = await fetch(`${this.baseUrl}/tree`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`获取分类树失败: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // 获取分类详情\n  async getCategory(id: number): Promise<TicketCategory> {\n    const response = await fetch(`${this.baseUrl}/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`获取分类详情失败: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // 创建分类\n  async createCategory(data: CreateCategoryRequest): Promise<TicketCategory> {\n    const response = await fetch(this.baseUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || `创建分类失败: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // 更新分类\n  async updateCategory(id: number, data: UpdateCategoryRequest): Promise<TicketCategory> {\n    const response = await fetch(`${this.baseUrl}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || `更新分类失败: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // 删除分类\n  async deleteCategory(id: number): Promise<void> {\n    const response = await fetch(`${this.baseUrl}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || `删除分类失败: ${response.statusText}`);\n    }\n  }\n\n  // 移动分类位置\n  async moveCategory(id: number, data: MoveCategoryRequest): Promise<void> {\n    const response = await fetch(`${this.baseUrl}/${id}/move`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getAuthToken()}`,\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || `移动分类失败: ${response.statusText}`);\n    }\n  }\n\n  // 获取认证token\n  private getAuthToken(): string {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('auth_token') || '';\n    }\n    return '';\n  }\n}\n\nexport const ticketCategoryService = new TicketCategoryService();\n"],"mappingskFQ;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;+BA4IK;;;;;;WAAAC,qBAAA;;;;;kCA9NgB;AA2E7B,MAAMC,qBAAA;EAGJ;EACA,MAAMC,eAAeC,MAAA;EAAA;EAAA,CAAAN,cAAA,GAAAO,CAAA,UAA+B,CAAC,CAAC,GAAmC;IAAA;IAAAP,cAAA,GAAAQ,CAAA;IACvF,MAAMC,WAAA;IAAA;IAAA,CAAAT,cAAA,GAAAE,CAAA,OAAc,IAAIQ,eAAA;IAAA;IAAAV,cAAA,GAAAE,CAAA;IAExB,IAAII,MAAA,CAAOK,IAAI,EAAE;MAAA;MAAAX,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAE,CAAA;MAAAO,WAAA,CAAYG,MAAM,CAAC,QAAQN,MAAA,CAAOK,IAAI,CAACE,QAAQ;IAAA;IAAA;IAAA;MAAAb,cAAA,GAAAO,CAAA;IAAA;IAAAP,cAAA,GAAAE,CAAA;IAChE,IAAII,MAAA,CAAOQ,SAAS,EAAE;MAAA;MAAAd,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAE,CAAA;MAAAO,WAAA,CAAYG,MAAM,CAAC,aAAaN,MAAA,CAAOQ,SAAS,CAACD,QAAQ;IAAA;IAAA;IAAA;MAAAb,cAAA,GAAAO,CAAA;IAAA;IAAAP,cAAA,GAAAE,CAAA;IAC/E,IAAII,MAAA,CAAOS,SAAS,KAAKC,SAAA,EAAW;MAAA;MAAAhB,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAE,CAAA;MAAAO,WAAA,CAAYG,MAAM,CAAC,aAAaN,MAAA,CAAOS,SAAS,CAACF,QAAQ;IAAA;IAAA;IAAA;MAAAb,cAAA,GAAAO,CAAA;IAAA;IAAAP,cAAA,GAAAE,CAAA;IAC7F,IAAII,MAAA,CAAOW,KAAK,EAAE;MAAA;MAAAjB,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAE,CAAA;MAAAO,WAAA,CAAYG,MAAM,CAAC,SAASN,MAAA,CAAOW,KAAK,CAACJ,QAAQ;IAAA;IAAA;IAAA;MAAAb,cAAA,GAAAO,CAAA;IAAA;IAAAP,cAAA,GAAAE,CAAA;IACnE,IAAII,MAAA,CAAOY,SAAS,KAAKF,SAAA,EAAW;MAAA;MAAAhB,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAE,CAAA;MAAAO,WAAA,CAAYG,MAAM,CAAC,UAAUN,MAAA,CAAOY,SAAS,CAACL,QAAQ;IAAA;IAAA;IAAA;MAAAb,cAAA,GAAAO,CAAA;IAAA;IAE1F,MAAMY,QAAA;IAAA;IAAA,CAAAnB,cAAA,GAAAE,CAAA,QAAW,MAAMkB,KAAA,CAAM,GAAG,IAAI,CAACC,OAAO,IAAIZ,WAAA,EAAa,EAAE;MAC7Da,MAAA,EAAQ;MACRC,OAAA,EAAS;QACP,gBAAgB;QAChB,iBAAiB,UAAU,IAAI,CAACC,YAAY;MAC9C;IACF;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IAEA,IAAI,CAACiB,QAAA,CAASM,EAAE,EAAE;MAAA;MAAAzB,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAE,CAAA;MAChB,MAAM,IAAIwB,KAAA,CAAM,aAAaP,QAAA,CAASQ,UAAU,EAAE;IACpD;IAAA;IAAA;MAAA3B,cAAA,GAAAO,CAAA;IAAA;IAEA,MAAMqB,MAAA;IAAA;IAAA,CAAA5B,cAAA,GAAAE,CAAA,QAAS,MAAMiB,QAAA,CAASU,IAAI;IAAA;IAAA7B,cAAA,GAAAE,CAAA;IAClC,OAAO0B,MAAA,CAAOE,IAAI;EACpB;EAEA;EACA,MAAMC,gBAAA,EAA+C;IAAA;IAAA/B,cAAA,GAAAQ,CAAA;IACnD,MAAMW,QAAA;IAAA;IAAA,CAAAnB,cAAA,GAAAE,CAAA,QAAW,MAAMkB,KAAA,CAAM,GAAG,IAAI,CAACC,OAAO,OAAO,EAAE;MACnDC,MAAA,EAAQ;MACRC,OAAA,EAAS;QACP,gBAAgB;QAChB,iBAAiB,UAAU,IAAI,CAACC,YAAY;MAC9C;IACF;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IAEA,IAAI,CAACiB,QAAA,CAASM,EAAE,EAAE;MAAA;MAAAzB,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAE,CAAA;MAChB,MAAM,IAAIwB,KAAA,CAAM,YAAYP,QAAA,CAASQ,UAAU,EAAE;IACnD;IAAA;IAAA;MAAA3B,cAAA,GAAAO,CAAA;IAAA;IAEA,MAAMqB,MAAA;IAAA;IAAA,CAAA5B,cAAA,GAAAE,CAAA,QAAS,MAAMiB,QAAA,CAASU,IAAI;IAAA;IAAA7B,cAAA,GAAAE,CAAA;IAClC,OAAO0B,MAAA,CAAOE,IAAI;EACpB;EAEA;EACA,MAAME,YAAYC,EAAU,EAA2B;IAAA;IAAAjC,cAAA,GAAAQ,CAAA;IACrD,MAAMW,QAAA;IAAA;IAAA,CAAAnB,cAAA,GAAAE,CAAA,QAAW,MAAMkB,KAAA,CAAM,GAAG,IAAI,CAACC,OAAO,IAAIY,EAAA,EAAI,EAAE;MACpDX,MAAA,EAAQ;MACRC,OAAA,EAAS;QACP,gBAAgB;QAChB,iBAAiB,UAAU,IAAI,CAACC,YAAY;MAC9C;IACF;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IAEA,IAAI,CAACiB,QAAA,CAASM,EAAE,EAAE;MAAA;MAAAzB,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAE,CAAA;MAChB,MAAM,IAAIwB,KAAA,CAAM,aAAaP,QAAA,CAASQ,UAAU,EAAE;IACpD;IAAA;IAAA;MAAA3B,cAAA,GAAAO,CAAA;IAAA;IAEA,MAAMqB,MAAA;IAAA;IAAA,CAAA5B,cAAA,GAAAE,CAAA,QAAS,MAAMiB,QAAA,CAASU,IAAI;IAAA;IAAA7B,cAAA,GAAAE,CAAA;IAClC,OAAO0B,MAAA,CAAOE,IAAI;EACpB;EAEA;EACA,MAAMI,eAAeJ,IAA2B,EAA2B;IAAA;IAAA9B,cAAA,GAAAQ,CAAA;IACzE,MAAMW,QAAA;IAAA;IAAA,CAAAnB,cAAA,GAAAE,CAAA,QAAW,MAAMkB,KAAA,CAAM,IAAI,CAACC,OAAO,EAAE;MACzCC,MAAA,EAAQ;MACRC,OAAA,EAAS;QACP,gBAAgB;QAChB,iBAAiB,UAAU,IAAI,CAACC,YAAY;MAC9C;MACAW,IAAA,EAAMC,IAAA,CAAKC,SAAS,CAACP,IAAA;IACvB;IAAA;IAAA9B,cAAA,GAAAE,CAAA;IAEA,IAAI,CAACiB,QAAA,CAASM,EAAE,EAAE;MAAA;MAAAzB,cAAA,GAAAO,CAAA;MAChB,MAAM+B,SAAA;MAAA;MAAA,CAAAtC,cAAA,GAAAE,CAAA,QAAY,MAAMiB,QAAA,CAASU,IAAI;MAAA;MAAA7B,cAAA,GAAAE,CAAA;MACrC,MAAM,IAAIwB,KAAA;MAAM;MAAA,CAAA1B,cAAA,GAAAO,CAAA,WAAA+B,SAAA,CAAUC,OAAO;MAAA;MAAA,CAAAvC,cAAA,GAAAO,CAAA,WAAI,WAAWY,QAAA,CAASQ,UAAU,EAAE;IACvE;IAAA;IAAA;MAAA3B,cAAA,GAAAO,CAAA;IAAA;IAEA,MAAMqB,MAAA;IAAA;IAAA,CAAA5B,cAAA,GAAAE,CAAA,QAAS,MAAMiB,QAAA,CAASU,IAAI;IAAA;IAAA7B,cAAA,GAAAE,CAAA;IAClC,OAAO0B,MAAA,CAAOE,IAAI;EACpB;EAEA;EACA,MAAMU,eAAeP,EAAU,EAAEH,IAA2B,EAA2B;IAAA;IAAA9B,cAAA,GAAAQ,CAAA;IACrF,MAAMW,QAAA;IAAA;IAAA,CAAAnB,cAAA,GAAAE,CAAA,QAAW,MAAMkB,KAAA,CAAM,GAAG,IAAI,CAACC,OAAO,IAAIY,EAAA,EAAI,EAAE;MACpDX,MAAA,EAAQ;MACRC,OAAA,EAAS;QACP,gBAAgB;QAChB,iBAAiB,UAAU,IAAI,CAACC,YAAY;MAC9C;MACAW,IAAA,EAAMC,IAAA,CAAKC,SAAS,CAACP,IAAA;IACvB;IAAA;IAAA9B,cAAA,GAAAE,CAAA;IAEA,IAAI,CAACiB,QAAA,CAASM,EAAE,EAAE;MAAA;MAAAzB,cAAA,GAAAO,CAAA;MAChB,MAAM+B,SAAA;MAAA;MAAA,CAAAtC,cAAA,GAAAE,CAAA,QAAY,MAAMiB,QAAA,CAASU,IAAI;MAAA;MAAA7B,cAAA,GAAAE,CAAA;MACrC,MAAM,IAAIwB,KAAA;MAAM;MAAA,CAAA1B,cAAA,GAAAO,CAAA,WAAA+B,SAAA,CAAUC,OAAO;MAAA;MAAA,CAAAvC,cAAA,GAAAO,CAAA,WAAI,WAAWY,QAAA,CAASQ,UAAU,EAAE;IACvE;IAAA;IAAA;MAAA3B,cAAA,GAAAO,CAAA;IAAA;IAEA,MAAMqB,MAAA;IAAA;IAAA,CAAA5B,cAAA,GAAAE,CAAA,QAAS,MAAMiB,QAAA,CAASU,IAAI;IAAA;IAAA7B,cAAA,GAAAE,CAAA;IAClC,OAAO0B,MAAA,CAAOE,IAAI;EACpB;EAEA;EACA,MAAMW,eAAeR,EAAU,EAAiB;IAAA;IAAAjC,cAAA,GAAAQ,CAAA;IAC9C,MAAMW,QAAA;IAAA;IAAA,CAAAnB,cAAA,GAAAE,CAAA,QAAW,MAAMkB,KAAA,CAAM,GAAG,IAAI,CAACC,OAAO,IAAIY,EAAA,EAAI,EAAE;MACpDX,MAAA,EAAQ;MACRC,OAAA,EAAS;QACP,gBAAgB;QAChB,iBAAiB,UAAU,IAAI,CAACC,YAAY;MAC9C;IACF;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IAEA,IAAI,CAACiB,QAAA,CAASM,EAAE,EAAE;MAAA;MAAAzB,cAAA,GAAAO,CAAA;MAChB,MAAM+B,SAAA;MAAA;MAAA,CAAAtC,cAAA,GAAAE,CAAA,QAAY,MAAMiB,QAAA,CAASU,IAAI;MAAA;MAAA7B,cAAA,GAAAE,CAAA;MACrC,MAAM,IAAIwB,KAAA;MAAM;MAAA,CAAA1B,cAAA,GAAAO,CAAA,WAAA+B,SAAA,CAAUC,OAAO;MAAA;MAAA,CAAAvC,cAAA,GAAAO,CAAA,WAAI,WAAWY,QAAA,CAASQ,UAAU,EAAE;IACvE;IAAA;IAAA;MAAA3B,cAAA,GAAAO,CAAA;IAAA;EACF;EAEA;EACA,MAAMmC,aAAaT,EAAU,EAAEH,IAAyB,EAAiB;IAAA;IAAA9B,cAAA,GAAAQ,CAAA;IACvE,MAAMW,QAAA;IAAA;IAAA,CAAAnB,cAAA,GAAAE,CAAA,QAAW,MAAMkB,KAAA,CAAM,GAAG,IAAI,CAACC,OAAO,IAAIY,EAAA,OAAS,EAAE;MACzDX,MAAA,EAAQ;MACRC,OAAA,EAAS;QACP,gBAAgB;QAChB,iBAAiB,UAAU,IAAI,CAACC,YAAY;MAC9C;MACAW,IAAA,EAAMC,IAAA,CAAKC,SAAS,CAACP,IAAA;IACvB;IAAA;IAAA9B,cAAA,GAAAE,CAAA;IAEA,IAAI,CAACiB,QAAA,CAASM,EAAE,EAAE;MAAA;MAAAzB,cAAA,GAAAO,CAAA;MAChB,MAAM+B,SAAA;MAAA;MAAA,CAAAtC,cAAA,GAAAE,CAAA,QAAY,MAAMiB,QAAA,CAASU,IAAI;MAAA;MAAA7B,cAAA,GAAAE,CAAA;MACrC,MAAM,IAAIwB,KAAA;MAAM;MAAA,CAAA1B,cAAA,GAAAO,CAAA,WAAA+B,SAAA,CAAUC,OAAO;MAAA;MAAA,CAAAvC,cAAA,GAAAO,CAAA,WAAI,WAAWY,QAAA,CAASQ,UAAU,EAAE;IACvE;IAAA;IAAA;MAAA3B,cAAA,GAAAO,CAAA;IAAA;EACF;EAEA;EACQiB,aAAA,EAAuB;IAAA;IAAAxB,cAAA,GAAAQ,CAAA;IAAAR,cAAA,GAAAE,CAAA;IAC7B,IAAI,OAAOyC,MAAA,KAAW,aAAa;MAAA;MAAA3C,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAE,CAAA;MACjC,OAAO,2BAAAF,cAAA,GAAAO,CAAA,WAAAqC,YAAA,CAAaC,OAAO,CAAC;MAAA;MAAA,CAAA7C,cAAA,GAAAO,CAAA,WAAiB;IAC/C;IAAA;IAAA;MAAAP,cAAA,GAAAO,CAAA;IAAA;IAAAP,cAAA,GAAAE,CAAA;IACA,OAAO;EACT;;;;;SA/IQmB,OAAA,GAAU,GAAGyB,UAAA,CAAAC,YAAY,2BAA2B;;AAgJ9D;AAEO,MAAM5C,qBAAA;AAAA;AAAA,CAAAH,cAAA,GAAAE,CAAA,QAAwB,IAAIE,qBAAA","ignoreList":[]}