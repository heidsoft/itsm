7da31b831568a2873ad4e6c3817f5b29
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DashboardAPI", {
    enumerable: true,
    get: function() {
        return DashboardAPI;
    }
});
const _httpclient = require("../../app/lib/http-client");
class DashboardAPI {
    /**
   * 获取仪表盘配置
   * @param userId 用户ID
   * @returns 仪表盘配置
   */ static async getDashboardConfig(userId) {
        const params = userId ? {
            user_id: userId
        } : {};
        return _httpclient.httpClient.get('/api/v1/dashboard/config', params);
    }
    /**
   * 保存仪表盘配置
   * @param config 仪表盘配置
   * @returns 保存结果
   */ static async saveDashboardConfig(config) {
        return _httpclient.httpClient.post('/api/v1/dashboard/config', config);
    }
    /**
   * 获取仪表盘布局
   * @param userId 用户ID
   * @returns 仪表盘布局
   */ static async getDashboardLayout(userId) {
        const params = userId ? {
            user_id: userId
        } : {};
        return _httpclient.httpClient.get('/api/v1/dashboard/layout', params);
    }
    /**
   * 保存仪表盘布局
   * @param layout 仪表盘布局
   * @returns 保存结果
   */ static async saveDashboardLayout(layout) {
        return _httpclient.httpClient.post('/api/v1/dashboard/layout', layout);
    }
    /**
   * 获取工单统计数据
   * @param filters 过滤条件
   * @returns 工单统计数据
   */ static async getTicketStats(filters) {
        return _httpclient.httpClient.get('/api/v1/dashboard/stats/tickets', filters);
    }
    /**
   * 获取用户统计数据
   * @param filters 过滤条件
   * @returns 用户统计数据
   */ static async getUserStats(filters) {
        return _httpclient.httpClient.get('/api/v1/dashboard/stats/users', filters);
    }
    /**
   * 获取系统统计数据
   * @param filters 过滤条件
   * @returns 系统统计数据
   */ static async getSystemStats(filters) {
        return _httpclient.httpClient.get('/api/v1/dashboard/stats/system', filters);
    }
    /**
   * 获取图表数据
   * @param chartType 图表类型
   * @param filters 过滤条件
   * @returns 图表数据
   */ static async getChartData(chartType, filters) {
        return _httpclient.httpClient.get(`/api/v1/dashboard/charts/${chartType}`, filters);
    }
    /**
   * 获取实时数据
   * @param dataType 数据类型
   * @returns 实时数据
   */ static async getRealtimeData(dataType) {
        return _httpclient.httpClient.get(`/api/v1/dashboard/realtime/${dataType}`);
    }
    /**
   * 获取部件数据
   * @param widgetId 部件ID
   * @param filters 过滤条件
   * @returns 部件数据
   */ static async getWidgetData(widgetId, filters) {
        return _httpclient.httpClient.get(`/api/v1/dashboard/widgets/${widgetId}`, filters);
    }
    /**
   * 刷新部件数据
   * @param widgetId 部件ID
   * @param filters 过滤条件
   * @returns 部件数据
   */ static async refreshWidgetData(widgetId, filters) {
        return _httpclient.httpClient.post(`/api/v1/dashboard/widgets/${widgetId}/refresh`, filters);
    }
    /**
   * 获取可用部件列表
   * @returns 部件列表
   */ static async getAvailableWidgets() {
        return _httpclient.httpClient.get('/api/v1/dashboard/widgets/available');
    }
    /**
   * 添加部件到仪表盘
   * @param widgetConfig 部件配置
   * @returns 添加结果
   */ static async addWidget(widgetConfig) {
        return _httpclient.httpClient.post('/api/v1/dashboard/widgets', widgetConfig);
    }
    /**
   * 更新部件配置
   * @param widgetId 部件ID
   * @param config 部件配置
   * @returns 更新结果
   */ static async updateWidget(widgetId, config) {
        return _httpclient.httpClient.put(`/api/v1/dashboard/widgets/${widgetId}`, config);
    }
    /**
   * 删除部件
   * @param widgetId 部件ID
   * @returns 删除结果
   */ static async removeWidget(widgetId) {
        return _httpclient.httpClient.delete(`/api/v1/dashboard/widgets/${widgetId}`);
    }
    /**
   * 生成报告
   * @param reportType 报告类型
   * @param filters 过滤条件
   * @returns 报告数据
   */ static async generateReport(reportType, filters) {
        return _httpclient.httpClient.post(`/api/v1/dashboard/reports/${reportType}`, filters);
    }
    /**
   * 获取报告列表
   * @param page 页码
   * @param pageSize 页面大小
   * @returns 报告列表
   */ static async getReports(page = 1, pageSize = 20) {
        return _httpclient.httpClient.get('/api/v1/dashboard/reports', {
            page,
            page_size: pageSize
        });
    }
    /**
   * 下载报告
   * @param reportId 报告ID
   * @returns 报告文件Blob
   */ static async downloadReport(reportId) {
        const response = await _httpclient.httpClient.get(`/api/v1/dashboard/reports/${reportId}/download`);
        return new Blob([
            response
        ], {
            type: 'application/octet-stream'
        });
    }
    /**
   * 导出仪表盘数据
   * @param params 导出参数
   * @returns 导出结果
   */ static async exportDashboard(params) {
        return _httpclient.httpClient.post('/api/v1/dashboard/export', params);
    }
    /**
   * 获取仪表盘模板列表
   * @returns 模板列表
   */ static async getTemplates() {
        return _httpclient.httpClient.get('/api/v1/dashboard/templates');
    }
    /**
   * 应用仪表盘模板
   * @param templateId 模板ID
   * @returns 应用结果
   */ static async applyTemplate(templateId) {
        return _httpclient.httpClient.post(`/api/v1/dashboard/templates/${templateId}/apply`);
    }
    /**
   * 保存为模板
   * @param name 模板名称
   * @param description 模板描述
   * @param config 仪表盘配置
   * @returns 保存结果
   */ static async saveAsTemplate(name, description, config) {
        return _httpclient.httpClient.post('/api/v1/dashboard/templates', {
            name,
            description,
            config
        });
    }
    /**
   * 获取仪表盘性能指标
   * @returns 性能指标
   */ static async getPerformanceMetrics() {
        return _httpclient.httpClient.get('/api/v1/dashboard/metrics/performance');
    }
    /**
   * 获取仪表盘使用统计
   * @param dateRange 日期范围
   * @returns 使用统计
   */ static async getUsageStats(dateRange) {
        return _httpclient.httpClient.get('/api/v1/dashboard/metrics/usage', dateRange);
    }
}

//# sourceMappingURL=data:application/json;base64,