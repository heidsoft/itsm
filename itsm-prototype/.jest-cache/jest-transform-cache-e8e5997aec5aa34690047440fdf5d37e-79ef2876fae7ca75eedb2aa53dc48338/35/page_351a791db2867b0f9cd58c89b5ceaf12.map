{"version":3,"names":["_default","Title","Text","cov_1391ayj0lh","s","_antd","Typography","Option","Select","mockSLADefinitions","id","name","description","serviceType","priority","responseTime","resolutionTime","availability","businessHours","escalationRules","applicableServices","status","createdAt","updatedAt","createdBy","PRIORITY_CONFIG","P1","label","color","P2","P3","P4","STATUS_CONFIG","active","icon","_jsxruntime","jsx","_lucidereact","CheckCircle","className","inactive","Clock","draft","Edit","SLADefinitionManagement","f","slaDefinitions","setSlaDefinitions","_react","useState","searchTerm","setSearchTerm","priorityFilter","setPriorityFilter","statusFilter","setStatusFilter","serviceTypeFilter","setServiceTypeFilter","showCreateModal","setShowCreateModal","selectedSLA","setSelectedSLA","showDetailModal","setShowDetailModal","loading","setLoading","form","Form","useForm","stats","total","length","filter","sla","avgAvailability","reduce","sum","parseFloat","toFixed","serviceTypes","Array","from","Set","map","filteredSLAs","matchesSearch","b","toLowerCase","includes","matchesPriority","matchesStatus","matchesServiceType","handleStatusToggle","slaId","prev","newStatus","message","success","handleDelete","handleViewDetail","handleSave","values","validateFields","Promise","resolve","setTimeout","Date","toLocaleDateString","newSLA","String","padStart","resetFields","error","columns","title","dataIndex","key","render","_","record","jsxs","strong","Tag","type","Timer","Target","TrendingUp","services","slice","service","size","align","Space","Tooltip","Button","Eye","onClick","setFieldsValue","Popconfirm","onConfirm","okText","cancelText","okType","danger","Trash2","level","Row","gutter","Col","xs","sm","lg","Card","Statistic","value","prefix","valueStyle","suffix","md","Input","placeholder","Search","onChange","e","target","allowClear","style","width","Object","entries","config","Plus","Table","dataSource","rowKey","pagination","pageSize","showSizeChanger","showQuickJumper","showTotal","Modal","open","onOk","onCancel","confirmLoading","layout","span","Item","rules","required","showSearch","mode","TextArea","rows","initialValue","footer","List","renderItem","rule","index","Badge","count"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/admin/sla-definitions/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Plus, CheckCircle, Clock, Search, Trash2, Edit, Eye, TrendingUp, Target, Tag } from 'lucide-react';\n\nimport React, { useState } from \"react\";\nimport {\n  Card,\n  Table,\n  Button,\n  Input,\n  Select,\n  Space,\n  Typography,\n  Modal,\n  Form,\n  Row,\n  Col,\n  Statistic,\n  Tooltip,\n  Popconfirm,\n  message,\n  Progress,\n  List,\n  Badge,\n} from \"antd\";\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\n// SLA定义数据类型\ninterface SLADefinition {\n  id: string;\n  name: string;\n  description: string;\n  serviceType: string;\n  priority: \"P1\" | \"P2\" | \"P3\" | \"P4\";\n  responseTime: string;\n  resolutionTime: string;\n  availability: string;\n  businessHours: string;\n  escalationRules: string[];\n  applicableServices: string[];\n  status: \"active\" | \"inactive\" | \"draft\";\n  createdAt: string;\n  updatedAt: string;\n  createdBy: string;\n}\n\n// 模拟SLA定义数据\nconst mockSLADefinitions: SLADefinition[] = [\n  {\n    id: \"SLA-DEF-001\",\n    name: \"关键业务系统SLA\",\n    description: \"针对关键业务系统的服务级别协议，包括ERP、CRM等核心业务系统\",\n    serviceType: \"关键业务系统\",\n    priority: \"P1\",\n    responseTime: \"15分钟\",\n    resolutionTime: \"4小时\",\n    availability: \"99.9%\",\n    businessHours: \"7x24\",\n    escalationRules: [\n      \"15分钟升级至高级工程师\",\n      \"1小时升级至技术经理\",\n      \"4小时升级至CTO\",\n    ],\n    applicableServices: [\"ERP系统\", \"CRM系统\", \"财务系统\"],\n    status: \"active\",\n    createdAt: \"2024-01-15\",\n    updatedAt: \"2024-06-01\",\n    createdBy: \"张三\",\n  },\n  {\n    id: \"SLA-DEF-002\",\n    name: \"一般业务系统SLA\",\n    description: \"针对一般业务系统的服务级别协议，包括OA、HR等支撑系统\",\n    serviceType: \"一般业务系统\",\n    priority: \"P2\",\n    responseTime: \"30分钟\",\n    resolutionTime: \"8小时\",\n    availability: \"99.5%\",\n    businessHours: \"工作时间\",\n    escalationRules: [\"30分钟升级至高级工程师\", \"2小时升级至技术经理\"],\n    applicableServices: [\"OA系统\", \"HR系统\", \"采购系统\"],\n    status: \"active\",\n    createdAt: \"2024-01-20\",\n    updatedAt: \"2024-05-15\",\n    createdBy: \"李四\",\n  },\n  {\n    id: \"SLA-DEF-003\",\n    name: \"基础设施SLA\",\n    description: \"针对基础设施服务的服务级别协议，包括网络、服务器等\",\n    serviceType: \"基础设施\",\n    priority: \"P1\",\n    responseTime: \"10分钟\",\n    resolutionTime: \"2小时\",\n    availability: \"99.95%\",\n    businessHours: \"7x24\",\n    escalationRules: [\"10分钟升级至网络工程师\", \"30分钟升级至基础设施经理\"],\n    applicableServices: [\"网络服务\", \"服务器\", \"存储系统\"],\n    status: \"active\",\n    createdAt: \"2024-02-01\",\n    updatedAt: \"2024-06-10\",\n    createdBy: \"王五\",\n  },\n  {\n    id: \"SLA-DEF-004\",\n    name: \"开发测试环境SLA\",\n    description: \"针对开发测试环境的服务级别协议\",\n    serviceType: \"开发测试\",\n    priority: \"P3\",\n    responseTime: \"2小时\",\n    resolutionTime: \"1工作日\",\n    availability: \"95%\",\n    businessHours: \"工作时间\",\n    escalationRules: [\"4小时升级至开发经理\"],\n    applicableServices: [\"开发环境\", \"测试环境\", \"CI/CD平台\"],\n    status: \"draft\",\n    createdAt: \"2024-06-01\",\n    updatedAt: \"2024-06-15\",\n    createdBy: \"赵六\",\n  },\n];\n\n// 优先级配置\nconst PRIORITY_CONFIG = {\n  P1: { label: \"P1 - 紧急\", color: \"red\" },\n  P2: { label: \"P2 - 高\", color: \"orange\" },\n  P3: { label: \"P3 - 中\", color: \"yellow\" },\n  P4: { label: \"P4 - 低\", color: \"green\" },\n};\n\n// 状态配置\nconst STATUS_CONFIG = {\n  active: {\n    label: \"已启用\",\n    color: \"success\",\n    icon: <CheckCircle className=\"w-3 h-3\" />,\n  },\n  inactive: {\n    label: \"已停用\",\n    color: \"default\",\n    icon: <Clock className=\"w-3 h-3\" />,\n  },\n  draft: {\n    label: \"草稿\",\n    color: \"processing\",\n    icon: <Edit className=\"w-3 h-3\" />,\n  },\n};\n\nconst SLADefinitionManagement = () => {\n  const [slaDefinitions, setSlaDefinitions] = useState(mockSLADefinitions);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [priorityFilter, setPriorityFilter] = useState(\"all\");\n  const [statusFilter, setStatusFilter] = useState(\"all\");\n  const [serviceTypeFilter, setServiceTypeFilter] = useState(\"all\");\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [selectedSLA, setSelectedSLA] = useState<SLADefinition | null>(null);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  // 统计信息\n  const stats = {\n    total: slaDefinitions.length,\n    active: slaDefinitions.filter((sla) => sla.status === \"active\").length,\n    draft: slaDefinitions.filter((sla) => sla.status === \"draft\").length,\n    avgAvailability: (\n      slaDefinitions.reduce(\n        (sum, sla) => sum + parseFloat(sla.availability),\n        0\n      ) / slaDefinitions.length\n    ).toFixed(1),\n  };\n\n  // 获取所有服务类型\n  const serviceTypes = Array.from(\n    new Set(slaDefinitions.map((sla) => sla.serviceType))\n  );\n\n  // 过滤SLA定义\n  const filteredSLAs = slaDefinitions.filter((sla) => {\n    const matchesSearch =\n      sla.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      sla.description.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesPriority =\n      priorityFilter === \"all\" || sla.priority === priorityFilter;\n    const matchesStatus = statusFilter === \"all\" || sla.status === statusFilter;\n    const matchesServiceType =\n      serviceTypeFilter === \"all\" || sla.serviceType === serviceTypeFilter;\n\n    return (\n      matchesSearch && matchesPriority && matchesStatus && matchesServiceType\n    );\n  });\n\n  // 处理状态切换\n  const handleStatusToggle = (slaId: string) => {\n    setSlaDefinitions((prev) =>\n      prev.map((sla) => {\n        if (sla.id === slaId) {\n          const newStatus = sla.status === \"active\" ? \"inactive\" : \"active\";\n          return { ...sla, status: newStatus };\n        }\n        return sla;\n      })\n    );\n    message.success(\"SLA状态已更新\");\n  };\n\n  // 处理删除\n  const handleDelete = (slaId: string) => {\n    setSlaDefinitions((prev) => prev.filter((sla) => sla.id !== slaId));\n    message.success(\"SLA定义已删除\");\n  };\n\n  // 查看详情\n  const handleViewDetail = (sla: SLADefinition) => {\n    setSelectedSLA(sla);\n    setShowDetailModal(true);\n  };\n\n  // 保存SLA定义\n  const handleSave = async () => {\n    try {\n      const values = await form.validateFields();\n      setLoading(true);\n\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      if (selectedSLA) {\n        // 编辑\n        setSlaDefinitions((prev) =>\n          prev.map((sla) =>\n            sla.id === selectedSLA.id\n              ? {\n                  ...sla,\n                  ...values,\n                  updatedAt: new Date().toLocaleDateString(),\n                }\n              : sla\n          )\n        );\n        message.success(\"SLA定义更新成功\");\n      } else {\n        // 新建\n        const newSLA: SLADefinition = {\n          id: `SLA-DEF-${String(slaDefinitions.length + 1).padStart(3, \"0\")}`,\n          ...values,\n          status: \"draft\",\n          createdBy: \"当前用户\",\n          createdAt: new Date().toLocaleDateString(),\n          updatedAt: new Date().toLocaleDateString(),\n          escalationRules: [],\n          applicableServices: [],\n        };\n        setSlaDefinitions((prev) => [newSLA, ...prev]);\n        message.success(\"SLA定义创建成功\");\n      }\n\n      setShowCreateModal(false);\n      setSelectedSLA(null);\n      form.resetFields();\n    } catch (error) {\n      message.error(\"保存失败，请检查必填项\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 表格列定义\n  const columns = [\n    {\n      title: \"SLA定义\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: (_: any, record: SLADefinition) => (\n        <div>\n          <div className=\"flex items-center gap-2\">\n            <Text strong>{record.name}</Text>\n            <Tag color={PRIORITY_CONFIG[record.priority]?.color}>\n              {PRIORITY_CONFIG[record.priority]?.label}\n            </Tag>\n          </div>\n          <Text type=\"secondary\" className=\"text-sm\">\n            {record.description}\n          </Text>\n          <div className=\"flex items-center gap-4 mt-1\">\n            <span className=\"text-xs text-gray-500\">ID: {record.id}</span>\n            <span className=\"text-xs text-gray-500\">\n              类型: {record.serviceType}\n            </span>\n          </div>\n        </div>\n      ),\n    },\n    {\n      title: \"服务指标\",\n      key: \"metrics\",\n      render: (_: any, record: SLADefinition) => (\n        <div className=\"space-y-1\">\n          <div className=\"flex items-center gap-2\">\n            <Timer className=\"w-3 h-3 text-blue-500\" />\n            <span className=\"text-xs\">响应: {record.responseTime}</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Target className=\"w-3 h-3 text-green-500\" />\n            <span className=\"text-xs\">解决: {record.resolutionTime}</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <TrendingUp className=\"w-3 h-3 text-purple-500\" />\n            <span className=\"text-xs\">可用性: {record.availability}</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Clock className=\"w-3 h-3 text-orange-500\" />\n            <span className=\"text-xs\">{record.businessHours}</span>\n          </div>\n        </div>\n      ),\n    },\n    {\n      title: \"适用服务\",\n      dataIndex: \"applicableServices\",\n      key: \"applicableServices\",\n      render: (services: string[]) => (\n        <div className=\"space-y-1\">\n          {services.slice(0, 2).map((service) => (\n            <Tag key={service} size=\"small\">\n              {service}\n            </Tag>\n          ))}\n          {services.length > 2 && (\n            <Text type=\"secondary\" className=\"text-xs\">\n              +{services.length - 2} 更多\n            </Text>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      key: \"status\",\n      align: \"center\" as const,\n      render: (status: string) => (\n        <Tag\n          color={STATUS_CONFIG[status as keyof typeof STATUS_CONFIG]?.color}\n          icon={STATUS_CONFIG[status as keyof typeof STATUS_CONFIG]?.icon}\n        >\n          {STATUS_CONFIG[status as keyof typeof STATUS_CONFIG]?.label}\n        </Tag>\n      ),\n    },\n    {\n      title: \"更新信息\",\n      key: \"updateInfo\",\n      align: \"center\" as const,\n      render: (_: any, record: SLADefinition) => (\n        <div className=\"text-center\">\n          <div className=\"text-sm\">{record.updatedAt}</div>\n          <div className=\"text-xs text-gray-500\">由 {record.createdBy}</div>\n        </div>\n      ),\n    },\n    {\n      title: \"操作\",\n      key: \"actions\",\n      align: \"center\" as const,\n      render: (_: any, record: SLADefinition) => (\n        <Space>\n          <Tooltip title=\"查看详情\">\n            <Button\n              type=\"text\"\n              icon={<Eye className=\"w-4 h-4\" />}\n              onClick={() => handleViewDetail(record)}\n            />\n          </Tooltip>\n          <Tooltip title=\"编辑\">\n            <Button\n              type=\"text\"\n              icon={<Edit className=\"w-4 h-4\" />}\n              onClick={() => {\n                setSelectedSLA(record);\n                form.setFieldsValue(record);\n                setShowCreateModal(true);\n              }}\n            />\n          </Tooltip>\n          <Tooltip title={record.status === \"active\" ? \"停用\" : \"启用\"}>\n            <Button\n              type=\"text\"\n              icon={\n                record.status === \"active\" ? (\n                  <Clock className=\"w-4 h-4\" />\n                ) : (\n                  <CheckCircle className=\"w-4 h-4\" />\n                )\n              }\n              onClick={() => handleStatusToggle(record.id)}\n            />\n          </Tooltip>\n          <Popconfirm\n            title=\"确定要删除这个SLA定义吗？\"\n            description=\"删除后无法恢复，相关的服务将失去SLA保障。\"\n            onConfirm={() => handleDelete(record.id)}\n            okText=\"确定删除\"\n            cancelText=\"取消\"\n            okType=\"danger\"\n          >\n            <Button type=\"text\" danger icon={<Trash2 className=\"w-4 h-4\" />} />\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"p-6\">\n      {/* 页面标题 */}\n      <div className=\"mb-6\">\n        <Title level={2} className=\"!mb-2\">\n          <Target className=\"inline-block w-6 h-6 mr-2\" />\n          SLA定义管理\n        </Title>\n        <Text type=\"secondary\">定义和管理服务级别协议，确保服务质量标准</Text>\n      </div>\n\n      {/* 统计卡片 */}\n      <Row gutter={[16, 16]} className=\"mb-6\">\n        <Col xs={24} sm={12} lg={6}>\n          <Card className=\"enterprise-card\">\n            <Statistic\n              title=\"SLA定义总数\"\n              value={stats.total}\n              prefix={<Target className=\"w-5 h-5\" />}\n              valueStyle={{ color: \"#1890ff\" }}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} sm={12} lg={6}>\n          <Card className=\"enterprise-card\">\n            <Statistic\n              title=\"已启用\"\n              value={stats.active}\n              prefix={<CheckCircle className=\"w-5 h-5\" />}\n              valueStyle={{ color: \"#52c41a\" }}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} sm={12} lg={6}>\n          <Card className=\"enterprise-card\">\n            <Statistic\n              title=\"草稿状态\"\n              value={stats.draft}\n              prefix={<Edit className=\"w-5 h-5\" />}\n              valueStyle={{ color: \"#faad14\" }}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} sm={12} lg={6}>\n          <Card className=\"enterprise-card\">\n            <Statistic\n              title=\"平均可用性\"\n              value={stats.avgAvailability}\n              suffix=\"%\"\n              prefix={<TrendingUp className=\"w-5 h-5\" />}\n              valueStyle={{ color: \"#722ed1\" }}\n            />\n          </Card>\n        </Col>\n      </Row>\n\n      {/* 搜索和过滤 */}\n      <Card className=\"mb-6\">\n        <Row gutter={[16, 16]} align=\"middle\">\n          <Col xs={24} md={8}>\n            <Input\n              placeholder=\"搜索SLA定义名称或描述...\"\n              prefix={<Search className=\"w-4 h-4 text-gray-400\" />}\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              allowClear\n            />\n          </Col>\n          <Col xs={24} md={4}>\n            <Select\n              placeholder=\"优先级\"\n              value={priorityFilter}\n              onChange={setPriorityFilter}\n              style={{ width: \"100%\" }}\n            >\n              <Option value=\"all\">全部优先级</Option>\n              {Object.entries(PRIORITY_CONFIG).map(([key, config]) => (\n                <Option key={key} value={key}>\n                  {config.label}\n                </Option>\n              ))}\n            </Select>\n          </Col>\n          <Col xs={24} md={4}>\n            <Select\n              placeholder=\"状态\"\n              value={statusFilter}\n              onChange={setStatusFilter}\n              style={{ width: \"100%\" }}\n            >\n              <Option value=\"all\">全部状态</Option>\n              {Object.entries(STATUS_CONFIG).map(([key, config]) => (\n                <Option key={key} value={key}>\n                  {config.label}\n                </Option>\n              ))}\n            </Select>\n          </Col>\n          <Col xs={24} md={4}>\n            <Select\n              placeholder=\"服务类型\"\n              value={serviceTypeFilter}\n              onChange={setServiceTypeFilter}\n              style={{ width: \"100%\" }}\n            >\n              <Option value=\"all\">全部类型</Option>\n              {serviceTypes.map((type) => (\n                <Option key={type} value={type}>\n                  {type}\n                </Option>\n              ))}\n            </Select>\n          </Col>\n          <Col xs={24} md={4} className=\"text-right\">\n            <Button\n              type=\"primary\"\n              icon={<Plus className=\"w-4 h-4\" />}\n              onClick={() => {\n                setSelectedSLA(null);\n                form.resetFields();\n                setShowCreateModal(true);\n              }}\n            >\n              新建SLA\n            </Button>\n          </Col>\n        </Row>\n      </Card>\n\n      {/* SLA定义列表 */}\n      <Card className=\"enterprise-card\">\n        <Table\n          columns={columns}\n          dataSource={filteredSLAs}\n          rowKey=\"id\"\n          pagination={{\n            total: filteredSLAs.length,\n            pageSize: 10,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total) => `共 ${total} 条记录`,\n          }}\n          className=\"enterprise-table\"\n        />\n      </Card>\n\n      {/* 创建/编辑模态框 */}\n      <Modal\n        title={\n          <span>\n            <Target className=\"w-4 h-4 mr-2\" />\n            {selectedSLA ? \"编辑SLA定义\" : \"新建SLA定义\"}\n          </span>\n        }\n        open={showCreateModal}\n        onOk={handleSave}\n        onCancel={() => {\n          setShowCreateModal(false);\n          setSelectedSLA(null);\n          form.resetFields();\n        }}\n        width={800}\n        confirmLoading={loading}\n        okText=\"保存\"\n        cancelText=\"取消\"\n      >\n        <Form form={form} layout=\"vertical\" className=\"mt-4\">\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                label=\"SLA名称\"\n                name=\"name\"\n                rules={[{ required: true, message: \"请输入SLA名称\" }]}\n              >\n                <Input placeholder=\"请输入SLA名称\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"服务类型\"\n                name=\"serviceType\"\n                rules={[{ required: true, message: \"请选择服务类型\" }]}\n              >\n                <Select\n                  showSearch\n                  placeholder=\"选择或输入服务类型\"\n                  mode=\"combobox\"\n                >\n                  {serviceTypes.map((type) => (\n                    <Option key={type} value={type}>\n                      {type}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Form.Item\n            label=\"描述\"\n            name=\"description\"\n            rules={[{ required: true, message: \"请输入SLA描述\" }]}\n          >\n            <Input.TextArea rows={3} placeholder=\"请输入SLA描述\" />\n          </Form.Item>\n          <Row gutter={16}>\n            <Col span={8}>\n              <Form.Item\n                label=\"优先级\"\n                name=\"priority\"\n                rules={[{ required: true, message: \"请选择优先级\" }]}\n                initialValue=\"P3\"\n              >\n                <Select>\n                  {Object.entries(PRIORITY_CONFIG).map(([key, config]) => (\n                    <Option key={key} value={key}>\n                      {config.label}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label=\"响应时间\"\n                name=\"responseTime\"\n                rules={[{ required: true, message: \"请输入响应时间\" }]}\n              >\n                <Input placeholder=\"如: 30分钟\" />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label=\"解决时间\"\n                name=\"resolutionTime\"\n                rules={[{ required: true, message: \"请输入解决时间\" }]}\n              >\n                <Input placeholder=\"如: 4小时\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={8}>\n              <Form.Item\n                label=\"可用性\"\n                name=\"availability\"\n                rules={[{ required: true, message: \"请输入可用性\" }]}\n              >\n                <Input placeholder=\"如: 99.9%\" />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label=\"业务时间\"\n                name=\"businessHours\"\n                rules={[{ required: true, message: \"请输入业务时间\" }]}\n              >\n                <Select>\n                  <Option value=\"7x24\">7x24小时</Option>\n                  <Option value=\"工作时间\">工作时间</Option>\n                  <Option value=\"5x8\">5x8小时</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"状态\" name=\"status\" initialValue=\"draft\">\n                <Select>\n                  {Object.entries(STATUS_CONFIG).map(([key, config]) => (\n                    <Option key={key} value={key}>\n                      {config.label}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n\n      {/* 详情模态框 */}\n      <Modal\n        title={\n          <div className=\"flex items-center gap-2\">\n            <Eye className=\"w-5 h-5\" />\n            <span>SLA定义详情</span>\n          </div>\n        }\n        open={showDetailModal}\n        onCancel={() => setShowDetailModal(false)}\n        width={800}\n        footer={[\n          <Button key=\"close\" onClick={() => setShowDetailModal(false)}>\n            关闭\n          </Button>,\n        ]}\n      >\n        {selectedSLA && (\n          <div className=\"space-y-6\">\n            <div>\n              <Title level={4}>{selectedSLA.name}</Title>\n              <Text type=\"secondary\">{selectedSLA.description}</Text>\n            </div>\n\n            <Row gutter={16}>\n              <Col span={8}>\n                <Card size=\"small\">\n                  <Statistic\n                    title=\"响应时间\"\n                    value={selectedSLA.responseTime}\n                    prefix={<Timer className=\"w-4 h-4\" />}\n                  />\n                </Card>\n              </Col>\n              <Col span={8}>\n                <Card size=\"small\">\n                  <Statistic\n                    title=\"解决时间\"\n                    value={selectedSLA.resolutionTime}\n                    prefix={<Target className=\"w-4 h-4\" />}\n                  />\n                </Card>\n              </Col>\n              <Col span={8}>\n                <Card size=\"small\">\n                  <Statistic\n                    title=\"可用性\"\n                    value={selectedSLA.availability}\n                    prefix={<TrendingUp className=\"w-4 h-4\" />}\n                  />\n                </Card>\n              </Col>\n            </Row>\n\n            <div>\n              <Title level={5}>升级规则</Title>\n              <List\n                size=\"small\"\n                dataSource={selectedSLA.escalationRules}\n                renderItem={(rule, index) => (\n                  <List.Item>\n                    <Badge count={index + 1} color=\"blue\" />\n                    <span className=\"ml-2\">{rule}</span>\n                  </List.Item>\n                )}\n              />\n            </div>\n\n            <div>\n              <Title level={5}>适用服务</Title>\n              <div className=\"flex flex-wrap gap-2\">\n                {selectedSLA.applicableServices.map((service) => (\n                  <Tag key={service} color=\"blue\">\n                    {service}\n                  </Tag>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default SLADefinitionManagement;\n"],"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","ignoreList":[]}