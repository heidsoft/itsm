fbe66ec4c01780b8a94729833e9e67ac
"use strict";

/* istanbul ignore next */
function cov_25i82t6ql5() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/api/dashboard-api.ts";
  var hash = "c5a5b606b0bd9d6ad0420624197b2545f3e25c2a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/api/dashboard-api.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 56
        }
      },
      "4": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 20,
          column: 14
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 78
        }
      },
      "6": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 79
        }
      },
      "7": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 37,
          column: 14
        }
      },
      "8": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 78
        }
      },
      "9": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 79
        }
      },
      "10": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 86
        }
      },
      "11": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 84
        }
      },
      "12": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 85
        }
      },
      "13": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 92
        }
      },
      "14": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 84
        }
      },
      "15": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 92
        }
      },
      "16": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 101
        }
      },
      "17": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 81
        }
      },
      "18": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 86
        }
      },
      "19": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 91
        }
      },
      "20": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 86
        }
      },
      "21": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 95
        }
      },
      "22": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 144,
          column: 11
        }
      },
      "23": {
        start: {
          line: 151,
          column: 25
        },
        end: {
          line: 151,
          column: 107
        }
      },
      "24": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 156,
          column: 11
        }
      },
      "25": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 79
        }
      },
      "26": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 73
        }
      },
      "27": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 94
        }
      },
      "28": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "29": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 83
        }
      },
      "30": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 88
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 17,
            column: 7
          }
        },
        loc: {
          start: {
            line: 17,
            column: 46
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 6
          },
          end: {
            line: 27,
            column: 7
          }
        },
        loc: {
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 34,
            column: 7
          }
        },
        loc: {
          start: {
            line: 34,
            column: 46
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 6
          },
          end: {
            line: 44,
            column: 7
          }
        },
        loc: {
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 51,
            column: 7
          }
        },
        loc: {
          start: {
            line: 51,
            column: 43
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 58,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        },
        loc: {
          start: {
            line: 58,
            column: 41
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 58
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 6
          },
          end: {
            line: 65,
            column: 7
          }
        },
        loc: {
          start: {
            line: 65,
            column: 43
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 73,
            column: 6
          },
          end: {
            line: 73,
            column: 7
          }
        },
        loc: {
          start: {
            line: 73,
            column: 52
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 73
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 80,
            column: 7
          }
        },
        loc: {
          start: {
            line: 80,
            column: 45
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 80
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 88,
            column: 6
          },
          end: {
            line: 88,
            column: 7
          }
        },
        loc: {
          start: {
            line: 88,
            column: 52
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 88
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 96,
            column: 6
          },
          end: {
            line: 96,
            column: 7
          }
        },
        loc: {
          start: {
            line: 96,
            column: 56
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 96
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        },
        loc: {
          start: {
            line: 102,
            column: 41
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 102
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 109,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        },
        loc: {
          start: {
            line: 109,
            column: 43
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 109
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 117,
            column: 6
          },
          end: {
            line: 117,
            column: 7
          }
        },
        loc: {
          start: {
            line: 117,
            column: 50
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 117
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 124,
            column: 6
          },
          end: {
            line: 124,
            column: 7
          }
        },
        loc: {
          start: {
            line: 124,
            column: 42
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 124
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        loc: {
          start: {
            line: 132,
            column: 55
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 132
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 140,
            column: 6
          },
          end: {
            line: 140,
            column: 7
          }
        },
        loc: {
          start: {
            line: 140,
            column: 55
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 140
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 150,
            column: 6
          },
          end: {
            line: 150,
            column: 7
          }
        },
        loc: {
          start: {
            line: 150,
            column: 44
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 150
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 162,
            column: 6
          },
          end: {
            line: 162,
            column: 7
          }
        },
        loc: {
          start: {
            line: 162,
            column: 43
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 162
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 168,
            column: 7
          }
        },
        loc: {
          start: {
            line: 168,
            column: 34
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 168
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 175,
            column: 6
          },
          end: {
            line: 175,
            column: 7
          }
        },
        loc: {
          start: {
            line: 175,
            column: 45
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 175
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 184,
            column: 6
          },
          end: {
            line: 184,
            column: 7
          }
        },
        loc: {
          start: {
            line: 184,
            column: 61
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 184
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 194,
            column: 6
          },
          end: {
            line: 194,
            column: 7
          }
        },
        loc: {
          start: {
            line: 194,
            column: 43
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 194
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 201,
            column: 6
          },
          end: {
            line: 201,
            column: 7
          }
        },
        loc: {
          start: {
            line: 201,
            column: 44
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 201
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 20,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 32
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 20,
            column: 14
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 37,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 32
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 14
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 140,
            column: 30
          },
          end: {
            line: 140,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 140,
            column: 37
          },
          end: {
            line: 140,
            column: 38
          }
        }],
        line: 140
      },
      "3": {
        loc: {
          start: {
            line: 140,
            column: 40
          },
          end: {
            line: 140,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 140,
            column: 51
          },
          end: {
            line: 140,
            column: 53
          }
        }],
        line: 140
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/api/dashboard-api.ts"],
      sourcesContent: ["import { httpClient } from '../../app/lib/http-client';\nimport {\n  DashboardWidget,\n  Dashboard,\n  DashboardLayout,\n  TicketStats,\n  UserStats,\n  SystemStats,\n  ChartData,\n  RealtimeData,\n  Report,\n  DashboardTemplate,\n  CreateDashboardRequest,\n  UpdateDashboardRequest\n} from '../../types/dashboard';\n\n/**\n * \u4EEA\u8868\u76D8API\u5BA2\u6237\u7AEF\n * \u63D0\u4F9B\u4EEA\u8868\u76D8\u6570\u636E\u83B7\u53D6\u548C\u7BA1\u7406\u76F8\u5173\u7684API\u8C03\u7528\u65B9\u6CD5\n */\nexport class DashboardAPI {\n  /**\n   * \u83B7\u53D6\u4EEA\u8868\u76D8\u914D\u7F6E\n   * @param userId \u7528\u6237ID\n   * @returns \u4EEA\u8868\u76D8\u914D\u7F6E\n   */\n  static async getDashboardConfig(userId?: number): Promise<Dashboard> {\n    const params = userId ? { user_id: userId } : {};\n    return httpClient.get<Dashboard>('/api/v1/dashboard/config', params);\n  }\n\n  /**\n   * \u4FDD\u5B58\u4EEA\u8868\u76D8\u914D\u7F6E\n   * @param config \u4EEA\u8868\u76D8\u914D\u7F6E\n   * @returns \u4FDD\u5B58\u7ED3\u679C\n   */\n  static async saveDashboardConfig(config: Dashboard): Promise<{ success: boolean }> {\n    return httpClient.post<{ success: boolean }>('/api/v1/dashboard/config', config);\n  }\n\n  /**\n   * \u83B7\u53D6\u4EEA\u8868\u76D8\u5E03\u5C40\n   * @param userId \u7528\u6237ID\n   * @returns \u4EEA\u8868\u76D8\u5E03\u5C40\n   */\n  static async getDashboardLayout(userId?: number): Promise<DashboardLayout> {\n    const params = userId ? { user_id: userId } : {};\n    return httpClient.get<DashboardLayout>('/api/v1/dashboard/layout', params);\n  }\n\n  /**\n   * \u4FDD\u5B58\u4EEA\u8868\u76D8\u5E03\u5C40\n   * @param layout \u4EEA\u8868\u76D8\u5E03\u5C40\n   * @returns \u4FDD\u5B58\u7ED3\u679C\n   */\n  static async saveDashboardLayout(layout: DashboardLayout): Promise<{ success: boolean }> {\n    return httpClient.post<{ success: boolean }>('/api/v1/dashboard/layout', layout);\n  }\n\n  /**\n   * \u83B7\u53D6\u5DE5\u5355\u7EDF\u8BA1\u6570\u636E\n   * @param filters \u8FC7\u6EE4\u6761\u4EF6\n   * @returns \u5DE5\u5355\u7EDF\u8BA1\u6570\u636E\n   */\n  static async getTicketStats(filters?: Record<string, unknown>): Promise<TicketStats> {\n    return httpClient.get<TicketStats>('/api/v1/dashboard/stats/tickets', filters);\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u7EDF\u8BA1\u6570\u636E\n   * @param filters \u8FC7\u6EE4\u6761\u4EF6\n   * @returns \u7528\u6237\u7EDF\u8BA1\u6570\u636E\n   */\n  static async getUserStats(filters?: Record<string, unknown>): Promise<UserStats> {\n    return httpClient.get<UserStats>('/api/v1/dashboard/stats/users', filters);\n  }\n\n  /**\n   * \u83B7\u53D6\u7CFB\u7EDF\u7EDF\u8BA1\u6570\u636E\n   * @param filters \u8FC7\u6EE4\u6761\u4EF6\n   * @returns \u7CFB\u7EDF\u7EDF\u8BA1\u6570\u636E\n   */\n  static async getSystemStats(filters?: Record<string, unknown>): Promise<SystemStats> {\n    return httpClient.get<SystemStats>('/api/v1/dashboard/stats/system', filters);\n  }\n\n  /**\n   * \u83B7\u53D6\u56FE\u8868\u6570\u636E\n   * @param chartType \u56FE\u8868\u7C7B\u578B\n   * @param filters \u8FC7\u6EE4\u6761\u4EF6\n   * @returns \u56FE\u8868\u6570\u636E\n   */\n  static async getChartData(chartType: string, filters?: Record<string, unknown>): Promise<ChartData> {\n    return httpClient.get<ChartData>(`/api/v1/dashboard/charts/${chartType}`, filters);\n  }\n\n  /**\n   * \u83B7\u53D6\u5B9E\u65F6\u6570\u636E\n   * @param dataType \u6570\u636E\u7C7B\u578B\n   * @returns \u5B9E\u65F6\u6570\u636E\n   */\n  static async getRealtimeData(dataType: string): Promise<RealtimeData> {\n    return httpClient.get<RealtimeData>(`/api/v1/dashboard/realtime/${dataType}`);\n  }\n\n  /**\n   * \u83B7\u53D6\u90E8\u4EF6\u6570\u636E\n   * @param widgetId \u90E8\u4EF6ID\n   * @param filters \u8FC7\u6EE4\u6761\u4EF6\n   * @returns \u90E8\u4EF6\u6570\u636E\n   */\n  static async getWidgetData(widgetId: string, filters?: Record<string, unknown>): Promise<DashboardWidget> {\n    return httpClient.get<DashboardWidget>(`/api/v1/dashboard/widgets/${widgetId}`, filters);\n  }\n\n  /**\n   * \u5237\u65B0\u90E8\u4EF6\u6570\u636E\n   * @param widgetId \u90E8\u4EF6ID\n   * @param filters \u8FC7\u6EE4\u6761\u4EF6\n   * @returns \u90E8\u4EF6\u6570\u636E\n   */\n  static async refreshWidgetData(widgetId: string, filters?: Record<string, unknown>): Promise<DashboardWidget> {\n    return httpClient.post<DashboardWidget>(`/api/v1/dashboard/widgets/${widgetId}/refresh`, filters);\n  }\n\n  /**\n   * \u83B7\u53D6\u53EF\u7528\u90E8\u4EF6\u5217\u8868\n   * @returns \u90E8\u4EF6\u5217\u8868\n   */\n  static async getAvailableWidgets(): Promise<DashboardWidget[]> {\n    return httpClient.get<DashboardWidget[]>('/api/v1/dashboard/widgets/available');\n  }\n\n  /**\n   * \u6DFB\u52A0\u90E8\u4EF6\u5230\u4EEA\u8868\u76D8\n   * @param widgetConfig \u90E8\u4EF6\u914D\u7F6E\n   * @returns \u6DFB\u52A0\u7ED3\u679C\n   */\n  static async addWidget(widgetConfig: Partial<DashboardWidget>): Promise<{ widget: DashboardWidget }> {\n    return httpClient.post<{ widget: DashboardWidget }>('/api/v1/dashboard/widgets', widgetConfig);\n  }\n\n  /**\n   * \u66F4\u65B0\u90E8\u4EF6\u914D\u7F6E\n   * @param widgetId \u90E8\u4EF6ID\n   * @param config \u90E8\u4EF6\u914D\u7F6E\n   * @returns \u66F4\u65B0\u7ED3\u679C\n   */\n  static async updateWidget(widgetId: string, config: Partial<DashboardWidget>): Promise<{ widget: DashboardWidget }> {\n    return httpClient.put<{ widget: DashboardWidget }>(`/api/v1/dashboard/widgets/${widgetId}`, config);\n  }\n\n  /**\n   * \u5220\u9664\u90E8\u4EF6\n   * @param widgetId \u90E8\u4EF6ID\n   * @returns \u5220\u9664\u7ED3\u679C\n   */\n  static async removeWidget(widgetId: string): Promise<{ success: boolean }> {\n    return httpClient.delete<{ success: boolean }>(`/api/v1/dashboard/widgets/${widgetId}`);\n  }\n\n  /**\n   * \u751F\u6210\u62A5\u544A\n   * @param reportType \u62A5\u544A\u7C7B\u578B\n   * @param filters \u8FC7\u6EE4\u6761\u4EF6\n   * @returns \u62A5\u544A\u6570\u636E\n   */\n  static async generateReport(reportType: string, filters?: Record<string, unknown>): Promise<Report> {\n    return httpClient.post<Report>(`/api/v1/dashboard/reports/${reportType}`, filters);\n  }\n\n  /**\n   * \u83B7\u53D6\u62A5\u544A\u5217\u8868\n   * @param page \u9875\u7801\n   * @param pageSize \u9875\u9762\u5927\u5C0F\n   * @returns \u62A5\u544A\u5217\u8868\n   */\n  static async getReports(page: number = 1, pageSize: number = 20): Promise<{\n    reports: Report[];\n    total: number;\n    page: number;\n    pageSize: number;\n  }> {\n    return httpClient.get('/api/v1/dashboard/reports', { page, page_size: pageSize });\n  }\n\n  /**\n   * \u4E0B\u8F7D\u62A5\u544A\n   * @param reportId \u62A5\u544AID\n   * @returns \u62A5\u544A\u6587\u4EF6Blob\n   */\n  static async downloadReport(reportId: string): Promise<Blob> {\n    const response = await httpClient.get<ArrayBuffer>(`/api/v1/dashboard/reports/${reportId}/download`);\n    return new Blob([response], { type: 'application/octet-stream' });\n  }\n\n  /**\n   * \u5BFC\u51FA\u4EEA\u8868\u76D8\u6570\u636E\n   * @param params \u5BFC\u51FA\u53C2\u6570\n   * @returns \u5BFC\u51FA\u7ED3\u679C\n   */\n  static async exportDashboard(params?: Record<string, unknown>): Promise<{ download_url: string }> {\n    return httpClient.post<{ download_url: string }>('/api/v1/dashboard/export', params);\n  }\n\n  /**\n   * \u83B7\u53D6\u4EEA\u8868\u76D8\u6A21\u677F\u5217\u8868\n   * @returns \u6A21\u677F\u5217\u8868\n   */\n  static async getTemplates(): Promise<DashboardTemplate[]> {\n    return httpClient.get<DashboardTemplate[]>('/api/v1/dashboard/templates');\n  }\n\n  /**\n   * \u5E94\u7528\u4EEA\u8868\u76D8\u6A21\u677F\n   * @param templateId \u6A21\u677FID\n   * @returns \u5E94\u7528\u7ED3\u679C\n   */\n  static async applyTemplate(templateId: string): Promise<{ success: boolean; config: Dashboard }> {\n    return httpClient.post<{ success: boolean; config: Dashboard }>(`/api/v1/dashboard/templates/${templateId}/apply`);\n  }\n\n  /**\n   * \u4FDD\u5B58\u4E3A\u6A21\u677F\n   * @param name \u6A21\u677F\u540D\u79F0\n   * @param description \u6A21\u677F\u63CF\u8FF0\n   * @param config \u4EEA\u8868\u76D8\u914D\u7F6E\n   * @returns \u4FDD\u5B58\u7ED3\u679C\n   */\n  static async saveAsTemplate(name: string, description: string, config: Dashboard): Promise<{ template: DashboardTemplate }> {\n    return httpClient.post<{ template: DashboardTemplate }>('/api/v1/dashboard/templates', {\n      name,\n      description,\n      config\n    });\n  }\n\n  /**\n   * \u83B7\u53D6\u4EEA\u8868\u76D8\u6027\u80FD\u6307\u6807\n   * @returns \u6027\u80FD\u6307\u6807\n   */\n  static async getPerformanceMetrics(): Promise<{\n    loadTime: number;\n    renderTime: number;\n    dataFetchTime: number;\n    widgetCount: number;\n    memoryUsage: number;\n  }> {\n    return httpClient.get('/api/v1/dashboard/metrics/performance');\n  }\n\n  /**\n   * \u83B7\u53D6\u4EEA\u8868\u76D8\u4F7F\u7528\u7EDF\u8BA1\n   * @param dateRange \u65E5\u671F\u8303\u56F4\n   * @returns \u4F7F\u7528\u7EDF\u8BA1\n   */\n  static async getUsageStats(dateRange?: { start: string; end: string }): Promise<{\n    totalViews: number;\n    uniqueUsers: number;\n    avgSessionDuration: number;\n    mostUsedWidgets: Array<{ widgetId: string; usage: number }>;\n    peakUsageHours: number[];\n  }> {\n    return httpClient.get('/api/v1/dashboard/metrics/usage', dateRange);\n  }\n}"],
      names: ["DashboardAPI", "getDashboardConfig", "userId", "params", "user_id", "httpClient", "get", "saveDashboardConfig", "config", "post", "getDashboardLayout", "saveDashboardLayout", "layout", "getTicketStats", "filters", "getUserStats", "getSystemStats", "getChartData", "chartType", "getRealtimeData", "dataType", "getWidgetData", "widgetId", "refreshWidgetData", "getAvailableWidgets", "addWidget", "widgetConfig", "updateWidget", "put", "removeWidget", "delete", "generateReport", "reportType", "getReports", "page", "pageSize", "page_size", "downloadReport", "reportId", "response", "Blob", "type", "exportDashboard", "getTemplates", "applyTemplate", "templateId", "saveAsTemplate", "name", "description", "getPerformanceMetrics", "getUsageStats", "dateRange"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c5a5b606b0bd9d6ad0420624197b2545f3e25c2a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25i82t6ql5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25i82t6ql5();
cov_25i82t6ql5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_25i82t6ql5().s[1]++;
Object.defineProperty(exports, "DashboardAPI", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[0]++;
    cov_25i82t6ql5().s[2]++;
    return DashboardAPI;
  }
});
const _httpclient =
/* istanbul ignore next */
(cov_25i82t6ql5().s[3]++, require("../../app/lib/http-client"));
class DashboardAPI {
  /**
  * 获取仪表盘配置
  * @param userId 用户ID
  * @returns 仪表盘配置
  */
  static async getDashboardConfig(userId) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[1]++;
    const params =
    /* istanbul ignore next */
    (cov_25i82t6ql5().s[4]++, userId ?
    /* istanbul ignore next */
    (cov_25i82t6ql5().b[0][0]++, {
      user_id: userId
    }) :
    /* istanbul ignore next */
    (cov_25i82t6ql5().b[0][1]++, {}));
    /* istanbul ignore next */
    cov_25i82t6ql5().s[5]++;
    return _httpclient.httpClient.get('/api/v1/dashboard/config', params);
  }
  /**
  * 保存仪表盘配置
  * @param config 仪表盘配置
  * @returns 保存结果
  */
  static async saveDashboardConfig(config) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[2]++;
    cov_25i82t6ql5().s[6]++;
    return _httpclient.httpClient.post('/api/v1/dashboard/config', config);
  }
  /**
  * 获取仪表盘布局
  * @param userId 用户ID
  * @returns 仪表盘布局
  */
  static async getDashboardLayout(userId) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[3]++;
    const params =
    /* istanbul ignore next */
    (cov_25i82t6ql5().s[7]++, userId ?
    /* istanbul ignore next */
    (cov_25i82t6ql5().b[1][0]++, {
      user_id: userId
    }) :
    /* istanbul ignore next */
    (cov_25i82t6ql5().b[1][1]++, {}));
    /* istanbul ignore next */
    cov_25i82t6ql5().s[8]++;
    return _httpclient.httpClient.get('/api/v1/dashboard/layout', params);
  }
  /**
  * 保存仪表盘布局
  * @param layout 仪表盘布局
  * @returns 保存结果
  */
  static async saveDashboardLayout(layout) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[4]++;
    cov_25i82t6ql5().s[9]++;
    return _httpclient.httpClient.post('/api/v1/dashboard/layout', layout);
  }
  /**
  * 获取工单统计数据
  * @param filters 过滤条件
  * @returns 工单统计数据
  */
  static async getTicketStats(filters) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[5]++;
    cov_25i82t6ql5().s[10]++;
    return _httpclient.httpClient.get('/api/v1/dashboard/stats/tickets', filters);
  }
  /**
  * 获取用户统计数据
  * @param filters 过滤条件
  * @returns 用户统计数据
  */
  static async getUserStats(filters) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[6]++;
    cov_25i82t6ql5().s[11]++;
    return _httpclient.httpClient.get('/api/v1/dashboard/stats/users', filters);
  }
  /**
  * 获取系统统计数据
  * @param filters 过滤条件
  * @returns 系统统计数据
  */
  static async getSystemStats(filters) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[7]++;
    cov_25i82t6ql5().s[12]++;
    return _httpclient.httpClient.get('/api/v1/dashboard/stats/system', filters);
  }
  /**
  * 获取图表数据
  * @param chartType 图表类型
  * @param filters 过滤条件
  * @returns 图表数据
  */
  static async getChartData(chartType, filters) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[8]++;
    cov_25i82t6ql5().s[13]++;
    return _httpclient.httpClient.get(`/api/v1/dashboard/charts/${chartType}`, filters);
  }
  /**
  * 获取实时数据
  * @param dataType 数据类型
  * @returns 实时数据
  */
  static async getRealtimeData(dataType) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[9]++;
    cov_25i82t6ql5().s[14]++;
    return _httpclient.httpClient.get(`/api/v1/dashboard/realtime/${dataType}`);
  }
  /**
  * 获取部件数据
  * @param widgetId 部件ID
  * @param filters 过滤条件
  * @returns 部件数据
  */
  static async getWidgetData(widgetId, filters) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[10]++;
    cov_25i82t6ql5().s[15]++;
    return _httpclient.httpClient.get(`/api/v1/dashboard/widgets/${widgetId}`, filters);
  }
  /**
  * 刷新部件数据
  * @param widgetId 部件ID
  * @param filters 过滤条件
  * @returns 部件数据
  */
  static async refreshWidgetData(widgetId, filters) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[11]++;
    cov_25i82t6ql5().s[16]++;
    return _httpclient.httpClient.post(`/api/v1/dashboard/widgets/${widgetId}/refresh`, filters);
  }
  /**
  * 获取可用部件列表
  * @returns 部件列表
  */
  static async getAvailableWidgets() {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[12]++;
    cov_25i82t6ql5().s[17]++;
    return _httpclient.httpClient.get('/api/v1/dashboard/widgets/available');
  }
  /**
  * 添加部件到仪表盘
  * @param widgetConfig 部件配置
  * @returns 添加结果
  */
  static async addWidget(widgetConfig) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[13]++;
    cov_25i82t6ql5().s[18]++;
    return _httpclient.httpClient.post('/api/v1/dashboard/widgets', widgetConfig);
  }
  /**
  * 更新部件配置
  * @param widgetId 部件ID
  * @param config 部件配置
  * @returns 更新结果
  */
  static async updateWidget(widgetId, config) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[14]++;
    cov_25i82t6ql5().s[19]++;
    return _httpclient.httpClient.put(`/api/v1/dashboard/widgets/${widgetId}`, config);
  }
  /**
  * 删除部件
  * @param widgetId 部件ID
  * @returns 删除结果
  */
  static async removeWidget(widgetId) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[15]++;
    cov_25i82t6ql5().s[20]++;
    return _httpclient.httpClient.delete(`/api/v1/dashboard/widgets/${widgetId}`);
  }
  /**
  * 生成报告
  * @param reportType 报告类型
  * @param filters 过滤条件
  * @returns 报告数据
  */
  static async generateReport(reportType, filters) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[16]++;
    cov_25i82t6ql5().s[21]++;
    return _httpclient.httpClient.post(`/api/v1/dashboard/reports/${reportType}`, filters);
  }
  /**
  * 获取报告列表
  * @param page 页码
  * @param pageSize 页面大小
  * @returns 报告列表
  */
  static async getReports(page =
  /* istanbul ignore next */
  (cov_25i82t6ql5().b[2][0]++, 1), pageSize =
  /* istanbul ignore next */
  (cov_25i82t6ql5().b[3][0]++, 20)) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[17]++;
    cov_25i82t6ql5().s[22]++;
    return _httpclient.httpClient.get('/api/v1/dashboard/reports', {
      page,
      page_size: pageSize
    });
  }
  /**
  * 下载报告
  * @param reportId 报告ID
  * @returns 报告文件Blob
  */
  static async downloadReport(reportId) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[18]++;
    const response =
    /* istanbul ignore next */
    (cov_25i82t6ql5().s[23]++, await _httpclient.httpClient.get(`/api/v1/dashboard/reports/${reportId}/download`));
    /* istanbul ignore next */
    cov_25i82t6ql5().s[24]++;
    return new Blob([response], {
      type: 'application/octet-stream'
    });
  }
  /**
  * 导出仪表盘数据
  * @param params 导出参数
  * @returns 导出结果
  */
  static async exportDashboard(params) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[19]++;
    cov_25i82t6ql5().s[25]++;
    return _httpclient.httpClient.post('/api/v1/dashboard/export', params);
  }
  /**
  * 获取仪表盘模板列表
  * @returns 模板列表
  */
  static async getTemplates() {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[20]++;
    cov_25i82t6ql5().s[26]++;
    return _httpclient.httpClient.get('/api/v1/dashboard/templates');
  }
  /**
  * 应用仪表盘模板
  * @param templateId 模板ID
  * @returns 应用结果
  */
  static async applyTemplate(templateId) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[21]++;
    cov_25i82t6ql5().s[27]++;
    return _httpclient.httpClient.post(`/api/v1/dashboard/templates/${templateId}/apply`);
  }
  /**
  * 保存为模板
  * @param name 模板名称
  * @param description 模板描述
  * @param config 仪表盘配置
  * @returns 保存结果
  */
  static async saveAsTemplate(name, description, config) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[22]++;
    cov_25i82t6ql5().s[28]++;
    return _httpclient.httpClient.post('/api/v1/dashboard/templates', {
      name,
      description,
      config
    });
  }
  /**
  * 获取仪表盘性能指标
  * @returns 性能指标
  */
  static async getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[23]++;
    cov_25i82t6ql5().s[29]++;
    return _httpclient.httpClient.get('/api/v1/dashboard/metrics/performance');
  }
  /**
  * 获取仪表盘使用统计
  * @param dateRange 日期范围
  * @returns 使用统计
  */
  static async getUsageStats(dateRange) {
    /* istanbul ignore next */
    cov_25i82t6ql5().f[24]++;
    cov_25i82t6ql5().s[30]++;
    return _httpclient.httpClient.get('/api/v1/dashboard/metrics/usage', dateRange);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,