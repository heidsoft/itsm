{"version":3,"names":["ChangeSuccessReport","statusData","cov_2oj4f0zsd1","s","_mockdata","mockChangesData","reduce","acc","change","f","status","b","pieData","Object","entries","map","name","value","typeData","type","barData","count","COLORS","_jsxruntime","jsxs","className","jsx","_recharts","ResponsiveContainer","width","height","PieChart","Pie","data","cx","cy","outerRadius","fill","dataKey","nameKey","entry","index","Cell","length","Tooltip","Legend","BarChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Bar"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/reports/change-success/page.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\nimport { mockChangesData } from '../../lib/mock-data';\n\n// 按状态统计变更\nconst statusData = mockChangesData.reduce((acc, change) => {\n  const status = change.status;\n  acc[status] = (acc[status] || 0) + 1;\n  return acc;\n}, {} as Record<string, number>);\n\nconst pieData = Object.entries(statusData).map(([name, value]) => ({\n  name,\n  value,\n}));\n\n// 按类型统计变更\nconst typeData = mockChangesData.reduce((acc, change) => {\n  const type = change.type;\n  acc[type] = (acc[type] || 0) + 1;\n  return acc;\n}, {} as Record<string, number>);\n\nconst barData = Object.entries(typeData).map(([type, count]) => ({\n  type,\n  count,\n}));\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nexport default function ChangeSuccessReport() {\n  return (\n    <div className=\"p-10 bg-gray-50 min-h-full\">\n      <header className=\"mb-8\">\n        <h2 className=\"text-4xl font-bold text-gray-800\">Change Success Report</h2>\n        <p className=\"text-gray-500 mt-1\">This report shows the success rate of changes and the distribution of change types.</p>\n      </header>\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Changes by Status</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <PieChart>\n              <Pie\n                data={pieData}\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={80}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                nameKey=\"name\"\n              >\n                {pieData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n              </Pie>\n              <Tooltip />\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Changes by Type</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={barData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"type\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"count\" fill=\"#82ca9d\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappingsgCA;;;;;;WAAwBA,mBAAA;;;;;;;;wEA9BN;;;kCACoG;;;kCACtF;;;;;;;;;;;;;;;AAEhC;AACA,MAAMC,UAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,OAAaC,SAAA,CAAAC,eAAe,CAACC,MAAM,CAAC,CAACC,GAAA,EAAKC,MAAA;EAAA;EAAAN,cAAA,GAAAO,CAAA;EAC9C,MAAMC,MAAA;EAAA;EAAA,CAAAR,cAAA,GAAAC,CAAA,OAASK,MAAA,CAAOE,MAAM;EAAA;EAAAR,cAAA,GAAAC,CAAA;EAC5BI,GAAG,CAACG,MAAA,CAAO,GAAG;EAAC;EAAA,CAAAR,cAAA,GAAAS,CAAA,UAAAJ,GAAG,CAACG,MAAA,CAAO;EAAA;EAAA,CAAAR,cAAA,GAAAS,CAAA,UAAI,MAAK;EAAA;EAAAT,cAAA,GAAAC,CAAA;EACnC,OAAOI,GAAA;AACT,GAAG,CAAC;AAEJ,MAAMK,OAAA;AAAA;AAAA,CAAAV,cAAA,GAAAC,CAAA,QAAUU,MAAA,CAAOC,OAAO,CAACb,UAAA,EAAYc,GAAG,CAAC,CAAC,CAACC,IAAA,EAAMC,KAAA,CAAM,KAAM;EAAA;EAAAf,cAAA,GAAAO,CAAA;EAAAP,cAAA,GAAAC,CAAA;EAAA;IACjEa,IAAA;IACAC;EACF;AAAA;AAEA;AACA,MAAMC,QAAA;AAAA;AAAA,CAAAhB,cAAA,GAAAC,CAAA,QAAWC,SAAA,CAAAC,eAAe,CAACC,MAAM,CAAC,CAACC,GAAA,EAAKC,MAAA;EAAA;EAAAN,cAAA,GAAAO,CAAA;EAC5C,MAAMU,IAAA;EAAA;EAAA,CAAAjB,cAAA,GAAAC,CAAA,QAAOK,MAAA,CAAOW,IAAI;EAAA;EAAAjB,cAAA,GAAAC,CAAA;EACxBI,GAAG,CAACY,IAAA,CAAK,GAAG;EAAC;EAAA,CAAAjB,cAAA,GAAAS,CAAA,UAAAJ,GAAG,CAACY,IAAA,CAAK;EAAA;EAAA,CAAAjB,cAAA,GAAAS,CAAA,UAAI,MAAK;EAAA;EAAAT,cAAA,GAAAC,CAAA;EAC/B,OAAOI,GAAA;AACT,GAAG,CAAC;AAEJ,MAAMa,OAAA;AAAA;AAAA,CAAAlB,cAAA,GAAAC,CAAA,QAAUU,MAAA,CAAOC,OAAO,CAACI,QAAA,EAAUH,GAAG,CAAC,CAAC,CAACI,IAAA,EAAME,KAAA,CAAM,KAAM;EAAA;EAAAnB,cAAA,GAAAO,CAAA;EAAAP,cAAA,GAAAC,CAAA;EAAA;IAC/DgB,IAAA;IACAE;EACF;AAAA;AAEA,MAAMC,MAAA;AAAA;AAAA,CAAApB,cAAA,GAAAC,CAAA,QAAS,CAAC,WAAW,WAAW,WAAW,UAAU;AAE5C,SAASH,oBAAA;EAAA;EAAAE,cAAA,GAAAO,CAAA;EAAAP,cAAA,GAAAC,CAAA;EACtB,oBACE,IAAAoB,WAAA,CAAAC,IAAA,EAAC;IAAIC,SAAA,EAAU;4BACb,IAAAF,WAAA,CAAAC,IAAA,EAAC;MAAOC,SAAA,EAAU;8BAChB,IAAAF,WAAA,CAAAG,GAAA,EAAC;QAAGD,SAAA,EAAU;kBAAmC;uBACjD,IAAAF,WAAA,CAAAG,GAAA,EAAC;QAAED,SAAA,EAAU;kBAAqB;;qBAEpC,IAAAF,WAAA,CAAAC,IAAA,EAAC;MAAIC,SAAA,EAAU;8BACb,IAAAF,WAAA,CAAAC,IAAA,EAAC;QAAIC,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;UAAGD,SAAA,EAAU;oBAA2C;yBACzD,IAAAF,WAAA,CAAAG,GAAA,EAACC,SAAA,CAAAC,mBAAmB;UAACC,KAAA,EAAM;UAAOC,MAAA,EAAQ;oBACxC,iBAAAP,WAAA,CAAAC,IAAA,EAACG,SAAA,CAAAI,QAAQ;oCACP,IAAAR,WAAA,CAAAG,GAAA,EAACC,SAAA,CAAAK,GAAG;cACFC,IAAA,EAAMrB,OAAA;cACNsB,EAAA,EAAG;cACHC,EAAA,EAAG;cACHC,WAAA,EAAa;cACbC,IAAA,EAAK;cACLC,OAAA,EAAQ;cACRC,OAAA,EAAQ;wBAEP3B,OAAA,CAAQG,GAAG,CAAC,CAACyB,KAAA,EAAOC,KAAA,KACnB;gBAAA;gBAAAvC,cAAA,GAAAO,CAAA;gBAAAP,cAAA,GAAAC,CAAA;gBAAA,OADmB,aACnB,IAAAoB,WAAA,CAAAG,GAAA,EAACC,SAAA,CAAAe,IAAI;kBAAuBL,IAAA,EAAMf,MAAM,CAACmB,KAAA,GAAQnB,MAAA,CAAOqB,MAAM;mBAAnD,QAAQF,KAAA,EAAO;cAAA;6BAG9B,IAAAlB,WAAA,CAAAG,GAAA,EAACC,SAAA,CAAAiB,OAAO,O,aACR,IAAArB,WAAA,CAAAG,GAAA,EAACC,SAAA,CAAAkB,MAAM;;;uBAIb,IAAAtB,WAAA,CAAAC,IAAA,EAAC;QAAIC,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;UAAGD,SAAA,EAAU;oBAA2C;yBACzD,IAAAF,WAAA,CAAAG,GAAA,EAACC,SAAA,CAAAC,mBAAmB;UAACC,KAAA,EAAM;UAAOC,MAAA,EAAQ;oBACxC,iBAAAP,WAAA,CAAAC,IAAA,EAACG,SAAA,CAAAmB,QAAQ;YAACb,IAAA,EAAMb,OAAA;oCACd,IAAAG,WAAA,CAAAG,GAAA,EAACC,SAAA,CAAAoB,aAAa;cAACC,eAAA,EAAgB;6BAC/B,IAAAzB,WAAA,CAAAG,GAAA,EAACC,SAAA,CAAAsB,KAAK;cAACX,OAAA,EAAQ;6BACf,IAAAf,WAAA,CAAAG,GAAA,EAACC,SAAA,CAAAuB,KAAK,O,aACN,IAAA3B,WAAA,CAAAG,GAAA,EAACC,SAAA,CAAAiB,OAAO,O,aACR,IAAArB,WAAA,CAAAG,GAAA,EAACC,SAAA,CAAAkB,MAAM,O,aACP,IAAAtB,WAAA,CAAAG,GAAA,EAACC,SAAA,CAAAwB,GAAG;cAACb,OAAA,EAAQ;cAAQD,IAAA,EAAK;;;;;;;AAOxC","ignoreList":[]}