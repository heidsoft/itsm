59f32bca9f6fe943d2ec99f6dd02e9a1
'use client';
"use strict";

/* istanbul ignore next */
function cov_2oj4f0zsd1() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/reports/change-success/page.tsx";
  var hash = "fa087a653260a9c1dd7b1b987f81e07dd3097625";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/reports/change-success/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 35
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "6": {
        start: {
          line: 15,
          column: 18
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "8": {
        start: {
          line: 22,
          column: 19
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "9": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 15
        }
      },
      "12": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 30,
          column: 7
        }
      },
      "13": {
        start: {
          line: 27,
          column: 65
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "14": {
        start: {
          line: 32,
          column: 17
        },
        end: {
          line: 36,
          column: 6
        }
      },
      "15": {
        start: {
          line: 33,
          column: 17
        },
        end: {
          line: 33,
          column: 28
        }
      },
      "16": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 37
        }
      },
      "17": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 15
        }
      },
      "18": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 40,
          column: 7
        }
      },
      "19": {
        start: {
          line: 37,
          column: 63
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "20": {
        start: {
          line: 41,
          column: 15
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "21": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "22": {
        start: {
          line: 87,
          column: 96
        },
        end: {
          line: 89,
          column: 67
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 52
          },
          end: {
            line: 22,
            column: 53
          }
        },
        loc: {
          start: {
            line: 22,
            column: 67
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 27,
            column: 48
          }
        },
        loc: {
          start: {
            line: 27,
            column: 65
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 50
          },
          end: {
            line: 32,
            column: 51
          }
        },
        loc: {
          start: {
            line: 32,
            column: 65
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 45
          },
          end: {
            line: 37,
            column: 46
          }
        },
        loc: {
          start: {
            line: 37,
            column: 63
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 37
      },
      "6": {
        name: "ChangeSuccessReport",
        decl: {
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 47,
            column: 28
          }
        },
        loc: {
          start: {
            line: 47,
            column: 31
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 47
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 87,
            column: 66
          },
          end: {
            line: 87,
            column: 67
          }
        },
        loc: {
          start: {
            line: 87,
            column: 96
          },
          end: {
            line: 89,
            column: 67
          }
        },
        line: 87
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 30
          }
        }, {
          start: {
            line: 24,
            column: 34
          },
          end: {
            line: 24,
            column: 35
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 26
          }
        }, {
          start: {
            line: 34,
            column: 30
          },
          end: {
            line: 34,
            column: 31
          }
        }],
        line: 34
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/reports/change-success/page.tsx"],
      sourcesContent: ["'use client';\n\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\nimport { mockChangesData } from '../../lib/mock-data';\n\n// \u6309\u72B6\u6001\u7EDF\u8BA1\u53D8\u66F4\nconst statusData = mockChangesData.reduce((acc, change) => {\n  const status = change.status;\n  acc[status] = (acc[status] || 0) + 1;\n  return acc;\n}, {} as Record<string, number>);\n\nconst pieData = Object.entries(statusData).map(([name, value]) => ({\n  name,\n  value,\n}));\n\n// \u6309\u7C7B\u578B\u7EDF\u8BA1\u53D8\u66F4\nconst typeData = mockChangesData.reduce((acc, change) => {\n  const type = change.type;\n  acc[type] = (acc[type] || 0) + 1;\n  return acc;\n}, {} as Record<string, number>);\n\nconst barData = Object.entries(typeData).map(([type, count]) => ({\n  type,\n  count,\n}));\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nexport default function ChangeSuccessReport() {\n  return (\n    <div className=\"p-10 bg-gray-50 min-h-full\">\n      <header className=\"mb-8\">\n        <h2 className=\"text-4xl font-bold text-gray-800\">Change Success Report</h2>\n        <p className=\"text-gray-500 mt-1\">This report shows the success rate of changes and the distribution of change types.</p>\n      </header>\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Changes by Status</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <PieChart>\n              <Pie\n                data={pieData}\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={80}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                nameKey=\"name\"\n              >\n                {pieData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n              </Pie>\n              <Tooltip />\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Changes by Type</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={barData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"type\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"count\" fill=\"#82ca9d\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    </div>\n  );\n}"],
      names: ["ChangeSuccessReport", "statusData", "mockChangesData", "reduce", "acc", "change", "status", "pieData", "Object", "entries", "map", "name", "value", "typeData", "type", "barData", "count", "COLORS", "div", "className", "header", "h2", "p", "h3", "ResponsiveContainer", "width", "height", "PieChart", "Pie", "data", "cx", "cy", "outerRadius", "fill", "dataKey", "nameKey", "entry", "index", "Cell", "length", "Tooltip", "Legend", "BarChart", "CartesianGrid", "strokeDasharray", "XAxis", "YAxis", "Bar"],
      mappings: "AAAA;;;;;+BAgCA;;;eAAwBA;;;;8DA9BN;0BACoG;0BACtF;;;;;;AAEhC,UAAU;AACV,MAAMC,aAAaC,yBAAe,CAACC,MAAM,CAAC,CAACC,KAAKC;IAC9C,MAAMC,SAASD,OAAOC,MAAM;IAC5BF,GAAG,CAACE,OAAO,GAAG,AAACF,CAAAA,GAAG,CAACE,OAAO,IAAI,CAAA,IAAK;IACnC,OAAOF;AACT,GAAG,CAAC;AAEJ,MAAMG,UAAUC,OAAOC,OAAO,CAACR,YAAYS,GAAG,CAAC,CAAC,CAACC,MAAMC,MAAM,GAAM,CAAA;QACjED;QACAC;IACF,CAAA;AAEA,UAAU;AACV,MAAMC,WAAWX,yBAAe,CAACC,MAAM,CAAC,CAACC,KAAKC;IAC5C,MAAMS,OAAOT,OAAOS,IAAI;IACxBV,GAAG,CAACU,KAAK,GAAG,AAACV,CAAAA,GAAG,CAACU,KAAK,IAAI,CAAA,IAAK;IAC/B,OAAOV;AACT,GAAG,CAAC;AAEJ,MAAMW,UAAUP,OAAOC,OAAO,CAACI,UAAUH,GAAG,CAAC,CAAC,CAACI,MAAME,MAAM,GAAM,CAAA;QAC/DF;QACAE;IACF,CAAA;AAEA,MAAMC,SAAS;IAAC;IAAW;IAAW;IAAW;CAAU;AAE5C,SAASjB;IACtB,qBACE,sBAACkB;QAAIC,WAAU;;0BACb,sBAACC;gBAAOD,WAAU;;kCAChB,qBAACE;wBAAGF,WAAU;kCAAmC;;kCACjD,qBAACG;wBAAEH,WAAU;kCAAqB;;;;0BAEpC,sBAACD;gBAAIC,WAAU;;kCACb,sBAACD;wBAAIC,WAAU;;0CACb,qBAACI;gCAAGJ,WAAU;0CAA2C;;0CACzD,qBAACK,6BAAmB;gCAACC,OAAM;gCAAOC,QAAQ;0CACxC,cAAA,sBAACC,kBAAQ;;sDACP,qBAACC,aAAG;4CACFC,MAAMtB;4CACNuB,IAAG;4CACHC,IAAG;4CACHC,aAAa;4CACbC,MAAK;4CACLC,SAAQ;4CACRC,SAAQ;sDAEP5B,QAAQG,GAAG,CAAC,CAAC0B,OAAOC,sBACnB,qBAACC,cAAI;oDAAuBL,MAAMhB,MAAM,CAACoB,QAAQpB,OAAOsB,MAAM,CAAC;mDAApD,CAAC,KAAK,EAAEF,OAAO;;sDAG9B,qBAACG,iBAAO;sDACR,qBAACC,gBAAM;;;;;;kCAIb,sBAACvB;wBAAIC,WAAU;;0CACb,qBAACI;gCAAGJ,WAAU;0CAA2C;;0CACzD,qBAACK,6BAAmB;gCAACC,OAAM;gCAAOC,QAAQ;0CACxC,cAAA,sBAACgB,kBAAQ;oCAACb,MAAMd;;sDACd,qBAAC4B,uBAAa;4CAACC,iBAAgB;;sDAC/B,qBAACC,eAAK;4CAACX,SAAQ;;sDACf,qBAACY,eAAK;sDACN,qBAACN,iBAAO;sDACR,qBAACC,gBAAM;sDACP,qBAACM,aAAG;4CAACb,SAAQ;4CAAQD,MAAK;;;;;;;;;;;AAOxC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fa087a653260a9c1dd7b1b987f81e07dd3097625"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2oj4f0zsd1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2oj4f0zsd1();
cov_2oj4f0zsd1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2oj4f0zsd1().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2oj4f0zsd1().f[0]++;
    cov_2oj4f0zsd1().s[2]++;
    return ChangeSuccessReport;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2oj4f0zsd1().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2oj4f0zsd1().s[4]++, _interop_require_default(require("react")));
const _recharts =
/* istanbul ignore next */
(cov_2oj4f0zsd1().s[5]++, require("recharts"));
const _mockdata =
/* istanbul ignore next */
(cov_2oj4f0zsd1().s[6]++, require("../../lib/mock-data"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2oj4f0zsd1().f[1]++;
  cov_2oj4f0zsd1().s[7]++;
  return /* istanbul ignore next */(cov_2oj4f0zsd1().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2oj4f0zsd1().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2oj4f0zsd1().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2oj4f0zsd1().b[0][1]++, {
    default: obj
  });
}
// 按状态统计变更
const statusData =
/* istanbul ignore next */
(cov_2oj4f0zsd1().s[8]++, _mockdata.mockChangesData.reduce((acc, change) => {
  /* istanbul ignore next */
  cov_2oj4f0zsd1().f[2]++;
  const status =
  /* istanbul ignore next */
  (cov_2oj4f0zsd1().s[9]++, change.status);
  /* istanbul ignore next */
  cov_2oj4f0zsd1().s[10]++;
  acc[status] = (
  /* istanbul ignore next */
  (cov_2oj4f0zsd1().b[2][0]++, acc[status]) ||
  /* istanbul ignore next */
  (cov_2oj4f0zsd1().b[2][1]++, 0)) + 1;
  /* istanbul ignore next */
  cov_2oj4f0zsd1().s[11]++;
  return acc;
}, {}));
const pieData =
/* istanbul ignore next */
(cov_2oj4f0zsd1().s[12]++, Object.entries(statusData).map(([name, value]) => {
  /* istanbul ignore next */
  cov_2oj4f0zsd1().f[3]++;
  cov_2oj4f0zsd1().s[13]++;
  return {
    name,
    value
  };
}));
// 按类型统计变更
const typeData =
/* istanbul ignore next */
(cov_2oj4f0zsd1().s[14]++, _mockdata.mockChangesData.reduce((acc, change) => {
  /* istanbul ignore next */
  cov_2oj4f0zsd1().f[4]++;
  const type =
  /* istanbul ignore next */
  (cov_2oj4f0zsd1().s[15]++, change.type);
  /* istanbul ignore next */
  cov_2oj4f0zsd1().s[16]++;
  acc[type] = (
  /* istanbul ignore next */
  (cov_2oj4f0zsd1().b[3][0]++, acc[type]) ||
  /* istanbul ignore next */
  (cov_2oj4f0zsd1().b[3][1]++, 0)) + 1;
  /* istanbul ignore next */
  cov_2oj4f0zsd1().s[17]++;
  return acc;
}, {}));
const barData =
/* istanbul ignore next */
(cov_2oj4f0zsd1().s[18]++, Object.entries(typeData).map(([type, count]) => {
  /* istanbul ignore next */
  cov_2oj4f0zsd1().f[5]++;
  cov_2oj4f0zsd1().s[19]++;
  return {
    type,
    count
  };
}));
const COLORS =
/* istanbul ignore next */
(cov_2oj4f0zsd1().s[20]++, ['#0088FE', '#00C49F', '#FFBB28', '#FF8042']);
function ChangeSuccessReport() {
  /* istanbul ignore next */
  cov_2oj4f0zsd1().f[6]++;
  cov_2oj4f0zsd1().s[21]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "p-10 bg-gray-50 min-h-full",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("header", {
      className: "mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-4xl font-bold text-gray-800",
        children: "Change Success Report"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-gray-500 mt-1",
        children: "This report shows the success rate of changes and the distribution of change types."
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 lg:grid-cols-2 gap-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white p-6 rounded-lg shadow-md",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-xl font-semibold text-gray-800 mb-4",
          children: "Changes by Status"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
          width: "100%",
          height: 300,
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.PieChart, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Pie, {
              data: pieData,
              cx: "50%",
              cy: "50%",
              outerRadius: 80,
              fill: "#8884d8",
              dataKey: "value",
              nameKey: "name",
              children: pieData.map((entry, index) => {
                /* istanbul ignore next */
                cov_2oj4f0zsd1().f[7]++;
                cov_2oj4f0zsd1().s[22]++;
                return /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Cell, {
                  fill: COLORS[index % COLORS.length]
                }, `cell-${index}`);
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Legend, {})]
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white p-6 rounded-lg shadow-md",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-xl font-semibold text-gray-800 mb-4",
          children: "Changes by Type"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
          width: "100%",
          height: 300,
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.BarChart, {
            data: barData,
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
              strokeDasharray: "3 3"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.XAxis, {
              dataKey: "type"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.YAxis, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Legend, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Bar, {
              dataKey: "count",
              fill: "#82ca9d"
            })]
          })
        })]
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,