{"version":3,"names":["_default","Title","Text","cov_1zjlnn2n2e","s","_antd","Typography","Option","Select","TextArea","Input","TICKET_APPROVAL_TEMPLATES","simple","name","description","nodes","id","type","position","x","y","config","connections","approvers","value","mode","timeout","escalation","enabled","target","complex","conditions","field","operator","TicketApprovalWorkflowDesigner","workflow","onSave","onCancel","f","message","App","useApp","setNodes","_react","useState","selectedNode","setSelectedNode","activeTab","setActiveTab","templateModalVisible","setTemplateModalVisible","nodeConfigModalVisible","setNodeConfigModalVisible","form","Form","useForm","useEffect","b","loadTemplate","templateKey","template","success","addNode","newNode","Date","now","getNodeTypeName","getDefaultNodeConfig","prev","names","start","approval","condition","action","end","actions","updateNode","nodeId","updates","map","node","deleteNode","filteredNodes","filter","connId","getNodeIcon","icons","_jsxruntime","jsx","_lucidereact","Play","className","Users","GitBranch","Zap","CheckCircle","getNodeColor","colors","handleSave","length","error","startNodes","endNodes","workflowData","metadata","version","lastModified","toISOString","nodeCount","approvalCount","n","handleNodeConfigSave","values","getFieldsValue","resetFields","renderNode","isSelected","nodeStyle","jsxs","style","left","top","backgroundColor","minWidth","maxWidth","onClick","onDoubleClick","setFieldsValue","strong","Tag","color","Clock","renderConnections","targetId","targetNode","find","startX","startY","endX","endY","midX","controlY","pathData","width","height","markerWidth","markerHeight","refX","refY","orient","markerUnits","d","fill","stroke","strokeWidth","stdDeviation","result","in","markerEnd","Space","Button","icon","Save","FileText","Eye","Divider","Tooltip","title","e","currentTarget","backgroundImage","backgroundSize","Tabs","activeKey","onChange","items","key","label","Settings","children","Card","size","background","level","Edit","danger","Trash2","Row","justify","align","Col","Badge","count","AlertCircle","Modal","open","footer","Alert","showIcon","gutter","Object","entries","span","hoverable","Meta","onOk","okText","cancelText","layout","Item","rules","required","placeholder","rows","Fragment","Radio","Group","InputNumber","min","max","Switch"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/TicketApprovalWorkflowDesigner.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  Button,\n  Space,\n  Modal,\n  Form,\n  Input,\n  Select,\n  Tabs,\n  Typography,\n  Alert,\n  Row,\n  Col,\n  Tag,\n  Divider,\n  Tooltip,\n  Badge,\n  Switch,\n  InputNumber,\n  Radio,\n  App,\n} from \"antd\";\nimport {\n  Save,\n  Play,\n  Eye,\n  Trash2,\n  Edit,\n  Users,\n  CheckCircle,\n  AlertCircle,\n  GitBranch,\n  Zap,\n  FileText,\n  Clock,\n  Settings,\n} from \"lucide-react\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\ninterface ApprovalNode {\n  id: string;\n  type: \"start\" | \"approval\" | \"condition\" | \"action\" | \"end\";\n  name: string;\n  description?: string;\n  position: { x: number; y: number };\n  config: {\n    // 审批节点配置\n    approvers?: {\n      type: \"user\" | \"role\" | \"group\";\n      value: string[];\n      mode: \"all\" | \"any\" | \"sequential\";\n    };\n    // 条件节点配置\n    conditions?: {\n      field: string;\n      operator: string;\n      value: string;\n    }[];\n    // 动作节点配置\n    actions?: {\n      type: \"notification\" | \"assignment\" | \"escalation\" | \"custom\";\n      config: Record<string, unknown>;\n    }[];\n    // 通用配置\n    timeout?: number;\n    escalation?: {\n      enabled: boolean;\n      timeout: number;\n      target: string[];\n    };\n  };\n  connections: string[]; // 连接的下一个节点ID\n}\n\ninterface TicketApprovalWorkflowDesignerProps {\n  workflow?: unknown;\n  onSave: (data: unknown) => void;\n  onCancel: () => void;\n}\n\n// 预定义的工单审批流程模板\nconst TICKET_APPROVAL_TEMPLATES = {\n  simple: {\n    name: \"简单审批流程\",\n    description: \"单级审批，适用于一般工单\",\n    nodes: [\n      {\n        id: \"start\",\n        type: \"start\",\n        name: \"开始\",\n        description: \"工单提交\",\n        position: { x: 100, y: 200 },\n        config: {},\n        connections: [\"approval1\"],\n      },\n      {\n        id: \"approval1\",\n        type: \"approval\",\n        name: \"直属主管审批\",\n        description: \"工单的直属主管进行审批\",\n        position: { x: 300, y: 200 },\n        config: {\n          approvers: {\n            type: \"role\",\n            value: [\"direct_manager\"],\n            mode: \"any\",\n          },\n          timeout: 24,\n          escalation: {\n            enabled: true,\n            timeout: 48,\n            target: [\"department_manager\"],\n          },\n        },\n        connections: [\"end\"],\n      },\n      {\n        id: \"end\",\n        type: \"end\",\n        name: \"结束\",\n        description: \"审批完成\",\n        position: { x: 500, y: 200 },\n        config: {},\n        connections: [],\n      },\n    ],\n  },\n  complex: {\n    name: \"复杂审批流程\",\n    description: \"多级审批，包含条件判断和并行审批\",\n    nodes: [\n      {\n        id: \"start\",\n        type: \"start\",\n        name: \"开始\",\n        description: \"工单提交\",\n        position: { x: 100, y: 200 },\n        config: {},\n        connections: [\"condition1\"],\n      },\n      {\n        id: \"condition1\",\n        type: \"condition\",\n        name: \"金额判断\",\n        description: \"根据工单金额决定审批流程\",\n        position: { x: 300, y: 200 },\n        config: {\n          conditions: [\n            {\n              field: \"amount\",\n              operator: \">=\",\n              value: \"10000\",\n            },\n          ],\n        },\n        connections: [\"approval1\", \"approval2\"],\n      },\n      {\n        id: \"approval1\",\n        type: \"approval\",\n        name: \"直属主管审批\",\n        description: \"金额小于10000，直属主管审批\",\n        position: { x: 500, y: 150 },\n        config: {\n          approvers: {\n            type: \"role\",\n            value: [\"direct_manager\"],\n            mode: \"any\",\n          },\n          timeout: 24,\n        },\n        connections: [\"end\"],\n      },\n      {\n        id: \"approval2\",\n        type: \"approval\",\n        name: \"部门经理审批\",\n        description: \"金额大于等于10000，需要部门经理审批\",\n        position: { x: 500, y: 250 },\n        config: {\n          approvers: {\n            type: \"role\",\n            value: [\"department_manager\"],\n            mode: \"any\",\n          },\n          timeout: 48,\n          escalation: {\n            enabled: true,\n            timeout: 72,\n            target: [\"finance_manager\"],\n          },\n        },\n        connections: [\"approval3\"],\n      },\n      {\n        id: \"approval3\",\n        type: \"approval\",\n        name: \"财务审批\",\n        description: \"高金额工单需要财务审批\",\n        position: { x: 700, y: 250 },\n        config: {\n          approvers: {\n            type: \"role\",\n            value: [\"finance_manager\"],\n            mode: \"any\",\n          },\n          timeout: 24,\n        },\n        connections: [\"end\"],\n      },\n      {\n        id: \"end\",\n        type: \"end\",\n        name: \"结束\",\n        description: \"审批完成\",\n        position: { x: 900, y: 200 },\n        config: {},\n        connections: [],\n      },\n    ],\n  },\n};\n\nconst TicketApprovalWorkflowDesigner: React.FC<\n  TicketApprovalWorkflowDesignerProps\n> = ({ workflow, onSave, onCancel }) => {\n  const { message } = App.useApp();\n  const [nodes, setNodes] = useState<ApprovalNode[]>([]);\n  const [selectedNode, setSelectedNode] = useState<ApprovalNode | null>(null);\n  const [activeTab, setActiveTab] = useState(\"design\");\n  const [templateModalVisible, setTemplateModalVisible] = useState(false);\n  const [nodeConfigModalVisible, setNodeConfigModalVisible] = useState(false);\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (workflow && typeof workflow === \"object\" && \"nodes\" in workflow) {\n      setNodes(workflow.nodes as ApprovalNode[]);\n    } else {\n      // 如果没有现有工作流，显示模板选择\n      setTemplateModalVisible(true);\n    }\n  }, [workflow]);\n\n  const loadTemplate = (templateKey: string) => {\n    const template =\n      TICKET_APPROVAL_TEMPLATES[\n        templateKey as keyof typeof TICKET_APPROVAL_TEMPLATES\n      ];\n    if (template) {\n      setNodes(template.nodes as ApprovalNode[]);\n      setTemplateModalVisible(false);\n      message.success(`已加载模板：${template.name}`);\n    }\n  };\n\n  const addNode = (\n    type: ApprovalNode[\"type\"],\n    position: { x: number; y: number }\n  ) => {\n    const newNode: ApprovalNode = {\n      id: `${type}_${Date.now()}`,\n      type,\n      name: getNodeTypeName(type),\n      description: \"\",\n      position,\n      config: getDefaultNodeConfig(type),\n      connections: [],\n    };\n\n    setNodes((prev) => [...prev, newNode]);\n    setSelectedNode(newNode);\n    setNodeConfigModalVisible(true);\n  };\n\n  const getNodeTypeName = (type: ApprovalNode[\"type\"]) => {\n    const names = {\n      start: \"开始\",\n      approval: \"审批节点\",\n      condition: \"条件判断\",\n      action: \"执行动作\",\n      end: \"结束\",\n    };\n    return names[type];\n  };\n\n  const getDefaultNodeConfig = (type: ApprovalNode[\"type\"]) => {\n    switch (type) {\n      case \"approval\":\n        return {\n          approvers: {\n            type: \"role\" as const,\n            value: [],\n            mode: \"any\" as const,\n          },\n          timeout: 24,\n          escalation: {\n            enabled: false,\n            timeout: 48,\n            target: [],\n          },\n        };\n      case \"condition\":\n        return {\n          conditions: [\n            {\n              field: \"\",\n              operator: \"==\",\n              value: \"\",\n            },\n          ],\n        };\n      case \"action\":\n        return {\n          actions: [],\n        };\n      default:\n        return {};\n    }\n  };\n\n  const updateNode = (nodeId: string, updates: Partial<ApprovalNode>) => {\n    setNodes((prev) =>\n      prev.map((node) => (node.id === nodeId ? { ...node, ...updates } : node))\n    );\n  };\n\n  const deleteNode = (nodeId: string) => {\n    setNodes((prev) => {\n      // 删除节点并清理所有指向该节点的连接\n      const filteredNodes = prev.filter((node) => node.id !== nodeId);\n      return filteredNodes.map((node) => ({\n        ...node,\n        connections: node.connections.filter((connId) => connId !== nodeId),\n      }));\n    });\n    if (selectedNode?.id === nodeId) {\n      setSelectedNode(null);\n    }\n  };\n\n  const getNodeIcon = (type: ApprovalNode[\"type\"]) => {\n    const icons = {\n      start: <Play className=\"w-4 h-4\" />,\n      approval: <Users className=\"w-4 h-4\" />,\n      condition: <GitBranch className=\"w-4 h-4\" />,\n      action: <Zap className=\"w-4 h-4\" />,\n      end: <CheckCircle className=\"w-4 h-4\" />,\n    };\n    return icons[type];\n  };\n\n  const getNodeColor = (type: ApprovalNode[\"type\"]) => {\n    const colors = {\n      start: \"#52c41a\",\n      approval: \"#1890ff\",\n      condition: \"#faad14\",\n      action: \"#722ed1\",\n      end: \"#f5222d\",\n    };\n    return colors[type];\n  };\n\n  const handleSave = () => {\n    // 验证工作流\n    if (nodes.length === 0) {\n      message.error(\"工作流不能为空\");\n      return;\n    }\n\n    const startNodes = nodes.filter((node) => node.type === \"start\");\n    const endNodes = nodes.filter((node) => node.type === \"end\");\n\n    if (startNodes.length !== 1) {\n      message.error(\"工作流必须有且仅有一个开始节点\");\n      return;\n    }\n\n    if (endNodes.length === 0) {\n      message.error(\"工作流必须至少有一个结束节点\");\n      return;\n    }\n\n    const workflowData = {\n      type: \"ticket_approval\",\n      name: \"工单审批流程\",\n      description: \"工单审批流程配置\",\n      nodes,\n      metadata: {\n        version: \"1.0.0\",\n        lastModified: new Date().toISOString(),\n        nodeCount: nodes.length,\n        approvalCount: nodes.filter((n) => n.type === \"approval\").length,\n      },\n    };\n\n    onSave(workflowData);\n    message.success(\"工作流保存成功\");\n  };\n\n  const handleNodeConfigSave = () => {\n    const values = form.getFieldsValue();\n    if (selectedNode) {\n      updateNode(selectedNode.id, {\n        name: values.name,\n        description: values.description,\n        config: values.config,\n      });\n      setNodeConfigModalVisible(false);\n      setSelectedNode(null);\n      form.resetFields();\n      message.success(\"节点配置已保存\");\n    }\n  };\n\n  const renderNode = (node: ApprovalNode) => {\n    const isSelected = selectedNode?.id === node.id;\n    const nodeStyle = {\n      start: \"bg-gradient-to-r from-green-400 to-green-600\",\n      approval: \"bg-gradient-to-r from-blue-400 to-blue-600\",\n      condition: \"bg-gradient-to-r from-yellow-400 to-yellow-600\",\n      action: \"bg-gradient-to-r from-purple-400 to-purple-600\",\n      end: \"bg-gradient-to-r from-red-400 to-red-600\",\n    };\n\n    return (\n      <div\n        key={node.id}\n        className={`absolute border-2 rounded-xl p-4 cursor-pointer transition-all duration-300 hover:scale-105 shadow-md ${\n          isSelected\n            ? \"border-blue-500 shadow-xl ring-2 ring-blue-200\"\n            : \"border-gray-200 hover:border-gray-300 hover:shadow-lg\"\n        }`}\n        style={{\n          left: node.position.x,\n          top: node.position.y,\n          backgroundColor: \"white\",\n          minWidth: 140,\n          maxWidth: 200,\n        }}\n        onClick={() => setSelectedNode(node)}\n        onDoubleClick={() => {\n          setSelectedNode(node);\n          form.setFieldsValue({\n            name: node.name,\n            description: node.description,\n            config: node.config,\n          });\n          setNodeConfigModalVisible(true);\n        }}\n      >\n        {/* 节点头部 */}\n        <div\n          className={`flex items-center gap-2 mb-2 p-2 rounded-lg text-white ${\n            nodeStyle[node.type as keyof typeof nodeStyle]\n          }`}\n        >\n          <div className=\"w-5 h-5 flex items-center justify-center\">\n            {getNodeIcon(node.type)}\n          </div>\n          <Text strong className=\"text-sm text-white\">\n            {node.name}\n          </Text>\n        </div>\n\n        {/* 节点描述 */}\n        {node.description && (\n          <div className=\"mb-2\">\n            <Text type=\"secondary\" className=\"text-xs\">\n              {node.description}\n            </Text>\n          </div>\n        )}\n\n        {/* 审批节点特殊显示 */}\n        {node.type === \"approval\" && node.config.approvers && (\n          <div className=\"flex flex-wrap gap-1\">\n            <Tag color=\"blue\" className=\"text-xs\">\n              <Users className=\"w-3 h-3 inline mr-1\" />\n              {node.config.approvers.value?.length || 0} 审批人\n            </Tag>\n            <Tag color=\"orange\" className=\"text-xs\">\n              <Clock className=\"w-3 h-3 inline mr-1\" />\n              {node.config.timeout || 24}h\n            </Tag>\n          </div>\n        )}\n\n        {/* 条件节点特殊显示 */}\n        {node.type === \"condition\" && node.config.conditions && (\n          <div>\n            <Tag color=\"gold\" className=\"text-xs\">\n              {node.config.conditions.length || 0} 条件\n            </Tag>\n          </div>\n        )}\n\n        {/* 动作节点特殊显示 */}\n        {node.type === \"action\" && node.config.actions && (\n          <div>\n            <Tag color=\"purple\" className=\"text-xs\">\n              {node.config.actions.length || 0} 动作\n            </Tag>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderConnections = () => {\n    return nodes.map((node) =>\n      node.connections.map((targetId) => {\n        const targetNode = nodes.find((n) => n.id === targetId);\n        if (!targetNode) return null;\n\n        const startX = node.position.x + 70; // 节点中心点\n        const startY = node.position.y + 50;\n        const endX = targetNode.position.x + 70;\n        const endY = targetNode.position.y + 50;\n\n        // 计算中间控制点，创建贝塞尔曲线\n        const midX = (startX + endX) / 2;\n        const controlY = startY < endY ? startY + 50 : startY - 50;\n\n        const pathData = `M ${startX} ${startY} Q ${midX} ${controlY} ${endX} ${endY}`;\n\n        return (\n          <svg\n            key={`${node.id}-${targetId}`}\n            className=\"absolute pointer-events-none\"\n            style={{\n              left: 0,\n              top: 0,\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          >\n            <defs>\n              <marker\n                id=\"arrowhead-blue\"\n                markerWidth=\"12\"\n                markerHeight=\"8\"\n                refX=\"10\"\n                refY=\"4\"\n                orient=\"auto\"\n                markerUnits=\"strokeWidth\"\n              >\n                <path\n                  d=\"M0,0 L0,8 L12,4 z\"\n                  fill=\"#3b82f6\"\n                  stroke=\"#3b82f6\"\n                  strokeWidth=\"1\"\n                />\n              </marker>\n              <filter id=\"glow\">\n                <feGaussianBlur stdDeviation=\"2\" result=\"coloredBlur\" />\n                <feMerge>\n                  <feMergeNode in=\"coloredBlur\" />\n                  <feMergeNode in=\"SourceGraphic\" />\n                </feMerge>\n              </filter>\n            </defs>\n            <path\n              d={pathData}\n              stroke=\"#3b82f6\"\n              strokeWidth=\"3\"\n              fill=\"none\"\n              markerEnd=\"url(#arrowhead-blue)\"\n              filter=\"url(#glow)\"\n              className=\"drop-shadow-sm\"\n            />\n          </svg>\n        );\n      })\n    );\n  };\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* 工具栏 */}\n      <div className=\"border-b border-gray-200 p-4 bg-white\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <Space>\n              <Button\n                type=\"primary\"\n                icon={<Save className=\"w-4 h-4\" />}\n                onClick={handleSave}\n              >\n                保存工作流\n              </Button>\n              <Button\n                icon={<FileText className=\"w-4 h-4\" />}\n                onClick={() => setTemplateModalVisible(true)}\n              >\n                加载模板\n              </Button>\n              <Button icon={<Eye className=\"w-4 h-4\" />}>预览</Button>\n            </Space>\n\n            <Divider type=\"vertical\" />\n\n            <Space>\n              <Tooltip title=\"添加审批节点\">\n                <Button\n                  icon={<Users className=\"w-4 h-4\" />}\n                  onClick={() => addNode(\"approval\", { x: 200, y: 200 })}\n                >\n                  审批\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"添加条件判断\">\n                <Button\n                  icon={<GitBranch className=\"w-4 h-4\" />}\n                  onClick={() => addNode(\"condition\", { x: 200, y: 300 })}\n                >\n                  条件\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"添加执行动作\">\n                <Button\n                  icon={<Zap className=\"w-4 h-4\" />}\n                  onClick={() => addNode(\"action\", { x: 200, y: 400 })}\n                >\n                  动作\n                </Button>\n              </Tooltip>\n            </Space>\n          </div>\n\n          <Space>\n            <Button onClick={onCancel}>取消</Button>\n          </Space>\n        </div>\n      </div>\n\n      {/* 主要内容区域 */}\n      <div className=\"flex-1 flex\">\n        {/* 设计画布 */}\n        <div className=\"flex-1 relative bg-gray-50 overflow-auto\">\n          <div\n            className=\"relative w-full h-full min-w-[1200px] min-h-[800px]\"\n            onClick={(e) => {\n              if (e.target === e.currentTarget) {\n                setSelectedNode(null);\n              }\n            }}\n          >\n            {renderConnections()}\n            {nodes.map(renderNode)}\n\n            {/* 网格背景 */}\n            <div\n              className=\"absolute inset-0 pointer-events-none opacity-20\"\n              style={{\n                backgroundImage: `\n                  radial-gradient(circle, #999 1px, transparent 1px)\n                `,\n                backgroundSize: \"20px 20px\",\n              }}\n            />\n          </div>\n        </div>\n\n        {/* 右侧属性面板 */}\n        <div className=\"w-80 border-l border-gray-200 bg-white overflow-hidden\">\n          <Tabs\n            activeKey={activeTab}\n            onChange={setActiveTab}\n            className=\"h-full\"\n            items={[\n              {\n                key: \"properties\",\n                label: (\n                  <span className=\"flex items-center gap-2\">\n                    <Settings className=\"w-4 h-4\" />\n                    节点属性\n                  </span>\n                ),\n                children: (\n                  <div className=\"p-4 h-full overflow-y-auto\">\n                    {selectedNode ? (\n                      <div className=\"space-y-4\">\n                        {/* 节点基本信息 */}\n                        <Card size=\"small\" className=\"border-0 bg-gray-50\">\n                          <div className=\"flex items-center gap-3 mb-3\">\n                            <div\n                              className=\"w-10 h-10 rounded-full flex items-center justify-center text-white\"\n                              style={{\n                                background: `linear-gradient(135deg, ${getNodeColor(\n                                  selectedNode.type\n                                )}dd, ${getNodeColor(selectedNode.type)})`,\n                              }}\n                            >\n                              {getNodeIcon(selectedNode.type)}\n                            </div>\n                            <div>\n                              <Title level={5} className=\"!mb-0\">\n                                {selectedNode.name}\n                              </Title>\n                              <Text type=\"secondary\" className=\"text-xs\">\n                                {selectedNode.type === \"start\" && \"流程起点\"}\n                                {selectedNode.type === \"approval\" && \"审批节点\"}\n                                {selectedNode.type === \"condition\" &&\n                                  \"条件分支\"}\n                                {selectedNode.type === \"action\" && \"动作执行\"}\n                                {selectedNode.type === \"end\" && \"流程终点\"}\n                              </Text>\n                            </div>\n                          </div>\n                          {selectedNode.description && (\n                            <Text type=\"secondary\" className=\"text-sm\">\n                              {selectedNode.description}\n                            </Text>\n                          )}\n                        </Card>\n\n                        {/* 操作按钮 */}\n                        <div className=\"grid grid-cols-2 gap-2\">\n                          <Button\n                            type=\"primary\"\n                            icon={<Edit className=\"w-4 h-4\" />}\n                            onClick={() => {\n                              form.setFieldsValue({\n                                name: selectedNode.name,\n                                description: selectedNode.description,\n                                config: selectedNode.config,\n                              });\n                              setNodeConfigModalVisible(true);\n                            }}\n                            className=\"h-10\"\n                          >\n                            编辑配置\n                          </Button>\n                          <Button\n                            danger\n                            icon={<Trash2 className=\"w-4 h-4\" />}\n                            onClick={() => deleteNode(selectedNode.id)}\n                            className=\"h-10\"\n                          >\n                            删除节点\n                          </Button>\n                        </div>\n\n                        {/* 审批节点详细配置 */}\n                        {selectedNode.type === \"approval\" && (\n                          <Card\n                            size=\"small\"\n                            title=\"审批配置\"\n                            className=\"border border-blue-200\"\n                          >\n                            <div className=\"space-y-3\">\n                              <Row justify=\"space-between\" align=\"middle\">\n                                <Col>\n                                  <Text className=\"flex items-center gap-1\">\n                                    <Users className=\"w-4 h-4\" />\n                                    审批人数量\n                                  </Text>\n                                </Col>\n                                <Col>\n                                  <Badge\n                                    count={\n                                      selectedNode.config.approvers?.value\n                                        ?.length || 0\n                                    }\n                                    style={{ backgroundColor: \"#1890ff\" }}\n                                  />\n                                </Col>\n                              </Row>\n                              <Row justify=\"space-between\" align=\"middle\">\n                                <Col>\n                                  <Text className=\"flex items-center gap-1\">\n                                    <CheckCircle className=\"w-4 h-4\" />\n                                    审批模式\n                                  </Text>\n                                </Col>\n                                <Col>\n                                  <Tag color=\"blue\">\n                                    {selectedNode.config.approvers?.mode ===\n                                    \"all\"\n                                      ? \"全部审批\"\n                                      : selectedNode.config.approvers?.mode ===\n                                        \"any\"\n                                      ? \"任一审批\"\n                                      : selectedNode.config.approvers?.mode ===\n                                        \"sequential\"\n                                      ? \"顺序审批\"\n                                      : \"任一审批\"}\n                                  </Tag>\n                                </Col>\n                              </Row>\n                              <Row justify=\"space-between\" align=\"middle\">\n                                <Col>\n                                  <Text className=\"flex items-center gap-1\">\n                                    <Clock className=\"w-4 h-4\" />\n                                    超时时间\n                                  </Text>\n                                </Col>\n                                <Col>\n                                  <Tag color=\"orange\">\n                                    {selectedNode.config.timeout || 24}小时\n                                  </Tag>\n                                </Col>\n                              </Row>\n                              {selectedNode.config.escalation?.enabled && (\n                                <Row justify=\"space-between\" align=\"middle\">\n                                  <Col>\n                                    <Text className=\"flex items-center gap-1\">\n                                      <AlertCircle className=\"w-4 h-4\" />\n                                      升级策略\n                                    </Text>\n                                  </Col>\n                                  <Col>\n                                    <Tag color=\"red\">已启用</Tag>\n                                  </Col>\n                                </Row>\n                              )}\n                            </div>\n                          </Card>\n                        )}\n\n                        {/* 条件节点详细配置 */}\n                        {selectedNode.type === \"condition\" &&\n                          selectedNode.config.conditions && (\n                            <Card\n                              size=\"small\"\n                              title=\"条件配置\"\n                              className=\"border border-yellow-200\"\n                            >\n                              <div className=\"space-y-2\">\n                                <Row justify=\"space-between\" align=\"middle\">\n                                  <Col>\n                                    <Text>条件数量</Text>\n                                  </Col>\n                                  <Col>\n                                    <Badge\n                                      count={\n                                        selectedNode.config.conditions.length\n                                      }\n                                      style={{ backgroundColor: \"#faad14\" }}\n                                    />\n                                  </Col>\n                                </Row>\n                              </div>\n                            </Card>\n                          )}\n\n                        {/* 动作节点详细配置 */}\n                        {selectedNode.type === \"action\" &&\n                          selectedNode.config.actions && (\n                            <Card\n                              size=\"small\"\n                              title=\"动作配置\"\n                              className=\"border border-purple-200\"\n                            >\n                              <div className=\"space-y-2\">\n                                <Row justify=\"space-between\" align=\"middle\">\n                                  <Col>\n                                    <Text>动作数量</Text>\n                                  </Col>\n                                  <Col>\n                                    <Badge\n                                      count={selectedNode.config.actions.length}\n                                      style={{ backgroundColor: \"#722ed1\" }}\n                                    />\n                                  </Col>\n                                </Row>\n                              </div>\n                            </Card>\n                          )}\n                      </div>\n                    ) : (\n                      <div className=\"text-center text-gray-500 py-8\">\n                        <FileText className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n                        <p>选择一个节点来查看其属性</p>\n                      </div>\n                    )}\n                  </div>\n                ),\n              },\n              {\n                key: \"overview\",\n                label: \"概览\",\n                children: (\n                  <div className=\"p-4\">\n                    <Title level={5}>工作流概览</Title>\n                    <div className=\"space-y-4\">\n                      <div className=\"flex justify-between\">\n                        <Text>节点总数:</Text>\n                        <Badge count={nodes.length} />\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <Text>审批节点:</Text>\n                        <Badge\n                          count={\n                            nodes.filter((n) => n.type === \"approval\").length\n                          }\n                        />\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <Text>条件节点:</Text>\n                        <Badge\n                          count={\n                            nodes.filter((n) => n.type === \"condition\").length\n                          }\n                        />\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <Text>动作节点:</Text>\n                        <Badge\n                          count={\n                            nodes.filter((n) => n.type === \"action\").length\n                          }\n                        />\n                      </div>\n                    </div>\n\n                    <Divider />\n\n                    <Title level={5}>验证状态</Title>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center gap-2\">\n                        {nodes.filter((n) => n.type === \"start\").length ===\n                        1 ? (\n                          <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                        ) : (\n                          <AlertCircle className=\"w-4 h-4 text-red-500\" />\n                        )}\n                        <Text>开始节点唯一</Text>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        {nodes.filter((n) => n.type === \"end\").length > 0 ? (\n                          <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                        ) : (\n                          <AlertCircle className=\"w-4 h-4 text-red-500\" />\n                        )}\n                        <Text>存在结束节点</Text>\n                      </div>\n                    </div>\n                  </div>\n                ),\n              },\n            ]}\n          />\n        </div>\n      </div>\n\n      {/* 模板选择模态框 */}\n      <Modal\n        title=\"选择工作流模板\"\n        open={templateModalVisible}\n        onCancel={() => setTemplateModalVisible(false)}\n        width={800}\n        footer={null}\n      >\n        <div className=\"space-y-4\">\n          <Alert\n            message=\"工单审批流程模板\"\n            description=\"选择一个预定义的模板来快速开始设计您的工单审批流程\"\n            type=\"info\"\n            showIcon\n          />\n\n          <Row gutter={[16, 16]}>\n            {Object.entries(TICKET_APPROVAL_TEMPLATES).map(\n              ([key, template]) => (\n                <Col span={12} key={key}>\n                  <Card\n                    hoverable\n                    onClick={() => loadTemplate(key)}\n                    className=\"h-full\"\n                  >\n                    <Card.Meta\n                      title={template.name}\n                      description={template.description}\n                    />\n                    <div className=\"mt-3\">\n                      <Text type=\"secondary\">\n                        节点数量: {template.nodes.length}\n                      </Text>\n                    </div>\n                  </Card>\n                </Col>\n              )\n            )}\n          </Row>\n\n          <div className=\"text-center pt-4\">\n            <Button\n              onClick={() => {\n                setNodes([]);\n                setTemplateModalVisible(false);\n              }}\n            >\n              从空白开始\n            </Button>\n          </div>\n        </div>\n      </Modal>\n\n      {/* 节点配置模态框 */}\n      <Modal\n        title={`配置节点: ${selectedNode?.name || \"\"}`}\n        open={nodeConfigModalVisible}\n        onOk={handleNodeConfigSave}\n        onCancel={() => {\n          setNodeConfigModalVisible(false);\n          form.resetFields();\n        }}\n        width={600}\n        okText=\"保存配置\"\n        cancelText=\"取消\"\n      >\n        <Form form={form} layout=\"vertical\">\n          <Form.Item\n            label=\"节点名称\"\n            name=\"name\"\n            rules={[{ required: true, message: \"请输入节点名称\" }]}\n          >\n            <Input placeholder=\"输入节点名称\" />\n          </Form.Item>\n\n          <Form.Item label=\"节点描述\" name=\"description\">\n            <TextArea rows={2} placeholder=\"输入节点描述\" />\n          </Form.Item>\n\n          {selectedNode?.type === \"approval\" && (\n            <>\n              <Form.Item\n                label=\"审批人类型\"\n                name={[\"config\", \"approvers\", \"type\"]}\n              >\n                <Radio.Group>\n                  <Radio value=\"user\">指定用户</Radio>\n                  <Radio value=\"role\">角色</Radio>\n                  <Radio value=\"group\">用户组</Radio>\n                </Radio.Group>\n              </Form.Item>\n\n              <Form.Item\n                label=\"审批模式\"\n                name={[\"config\", \"approvers\", \"mode\"]}\n              >\n                <Select>\n                  <Option value=\"any\">任一审批</Option>\n                  <Option value=\"all\">全部审批</Option>\n                  <Option value=\"sequential\">顺序审批</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item label=\"超时时间(小时)\" name={[\"config\", \"timeout\"]}>\n                <InputNumber min={1} max={168} />\n              </Form.Item>\n\n              <Form.Item\n                label=\"启用升级\"\n                name={[\"config\", \"escalation\", \"enabled\"]}\n              >\n                <Switch />\n              </Form.Item>\n            </>\n          )}\n\n          {selectedNode?.type === \"condition\" && (\n            <Form.Item label=\"条件设置\">\n              <Alert\n                message=\"条件配置\"\n                description=\"条件节点用于根据工单字段值进行流程分支判断\"\n                type=\"info\"\n                className=\"mb-3\"\n              />\n              {/* 这里可以添加更复杂的条件配置界面 */}\n            </Form.Item>\n          )}\n\n          {selectedNode?.type === \"action\" && (\n            <Form.Item label=\"动作设置\">\n              <Alert\n                message=\"动作配置\"\n                description=\"动作节点用于执行自动化操作，如发送通知、更新字段等\"\n                type=\"info\"\n                className=\"mb-3\"\n              />\n              {/* 这里可以添加动作配置界面 */}\n            </Form.Item>\n          )}\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TicketApprovalWorkflowDesigner;\n"],"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","ignoreList":[]}