3785cdeb54619a82a14d5cf8d680b511
// 数据验证工具库
// 基础验证函数
"use strict";

/* istanbul ignore next */
function cov_2adw3qu3jq() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/validation.ts";
  var hash = "fd44942242d4e4bcd57333a2f0ecab2b8bd6932a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/validation.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 6,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "3": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 25
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 26
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 26
        }
      },
      "9": {
        start: {
          line: 30,
          column: 15
        },
        end: {
          line: 30,
          column: 31
        }
      },
      "10": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 101,
          column: 1
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 64
        }
      },
      "12": {
        start: {
          line: 34,
          column: 51
        },
        end: {
          line: 34,
          column: 64
        }
      },
      "13": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 70
        }
      },
      "14": {
        start: {
          line: 35,
          column: 39
        },
        end: {
          line: 35,
          column: 70
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 58
        }
      },
      "16": {
        start: {
          line: 36,
          column: 34
        },
        end: {
          line: 36,
          column: 58
        }
      },
      "17": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 20
        }
      },
      "18": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 41,
          column: 55
        }
      },
      "19": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 38
        }
      },
      "20": {
        start: {
          line: 46,
          column: 27
        },
        end: {
          line: 46,
          column: 42
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 38
        }
      },
      "22": {
        start: {
          line: 50,
          column: 22
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "23": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "24": {
        start: {
          line: 53,
          column: 22
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "25": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "26": {
        start: {
          line: 57,
          column: 21
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "27": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 32
        }
      },
      "28": {
        start: {
          line: 60,
          column: 21
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "29": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 32
        }
      },
      "30": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "31": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 27
        }
      },
      "32": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 24
        }
      },
      "33": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 25
        }
      },
      "34": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 64
        }
      },
      "35": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 47
        }
      },
      "36": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 25
        }
      },
      "37": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 26
        }
      },
      "38": {
        start: {
          line: 90,
          column: 21
        },
        end: {
          line: 90,
          column: 36
        }
      },
      "39": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 38
        }
      },
      "40": {
        start: {
          line: 94,
          column: 22
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "41": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 37
        }
      },
      "42": {
        start: {
          line: 98,
          column: 22
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "43": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 43
        }
      },
      "44": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "45": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 39
        }
      },
      "46": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 41
        }
      },
      "47": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 20
        }
      },
      "48": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 61
        }
      },
      "49": {
        start: {
          line: 113,
          column: 30
        },
        end: {
          line: 113,
          column: 59
        }
      },
      "50": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 20
        }
      },
      "51": {
        start: {
          line: 118,
          column: 23
        },
        end: {
          line: 118,
          column: 25
        }
      },
      "52": {
        start: {
          line: 119,
          column: 22
        },
        end: {
          line: 119,
          column: 26
        }
      },
      "53": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 133,
          column: 11
        }
      },
      "54": {
        start: {
          line: 121,
          column: 31
        },
        end: {
          line: 121,
          column: 52
        }
      },
      "55": {
        start: {
          line: 122,
          column: 31
        },
        end: {
          line: 122,
          column: 46
        }
      },
      "56": {
        start: {
          line: 123,
          column: 32
        },
        end: {
          line: 123,
          column: 34
        }
      },
      "57": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 129,
          column: 15
        }
      },
      "58": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 128,
          column: 17
        }
      },
      "59": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 51
        }
      },
      "60": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 127,
          column: 36
        }
      },
      "61": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "62": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 48
        }
      },
      "63": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 137,
          column: 10
        }
      },
      "64": {
        start: {
          line: 141,
          column: 27
        },
        end: {
          line: 141,
          column: 54
        }
      },
      "65": {
        start: {
          line: 142,
          column: 23
        },
        end: {
          line: 142,
          column: 25
        }
      },
      "66": {
        start: {
          line: 143,
          column: 22
        },
        end: {
          line: 143,
          column: 26
        }
      },
      "67": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "68": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "69": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 42
        }
      },
      "70": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 32
        }
      },
      "71": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 153,
          column: 10
        }
      },
      "72": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 24
        }
      },
      "73": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 20
        }
      },
      "74": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 37
        }
      },
      "75": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 20
        }
      },
      "76": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 24
        }
      },
      "77": {
        start: {
          line: 169,
          column: 30
        },
        end: {
          line: 251,
          column: 1
        }
      },
      "78": {
        start: {
          line: 171,
          column: 38
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "79": {
        start: {
          line: 176,
          column: 38
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "80": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 60
        }
      },
      "81": {
        start: {
          line: 178,
          column: 47
        },
        end: {
          line: 178,
          column: 60
        }
      },
      "82": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 47
        }
      },
      "83": {
        start: {
          line: 184,
          column: 38
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "84": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 60
        }
      },
      "85": {
        start: {
          line: 186,
          column: 47
        },
        end: {
          line: 186,
          column: 60
        }
      },
      "86": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 47
        }
      },
      "87": {
        start: {
          line: 192,
          column: 34
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "88": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 60
        }
      },
      "89": {
        start: {
          line: 194,
          column: 47
        },
        end: {
          line: 194,
          column: 60
        }
      },
      "90": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 66
        }
      },
      "91": {
        start: {
          line: 200,
          column: 32
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "92": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 60
        }
      },
      "93": {
        start: {
          line: 202,
          column: 47
        },
        end: {
          line: 202,
          column: 60
        }
      },
      "94": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 43
        }
      },
      "95": {
        start: {
          line: 208,
          column: 32
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "96": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 60
        }
      },
      "97": {
        start: {
          line: 210,
          column: 47
        },
        end: {
          line: 210,
          column: 60
        }
      },
      "98": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 43
        }
      },
      "99": {
        start: {
          line: 216,
          column: 33
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "100": {
        start: {
          line: 218,
          column: 28
        },
        end: {
          line: 218,
          column: 41
        }
      },
      "101": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 219,
          column: 63
        }
      },
      "102": {
        start: {
          line: 224,
          column: 36
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "103": {
        start: {
          line: 226,
          column: 28
        },
        end: {
          line: 226,
          column: 41
        }
      },
      "104": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 63
        }
      },
      "105": {
        start: {
          line: 232,
          column: 35
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "106": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 57
        }
      },
      "107": {
        start: {
          line: 239,
          column: 32
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "108": {
        start: {
          line: 240,
          column: 32
        },
        end: {
          line: 240,
          column: 64
        }
      },
      "109": {
        start: {
          line: 244,
          column: 32
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "110": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 60
        }
      },
      "111": {
        start: {
          line: 246,
          column: 47
        },
        end: {
          line: 246,
          column: 60
        }
      },
      "112": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 56
        }
      },
      "113": {
        start: {
          line: 252,
          column: 19
        },
        end: {
          line: 287,
          column: 1
        }
      },
      "114": {
        start: {
          line: 254,
          column: 19
        },
        end: {
          line: 254,
          column: 31
        }
      },
      "115": {
        start: {
          line: 256,
          column: 26
        },
        end: {
          line: 256,
          column: 45
        }
      },
      "116": {
        start: {
          line: 258,
          column: 26
        },
        end: {
          line: 258,
          column: 45
        }
      },
      "117": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 45
        }
      },
      "118": {
        start: {
          line: 265,
          column: 20
        },
        end: {
          line: 265,
          column: 49
        }
      },
      "119": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 32
        }
      },
      "120": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 29
        }
      },
      "121": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 56
        }
      },
      "122": {
        start: {
          line: 275,
          column: 24
        },
        end: {
          line: 275,
          column: 48
        }
      },
      "123": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 278,
          column: 9
        }
      },
      "124": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 72
        }
      },
      "125": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 21
        }
      },
      "126": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "127": {
        start: {
          line: 288,
          column: 26
        },
        end: {
          line: 379,
          column: 1
        }
      },
      "128": {
        start: {
          line: 289,
          column: 28
        },
        end: {
          line: 289,
          column: 61
        }
      },
      "129": {
        start: {
          line: 290,
          column: 32
        },
        end: {
          line: 290,
          column: 56
        }
      },
      "130": {
        start: {
          line: 291,
          column: 44
        },
        end: {
          line: 291,
          column: 71
        }
      },
      "131": {
        start: {
          line: 292,
          column: 22
        },
        end: {
          line: 292,
          column: 37
        }
      },
      "132": {
        start: {
          line: 294,
          column: 30
        },
        end: {
          line: 298,
          column: 6
        }
      },
      "133": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 43
        }
      },
      "134": {
        start: {
          line: 300,
          column: 31
        },
        end: {
          line: 304,
          column: 6
        }
      },
      "135": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 45
        }
      },
      "136": {
        start: {
          line: 306,
          column: 24
        },
        end: {
          line: 319,
          column: 10
        }
      },
      "137": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 310,
          column: 16
        }
      },
      "138": {
        start: {
          line: 307,
          column: 25
        },
        end: {
          line: 310,
          column: 13
        }
      },
      "139": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 318,
          column: 11
        }
      },
      "140": {
        start: {
          line: 313,
          column: 30
        },
        end: {
          line: 315,
          column: 13
        }
      },
      "141": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 40
        }
      },
      "142": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 29
        }
      },
      "143": {
        start: {
          line: 321,
          column: 21
        },
        end: {
          line: 333,
          column: 6
        }
      },
      "144": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 30
        }
      },
      "145": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "146": {
        start: {
          line: 324,
          column: 27
        },
        end: {
          line: 324,
          column: 51
        }
      },
      "147": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 37
        }
      },
      "148": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 34
        }
      },
      "149": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 35
        }
      },
      "150": {
        start: {
          line: 335,
          column: 26
        },
        end: {
          line: 345,
          column: 6
        }
      },
      "151": {
        start: {
          line: 336,
          column: 23
        },
        end: {
          line: 336,
          column: 74
        }
      },
      "152": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 340,
          column: 16
        }
      },
      "153": {
        start: {
          line: 337,
          column: 27
        },
        end: {
          line: 340,
          column: 13
        }
      },
      "154": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 30
        }
      },
      "155": {
        start: {
          line: 347,
          column: 18
        },
        end: {
          line: 352,
          column: 6
        }
      },
      "156": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 29
        }
      },
      "157": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 22
        }
      },
      "158": {
        start: {
          line: 354,
          column: 26
        },
        end: {
          line: 359,
          column: 6
        }
      },
      "159": {
        start: {
          line: 355,
          column: 28
        },
        end: {
          line: 355,
          column: 45
        }
      },
      "160": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 82
        }
      },
      "161": {
        start: {
          line: 361,
          column: 26
        },
        end: {
          line: 365,
          column: 6
        }
      },
      "162": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 69
        }
      },
      "163": {
        start: {
          line: 366,
          column: 4
        },
        end: {
          line: 378,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 16
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 16
          }
        },
        loc: {
          start: {
            line: 14,
            column: 26
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 17,
            column: 28
          }
        },
        loc: {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 20,
            column: 17
          }
        },
        loc: {
          start: {
            line: 20,
            column: 27
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 23,
            column: 24
          }
        },
        loc: {
          start: {
            line: 23,
            column: 34
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 26,
            column: 17
          }
        },
        loc: {
          start: {
            line: 26,
            column: 27
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 33,
            column: 14
          },
          end: {
            line: 33,
            column: 15
          }
        },
        loc: {
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 33
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 40,
            column: 11
          },
          end: {
            line: 40,
            column: 12
          }
        },
        loc: {
          start: {
            line: 40,
            column: 20
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 40
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 45,
            column: 11
          },
          end: {
            line: 45,
            column: 12
          }
        },
        loc: {
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 45
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 16
          }
        },
        loc: {
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 52,
            column: 9
          }
        },
        line: 50
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 23
          }
        },
        loc: {
          start: {
            line: 50,
            column: 31
          },
          end: {
            line: 52,
            column: 9
          }
        },
        line: 50
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 53,
            column: 15
          },
          end: {
            line: 53,
            column: 16
          }
        },
        loc: {
          start: {
            line: 53,
            column: 22
          },
          end: {
            line: 55,
            column: 9
          }
        },
        line: 53
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 53,
            column: 22
          },
          end: {
            line: 53,
            column: 23
          }
        },
        loc: {
          start: {
            line: 53,
            column: 31
          },
          end: {
            line: 55,
            column: 9
          }
        },
        line: 53
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 57,
            column: 14
          },
          end: {
            line: 57,
            column: 15
          }
        },
        loc: {
          start: {
            line: 57,
            column: 21
          },
          end: {
            line: 59,
            column: 9
          }
        },
        line: 57
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 57,
            column: 21
          },
          end: {
            line: 57,
            column: 22
          }
        },
        loc: {
          start: {
            line: 57,
            column: 30
          },
          end: {
            line: 59,
            column: 9
          }
        },
        line: 57
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 60,
            column: 14
          },
          end: {
            line: 60,
            column: 15
          }
        },
        loc: {
          start: {
            line: 60,
            column: 21
          },
          end: {
            line: 62,
            column: 9
          }
        },
        line: 60
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 60,
            column: 21
          },
          end: {
            line: 60,
            column: 22
          }
        },
        loc: {
          start: {
            line: 60,
            column: 30
          },
          end: {
            line: 62,
            column: 9
          }
        },
        line: 60
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 64,
            column: 9
          },
          end: {
            line: 64,
            column: 10
          }
        },
        loc: {
          start: {
            line: 64,
            column: 18
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 64
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        },
        loc: {
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 73
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 77,
            column: 13
          },
          end: {
            line: 77,
            column: 14
          }
        },
        loc: {
          start: {
            line: 77,
            column: 22
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 77
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 81,
            column: 14
          },
          end: {
            line: 81,
            column: 15
          }
        },
        loc: {
          start: {
            line: 81,
            column: 23
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 81
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 85,
            column: 17
          },
          end: {
            line: 85,
            column: 18
          }
        },
        loc: {
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 85
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 89,
            column: 10
          },
          end: {
            line: 89,
            column: 11
          }
        },
        loc: {
          start: {
            line: 89,
            column: 19
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 89
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 94,
            column: 13
          },
          end: {
            line: 94,
            column: 14
          }
        },
        loc: {
          start: {
            line: 94,
            column: 22
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 94
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 94,
            column: 22
          },
          end: {
            line: 94,
            column: 23
          }
        },
        loc: {
          start: {
            line: 94,
            column: 31
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 94
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 98,
            column: 11
          },
          end: {
            line: 98,
            column: 12
          }
        },
        loc: {
          start: {
            line: 98,
            column: 22
          },
          end: {
            line: 100,
            column: 9
          }
        },
        line: 98
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 98,
            column: 22
          },
          end: {
            line: 98,
            column: 23
          }
        },
        loc: {
          start: {
            line: 98,
            column: 31
          },
          end: {
            line: 100,
            column: 9
          }
        },
        line: 98
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        loc: {
          start: {
            line: 104,
            column: 29
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 104
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 31
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 112
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 113,
            column: 22
          },
          end: {
            line: 113,
            column: 23
          }
        },
        loc: {
          start: {
            line: 113,
            column: 30
          },
          end: {
            line: 113,
            column: 59
          }
        },
        line: 113
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 19
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 117
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 120,
            column: 40
          },
          end: {
            line: 120,
            column: 41
          }
        },
        loc: {
          start: {
            line: 120,
            column: 53
          },
          end: {
            line: 133,
            column: 9
          }
        },
        line: 120
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 124,
            column: 31
          },
          end: {
            line: 124,
            column: 32
          }
        },
        loc: {
          start: {
            line: 124,
            column: 39
          },
          end: {
            line: 129,
            column: 13
          }
        },
        line: 124
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 36
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 140
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 144,
            column: 27
          },
          end: {
            line: 144,
            column: 28
          }
        },
        loc: {
          start: {
            line: 144,
            column: 35
          },
          end: {
            line: 149,
            column: 9
          }
        },
        line: 144
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        loc: {
          start: {
            line: 156,
            column: 17
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 156
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 32
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 161
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 17
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 165
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 171,
            column: 14
          },
          end: {
            line: 171,
            column: 15
          }
        },
        loc: {
          start: {
            line: 171,
            column: 38
          },
          end: {
            line: 174,
            column: 9
          }
        },
        line: 171
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 176,
            column: 11
          },
          end: {
            line: 176,
            column: 12
          }
        },
        loc: {
          start: {
            line: 176,
            column: 38
          },
          end: {
            line: 182,
            column: 9
          }
        },
        line: 176
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 177,
            column: 23
          },
          end: {
            line: 177,
            column: 24
          }
        },
        loc: {
          start: {
            line: 177,
            column: 32
          },
          end: {
            line: 180,
            column: 13
          }
        },
        line: 177
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 184,
            column: 11
          },
          end: {
            line: 184,
            column: 12
          }
        },
        loc: {
          start: {
            line: 184,
            column: 38
          },
          end: {
            line: 190,
            column: 9
          }
        },
        line: 184
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 185,
            column: 23
          },
          end: {
            line: 185,
            column: 24
          }
        },
        loc: {
          start: {
            line: 185,
            column: 32
          },
          end: {
            line: 188,
            column: 13
          }
        },
        line: 185
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        },
        loc: {
          start: {
            line: 192,
            column: 34
          },
          end: {
            line: 198,
            column: 9
          }
        },
        line: 192
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 193,
            column: 23
          },
          end: {
            line: 193,
            column: 24
          }
        },
        loc: {
          start: {
            line: 193,
            column: 32
          },
          end: {
            line: 196,
            column: 13
          }
        },
        line: 193
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 200,
            column: 15
          },
          end: {
            line: 200,
            column: 16
          }
        },
        loc: {
          start: {
            line: 200,
            column: 32
          },
          end: {
            line: 206,
            column: 9
          }
        },
        line: 200
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 201,
            column: 23
          },
          end: {
            line: 201,
            column: 24
          }
        },
        loc: {
          start: {
            line: 201,
            column: 32
          },
          end: {
            line: 204,
            column: 13
          }
        },
        line: 201
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 208,
            column: 15
          },
          end: {
            line: 208,
            column: 16
          }
        },
        loc: {
          start: {
            line: 208,
            column: 32
          },
          end: {
            line: 214,
            column: 9
          }
        },
        line: 208
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 209,
            column: 23
          },
          end: {
            line: 209,
            column: 24
          }
        },
        loc: {
          start: {
            line: 209,
            column: 32
          },
          end: {
            line: 212,
            column: 13
          }
        },
        line: 209
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 216,
            column: 11
          },
          end: {
            line: 216,
            column: 12
          }
        },
        loc: {
          start: {
            line: 216,
            column: 33
          },
          end: {
            line: 222,
            column: 9
          }
        },
        line: 216
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 217,
            column: 23
          },
          end: {
            line: 217,
            column: 24
          }
        },
        loc: {
          start: {
            line: 217,
            column: 32
          },
          end: {
            line: 220,
            column: 13
          }
        },
        line: 217
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 224,
            column: 14
          },
          end: {
            line: 224,
            column: 15
          }
        },
        loc: {
          start: {
            line: 224,
            column: 36
          },
          end: {
            line: 230,
            column: 9
          }
        },
        line: 224
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 225,
            column: 23
          },
          end: {
            line: 225,
            column: 24
          }
        },
        loc: {
          start: {
            line: 225,
            column: 32
          },
          end: {
            line: 228,
            column: 13
          }
        },
        line: 225
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 232,
            column: 13
          },
          end: {
            line: 232,
            column: 14
          }
        },
        loc: {
          start: {
            line: 232,
            column: 35
          },
          end: {
            line: 237,
            column: 9
          }
        },
        line: 232
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 233,
            column: 23
          },
          end: {
            line: 233,
            column: 24
          }
        },
        loc: {
          start: {
            line: 233,
            column: 32
          },
          end: {
            line: 235,
            column: 13
          }
        },
        line: 233
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 239,
            column: 11
          },
          end: {
            line: 239,
            column: 12
          }
        },
        loc: {
          start: {
            line: 239,
            column: 32
          },
          end: {
            line: 242,
            column: 9
          }
        },
        line: 239
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 240,
            column: 23
          },
          end: {
            line: 240,
            column: 24
          }
        },
        loc: {
          start: {
            line: 240,
            column: 32
          },
          end: {
            line: 240,
            column: 64
          }
        },
        line: 240
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 244,
            column: 13
          },
          end: {
            line: 244,
            column: 14
          }
        },
        loc: {
          start: {
            line: 244,
            column: 32
          },
          end: {
            line: 250,
            column: 9
          }
        },
        line: 244
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 245,
            column: 23
          },
          end: {
            line: 245,
            column: 24
          }
        },
        loc: {
          start: {
            line: 245,
            column: 32
          },
          end: {
            line: 248,
            column: 13
          }
        },
        line: 245
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 254,
            column: 10
          },
          end: {
            line: 254,
            column: 11
          }
        },
        loc: {
          start: {
            line: 254,
            column: 19
          },
          end: {
            line: 254,
            column: 31
          }
        },
        line: 254
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 256,
            column: 17
          },
          end: {
            line: 256,
            column: 18
          }
        },
        loc: {
          start: {
            line: 256,
            column: 26
          },
          end: {
            line: 256,
            column: 45
          }
        },
        line: 256
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 258,
            column: 17
          },
          end: {
            line: 258,
            column: 18
          }
        },
        loc: {
          start: {
            line: 258,
            column: 26
          },
          end: {
            line: 258,
            column: 45
          }
        },
        line: 258
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 260,
            column: 15
          },
          end: {
            line: 260,
            column: 16
          }
        },
        loc: {
          start: {
            line: 260,
            column: 24
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 260
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 264,
            column: 16
          },
          end: {
            line: 264,
            column: 17
          }
        },
        loc: {
          start: {
            line: 264,
            column: 25
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 264
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 270,
            column: 24
          },
          end: {
            line: 270,
            column: 25
          }
        },
        loc: {
          start: {
            line: 270,
            column: 33
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 270
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 274,
            column: 17
          },
          end: {
            line: 274,
            column: 18
          }
        },
        loc: {
          start: {
            line: 274,
            column: 26
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 274
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 282,
            column: 20
          },
          end: {
            line: 282,
            column: 21
          }
        },
        loc: {
          start: {
            line: 282,
            column: 45
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 282
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 288,
            column: 26
          },
          end: {
            line: 288,
            column: 27
          }
        },
        loc: {
          start: {
            line: 288,
            column: 46
          },
          end: {
            line: 379,
            column: 1
          }
        },
        line: 288
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 294,
            column: 54
          },
          end: {
            line: 294,
            column: 55
          }
        },
        loc: {
          start: {
            line: 294,
            column: 73
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 294
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 300,
            column: 55
          },
          end: {
            line: 300,
            column: 56
          }
        },
        loc: {
          start: {
            line: 300,
            column: 75
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 300
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 306,
            column: 48
          },
          end: {
            line: 306,
            column: 49
          }
        },
        loc: {
          start: {
            line: 306,
            column: 68
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 306
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 307,
            column: 16
          },
          end: {
            line: 307,
            column: 17
          }
        },
        loc: {
          start: {
            line: 307,
            column: 25
          },
          end: {
            line: 310,
            column: 13
          }
        },
        line: 307
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 312,
            column: 18
          },
          end: {
            line: 312,
            column: 19
          }
        },
        loc: {
          start: {
            line: 312,
            column: 26
          },
          end: {
            line: 318,
            column: 9
          }
        },
        line: 312
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 321,
            column: 45
          },
          end: {
            line: 321,
            column: 46
          }
        },
        loc: {
          start: {
            line: 321,
            column: 55
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 321
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 335,
            column: 50
          },
          end: {
            line: 335,
            column: 51
          }
        },
        loc: {
          start: {
            line: 335,
            column: 63
          },
          end: {
            line: 342,
            column: 5
          }
        },
        line: 335
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 337,
            column: 18
          },
          end: {
            line: 337,
            column: 19
          }
        },
        loc: {
          start: {
            line: 337,
            column: 27
          },
          end: {
            line: 340,
            column: 13
          }
        },
        line: 337
      },
      "76": {
        name: "(anonymous_76)",
        decl: {
          start: {
            line: 347,
            column: 42
          },
          end: {
            line: 347,
            column: 43
          }
        },
        loc: {
          start: {
            line: 347,
            column: 46
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 347
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 354,
            column: 50
          },
          end: {
            line: 354,
            column: 51
          }
        },
        loc: {
          start: {
            line: 354,
            column: 63
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 354
      },
      "78": {
        name: "(anonymous_78)",
        decl: {
          start: {
            line: 361,
            column: 50
          },
          end: {
            line: 361,
            column: 51
          }
        },
        loc: {
          start: {
            line: 361,
            column: 63
          },
          end: {
            line: 363,
            column: 5
          }
        },
        line: 361
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 26
          }
        }, {
          start: {
            line: 34,
            column: 30
          },
          end: {
            line: 34,
            column: 49
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 74,
            column: 15
          },
          end: {
            line: 74,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 15
          },
          end: {
            line: 74,
            column: 36
          }
        }, {
          start: {
            line: 74,
            column: 40
          },
          end: {
            line: 74,
            column: 63
          }
        }],
        line: 74
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 125,
            column: 16
          },
          end: {
            line: 128,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 16
          },
          end: {
            line: 128,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "7": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "8": {
        loc: {
          start: {
            line: 141,
            column: 27
          },
          end: {
            line: 141,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 27
          },
          end: {
            line: 141,
            column: 48
          }
        }, {
          start: {
            line: 141,
            column: 52
          },
          end: {
            line: 141,
            column: 54
          }
        }],
        line: 141
      },
      "9": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "10": {
        loc: {
          start: {
            line: 171,
            column: 15
          },
          end: {
            line: 171,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 171,
            column: 25
          },
          end: {
            line: 171,
            column: 34
          }
        }],
        line: 171
      },
      "11": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 176,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 176,
            column: 22
          },
          end: {
            line: 176,
            column: 34
          }
        }],
        line: 176
      },
      "12": {
        loc: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 178,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 178,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "13": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 184,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 184,
            column: 22
          },
          end: {
            line: 184,
            column: 34
          }
        }],
        line: 184
      },
      "14": {
        loc: {
          start: {
            line: 186,
            column: 16
          },
          end: {
            line: 186,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 16
          },
          end: {
            line: 186,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "15": {
        loc: {
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 194,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 194,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "16": {
        loc: {
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 195,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 195,
            column: 42
          }
        }, {
          start: {
            line: 195,
            column: 46
          },
          end: {
            line: 195,
            column: 65
          }
        }],
        line: 195
      },
      "17": {
        loc: {
          start: {
            line: 197,
            column: 21
          },
          end: {
            line: 197,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 21
          },
          end: {
            line: 197,
            column: 28
          }
        }, {
          start: {
            line: 197,
            column: 32
          },
          end: {
            line: 197,
            column: 61
          }
        }],
        line: 197
      },
      "18": {
        loc: {
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 202,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 202,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "19": {
        loc: {
          start: {
            line: 205,
            column: 21
          },
          end: {
            line: 205,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 21
          },
          end: {
            line: 205,
            column: 28
          }
        }, {
          start: {
            line: 205,
            column: 32
          },
          end: {
            line: 205,
            column: 49
          }
        }],
        line: 205
      },
      "20": {
        loc: {
          start: {
            line: 210,
            column: 16
          },
          end: {
            line: 210,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 16
          },
          end: {
            line: 210,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "21": {
        loc: {
          start: {
            line: 213,
            column: 21
          },
          end: {
            line: 213,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 21
          },
          end: {
            line: 213,
            column: 28
          }
        }, {
          start: {
            line: 213,
            column: 32
          },
          end: {
            line: 213,
            column: 49
          }
        }],
        line: 213
      },
      "22": {
        loc: {
          start: {
            line: 219,
            column: 23
          },
          end: {
            line: 219,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 23
          },
          end: {
            line: 219,
            column: 34
          }
        }, {
          start: {
            line: 219,
            column: 38
          },
          end: {
            line: 219,
            column: 48
          }
        }, {
          start: {
            line: 219,
            column: 52
          },
          end: {
            line: 219,
            column: 62
          }
        }],
        line: 219
      },
      "23": {
        loc: {
          start: {
            line: 221,
            column: 21
          },
          end: {
            line: 221,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 21
          },
          end: {
            line: 221,
            column: 28
          }
        }, {
          start: {
            line: 221,
            column: 32
          },
          end: {
            line: 221,
            column: 58
          }
        }],
        line: 221
      },
      "24": {
        loc: {
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 224,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 224,
            column: 25
          },
          end: {
            line: 224,
            column: 32
          }
        }],
        line: 224
      },
      "25": {
        loc: {
          start: {
            line: 227,
            column: 23
          },
          end: {
            line: 227,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 23
          },
          end: {
            line: 227,
            column: 34
          }
        }, {
          start: {
            line: 227,
            column: 38
          },
          end: {
            line: 227,
            column: 62
          }
        }],
        line: 227
      },
      "26": {
        loc: {
          start: {
            line: 232,
            column: 14
          },
          end: {
            line: 232,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 232,
            column: 24
          },
          end: {
            line: 232,
            column: 31
          }
        }],
        line: 232
      },
      "27": {
        loc: {
          start: {
            line: 241,
            column: 21
          },
          end: {
            line: 241,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 21
          },
          end: {
            line: 241,
            column: 28
          }
        }, {
          start: {
            line: 241,
            column: 32
          },
          end: {
            line: 241,
            column: 65
          }
        }],
        line: 241
      },
      "28": {
        loc: {
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 246,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 246,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "29": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 278,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 278,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "30": {
        loc: {
          start: {
            line: 282,
            column: 28
          },
          end: {
            line: 282,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 282,
            column: 39
          },
          end: {
            line: 282,
            column: 42
          }
        }],
        line: 282
      },
      "31": {
        loc: {
          start: {
            line: 288,
            column: 27
          },
          end: {
            line: 288,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 288,
            column: 41
          },
          end: {
            line: 288,
            column: 43
          }
        }],
        line: 288
      },
      "32": {
        loc: {
          start: {
            line: 356,
            column: 15
          },
          end: {
            line: 356,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 356,
            column: 55
          },
          end: {
            line: 356,
            column: 69
          }
        }, {
          start: {
            line: 356,
            column: 72
          },
          end: {
            line: 356,
            column: 81
          }
        }],
        line: 356
      },
      "33": {
        loc: {
          start: {
            line: 356,
            column: 15
          },
          end: {
            line: 356,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 15
          },
          end: {
            line: 356,
            column: 26
          }
        }, {
          start: {
            line: 356,
            column: 30
          },
          end: {
            line: 356,
            column: 52
          }
        }],
        line: 356
      },
      "34": {
        loc: {
          start: {
            line: 362,
            column: 18
          },
          end: {
            line: 362,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 362,
            column: 18
          },
          end: {
            line: 362,
            column: 35
          }
        }, {
          start: {
            line: 362,
            column: 39
          },
          end: {
            line: 362,
            column: 67
          }
        }],
        line: 362
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0, 0],
      "26": [0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0],
      "31": [0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/validation.ts"],
      sourcesContent: ["// \u6570\u636E\u9A8C\u8BC1\u5DE5\u5177\u5E93\n\n// \u57FA\u7840\u9A8C\u8BC1\u51FD\u6570\nexport const validators = {\n  // \u5FC5\u586B\u9A8C\u8BC1\n  required: (value: unknown): boolean => {\n    if (value === null || value === undefined) return false;\n    if (typeof value === 'string') return value.trim().length > 0;\n    if (Array.isArray(value)) return value.length > 0;\n    return true;\n  },\n\n  // \u90AE\u7BB1\u9A8C\u8BC1\n  email: (value: string): boolean => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(value);\n  },\n\n  // \u624B\u673A\u53F7\u9A8C\u8BC1\uFF08\u4E2D\u56FD\u5927\u9646\uFF09\n  phone: (value: string): boolean => {\n    const phoneRegex = /^1[3-9]\\d{9}$/;\n    return phoneRegex.test(value);\n  },\n\n  // \u957F\u5EA6\u9A8C\u8BC1\n  minLength: (min: number) => (value: string): boolean => {\n    return value.length >= min;\n  },\n\n  maxLength: (max: number) => (value: string): boolean => {\n    return value.length <= max;\n  },\n\n  // \u6570\u5B57\u8303\u56F4\u9A8C\u8BC1\n  minValue: (min: number) => (value: number): boolean => {\n    return value >= min;\n  },\n\n  maxValue: (max: number) => (value: number): boolean => {\n    return value <= max;\n  },\n\n  // URL\u9A8C\u8BC1\n  url: (value: string): boolean => {\n    try {\n      new URL(value);\n      return true;\n    } catch {\n      return false;\n    }\n  },\n\n  // \u6570\u5B57\u9A8C\u8BC1\n  number: (value: string): boolean => {\n    return !isNaN(Number(value)) && isFinite(Number(value));\n  },\n\n  // \u6574\u6570\u9A8C\u8BC1\n  integer: (value: string): boolean => {\n    return Number.isInteger(Number(value));\n  },\n\n  // \u6B63\u6570\u9A8C\u8BC1\n  positive: (value: number): boolean => {\n    return value > 0;\n  },\n\n  // \u975E\u8D1F\u6570\u9A8C\u8BC1\n  nonNegative: (value: number): boolean => {\n    return value >= 0;\n  },\n\n  // \u65E5\u671F\u9A8C\u8BC1\n  date: (value: string): boolean => {\n    const date = new Date(value);\n    return !isNaN(date.getTime());\n  },\n\n  // \u6B63\u5219\u8868\u8FBE\u5F0F\u9A8C\u8BC1\n  pattern: (regex: RegExp) => (value: string): boolean => {\n    return regex.test(value);\n  },\n\n  // \u679A\u4E3E\u503C\u9A8C\u8BC1\n  oneOf: <T>(options: T[]) => (value: T): boolean => {\n    return options.includes(value);\n  },\n};\n\n// \u9A8C\u8BC1\u89C4\u5219\u63A5\u53E3\nexport interface ValidationRule {\n  validator: (value: unknown) => boolean;\n  message: string;\n}\n\n// \u5B57\u6BB5\u9A8C\u8BC1\u914D\u7F6E\nexport interface FieldValidation {\n  [fieldName: string]: ValidationRule[];\n}\n\n// \u9A8C\u8BC1\u7ED3\u679C\u63A5\u53E3\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: Record<string, string[]>;\n}\n\n// \u9A8C\u8BC1\u5668\u7C7B\nexport class Validator {\n  private rules: FieldValidation = {};\n\n  // \u6DFB\u52A0\u9A8C\u8BC1\u89C4\u5219\n  addRule(fieldName: string, rule: ValidationRule): this {\n    if (!this.rules[fieldName]) {\n      this.rules[fieldName] = [];\n    }\n    this.rules[fieldName].push(rule);\n    return this;\n  }\n\n  // \u6DFB\u52A0\u591A\u4E2A\u9A8C\u8BC1\u89C4\u5219\n  addRules(fieldName: string, rules: ValidationRule[]): this {\n    rules.forEach(rule => this.addRule(fieldName, rule));\n    return this;\n  }\n\n  // \u9A8C\u8BC1\u6570\u636E\n  validate(data: Record<string, unknown>): ValidationResult {\n    const errors: Record<string, string[]> = {};\n    let isValid = true;\n\n    Object.keys(this.rules).forEach(fieldName => {\n      const fieldRules = this.rules[fieldName];\n      const fieldValue = data[fieldName];\n      const fieldErrors: string[] = [];\n\n      fieldRules.forEach(rule => {\n        if (!rule.validator(fieldValue)) {\n          fieldErrors.push(rule.message);\n          isValid = false;\n        }\n      });\n\n      if (fieldErrors.length > 0) {\n        errors[fieldName] = fieldErrors;\n      }\n    });\n\n    return { isValid, errors };\n  }\n\n  // \u9A8C\u8BC1\u5355\u4E2A\u5B57\u6BB5\n  validateField(fieldName: string, value: unknown): { isValid: boolean; errors: string[] } {\n    const fieldRules = this.rules[fieldName] || [];\n    const errors: string[] = [];\n    let isValid = true;\n\n    fieldRules.forEach(rule => {\n      if (!rule.validator(value)) {\n        errors.push(rule.message);\n        isValid = false;\n      }\n    });\n\n    return { isValid, errors };\n  }\n\n  // \u6E05\u9664\u89C4\u5219\n  clearRules(): this {\n    this.rules = {};\n    return this;\n  }\n\n  // \u79FB\u9664\u7279\u5B9A\u5B57\u6BB5\u7684\u89C4\u5219\n  removeFieldRules(fieldName: string): this {\n    delete this.rules[fieldName];\n    return this;\n  }\n}\n\n// \u5E38\u7528\u9A8C\u8BC1\u89C4\u5219\u6784\u5EFA\u5668\nexport const createValidationRules = {\n  // \u5FC5\u586B\u5B57\u6BB5\n  required: (message = '\u6B64\u5B57\u6BB5\u4E3A\u5FC5\u586B\u9879'): ValidationRule => ({\n    validator: validators.required,\n    message,\n  }),\n\n  // \u90AE\u7BB1\u5B57\u6BB5\n  email: (message = '\u8BF7\u8F93\u5165\u6709\u6548\u7684\u90AE\u7BB1\u5730\u5740'): ValidationRule => ({\n    validator: (value: unknown) => {\n      if (typeof value !== 'string') return false;\n      return validators.email(value);\n    },\n    message,\n  }),\n\n  // \u624B\u673A\u53F7\u5B57\u6BB5\n  phone: (message = '\u8BF7\u8F93\u5165\u6709\u6548\u7684\u624B\u673A\u53F7\u7801'): ValidationRule => ({\n    validator: (value: unknown) => {\n      if (typeof value !== 'string') return false;\n      return validators.phone(value);\n    },\n    message,\n  }),\n\n  // \u957F\u5EA6\u9650\u5236\n  length: (min: number, max: number, message?: string): ValidationRule => ({\n    validator: (value: unknown) => {\n      if (typeof value !== 'string') return false;\n      return value.length >= min && value.length <= max;\n    },\n    message: message || `\u957F\u5EA6\u5FC5\u987B\u5728 ${min} \u5230 ${max} \u4E2A\u5B57\u7B26\u4E4B\u95F4`,\n  }),\n\n  // \u6700\u5C0F\u957F\u5EA6\n  minLength: (min: number, message?: string): ValidationRule => ({\n    validator: (value: unknown) => {\n      if (typeof value !== 'string') return false;\n      return value.length >= min;\n    },\n    message: message || `\u6700\u5C11\u9700\u8981 ${min} \u4E2A\u5B57\u7B26`,\n  }),\n\n  // \u6700\u5927\u957F\u5EA6\n  maxLength: (max: number, message?: string): ValidationRule => ({\n    validator: (value: unknown) => {\n      if (typeof value !== 'string') return false;\n      return value.length <= max;\n    },\n    message: message || `\u6700\u591A\u5141\u8BB8 ${max} \u4E2A\u5B57\u7B26`,\n  }),\n\n  // \u6570\u503C\u8303\u56F4\n  range: (min: number, max: number, message?: string): ValidationRule => ({\n    validator: (value: unknown) => {\n      const num = Number(value);\n      return !isNaN(num) && num >= min && num <= max;\n    },\n    message: message || `\u6570\u503C\u5FC5\u987B\u5728 ${min} \u5230 ${max} \u4E4B\u95F4`,\n  }),\n\n  // \u6B63\u6570\n  positive: (message = '\u5FC5\u987B\u662F\u6B63\u6570'): ValidationRule => ({\n    validator: (value: unknown) => {\n      const num = Number(value);\n      return !isNaN(num) && validators.positive(num);\n    },\n    message,\n  }),\n\n  // \u6574\u6570\n  integer: (message = '\u5FC5\u987B\u662F\u6574\u6570'): ValidationRule => ({\n    validator: (value: unknown) => {\n      return validators.integer(String(value));\n    },\n    message,\n  }),\n\n  // \u679A\u4E3E\u503C\n  oneOf: <T>(options: T[], message?: string): ValidationRule => ({\n    validator: (value: unknown) => validators.oneOf(options)(value as T),\n    message: message || `\u5FC5\u987B\u662F\u4EE5\u4E0B\u503C\u4E4B\u4E00: ${options.join(', ')}`,\n  }),\n\n  // \u81EA\u5B9A\u4E49\u6B63\u5219\n  pattern: (regex: RegExp, message: string): ValidationRule => ({\n    validator: (value: unknown) => {\n      if (typeof value !== 'string') return false;\n      return validators.pattern(regex)(value);\n    },\n    message,\n  }),\n};\n\n// \u6570\u636E\u6E05\u7406\u5DE5\u5177\nexport const sanitizers = {\n  // \u53BB\u9664\u9996\u5C3E\u7A7A\u683C\n  trim: (value: string): string => value.trim(),\n\n  // \u8F6C\u6362\u4E3A\u5C0F\u5199\n  toLowerCase: (value: string): string => value.toLowerCase(),\n\n  // \u8F6C\u6362\u4E3A\u5927\u5199\n  toUpperCase: (value: string): string => value.toUpperCase(),\n\n  // \u79FB\u9664HTML\u6807\u7B7E\n  stripHtml: (value: string): string => {\n    return value.replace(/<[^>]*>/g, '');\n  },\n\n  // \u8F6C\u4E49HTML\u5B57\u7B26\n  escapeHtml: (value: string): string => {\n    const div = document.createElement('div');\n    div.textContent = value;\n    return div.innerHTML;\n  },\n\n  // \u79FB\u9664\u7279\u6B8A\u5B57\u7B26\uFF08\u4FDD\u7559\u5B57\u6BCD\u3001\u6570\u5B57\u3001\u4E2D\u6587\uFF09\n  removeSpecialChars: (value: string): string => {\n    return value.replace(/[^\\w\\u4e00-\\u9fa5]/g, '');\n  },\n\n  // \u683C\u5F0F\u5316\u624B\u673A\u53F7\n  formatPhone: (value: string): string => {\n    const cleaned = value.replace(/\\D/g, '');\n    if (cleaned.length === 11) {\n      return cleaned.replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3');\n    }\n    return value;\n  },\n\n  // \u683C\u5F0F\u5316\u91D1\u989D\n  formatCurrency: (value: number, currency = '\xA5'): string => {\n    return `${currency}${value.toLocaleString('zh-CN', { minimumFractionDigits: 2 })}`;\n  },\n};\n\n// \u8868\u5355\u9A8C\u8BC1Hook\nimport { useState, useCallback } from 'react';\n\nexport const useFormValidation = (initialData: Record<string, unknown> = {}) => {\n  const [data, setData] = useState(initialData);\n  const [errors, setErrors] = useState<Record<string, string[]>>({});\n  const [isValidating, setIsValidating] = useState(false);\n\n  const validator = new Validator();\n\n  // \u6DFB\u52A0\u9A8C\u8BC1\u89C4\u5219\n  const addValidationRule = useCallback((fieldName: string, rule: ValidationRule) => {\n    validator.addRule(fieldName, rule);\n  }, [validator]);\n\n  // \u6DFB\u52A0\u591A\u4E2A\u9A8C\u8BC1\u89C4\u5219\n  const addValidationRules = useCallback((fieldName: string, rules: ValidationRule[]) => {\n    validator.addRules(fieldName, rules);\n  }, [validator]);\n\n  // \u66F4\u65B0\u5B57\u6BB5\u503C\n  const updateField = useCallback((fieldName: string, value: unknown) => {\n    setData(prev => ({ ...prev, [fieldName]: value }));\n    \n    // \u6E05\u9664\u8BE5\u5B57\u6BB5\u7684\u9519\u8BEF\n    setErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[fieldName];\n      return newErrors;\n    });\n  }, []);\n\n  // \u9A8C\u8BC1\u8868\u5355\n  const validate = useCallback(async (): Promise<boolean> => {\n    setIsValidating(true);\n    \n    try {\n      const result = validator.validate(data);\n      setErrors(result.errors);\n      return result.isValid;\n    } finally {\n      setIsValidating(false);\n    }\n  }, [data, validator]);\n\n  // \u9A8C\u8BC1\u5355\u4E2A\u5B57\u6BB5\n  const validateField = useCallback((fieldName: string): boolean => {\n    const result = validator.validateField(fieldName, data[fieldName]);\n    \n    setErrors(prev => ({\n      ...prev,\n      [fieldName]: result.errors,\n    }));\n    \n    return result.isValid;\n  }, [data, validator]);\n\n  // \u91CD\u7F6E\u8868\u5355\n  const reset = useCallback(() => {\n    setData(initialData);\n    setErrors({});\n  }, [initialData]);\n\n  // \u83B7\u53D6\u5B57\u6BB5\u9519\u8BEF\n  const getFieldError = useCallback((fieldName: string): string | undefined => {\n    const fieldErrors = errors[fieldName];\n    return fieldErrors && fieldErrors.length > 0 ? fieldErrors[0] : undefined;\n  }, [errors]);\n\n  // \u68C0\u67E5\u5B57\u6BB5\u662F\u5426\u6709\u9519\u8BEF\n  const hasFieldError = useCallback((fieldName: string): boolean => {\n    return !!(errors[fieldName] && errors[fieldName].length > 0);\n  }, [errors]);\n\n  return {\n    data,\n    errors,\n    isValidating,\n    updateField,\n    validate,\n    validateField,\n    reset,\n    getFieldError,\n    hasFieldError,\n    addValidationRule,\n    addValidationRules,\n  };\n};"],
      names: ["Validator", "createValidationRules", "sanitizers", "useFormValidation", "validators", "required", "value", "undefined", "trim", "length", "Array", "isArray", "email", "emailRegex", "test", "phone", "phoneRegex", "minLength", "min", "maxLength", "max", "minValue", "maxValue", "url", "URL", "number", "isNaN", "Number", "isFinite", "integer", "isInteger", "positive", "nonNegative", "date", "Date", "getTime", "pattern", "regex", "oneOf", "options", "includes", "addRule", "fieldName", "rule", "rules", "push", "addRules", "forEach", "validate", "data", "errors", "isValid", "Object", "keys", "fieldRules", "fieldValue", "fieldErrors", "validator", "message", "validateField", "clearRules", "removeFieldRules", "range", "num", "String", "join", "toLowerCase", "toUpperCase", "stripHtml", "replace", "escapeHtml", "div", "document", "createElement", "textContent", "innerHTML", "removeSpecialChars", "formatPhone", "cleaned", "formatCurrency", "currency", "toLocaleString", "minimumFractionDigits", "initialData", "setData", "useState", "setErrors", "isValidating", "setIsValidating", "addValidationRule", "useCallback", "addValidationRules", "updateField", "prev", "newErrors", "result", "reset", "getFieldError", "hasFieldError"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fd44942242d4e4bcd57333a2f0ecab2b8bd6932a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2adw3qu3jq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2adw3qu3jq();
cov_2adw3qu3jq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2adw3qu3jq().f[0]++;
  cov_2adw3qu3jq().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2adw3qu3jq().s[3]++;
_export(exports, {
  Validator: function () {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[1]++;
    cov_2adw3qu3jq().s[4]++;
    return Validator;
  },
  createValidationRules: function () {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[2]++;
    cov_2adw3qu3jq().s[5]++;
    return createValidationRules;
  },
  sanitizers: function () {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[3]++;
    cov_2adw3qu3jq().s[6]++;
    return sanitizers;
  },
  useFormValidation: function () {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[4]++;
    cov_2adw3qu3jq().s[7]++;
    return useFormValidation;
  },
  validators: function () {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[5]++;
    cov_2adw3qu3jq().s[8]++;
    return validators;
  }
});
const _react =
/* istanbul ignore next */
(cov_2adw3qu3jq().s[9]++, require("react"));
const validators =
/* istanbul ignore next */
(cov_2adw3qu3jq().s[10]++, {
  // 必填验证
  required: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[6]++;
    cov_2adw3qu3jq().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_2adw3qu3jq().b[1][0]++, value === null) ||
    /* istanbul ignore next */
    (cov_2adw3qu3jq().b[1][1]++, value === undefined)) {
      /* istanbul ignore next */
      cov_2adw3qu3jq().b[0][0]++;
      cov_2adw3qu3jq().s[12]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2adw3qu3jq().b[0][1]++;
    }
    cov_2adw3qu3jq().s[13]++;
    if (typeof value === 'string') {
      /* istanbul ignore next */
      cov_2adw3qu3jq().b[2][0]++;
      cov_2adw3qu3jq().s[14]++;
      return value.trim().length > 0;
    } else
    /* istanbul ignore next */
    {
      cov_2adw3qu3jq().b[2][1]++;
    }
    cov_2adw3qu3jq().s[15]++;
    if (Array.isArray(value)) {
      /* istanbul ignore next */
      cov_2adw3qu3jq().b[3][0]++;
      cov_2adw3qu3jq().s[16]++;
      return value.length > 0;
    } else
    /* istanbul ignore next */
    {
      cov_2adw3qu3jq().b[3][1]++;
    }
    cov_2adw3qu3jq().s[17]++;
    return true;
  },
  // 邮箱验证
  email: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[7]++;
    const emailRegex =
    /* istanbul ignore next */
    (cov_2adw3qu3jq().s[18]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[19]++;
    return emailRegex.test(value);
  },
  // 手机号验证（中国大陆）
  phone: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[8]++;
    const phoneRegex =
    /* istanbul ignore next */
    (cov_2adw3qu3jq().s[20]++, /^1[3-9]\d{9}$/);
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[21]++;
    return phoneRegex.test(value);
  },
  // 长度验证
  minLength: min => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[9]++;
    cov_2adw3qu3jq().s[22]++;
    return value => {
      /* istanbul ignore next */
      cov_2adw3qu3jq().f[10]++;
      cov_2adw3qu3jq().s[23]++;
      return value.length >= min;
    };
  },
  maxLength: max => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[11]++;
    cov_2adw3qu3jq().s[24]++;
    return value => {
      /* istanbul ignore next */
      cov_2adw3qu3jq().f[12]++;
      cov_2adw3qu3jq().s[25]++;
      return value.length <= max;
    };
  },
  // 数字范围验证
  minValue: min => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[13]++;
    cov_2adw3qu3jq().s[26]++;
    return value => {
      /* istanbul ignore next */
      cov_2adw3qu3jq().f[14]++;
      cov_2adw3qu3jq().s[27]++;
      return value >= min;
    };
  },
  maxValue: max => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[15]++;
    cov_2adw3qu3jq().s[28]++;
    return value => {
      /* istanbul ignore next */
      cov_2adw3qu3jq().f[16]++;
      cov_2adw3qu3jq().s[29]++;
      return value <= max;
    };
  },
  // URL验证
  url: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[17]++;
    cov_2adw3qu3jq().s[30]++;
    try {
      /* istanbul ignore next */
      cov_2adw3qu3jq().s[31]++;
      new URL(value);
      /* istanbul ignore next */
      cov_2adw3qu3jq().s[32]++;
      return true;
    } catch {
      /* istanbul ignore next */
      cov_2adw3qu3jq().s[33]++;
      return false;
    }
  },
  // 数字验证
  number: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[18]++;
    cov_2adw3qu3jq().s[34]++;
    return /* istanbul ignore next */(cov_2adw3qu3jq().b[4][0]++, !isNaN(Number(value))) &&
    /* istanbul ignore next */
    (cov_2adw3qu3jq().b[4][1]++, isFinite(Number(value)));
  },
  // 整数验证
  integer: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[19]++;
    cov_2adw3qu3jq().s[35]++;
    return Number.isInteger(Number(value));
  },
  // 正数验证
  positive: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[20]++;
    cov_2adw3qu3jq().s[36]++;
    return value > 0;
  },
  // 非负数验证
  nonNegative: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[21]++;
    cov_2adw3qu3jq().s[37]++;
    return value >= 0;
  },
  // 日期验证
  date: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[22]++;
    const date =
    /* istanbul ignore next */
    (cov_2adw3qu3jq().s[38]++, new Date(value));
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[39]++;
    return !isNaN(date.getTime());
  },
  // 正则表达式验证
  pattern: regex => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[23]++;
    cov_2adw3qu3jq().s[40]++;
    return value => {
      /* istanbul ignore next */
      cov_2adw3qu3jq().f[24]++;
      cov_2adw3qu3jq().s[41]++;
      return regex.test(value);
    };
  },
  // 枚举值验证
  oneOf: options => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[25]++;
    cov_2adw3qu3jq().s[42]++;
    return value => {
      /* istanbul ignore next */
      cov_2adw3qu3jq().f[26]++;
      cov_2adw3qu3jq().s[43]++;
      return options.includes(value);
    };
  }
});
class Validator {
  // 添加验证规则
  addRule(fieldName, rule) {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[27]++;
    cov_2adw3qu3jq().s[44]++;
    if (!this.rules[fieldName]) {
      /* istanbul ignore next */
      cov_2adw3qu3jq().b[5][0]++;
      cov_2adw3qu3jq().s[45]++;
      this.rules[fieldName] = [];
    } else
    /* istanbul ignore next */
    {
      cov_2adw3qu3jq().b[5][1]++;
    }
    cov_2adw3qu3jq().s[46]++;
    this.rules[fieldName].push(rule);
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[47]++;
    return this;
  }
  // 添加多个验证规则
  addRules(fieldName, rules) {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[28]++;
    cov_2adw3qu3jq().s[48]++;
    rules.forEach(rule => {
      /* istanbul ignore next */
      cov_2adw3qu3jq().f[29]++;
      cov_2adw3qu3jq().s[49]++;
      return this.addRule(fieldName, rule);
    });
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[50]++;
    return this;
  }
  // 验证数据
  validate(data) {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[30]++;
    const errors =
    /* istanbul ignore next */
    (cov_2adw3qu3jq().s[51]++, {});
    let isValid =
    /* istanbul ignore next */
    (cov_2adw3qu3jq().s[52]++, true);
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[53]++;
    Object.keys(this.rules).forEach(fieldName => {
      /* istanbul ignore next */
      cov_2adw3qu3jq().f[31]++;
      const fieldRules =
      /* istanbul ignore next */
      (cov_2adw3qu3jq().s[54]++, this.rules[fieldName]);
      const fieldValue =
      /* istanbul ignore next */
      (cov_2adw3qu3jq().s[55]++, data[fieldName]);
      const fieldErrors =
      /* istanbul ignore next */
      (cov_2adw3qu3jq().s[56]++, []);
      /* istanbul ignore next */
      cov_2adw3qu3jq().s[57]++;
      fieldRules.forEach(rule => {
        /* istanbul ignore next */
        cov_2adw3qu3jq().f[32]++;
        cov_2adw3qu3jq().s[58]++;
        if (!rule.validator(fieldValue)) {
          /* istanbul ignore next */
          cov_2adw3qu3jq().b[6][0]++;
          cov_2adw3qu3jq().s[59]++;
          fieldErrors.push(rule.message);
          /* istanbul ignore next */
          cov_2adw3qu3jq().s[60]++;
          isValid = false;
        } else
        /* istanbul ignore next */
        {
          cov_2adw3qu3jq().b[6][1]++;
        }
      });
      /* istanbul ignore next */
      cov_2adw3qu3jq().s[61]++;
      if (fieldErrors.length > 0) {
        /* istanbul ignore next */
        cov_2adw3qu3jq().b[7][0]++;
        cov_2adw3qu3jq().s[62]++;
        errors[fieldName] = fieldErrors;
      } else
      /* istanbul ignore next */
      {
        cov_2adw3qu3jq().b[7][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[63]++;
    return {
      isValid,
      errors
    };
  }
  // 验证单个字段
  validateField(fieldName, value) {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[33]++;
    const fieldRules =
    /* istanbul ignore next */
    (cov_2adw3qu3jq().s[64]++,
    /* istanbul ignore next */
    (cov_2adw3qu3jq().b[8][0]++, this.rules[fieldName]) ||
    /* istanbul ignore next */
    (cov_2adw3qu3jq().b[8][1]++, []));
    const errors =
    /* istanbul ignore next */
    (cov_2adw3qu3jq().s[65]++, []);
    let isValid =
    /* istanbul ignore next */
    (cov_2adw3qu3jq().s[66]++, true);
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[67]++;
    fieldRules.forEach(rule => {
      /* istanbul ignore next */
      cov_2adw3qu3jq().f[34]++;
      cov_2adw3qu3jq().s[68]++;
      if (!rule.validator(value)) {
        /* istanbul ignore next */
        cov_2adw3qu3jq().b[9][0]++;
        cov_2adw3qu3jq().s[69]++;
        errors.push(rule.message);
        /* istanbul ignore next */
        cov_2adw3qu3jq().s[70]++;
        isValid = false;
      } else
      /* istanbul ignore next */
      {
        cov_2adw3qu3jq().b[9][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[71]++;
    return {
      isValid,
      errors
    };
  }
  // 清除规则
  clearRules() {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[35]++;
    cov_2adw3qu3jq().s[72]++;
    this.rules = {};
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[73]++;
    return this;
  }
  // 移除特定字段的规则
  removeFieldRules(fieldName) {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[36]++;
    cov_2adw3qu3jq().s[74]++;
    delete this.rules[fieldName];
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[75]++;
    return this;
  }
  constructor() {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[37]++;
    cov_2adw3qu3jq().s[76]++;
    this.rules = {};
  }
}
const createValidationRules =
/* istanbul ignore next */
(cov_2adw3qu3jq().s[77]++, {
  // 必填字段
  required: (message =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().b[10][0]++, '此字段为必填项')) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[38]++;
    cov_2adw3qu3jq().s[78]++;
    return {
      validator: validators.required,
      message
    };
  },
  // 邮箱字段
  email: (message =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().b[11][0]++, '请输入有效的邮箱地址')) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[39]++;
    cov_2adw3qu3jq().s[79]++;
    return {
      validator: value => {
        /* istanbul ignore next */
        cov_2adw3qu3jq().f[40]++;
        cov_2adw3qu3jq().s[80]++;
        if (typeof value !== 'string') {
          /* istanbul ignore next */
          cov_2adw3qu3jq().b[12][0]++;
          cov_2adw3qu3jq().s[81]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_2adw3qu3jq().b[12][1]++;
        }
        cov_2adw3qu3jq().s[82]++;
        return validators.email(value);
      },
      message
    };
  },
  // 手机号字段
  phone: (message =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().b[13][0]++, '请输入有效的手机号码')) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[41]++;
    cov_2adw3qu3jq().s[83]++;
    return {
      validator: value => {
        /* istanbul ignore next */
        cov_2adw3qu3jq().f[42]++;
        cov_2adw3qu3jq().s[84]++;
        if (typeof value !== 'string') {
          /* istanbul ignore next */
          cov_2adw3qu3jq().b[14][0]++;
          cov_2adw3qu3jq().s[85]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_2adw3qu3jq().b[14][1]++;
        }
        cov_2adw3qu3jq().s[86]++;
        return validators.phone(value);
      },
      message
    };
  },
  // 长度限制
  length: (min, max, message) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[43]++;
    cov_2adw3qu3jq().s[87]++;
    return {
      validator: value => {
        /* istanbul ignore next */
        cov_2adw3qu3jq().f[44]++;
        cov_2adw3qu3jq().s[88]++;
        if (typeof value !== 'string') {
          /* istanbul ignore next */
          cov_2adw3qu3jq().b[15][0]++;
          cov_2adw3qu3jq().s[89]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_2adw3qu3jq().b[15][1]++;
        }
        cov_2adw3qu3jq().s[90]++;
        return /* istanbul ignore next */(cov_2adw3qu3jq().b[16][0]++, value.length >= min) &&
        /* istanbul ignore next */
        (cov_2adw3qu3jq().b[16][1]++, value.length <= max);
      },
      message:
      /* istanbul ignore next */
      (cov_2adw3qu3jq().b[17][0]++, message) ||
      /* istanbul ignore next */
      (cov_2adw3qu3jq().b[17][1]++, `长度必须在 ${min} 到 ${max} 个字符之间`)
    };
  },
  // 最小长度
  minLength: (min, message) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[45]++;
    cov_2adw3qu3jq().s[91]++;
    return {
      validator: value => {
        /* istanbul ignore next */
        cov_2adw3qu3jq().f[46]++;
        cov_2adw3qu3jq().s[92]++;
        if (typeof value !== 'string') {
          /* istanbul ignore next */
          cov_2adw3qu3jq().b[18][0]++;
          cov_2adw3qu3jq().s[93]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_2adw3qu3jq().b[18][1]++;
        }
        cov_2adw3qu3jq().s[94]++;
        return value.length >= min;
      },
      message:
      /* istanbul ignore next */
      (cov_2adw3qu3jq().b[19][0]++, message) ||
      /* istanbul ignore next */
      (cov_2adw3qu3jq().b[19][1]++, `最少需要 ${min} 个字符`)
    };
  },
  // 最大长度
  maxLength: (max, message) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[47]++;
    cov_2adw3qu3jq().s[95]++;
    return {
      validator: value => {
        /* istanbul ignore next */
        cov_2adw3qu3jq().f[48]++;
        cov_2adw3qu3jq().s[96]++;
        if (typeof value !== 'string') {
          /* istanbul ignore next */
          cov_2adw3qu3jq().b[20][0]++;
          cov_2adw3qu3jq().s[97]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_2adw3qu3jq().b[20][1]++;
        }
        cov_2adw3qu3jq().s[98]++;
        return value.length <= max;
      },
      message:
      /* istanbul ignore next */
      (cov_2adw3qu3jq().b[21][0]++, message) ||
      /* istanbul ignore next */
      (cov_2adw3qu3jq().b[21][1]++, `最多允许 ${max} 个字符`)
    };
  },
  // 数值范围
  range: (min, max, message) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[49]++;
    cov_2adw3qu3jq().s[99]++;
    return {
      validator: value => {
        /* istanbul ignore next */
        cov_2adw3qu3jq().f[50]++;
        const num =
        /* istanbul ignore next */
        (cov_2adw3qu3jq().s[100]++, Number(value));
        /* istanbul ignore next */
        cov_2adw3qu3jq().s[101]++;
        return /* istanbul ignore next */(cov_2adw3qu3jq().b[22][0]++, !isNaN(num)) &&
        /* istanbul ignore next */
        (cov_2adw3qu3jq().b[22][1]++, num >= min) &&
        /* istanbul ignore next */
        (cov_2adw3qu3jq().b[22][2]++, num <= max);
      },
      message:
      /* istanbul ignore next */
      (cov_2adw3qu3jq().b[23][0]++, message) ||
      /* istanbul ignore next */
      (cov_2adw3qu3jq().b[23][1]++, `数值必须在 ${min} 到 ${max} 之间`)
    };
  },
  // 正数
  positive: (message =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().b[24][0]++, '必须是正数')) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[51]++;
    cov_2adw3qu3jq().s[102]++;
    return {
      validator: value => {
        /* istanbul ignore next */
        cov_2adw3qu3jq().f[52]++;
        const num =
        /* istanbul ignore next */
        (cov_2adw3qu3jq().s[103]++, Number(value));
        /* istanbul ignore next */
        cov_2adw3qu3jq().s[104]++;
        return /* istanbul ignore next */(cov_2adw3qu3jq().b[25][0]++, !isNaN(num)) &&
        /* istanbul ignore next */
        (cov_2adw3qu3jq().b[25][1]++, validators.positive(num));
      },
      message
    };
  },
  // 整数
  integer: (message =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().b[26][0]++, '必须是整数')) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[53]++;
    cov_2adw3qu3jq().s[105]++;
    return {
      validator: value => {
        /* istanbul ignore next */
        cov_2adw3qu3jq().f[54]++;
        cov_2adw3qu3jq().s[106]++;
        return validators.integer(String(value));
      },
      message
    };
  },
  // 枚举值
  oneOf: (options, message) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[55]++;
    cov_2adw3qu3jq().s[107]++;
    return {
      validator: value => {
        /* istanbul ignore next */
        cov_2adw3qu3jq().f[56]++;
        cov_2adw3qu3jq().s[108]++;
        return validators.oneOf(options)(value);
      },
      message:
      /* istanbul ignore next */
      (cov_2adw3qu3jq().b[27][0]++, message) ||
      /* istanbul ignore next */
      (cov_2adw3qu3jq().b[27][1]++, `必须是以下值之一: ${options.join(', ')}`)
    };
  },
  // 自定义正则
  pattern: (regex, message) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[57]++;
    cov_2adw3qu3jq().s[109]++;
    return {
      validator: value => {
        /* istanbul ignore next */
        cov_2adw3qu3jq().f[58]++;
        cov_2adw3qu3jq().s[110]++;
        if (typeof value !== 'string') {
          /* istanbul ignore next */
          cov_2adw3qu3jq().b[28][0]++;
          cov_2adw3qu3jq().s[111]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_2adw3qu3jq().b[28][1]++;
        }
        cov_2adw3qu3jq().s[112]++;
        return validators.pattern(regex)(value);
      },
      message
    };
  }
});
const sanitizers =
/* istanbul ignore next */
(cov_2adw3qu3jq().s[113]++, {
  // 去除首尾空格
  trim: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[59]++;
    cov_2adw3qu3jq().s[114]++;
    return value.trim();
  },
  // 转换为小写
  toLowerCase: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[60]++;
    cov_2adw3qu3jq().s[115]++;
    return value.toLowerCase();
  },
  // 转换为大写
  toUpperCase: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[61]++;
    cov_2adw3qu3jq().s[116]++;
    return value.toUpperCase();
  },
  // 移除HTML标签
  stripHtml: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[62]++;
    cov_2adw3qu3jq().s[117]++;
    return value.replace(/<[^>]*>/g, '');
  },
  // 转义HTML字符
  escapeHtml: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[63]++;
    const div =
    /* istanbul ignore next */
    (cov_2adw3qu3jq().s[118]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[119]++;
    div.textContent = value;
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[120]++;
    return div.innerHTML;
  },
  // 移除特殊字符（保留字母、数字、中文）
  removeSpecialChars: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[64]++;
    cov_2adw3qu3jq().s[121]++;
    return value.replace(/[^\w\u4e00-\u9fa5]/g, '');
  },
  // 格式化手机号
  formatPhone: value => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[65]++;
    const cleaned =
    /* istanbul ignore next */
    (cov_2adw3qu3jq().s[122]++, value.replace(/\D/g, ''));
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[123]++;
    if (cleaned.length === 11) {
      /* istanbul ignore next */
      cov_2adw3qu3jq().b[29][0]++;
      cov_2adw3qu3jq().s[124]++;
      return cleaned.replace(/(\d{3})(\d{4})(\d{4})/, '$1-$2-$3');
    } else
    /* istanbul ignore next */
    {
      cov_2adw3qu3jq().b[29][1]++;
    }
    cov_2adw3qu3jq().s[125]++;
    return value;
  },
  // 格式化金额
  formatCurrency: (value, currency =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().b[30][0]++, '¥')) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[66]++;
    cov_2adw3qu3jq().s[126]++;
    return `${currency}${value.toLocaleString('zh-CN', {
      minimumFractionDigits: 2
    })}`;
  }
});
/* istanbul ignore next */
cov_2adw3qu3jq().s[127]++;
const useFormValidation = (initialData =
/* istanbul ignore next */
(cov_2adw3qu3jq().b[31][0]++, {})) => {
  /* istanbul ignore next */
  cov_2adw3qu3jq().f[67]++;
  const [data, setData] =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().s[128]++, (0, _react.useState)(initialData));
  const [errors, setErrors] =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().s[129]++, (0, _react.useState)({}));
  const [isValidating, setIsValidating] =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().s[130]++, (0, _react.useState)(false));
  const validator =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().s[131]++, new Validator());
  // 添加验证规则
  const addValidationRule =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().s[132]++, (0, _react.useCallback)((fieldName, rule) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[68]++;
    cov_2adw3qu3jq().s[133]++;
    validator.addRule(fieldName, rule);
  }, [validator]));
  // 添加多个验证规则
  const addValidationRules =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().s[134]++, (0, _react.useCallback)((fieldName, rules) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[69]++;
    cov_2adw3qu3jq().s[135]++;
    validator.addRules(fieldName, rules);
  }, [validator]));
  // 更新字段值
  const updateField =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().s[136]++, (0, _react.useCallback)((fieldName, value) => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[70]++;
    cov_2adw3qu3jq().s[137]++;
    setData(prev => {
      /* istanbul ignore next */
      cov_2adw3qu3jq().f[71]++;
      cov_2adw3qu3jq().s[138]++;
      return {
        ...prev,
        [fieldName]: value
      };
    });
    // 清除该字段的错误
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[139]++;
    setErrors(prev => {
      /* istanbul ignore next */
      cov_2adw3qu3jq().f[72]++;
      const newErrors =
      /* istanbul ignore next */
      (cov_2adw3qu3jq().s[140]++, {
        ...prev
      });
      /* istanbul ignore next */
      cov_2adw3qu3jq().s[141]++;
      delete newErrors[fieldName];
      /* istanbul ignore next */
      cov_2adw3qu3jq().s[142]++;
      return newErrors;
    });
  }, []));
  // 验证表单
  const validate =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().s[143]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[73]++;
    cov_2adw3qu3jq().s[144]++;
    setIsValidating(true);
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[145]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_2adw3qu3jq().s[146]++, validator.validate(data));
      /* istanbul ignore next */
      cov_2adw3qu3jq().s[147]++;
      setErrors(result.errors);
      /* istanbul ignore next */
      cov_2adw3qu3jq().s[148]++;
      return result.isValid;
    } finally {
      /* istanbul ignore next */
      cov_2adw3qu3jq().s[149]++;
      setIsValidating(false);
    }
  }, [data, validator]));
  // 验证单个字段
  const validateField =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().s[150]++, (0, _react.useCallback)(fieldName => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[74]++;
    const result =
    /* istanbul ignore next */
    (cov_2adw3qu3jq().s[151]++, validator.validateField(fieldName, data[fieldName]));
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[152]++;
    setErrors(prev => {
      /* istanbul ignore next */
      cov_2adw3qu3jq().f[75]++;
      cov_2adw3qu3jq().s[153]++;
      return {
        ...prev,
        [fieldName]: result.errors
      };
    });
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[154]++;
    return result.isValid;
  }, [data, validator]));
  // 重置表单
  const reset =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().s[155]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[76]++;
    cov_2adw3qu3jq().s[156]++;
    setData(initialData);
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[157]++;
    setErrors({});
  }, [initialData]));
  // 获取字段错误
  const getFieldError =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().s[158]++, (0, _react.useCallback)(fieldName => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[77]++;
    const fieldErrors =
    /* istanbul ignore next */
    (cov_2adw3qu3jq().s[159]++, errors[fieldName]);
    /* istanbul ignore next */
    cov_2adw3qu3jq().s[160]++;
    return /* istanbul ignore next */(cov_2adw3qu3jq().b[33][0]++, fieldErrors) &&
    /* istanbul ignore next */
    (cov_2adw3qu3jq().b[33][1]++, fieldErrors.length > 0) ?
    /* istanbul ignore next */
    (cov_2adw3qu3jq().b[32][0]++, fieldErrors[0]) :
    /* istanbul ignore next */
    (cov_2adw3qu3jq().b[32][1]++, undefined);
  }, [errors]));
  // 检查字段是否有错误
  const hasFieldError =
  /* istanbul ignore next */
  (cov_2adw3qu3jq().s[161]++, (0, _react.useCallback)(fieldName => {
    /* istanbul ignore next */
    cov_2adw3qu3jq().f[78]++;
    cov_2adw3qu3jq().s[162]++;
    return !!(
    /* istanbul ignore next */
    (cov_2adw3qu3jq().b[34][0]++, errors[fieldName]) &&
    /* istanbul ignore next */
    (cov_2adw3qu3jq().b[34][1]++, errors[fieldName].length > 0));
  }, [errors]));
  /* istanbul ignore next */
  cov_2adw3qu3jq().s[163]++;
  return {
    data,
    errors,
    isValidating,
    updateField,
    validate,
    validateField,
    reset,
    getFieldError,
    hasFieldError,
    addValidationRule,
    addValidationRules
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,