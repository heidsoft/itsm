9e73d07c191c4a640b10a83c55ce8043
"use strict";

/* istanbul ignore next */
function cov_1ks86v4pp9() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/api/user-api.ts";
  var hash = "399bab981e3a450d2a08f0e196dc839f62571ebf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/api/user-api.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 23
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 56
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 67
        }
      },
      "5": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 65
        }
      },
      "6": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "7": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 71
        }
      },
      "8": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 68
        }
      },
      "9": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 54,
          column: 11
        }
      },
      "10": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 73
        }
      },
      "11": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "12": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "13": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "14": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 77
        }
      },
      "15": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 84
        }
      },
      "16": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 74
        }
      },
      "17": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 90
        }
      },
      "18": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 77
        }
      },
      "19": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 90
        }
      },
      "20": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 65
        }
      },
      "21": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 73
        }
      },
      "22": {
        start: {
          line: 155,
          column: 25
        },
        end: {
          line: 155,
          column: 89
        }
      },
      "23": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "24": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "25": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "26": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 17,
            column: 7
          }
        },
        loc: {
          start: {
            line: 17,
            column: 42
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 24,
            column: 7
          }
        },
        loc: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 31,
            column: 7
          }
        },
        loc: {
          start: {
            line: 31,
            column: 36
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 39,
            column: 7
          }
        },
        loc: {
          start: {
            line: 39,
            column: 40
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 45,
            column: 6
          },
          end: {
            line: 45,
            column: 7
          }
        },
        loc: {
          start: {
            line: 45,
            column: 34
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 51,
            column: 7
          }
        },
        loc: {
          start: {
            line: 51,
            column: 41
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 51
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 60,
            column: 6
          },
          end: {
            line: 60,
            column: 7
          }
        },
        loc: {
          start: {
            line: 60,
            column: 34
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 60
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 68,
            column: 6
          },
          end: {
            line: 68,
            column: 7
          }
        },
        loc: {
          start: {
            line: 68,
            column: 43
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 68
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 78,
            column: 6
          },
          end: {
            line: 78,
            column: 7
          }
        },
        loc: {
          start: {
            line: 78,
            column: 50
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 78
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 88,
            column: 6
          },
          end: {
            line: 88,
            column: 7
          }
        },
        loc: {
          start: {
            line: 88,
            column: 48
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 88
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 97,
            column: 6
          },
          end: {
            line: 97,
            column: 7
          }
        },
        loc: {
          start: {
            line: 97,
            column: 42
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 97
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 105,
            column: 7
          }
        },
        loc: {
          start: {
            line: 105,
            column: 54
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 105
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 112,
            column: 6
          },
          end: {
            line: 112,
            column: 7
          }
        },
        loc: {
          start: {
            line: 112,
            column: 39
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 112
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 119,
            column: 7
          }
        },
        loc: {
          start: {
            line: 119,
            column: 55
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 119
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 126,
            column: 6
          },
          end: {
            line: 126,
            column: 7
          }
        },
        loc: {
          start: {
            line: 126,
            column: 42
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 126
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 134,
            column: 6
          },
          end: {
            line: 134,
            column: 7
          }
        },
        loc: {
          start: {
            line: 134,
            column: 58
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 134
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 140,
            column: 6
          },
          end: {
            line: 140,
            column: 7
          }
        },
        loc: {
          start: {
            line: 140,
            column: 34
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 140
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 147,
            column: 6
          },
          end: {
            line: 147,
            column: 7
          }
        },
        loc: {
          start: {
            line: 147,
            column: 37
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 147
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 154,
            column: 6
          },
          end: {
            line: 154,
            column: 7
          }
        },
        loc: {
          start: {
            line: 154,
            column: 39
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 154
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 167,
            column: 6
          },
          end: {
            line: 167,
            column: 7
          }
        },
        loc: {
          start: {
            line: 167,
            column: 50
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 167
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 177,
            column: 6
          },
          end: {
            line: 177,
            column: 7
          }
        },
        loc: {
          start: {
            line: 177,
            column: 55
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 177
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 186,
            column: 6
          },
          end: {
            line: 186,
            column: 7
          }
        },
        loc: {
          start: {
            line: 186,
            column: 49
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 186
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 17,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 17,
            column: 40
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 105,
            column: 41
          },
          end: {
            line: 105,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 105,
            column: 50
          },
          end: {
            line: 105,
            column: 52
          }
        }],
        line: 105
      },
      "2": {
        loc: {
          start: {
            line: 167,
            column: 38
          },
          end: {
            line: 167,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 167,
            column: 46
          },
          end: {
            line: 167,
            column: 48
          }
        }],
        line: 167
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/api/user-api.ts"],
      sourcesContent: ["import { httpClient } from '../../app/lib/http-client';\nimport { \n  User, \n  CreateUserRequest, \n  UpdateUserRequest, \n  UserFilters, \n  UserListResponse,\n  UserStats,\n  UserActivity,\n  UserSession,\n  Permission,\n  UserPreferences,\n  UserImportRequest,\n  UserExportRequest\n} from '../../types/user';\n\n/**\n * \u7528\u6237API\u5BA2\u6237\u7AEF\n * \u63D0\u4F9B\u7528\u6237\u7BA1\u7406\u76F8\u5173\u7684API\u8C03\u7528\u65B9\u6CD5\n */\nexport class UserAPI {\n  /**\n   * \u83B7\u53D6\u7528\u6237\u5217\u8868\n   * @param params \u67E5\u8BE2\u53C2\u6570\n   * @returns \u7528\u6237\u5217\u8868\u54CD\u5E94\n   */\n  static async listUsers(params: UserFilters = {}): Promise<UserListResponse> {\n    return httpClient.get<UserListResponse>('/api/v1/users', params as Record<string, unknown>);\n  }\n\n  /**\n   * \u83B7\u53D6\u5355\u4E2A\u7528\u6237\u8BE6\u60C5\n   * @param id \u7528\u6237ID\n   * @returns \u7528\u6237\u8BE6\u60C5\u54CD\u5E94\n   */\n  static async getUser(id: number): Promise<{ user: User }> {\n    return httpClient.get<{ user: User }>(`/api/v1/users/${id}`);\n  }\n\n  /**\n   * \u521B\u5EFA\u65B0\u7528\u6237\n   * @param data \u7528\u6237\u521B\u5EFA\u6570\u636E\n   * @returns \u7528\u6237\u54CD\u5E94\n   */\n  static async createUser(data: CreateUserRequest): Promise<{ user: User }> {\n    return httpClient.post<{ user: User }>('/api/v1/users', data);\n  }\n\n  /**\n   * \u66F4\u65B0\u7528\u6237\u4FE1\u606F\n   * @param id \u7528\u6237ID\n   * @param data \u7528\u6237\u66F4\u65B0\u6570\u636E\n   * @returns \u7528\u6237\u54CD\u5E94\n   */\n  static async updateUser(id: number, data: UpdateUserRequest): Promise<{ user: User }> {\n    return httpClient.put<{ user: User }>(`/api/v1/users/${id}`, data);\n  }\n\n  /**\n   * \u5220\u9664\u7528\u6237\n   * @param id \u7528\u6237ID\n   */\n  static async deleteUser(id: number): Promise<void> {\n    return httpClient.delete(`/api/v1/users/${id}`);\n  }\n\n  /**\n   * \u6279\u91CF\u5220\u9664\u7528\u6237\n   * @param ids \u7528\u6237ID\u6570\u7EC4\n   */\n  static async batchDeleteUsers(ids: number[]): Promise<void> {\n    return httpClient.post('/api/v1/users/batch-delete', { ids });\n  }\n\n  /**\n   * \u542F\u7528\u7528\u6237\n   * @param id \u7528\u6237ID\n   * @returns \u7528\u6237\u54CD\u5E94\n   */\n  static async enableUser(id: number): Promise<{ user: User }> {\n    return httpClient.post<{ user: User }>(`/api/v1/users/${id}/enable`);\n  }\n\n  /**\n   * \u7981\u7528\u7528\u6237\n   * @param id \u7528\u6237ID\n   * @param reason \u7981\u7528\u539F\u56E0\n   * @returns \u7528\u6237\u54CD\u5E94\n   */\n  static async disableUser(id: number, reason?: string): Promise<{ user: User }> {\n    return httpClient.post<{ user: User }>(`/api/v1/users/${id}/disable`, { reason });\n  }\n\n  /**\n   * \u91CD\u7F6E\u7528\u6237\u5BC6\u7801\n   * @param id \u7528\u6237ID\n   * @param newPassword \u65B0\u5BC6\u7801\n   * @returns \u7528\u6237\u54CD\u5E94\n   */\n  static async resetPassword(id: number, newPassword: string): Promise<{ user: User }> {\n    return httpClient.post<{ user: User }>(`/api/v1/users/${id}/reset-password`, { \n      new_password: newPassword \n    });\n  }\n\n  /**\n   * \u66F4\u65B0\u7528\u6237\u89D2\u8272\n   * @param id \u7528\u6237ID\n   * @param roleIds \u89D2\u8272ID\u6570\u7EC4\n   * @returns \u7528\u6237\u54CD\u5E94\n   */\n  static async updateUserRoles(id: number, roleIds: number[]): Promise<{ user: User }> {\n    return httpClient.post<{ user: User }>(`/api/v1/users/${id}/roles`, { role_ids: roleIds });\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u6743\u9650\n   * @param id \u7528\u6237ID\n   * @returns \u7528\u6237\u6743\u9650\u5217\u8868\n   */\n  static async getUserPermissions(id: number): Promise<Permission[]> {\n    return httpClient.get<Permission[]>(`/api/v1/users/${id}/permissions`);\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u6D3B\u52A8\u8BB0\u5F55\n   * @param id \u7528\u6237ID\n   * @param params \u67E5\u8BE2\u53C2\u6570\n   * @returns \u7528\u6237\u6D3B\u52A8\u5217\u8868\n   */\n  static async getUserActivities(id: number, params: { \n    page?: number; \n    page_size?: number; \n    activity_type?: string;\n    date_from?: string;\n    date_to?: string;\n  } = {}): Promise<{ activities: UserActivity[]; total: number }> {\n    return httpClient.get<{ activities: UserActivity[]; total: number }>(\n      `/api/v1/users/${id}/activities`, \n      params as Record<string, unknown>\n    );\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u4F1A\u8BDD\u4FE1\u606F\n   * @param id \u7528\u6237ID\n   * @returns \u7528\u6237\u4F1A\u8BDD\u5217\u8868\n   */\n  static async getUserSessions(id: number): Promise<UserSession[]> {\n    return httpClient.get<UserSession[]>(`/api/v1/users/${id}/sessions`);\n  }\n\n  /**\n   * \u7EC8\u6B62\u7528\u6237\u4F1A\u8BDD\n   * @param id \u7528\u6237ID\n   * @param sessionId \u4F1A\u8BDDID\n   */\n  static async terminateUserSession(id: number, sessionId: string): Promise<void> {\n    return httpClient.delete(`/api/v1/users/${id}/sessions/${sessionId}`);\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u504F\u597D\u8BBE\u7F6E\n   * @param id \u7528\u6237ID\n   * @returns \u7528\u6237\u504F\u597D\u8BBE\u7F6E\n   */\n  static async getUserPreferences(id: number): Promise<UserPreferences> {\n    return httpClient.get<UserPreferences>(`/api/v1/users/${id}/preferences`);\n  }\n\n  /**\n   * \u66F4\u65B0\u7528\u6237\u504F\u597D\u8BBE\u7F6E\n   * @param id \u7528\u6237ID\n   * @param preferences \u504F\u597D\u8BBE\u7F6E\n   * @returns \u7528\u6237\u504F\u597D\u8BBE\u7F6E\n   */\n  static async updateUserPreferences(id: number, preferences: Partial<UserPreferences>): Promise<UserPreferences> {\n    return httpClient.put<UserPreferences>(`/api/v1/users/${id}/preferences`, preferences);\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u7EDF\u8BA1\u4FE1\u606F\n   * @returns \u7528\u6237\u7EDF\u8BA1\u6570\u636E\n   */\n  static async getUserStats(): Promise<UserStats> {\n    return httpClient.get<UserStats>('/api/v1/users/stats');\n  }\n\n  /**\n   * \u5BFC\u5165\u7528\u6237\n   * @param data \u5BFC\u5165\u6570\u636E\n   * @returns \u5BFC\u5165\u7ED3\u679C\n   */\n  static async importUsers(data: UserImportRequest): Promise<{\n    success_count: number;\n    error_count: number;\n    errors: Array<{ row: number; message: string }>;\n  }> {\n    return httpClient.post('/api/v1/users/import', data);\n  }\n\n  /**\n   * \u5BFC\u51FA\u7528\u6237\n   * @param params \u5BFC\u51FA\u53C2\u6570\n   * @returns \u5BFC\u51FA\u6587\u4EF6Blob\n   */\n  static async exportUsers(params: UserExportRequest): Promise<Blob> {\n    const response = await httpClient.get<ArrayBuffer>('/api/v1/users/export', params as unknown as Record<string, unknown>);\n    return new Blob([response], { type: 'application/octet-stream' });\n  }\n\n  /**\n   * \u641C\u7D22\u7528\u6237\n   * @param query \u641C\u7D22\u5173\u952E\u8BCD\n   * @param limit \u7ED3\u679C\u9650\u5236\u6570\u91CF\n   * @returns \u7528\u6237\u5217\u8868\n   */\n  static async searchUsers(query: string, limit: number = 10): Promise<User[]> {\n    return httpClient.get<User[]>('/api/v1/users/search', { q: query, limit });\n  }\n\n  /**\n   * \u9A8C\u8BC1\u7528\u6237\u540D\u662F\u5426\u53EF\u7528\n   * @param username \u7528\u6237\u540D\n   * @returns \u662F\u5426\u53EF\u7528\n   */\n  static async checkUsernameAvailability(username: string): Promise<{ available: boolean }> {\n    return httpClient.get<{ available: boolean }>('/api/v1/users/check-username', { username });\n  }\n\n  /**\n   * \u9A8C\u8BC1\u90AE\u7BB1\u662F\u5426\u53EF\u7528\n   * @param email \u90AE\u7BB1\n   * @returns \u662F\u5426\u53EF\u7528\n   */\n  static async checkEmailAvailability(email: string): Promise<{ available: boolean }> {\n    return httpClient.get<{ available: boolean }>('/api/v1/users/check-email', { email });\n  }\n}"],
      names: ["UserAPI", "listUsers", "params", "httpClient", "get", "getUser", "id", "createUser", "data", "post", "updateUser", "put", "deleteUser", "delete", "batchDeleteUsers", "ids", "enableUser", "disableUser", "reason", "resetPassword", "newPassword", "new_password", "updateUserRoles", "roleIds", "role_ids", "getUserPermissions", "getUserActivities", "getUserSessions", "terminateUserSession", "sessionId", "getUserPreferences", "updateUserPreferences", "preferences", "getUserStats", "importUsers", "exportUsers", "response", "Blob", "type", "searchUsers", "query", "limit", "q", "checkUsernameAvailability", "username", "checkEmailAvailability", "email"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "399bab981e3a450d2a08f0e196dc839f62571ebf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ks86v4pp9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ks86v4pp9();
cov_1ks86v4pp9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ks86v4pp9().s[1]++;
Object.defineProperty(exports, "UserAPI", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[0]++;
    cov_1ks86v4pp9().s[2]++;
    return UserAPI;
  }
});
const _httpclient =
/* istanbul ignore next */
(cov_1ks86v4pp9().s[3]++, require("../../app/lib/http-client"));
class UserAPI {
  /**
  * 获取用户列表
  * @param params 查询参数
  * @returns 用户列表响应
  */
  static async listUsers(params =
  /* istanbul ignore next */
  (cov_1ks86v4pp9().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[1]++;
    cov_1ks86v4pp9().s[4]++;
    return _httpclient.httpClient.get('/api/v1/users', params);
  }
  /**
  * 获取单个用户详情
  * @param id 用户ID
  * @returns 用户详情响应
  */
  static async getUser(id) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[2]++;
    cov_1ks86v4pp9().s[5]++;
    return _httpclient.httpClient.get(`/api/v1/users/${id}`);
  }
  /**
  * 创建新用户
  * @param data 用户创建数据
  * @returns 用户响应
  */
  static async createUser(data) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[3]++;
    cov_1ks86v4pp9().s[6]++;
    return _httpclient.httpClient.post('/api/v1/users', data);
  }
  /**
  * 更新用户信息
  * @param id 用户ID
  * @param data 用户更新数据
  * @returns 用户响应
  */
  static async updateUser(id, data) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[4]++;
    cov_1ks86v4pp9().s[7]++;
    return _httpclient.httpClient.put(`/api/v1/users/${id}`, data);
  }
  /**
  * 删除用户
  * @param id 用户ID
  */
  static async deleteUser(id) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[5]++;
    cov_1ks86v4pp9().s[8]++;
    return _httpclient.httpClient.delete(`/api/v1/users/${id}`);
  }
  /**
  * 批量删除用户
  * @param ids 用户ID数组
  */
  static async batchDeleteUsers(ids) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[6]++;
    cov_1ks86v4pp9().s[9]++;
    return _httpclient.httpClient.post('/api/v1/users/batch-delete', {
      ids
    });
  }
  /**
  * 启用用户
  * @param id 用户ID
  * @returns 用户响应
  */
  static async enableUser(id) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[7]++;
    cov_1ks86v4pp9().s[10]++;
    return _httpclient.httpClient.post(`/api/v1/users/${id}/enable`);
  }
  /**
  * 禁用用户
  * @param id 用户ID
  * @param reason 禁用原因
  * @returns 用户响应
  */
  static async disableUser(id, reason) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[8]++;
    cov_1ks86v4pp9().s[11]++;
    return _httpclient.httpClient.post(`/api/v1/users/${id}/disable`, {
      reason
    });
  }
  /**
  * 重置用户密码
  * @param id 用户ID
  * @param newPassword 新密码
  * @returns 用户响应
  */
  static async resetPassword(id, newPassword) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[9]++;
    cov_1ks86v4pp9().s[12]++;
    return _httpclient.httpClient.post(`/api/v1/users/${id}/reset-password`, {
      new_password: newPassword
    });
  }
  /**
  * 更新用户角色
  * @param id 用户ID
  * @param roleIds 角色ID数组
  * @returns 用户响应
  */
  static async updateUserRoles(id, roleIds) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[10]++;
    cov_1ks86v4pp9().s[13]++;
    return _httpclient.httpClient.post(`/api/v1/users/${id}/roles`, {
      role_ids: roleIds
    });
  }
  /**
  * 获取用户权限
  * @param id 用户ID
  * @returns 用户权限列表
  */
  static async getUserPermissions(id) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[11]++;
    cov_1ks86v4pp9().s[14]++;
    return _httpclient.httpClient.get(`/api/v1/users/${id}/permissions`);
  }
  /**
  * 获取用户活动记录
  * @param id 用户ID
  * @param params 查询参数
  * @returns 用户活动列表
  */
  static async getUserActivities(id, params =
  /* istanbul ignore next */
  (cov_1ks86v4pp9().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[12]++;
    cov_1ks86v4pp9().s[15]++;
    return _httpclient.httpClient.get(`/api/v1/users/${id}/activities`, params);
  }
  /**
  * 获取用户会话信息
  * @param id 用户ID
  * @returns 用户会话列表
  */
  static async getUserSessions(id) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[13]++;
    cov_1ks86v4pp9().s[16]++;
    return _httpclient.httpClient.get(`/api/v1/users/${id}/sessions`);
  }
  /**
  * 终止用户会话
  * @param id 用户ID
  * @param sessionId 会话ID
  */
  static async terminateUserSession(id, sessionId) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[14]++;
    cov_1ks86v4pp9().s[17]++;
    return _httpclient.httpClient.delete(`/api/v1/users/${id}/sessions/${sessionId}`);
  }
  /**
  * 获取用户偏好设置
  * @param id 用户ID
  * @returns 用户偏好设置
  */
  static async getUserPreferences(id) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[15]++;
    cov_1ks86v4pp9().s[18]++;
    return _httpclient.httpClient.get(`/api/v1/users/${id}/preferences`);
  }
  /**
  * 更新用户偏好设置
  * @param id 用户ID
  * @param preferences 偏好设置
  * @returns 用户偏好设置
  */
  static async updateUserPreferences(id, preferences) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[16]++;
    cov_1ks86v4pp9().s[19]++;
    return _httpclient.httpClient.put(`/api/v1/users/${id}/preferences`, preferences);
  }
  /**
  * 获取用户统计信息
  * @returns 用户统计数据
  */
  static async getUserStats() {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[17]++;
    cov_1ks86v4pp9().s[20]++;
    return _httpclient.httpClient.get('/api/v1/users/stats');
  }
  /**
  * 导入用户
  * @param data 导入数据
  * @returns 导入结果
  */
  static async importUsers(data) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[18]++;
    cov_1ks86v4pp9().s[21]++;
    return _httpclient.httpClient.post('/api/v1/users/import', data);
  }
  /**
  * 导出用户
  * @param params 导出参数
  * @returns 导出文件Blob
  */
  static async exportUsers(params) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[19]++;
    const response =
    /* istanbul ignore next */
    (cov_1ks86v4pp9().s[22]++, await _httpclient.httpClient.get('/api/v1/users/export', params));
    /* istanbul ignore next */
    cov_1ks86v4pp9().s[23]++;
    return new Blob([response], {
      type: 'application/octet-stream'
    });
  }
  /**
  * 搜索用户
  * @param query 搜索关键词
  * @param limit 结果限制数量
  * @returns 用户列表
  */
  static async searchUsers(query, limit =
  /* istanbul ignore next */
  (cov_1ks86v4pp9().b[2][0]++, 10)) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[20]++;
    cov_1ks86v4pp9().s[24]++;
    return _httpclient.httpClient.get('/api/v1/users/search', {
      q: query,
      limit
    });
  }
  /**
  * 验证用户名是否可用
  * @param username 用户名
  * @returns 是否可用
  */
  static async checkUsernameAvailability(username) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[21]++;
    cov_1ks86v4pp9().s[25]++;
    return _httpclient.httpClient.get('/api/v1/users/check-username', {
      username
    });
  }
  /**
  * 验证邮箱是否可用
  * @param email 邮箱
  * @returns 是否可用
  */
  static async checkEmailAvailability(email) {
    /* istanbul ignore next */
    cov_1ks86v4pp9().f[22]++;
    cov_1ks86v4pp9().s[26]++;
    return _httpclient.httpClient.get('/api/v1/users/check-email', {
      email
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,