{"version":3,"names":["cov_r7gywkr9e","actualCoverage","s","ticketTemplateService","TicketTemplateService","getTemplates","params","b","f","response","_httpclient","httpClient","get","error","console","getTemplate","id","createTemplate","data","post","updateTemplate","put","deleteTemplate","delete","toggleTemplateStatus","isActive","patch","is_active","copyTemplate","newName","name","getTemplateCategories","healthCheck","warn"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/services/ticket-template-service.ts"],"sourcesContent":["import { httpClient } from \"../http-client\";\n\nexport interface TicketTemplate {\n  id: number;\n  name: string;\n  description: string;\n  category: string;\n  fields: TemplateField[];\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface TemplateField {\n  name: string;\n  label: string;\n  type: \"text\" | \"textarea\" | \"select\" | \"number\" | \"date\" | \"checkbox\";\n  required: boolean;\n  options?: string[];\n  default_value?: string;\n  validation_rules?: string[];\n}\n\nexport interface CreateTemplateRequest {\n  name: string;\n  description: string;\n  category: string;\n  fields: TemplateField[];\n}\n\nexport interface UpdateTemplateRequest {\n  name?: string;\n  description?: string;\n  category?: string;\n  fields?: TemplateField[];\n  is_active?: boolean;\n}\n\nexport interface ListTemplatesParams {\n  category?: string;\n  search?: string;\n  is_active?: boolean;\n  page?: number;\n  page_size?: number;\n}\n\nexport interface TemplateListResponse {\n  templates: TicketTemplate[];\n  total: number;\n  page: number;\n  page_size: number;\n}\n\nclass TicketTemplateService {\n  // 获取模板列表\n  async getTemplates(params: ListTemplatesParams = {}): Promise<TemplateListResponse> {\n    try {\n      const response = await httpClient.get<TemplateListResponse>('/api/v1/ticket-templates', { params });\n      return response;\n    } catch (error) {\n      console.error('TicketTemplateService.getTemplates error:', error);\n      throw error;\n    }\n  }\n\n  // 获取单个模板\n  async getTemplate(id: number): Promise<TicketTemplate> {\n    try {\n      const response = await httpClient.get<TicketTemplate>(`/api/v1/ticket-templates/${id}`);\n      return response;\n    } catch (error) {\n      console.error('TicketTemplateService.getTemplate error:', error);\n      throw error;\n    }\n  }\n\n  // 创建模板\n  async createTemplate(data: CreateTemplateRequest): Promise<TicketTemplate> {\n    try {\n      const response = await httpClient.post<TicketTemplate>('/api/v1/ticket-templates', data);\n      return response;\n    } catch (error) {\n      console.error('TicketTemplateService.createTemplate error:', error);\n      throw error;\n    }\n  }\n\n  // 更新模板\n  async updateTemplate(id: number, data: UpdateTemplateRequest): Promise<TicketTemplate> {\n    try {\n      const response = await httpClient.put<TicketTemplate>(`/api/v1/ticket-templates/${id}`, data);\n      return response;\n    } catch (error) {\n      console.error('TicketTemplateService.updateTemplate error:', error);\n      throw error;\n    }\n  }\n\n  // 删除模板\n  async deleteTemplate(id: number): Promise<void> {\n    try {\n      await httpClient.delete(`/api/v1/ticket-templates/${id}`);\n    } catch (error) {\n      console.error('TicketTemplateService.deleteTemplate error:', error);\n      throw error;\n    }\n  }\n\n  // 激活/停用模板\n  async toggleTemplateStatus(id: number, isActive: boolean): Promise<TicketTemplate> {\n    try {\n      const response = await httpClient.patch<TicketTemplate>(`/api/v1/ticket-templates/${id}/status`, {\n        is_active: isActive\n      });\n      return response;\n    } catch (error) {\n      console.error('TicketTemplateService.toggleTemplateStatus error:', error);\n      throw error;\n    }\n  }\n\n  // 复制模板\n  async copyTemplate(id: number, newName: string): Promise<TicketTemplate> {\n    try {\n      const response = await httpClient.post<TicketTemplate>(`/api/v1/ticket-templates/${id}/copy`, {\n        name: newName\n      });\n      return response;\n    } catch (error) {\n      console.error('TicketTemplateService.copyTemplate error:', error);\n      throw error;\n    }\n  }\n\n  // 获取模板分类\n  async getTemplateCategories(): Promise<string[]> {\n    try {\n      const response = await httpClient.get<string[]>('/api/v1/ticket-templates/categories');\n      return response;\n    } catch (error) {\n      console.error('TicketTemplateService.getTemplateCategories error:', error);\n      throw error;\n    }\n  }\n\n  // 健康检查\n  async healthCheck(): Promise<boolean> {\n    try {\n      await httpClient.get('/api/v1/health');\n      return true;\n    } catch (error) {\n      console.warn('TicketTemplateService health check failed:', error);\n      return false;\n    }\n  }\n}\n\nexport const ticketTemplateService = new TicketTemplateService();\n"],"mappingsyDM;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;+BAoGO;;;;;;WAAAC,qBAAA;;;;;iCA7Jc;AAqD3B,MAAMC,qBAAA;EACJ;EACA,MAAMC,aAAaC,MAAA;EAAA;EAAA,CAAAN,aAAA,GAAAO,CAAA,UAA8B,CAAC,CAAC,GAAiC;IAAA;IAAAP,aAAA,GAAAQ,CAAA;IAAAR,aAAA,GAAAE,CAAA;IAClF,IAAI;MACF,MAAMO,QAAA;MAAA;MAAA,CAAAT,aAAA,GAAAE,CAAA,OAAW,MAAMQ,WAAA,CAAAC,UAAU,CAACC,GAAG,CAAuB,4BAA4B;QAAEN;MAAO;MAAA;MAAAN,aAAA,GAAAE,CAAA;MACjG,OAAOO,QAAA;IACT,EAAE,OAAOI,KAAA,EAAO;MAAA;MAAAb,aAAA,GAAAE,CAAA;MACdY,OAAA,CAAQD,KAAK,CAAC,6CAA6CA,KAAA;MAAA;MAAAb,aAAA,GAAAE,CAAA;MAC3D,MAAMW,KAAA;IACR;EACF;EAEA;EACA,MAAME,YAAYC,EAAU,EAA2B;IAAA;IAAAhB,aAAA,GAAAQ,CAAA;IAAAR,aAAA,GAAAE,CAAA;IACrD,IAAI;MACF,MAAMO,QAAA;MAAA;MAAA,CAAAT,aAAA,GAAAE,CAAA,QAAW,MAAMQ,WAAA,CAAAC,UAAU,CAACC,GAAG,CAAiB,4BAA4BI,EAAA,EAAI;MAAA;MAAAhB,aAAA,GAAAE,CAAA;MACtF,OAAOO,QAAA;IACT,EAAE,OAAOI,KAAA,EAAO;MAAA;MAAAb,aAAA,GAAAE,CAAA;MACdY,OAAA,CAAQD,KAAK,CAAC,4CAA4CA,KAAA;MAAA;MAAAb,aAAA,GAAAE,CAAA;MAC1D,MAAMW,KAAA;IACR;EACF;EAEA;EACA,MAAMI,eAAeC,IAA2B,EAA2B;IAAA;IAAAlB,aAAA,GAAAQ,CAAA;IAAAR,aAAA,GAAAE,CAAA;IACzE,IAAI;MACF,MAAMO,QAAA;MAAA;MAAA,CAAAT,aAAA,GAAAE,CAAA,QAAW,MAAMQ,WAAA,CAAAC,UAAU,CAACQ,IAAI,CAAiB,4BAA4BD,IAAA;MAAA;MAAAlB,aAAA,GAAAE,CAAA;MACnF,OAAOO,QAAA;IACT,EAAE,OAAOI,KAAA,EAAO;MAAA;MAAAb,aAAA,GAAAE,CAAA;MACdY,OAAA,CAAQD,KAAK,CAAC,+CAA+CA,KAAA;MAAA;MAAAb,aAAA,GAAAE,CAAA;MAC7D,MAAMW,KAAA;IACR;EACF;EAEA;EACA,MAAMO,eAAeJ,EAAU,EAAEE,IAA2B,EAA2B;IAAA;IAAAlB,aAAA,GAAAQ,CAAA;IAAAR,aAAA,GAAAE,CAAA;IACrF,IAAI;MACF,MAAMO,QAAA;MAAA;MAAA,CAAAT,aAAA,GAAAE,CAAA,QAAW,MAAMQ,WAAA,CAAAC,UAAU,CAACU,GAAG,CAAiB,4BAA4BL,EAAA,EAAI,EAAEE,IAAA;MAAA;MAAAlB,aAAA,GAAAE,CAAA;MACxF,OAAOO,QAAA;IACT,EAAE,OAAOI,KAAA,EAAO;MAAA;MAAAb,aAAA,GAAAE,CAAA;MACdY,OAAA,CAAQD,KAAK,CAAC,+CAA+CA,KAAA;MAAA;MAAAb,aAAA,GAAAE,CAAA;MAC7D,MAAMW,KAAA;IACR;EACF;EAEA;EACA,MAAMS,eAAeN,EAAU,EAAiB;IAAA;IAAAhB,aAAA,GAAAQ,CAAA;IAAAR,aAAA,GAAAE,CAAA;IAC9C,IAAI;MAAA;MAAAF,aAAA,GAAAE,CAAA;MACF,MAAMQ,WAAA,CAAAC,UAAU,CAACY,MAAM,CAAC,4BAA4BP,EAAA,EAAI;IAC1D,EAAE,OAAOH,KAAA,EAAO;MAAA;MAAAb,aAAA,GAAAE,CAAA;MACdY,OAAA,CAAQD,KAAK,CAAC,+CAA+CA,KAAA;MAAA;MAAAb,aAAA,GAAAE,CAAA;MAC7D,MAAMW,KAAA;IACR;EACF;EAEA;EACA,MAAMW,qBAAqBR,EAAU,EAAES,QAAiB,EAA2B;IAAA;IAAAzB,aAAA,GAAAQ,CAAA;IAAAR,aAAA,GAAAE,CAAA;IACjF,IAAI;MACF,MAAMO,QAAA;MAAA;MAAA,CAAAT,aAAA,GAAAE,CAAA,QAAW,MAAMQ,WAAA,CAAAC,UAAU,CAACe,KAAK,CAAiB,4BAA4BV,EAAA,SAAW,EAAE;QAC/FW,SAAA,EAAWF;MACb;MAAA;MAAAzB,aAAA,GAAAE,CAAA;MACA,OAAOO,QAAA;IACT,EAAE,OAAOI,KAAA,EAAO;MAAA;MAAAb,aAAA,GAAAE,CAAA;MACdY,OAAA,CAAQD,KAAK,CAAC,qDAAqDA,KAAA;MAAA;MAAAb,aAAA,GAAAE,CAAA;MACnE,MAAMW,KAAA;IACR;EACF;EAEA;EACA,MAAMe,aAAaZ,EAAU,EAAEa,OAAe,EAA2B;IAAA;IAAA7B,aAAA,GAAAQ,CAAA;IAAAR,aAAA,GAAAE,CAAA;IACvE,IAAI;MACF,MAAMO,QAAA;MAAA;MAAA,CAAAT,aAAA,GAAAE,CAAA,QAAW,MAAMQ,WAAA,CAAAC,UAAU,CAACQ,IAAI,CAAiB,4BAA4BH,EAAA,OAAS,EAAE;QAC5Fc,IAAA,EAAMD;MACR;MAAA;MAAA7B,aAAA,GAAAE,CAAA;MACA,OAAOO,QAAA;IACT,EAAE,OAAOI,KAAA,EAAO;MAAA;MAAAb,aAAA,GAAAE,CAAA;MACdY,OAAA,CAAQD,KAAK,CAAC,6CAA6CA,KAAA;MAAA;MAAAb,aAAA,GAAAE,CAAA;MAC3D,MAAMW,KAAA;IACR;EACF;EAEA;EACA,MAAMkB,sBAAA,EAA2C;IAAA;IAAA/B,aAAA,GAAAQ,CAAA;IAAAR,aAAA,GAAAE,CAAA;IAC/C,IAAI;MACF,MAAMO,QAAA;MAAA;MAAA,CAAAT,aAAA,GAAAE,CAAA,QAAW,MAAMQ,WAAA,CAAAC,UAAU,CAACC,GAAG,CAAW;MAAA;MAAAZ,aAAA,GAAAE,CAAA;MAChD,OAAOO,QAAA;IACT,EAAE,OAAOI,KAAA,EAAO;MAAA;MAAAb,aAAA,GAAAE,CAAA;MACdY,OAAA,CAAQD,KAAK,CAAC,sDAAsDA,KAAA;MAAA;MAAAb,aAAA,GAAAE,CAAA;MACpE,MAAMW,KAAA;IACR;EACF;EAEA;EACA,MAAMmB,YAAA,EAAgC;IAAA;IAAAhC,aAAA,GAAAQ,CAAA;IAAAR,aAAA,GAAAE,CAAA;IACpC,IAAI;MAAA;MAAAF,aAAA,GAAAE,CAAA;MACF,MAAMQ,WAAA,CAAAC,UAAU,CAACC,GAAG,CAAC;MAAA;MAAAZ,aAAA,GAAAE,CAAA;MACrB,OAAO;IACT,EAAE,OAAOW,KAAA,EAAO;MAAA;MAAAb,aAAA,GAAAE,CAAA;MACdY,OAAA,CAAQmB,IAAI,CAAC,8CAA8CpB,KAAA;MAAA;MAAAb,aAAA,GAAAE,CAAA;MAC3D,OAAO;IACT;EACF;AACF;AAEO,MAAMC,qBAAA;AAAA;AAAA,CAAAH,aAAA,GAAAE,CAAA,QAAwB,IAAIE,qBAAA","ignoreList":[]}