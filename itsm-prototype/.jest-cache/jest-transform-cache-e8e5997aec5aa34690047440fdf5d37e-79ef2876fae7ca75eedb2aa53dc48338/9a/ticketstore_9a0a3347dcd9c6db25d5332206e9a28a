c76389c61a17d42255f670b742c82859
"use strict";

/* istanbul ignore next */
function cov_agfrf1f2z() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/stores/ticket-store.ts";
  var hash = "48db25c633e2533311486024e00315ae7adccd30";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/stores/ticket-store.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 36
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "6": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "7": {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 20,
          column: 47
        }
      },
      "8": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 302,
          column: 7
        }
      },
      "9": {
        start: {
          line: 21,
          column: 61
        },
        end: {
          line: 302,
          column: 5
        }
      },
      "10": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 36,
          column: 31
        }
      },
      "11": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "12": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "13": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "14": {
        start: {
          line: 50,
          column: 33
        },
        end: {
          line: 50,
          column: 86
        }
      },
      "15": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 58,
          column: 19
        }
      },
      "16": {
        start: {
          line: 60,
          column: 37
        },
        end: {
          line: 60,
          column: 88
        }
      },
      "17": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 64,
          column: 19
        }
      },
      "18": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 65
        }
      },
      "19": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "20": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 74,
          column: 19
        }
      },
      "21": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 62
        }
      },
      "22": {
        start: {
          line: 77,
          column: 30
        },
        end: {
          line: 77,
          column: 35
        }
      },
      "23": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 43
        }
      },
      "24": {
        start: {
          line: 80,
          column: 37
        },
        end: {
          line: 80,
          column: 86
        }
      },
      "25": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 84,
          column: 19
        }
      },
      "26": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 65
        }
      },
      "27": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 28
        }
      },
      "28": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "29": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 95,
          column: 19
        }
      },
      "30": {
        start: {
          line: 96,
          column: 33
        },
        end: {
          line: 96,
          column: 82
        }
      },
      "31": {
        start: {
          line: 98,
          column: 30
        },
        end: {
          line: 98,
          column: 35
        }
      },
      "32": {
        start: {
          line: 99,
          column: 39
        },
        end: {
          line: 99,
          column: 111
        }
      },
      "33": {
        start: {
          line: 99,
          column: 67
        },
        end: {
          line: 99,
          column: 110
        }
      },
      "34": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 103,
          column: 19
        }
      },
      "35": {
        start: {
          line: 105,
          column: 37
        },
        end: {
          line: 105,
          column: 86
        }
      },
      "36": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 109,
          column: 19
        }
      },
      "37": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 65
        }
      },
      "38": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 28
        }
      },
      "39": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "40": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 120,
          column: 19
        }
      },
      "41": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 60
        }
      },
      "42": {
        start: {
          line: 123,
          column: 30
        },
        end: {
          line: 123,
          column: 35
        }
      },
      "43": {
        start: {
          line: 124,
          column: 40
        },
        end: {
          line: 124,
          column: 88
        }
      },
      "44": {
        start: {
          line: 124,
          column: 71
        },
        end: {
          line: 124,
          column: 87
        }
      },
      "45": {
        start: {
          line: 125,
          column: 41
        },
        end: {
          line: 125,
          column: 97
        }
      },
      "46": {
        start: {
          line: 125,
          column: 80
        },
        end: {
          line: 125,
          column: 96
        }
      },
      "47": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 131,
          column: 19
        }
      },
      "48": {
        start: {
          line: 133,
          column: 37
        },
        end: {
          line: 133,
          column: 86
        }
      },
      "49": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 137,
          column: 19
        }
      },
      "50": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 65
        }
      },
      "51": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 28
        }
      },
      "52": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "53": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 148,
          column: 19
        }
      },
      "54": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 67
        }
      },
      "55": {
        start: {
          line: 151,
          column: 30
        },
        end: {
          line: 151,
          column: 35
        }
      },
      "56": {
        start: {
          line: 152,
          column: 40
        },
        end: {
          line: 152,
          column: 96
        }
      },
      "57": {
        start: {
          line: 152,
          column: 71
        },
        end: {
          line: 152,
          column: 95
        }
      },
      "58": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 158,
          column: 19
        }
      },
      "59": {
        start: {
          line: 160,
          column: 37
        },
        end: {
          line: 160,
          column: 88
        }
      },
      "60": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 164,
          column: 19
        }
      },
      "61": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 72
        }
      },
      "62": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 28
        }
      },
      "63": {
        start: {
          line: 171,
          column: 26
        },
        end: {
          line: 171,
          column: 31
        }
      },
      "64": {
        start: {
          line: 172,
          column: 31
        },
        end: {
          line: 172,
          column: 96
        }
      },
      "65": {
        start: {
          line: 172,
          column: 70
        },
        end: {
          line: 172,
          column: 95
        }
      },
      "66": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "67": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 179,
          column: 19
        }
      },
      "68": {
        start: {
          line: 184,
          column: 26
        },
        end: {
          line: 184,
          column: 31
        }
      },
      "69": {
        start: {
          line: 185,
          column: 37
        },
        end: {
          line: 185,
          column: 104
        }
      },
      "70": {
        start: {
          line: 185,
          column: 78
        },
        end: {
          line: 185,
          column: 103
        }
      },
      "71": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 188,
          column: 15
        }
      },
      "72": {
        start: {
          line: 192,
          column: 26
        },
        end: {
          line: 192,
          column: 31
        }
      },
      "73": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 197,
          column: 15
        }
      },
      "74": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 203,
          column: 15
        }
      },
      "75": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 210,
          column: 15
        }
      },
      "76": {
        start: {
          line: 214,
          column: 26
        },
        end: {
          line: 214,
          column: 31
        }
      },
      "77": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 221,
          column: 15
        }
      },
      "78": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 228,
          column: 15
        }
      },
      "79": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 235,
          column: 15
        }
      },
      "80": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 241,
          column: 15
        }
      },
      "81": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 248,
          column: 15
        }
      },
      "82": {
        start: {
          line: 252,
          column: 26
        },
        end: {
          line: 252,
          column: 31
        }
      },
      "83": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "84": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 256,
          column: 19
        }
      },
      "85": {
        start: {
          line: 261,
          column: 26
        },
        end: {
          line: 261,
          column: 31
        }
      },
      "86": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 266,
          column: 13
        }
      },
      "87": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 265,
          column: 19
        }
      },
      "88": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 272,
          column: 15
        }
      },
      "89": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 278,
          column: 15
        }
      },
      "90": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 284,
          column: 15
        }
      },
      "91": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 300,
          column: 15
        }
      },
      "92": {
        start: {
          line: 303,
          column: 29
        },
        end: {
          line: 519,
          column: 7
        }
      },
      "93": {
        start: {
          line: 303,
          column: 63
        },
        end: {
          line: 519,
          column: 5
        }
      },
      "94": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 327,
          column: 13
        }
      },
      "95": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 314,
          column: 19
        }
      },
      "96": {
        start: {
          line: 315,
          column: 33
        },
        end: {
          line: 315,
          column: 73
        }
      },
      "97": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 319,
          column: 19
        }
      },
      "98": {
        start: {
          line: 321,
          column: 37
        },
        end: {
          line: 321,
          column: 88
        }
      },
      "99": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 325,
          column: 19
        }
      },
      "100": {
        start: {
          line: 326,
          column: 16
        },
        end: {
          line: 326,
          column: 64
        }
      },
      "101": {
        start: {
          line: 331,
          column: 26
        },
        end: {
          line: 331,
          column: 31
        }
      },
      "102": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 38
        }
      },
      "103": {
        start: {
          line: 332,
          column: 31
        },
        end: {
          line: 332,
          column: 38
        }
      },
      "104": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 351,
          column: 13
        }
      },
      "105": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 337,
          column: 19
        }
      },
      "106": {
        start: {
          line: 338,
          column: 33
        },
        end: {
          line: 338,
          column: 95
        }
      },
      "107": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 342,
          column: 19
        }
      },
      "108": {
        start: {
          line: 344,
          column: 37
        },
        end: {
          line: 344,
          column: 86
        }
      },
      "109": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 348,
          column: 19
        }
      },
      "110": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 349,
          column: 65
        }
      },
      "111": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 28
        }
      },
      "112": {
        start: {
          line: 355,
          column: 26
        },
        end: {
          line: 355,
          column: 31
        }
      },
      "113": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 356,
          column: 38
        }
      },
      "114": {
        start: {
          line: 356,
          column: 31
        },
        end: {
          line: 356,
          column: 38
        }
      },
      "115": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 378,
          column: 13
        }
      },
      "116": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 361,
          column: 19
        }
      },
      "117": {
        start: {
          line: 362,
          column: 33
        },
        end: {
          line: 365,
          column: 18
        }
      },
      "118": {
        start: {
          line: 366,
          column: 16
        },
        end: {
          line: 369,
          column: 19
        }
      },
      "119": {
        start: {
          line: 371,
          column: 37
        },
        end: {
          line: 371,
          column: 86
        }
      },
      "120": {
        start: {
          line: 372,
          column: 16
        },
        end: {
          line: 375,
          column: 19
        }
      },
      "121": {
        start: {
          line: 376,
          column: 16
        },
        end: {
          line: 376,
          column: 65
        }
      },
      "122": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 377,
          column: 28
        }
      },
      "123": {
        start: {
          line: 382,
          column: 26
        },
        end: {
          line: 382,
          column: 31
        }
      },
      "124": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 38
        }
      },
      "125": {
        start: {
          line: 383,
          column: 31
        },
        end: {
          line: 383,
          column: 38
        }
      },
      "126": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 406,
          column: 13
        }
      },
      "127": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 388,
          column: 19
        }
      },
      "128": {
        start: {
          line: 389,
          column: 33
        },
        end: {
          line: 393,
          column: 18
        }
      },
      "129": {
        start: {
          line: 394,
          column: 16
        },
        end: {
          line: 397,
          column: 19
        }
      },
      "130": {
        start: {
          line: 399,
          column: 37
        },
        end: {
          line: 399,
          column: 86
        }
      },
      "131": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 403,
          column: 19
        }
      },
      "132": {
        start: {
          line: 404,
          column: 16
        },
        end: {
          line: 404,
          column: 67
        }
      },
      "133": {
        start: {
          line: 405,
          column: 16
        },
        end: {
          line: 405,
          column: 28
        }
      },
      "134": {
        start: {
          line: 410,
          column: 26
        },
        end: {
          line: 410,
          column: 31
        }
      },
      "135": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 38
        }
      },
      "136": {
        start: {
          line: 411,
          column: 31
        },
        end: {
          line: 411,
          column: 38
        }
      },
      "137": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 433,
          column: 13
        }
      },
      "138": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 416,
          column: 19
        }
      },
      "139": {
        start: {
          line: 417,
          column: 33
        },
        end: {
          line: 420,
          column: 18
        }
      },
      "140": {
        start: {
          line: 421,
          column: 16
        },
        end: {
          line: 424,
          column: 19
        }
      },
      "141": {
        start: {
          line: 426,
          column: 37
        },
        end: {
          line: 426,
          column: 86
        }
      },
      "142": {
        start: {
          line: 427,
          column: 16
        },
        end: {
          line: 430,
          column: 19
        }
      },
      "143": {
        start: {
          line: 431,
          column: 16
        },
        end: {
          line: 431,
          column: 66
        }
      },
      "144": {
        start: {
          line: 432,
          column: 16
        },
        end: {
          line: 432,
          column: 28
        }
      },
      "145": {
        start: {
          line: 437,
          column: 26
        },
        end: {
          line: 437,
          column: 31
        }
      },
      "146": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 38
        }
      },
      "147": {
        start: {
          line: 438,
          column: 31
        },
        end: {
          line: 438,
          column: 38
        }
      },
      "148": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 461,
          column: 13
        }
      },
      "149": {
        start: {
          line: 440,
          column: 16
        },
        end: {
          line: 443,
          column: 19
        }
      },
      "150": {
        start: {
          line: 444,
          column: 33
        },
        end: {
          line: 448,
          column: 18
        }
      },
      "151": {
        start: {
          line: 449,
          column: 16
        },
        end: {
          line: 452,
          column: 19
        }
      },
      "152": {
        start: {
          line: 454,
          column: 37
        },
        end: {
          line: 454,
          column: 86
        }
      },
      "153": {
        start: {
          line: 455,
          column: 16
        },
        end: {
          line: 458,
          column: 19
        }
      },
      "154": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 459,
          column: 64
        }
      },
      "155": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 460,
          column: 28
        }
      },
      "156": {
        start: {
          line: 465,
          column: 26
        },
        end: {
          line: 465,
          column: 31
        }
      },
      "157": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 466,
          column: 38
        }
      },
      "158": {
        start: {
          line: 466,
          column: 31
        },
        end: {
          line: 466,
          column: 38
        }
      },
      "159": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 485,
          column: 13
        }
      },
      "160": {
        start: {
          line: 468,
          column: 16
        },
        end: {
          line: 471,
          column: 19
        }
      },
      "161": {
        start: {
          line: 472,
          column: 33
        },
        end: {
          line: 472,
          column: 97
        }
      },
      "162": {
        start: {
          line: 473,
          column: 16
        },
        end: {
          line: 476,
          column: 19
        }
      },
      "163": {
        start: {
          line: 478,
          column: 37
        },
        end: {
          line: 478,
          column: 88
        }
      },
      "164": {
        start: {
          line: 479,
          column: 16
        },
        end: {
          line: 482,
          column: 19
        }
      },
      "165": {
        start: {
          line: 483,
          column: 16
        },
        end: {
          line: 483,
          column: 65
        }
      },
      "166": {
        start: {
          line: 484,
          column: 16
        },
        end: {
          line: 484,
          column: 28
        }
      },
      "167": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 491,
          column: 15
        }
      },
      "168": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 497,
          column: 15
        }
      },
      "169": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 503,
          column: 15
        }
      },
      "170": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 509,
          column: 15
        }
      },
      "171": {
        start: {
          line: 513,
          column: 12
        },
        end: {
          line: 517,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 12,
            column: 27
          }
        },
        loc: {
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 15,
            column: 25
          }
        },
        loc: {
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 48
          },
          end: {
            line: 21,
            column: 49
          }
        },
        loc: {
          start: {
            line: 21,
            column: 61
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 23
          }
        },
        loc: {
          start: {
            line: 35,
            column: 43
          },
          end: {
            line: 67,
            column: 9
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 69,
            column: 22
          },
          end: {
            line: 69,
            column: 23
          }
        },
        loc: {
          start: {
            line: 69,
            column: 36
          },
          end: {
            line: 88,
            column: 9
          }
        },
        line: 69
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 90,
            column: 22
          },
          end: {
            line: 90,
            column: 23
          }
        },
        loc: {
          start: {
            line: 90,
            column: 40
          },
          end: {
            line: 113,
            column: 9
          }
        },
        line: 90
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 99,
            column: 57
          },
          end: {
            line: 99,
            column: 58
          }
        },
        loc: {
          start: {
            line: 99,
            column: 67
          },
          end: {
            line: 99,
            column: 110
          }
        },
        line: 99
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 115,
            column: 22
          },
          end: {
            line: 115,
            column: 23
          }
        },
        loc: {
          start: {
            line: 115,
            column: 34
          },
          end: {
            line: 141,
            column: 9
          }
        },
        line: 115
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 124,
            column: 61
          },
          end: {
            line: 124,
            column: 62
          }
        },
        loc: {
          start: {
            line: 124,
            column: 71
          },
          end: {
            line: 124,
            column: 87
          }
        },
        line: 124
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 125,
            column: 70
          },
          end: {
            line: 125,
            column: 71
          }
        },
        loc: {
          start: {
            line: 125,
            column: 80
          },
          end: {
            line: 125,
            column: 96
          }
        },
        line: 125
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 143,
            column: 28
          },
          end: {
            line: 143,
            column: 29
          }
        },
        loc: {
          start: {
            line: 143,
            column: 41
          },
          end: {
            line: 168,
            column: 9
          }
        },
        line: 143
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 152,
            column: 61
          },
          end: {
            line: 152,
            column: 62
          }
        },
        loc: {
          start: {
            line: 152,
            column: 71
          },
          end: {
            line: 152,
            column: 95
          }
        },
        line: 152
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 170,
            column: 22
          },
          end: {
            line: 170,
            column: 23
          }
        },
        loc: {
          start: {
            line: 170,
            column: 32
          },
          end: {
            line: 181,
            column: 9
          }
        },
        line: 170
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 172,
            column: 58
          },
          end: {
            line: 172,
            column: 59
          }
        },
        loc: {
          start: {
            line: 172,
            column: 70
          },
          end: {
            line: 172,
            column: 95
          }
        },
        line: 172
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 183,
            column: 24
          },
          end: {
            line: 183,
            column: 25
          }
        },
        loc: {
          start: {
            line: 183,
            column: 34
          },
          end: {
            line: 189,
            column: 9
          }
        },
        line: 183
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 185,
            column: 66
          },
          end: {
            line: 185,
            column: 67
          }
        },
        loc: {
          start: {
            line: 185,
            column: 78
          },
          end: {
            line: 185,
            column: 103
          }
        },
        line: 185
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 191,
            column: 19
          },
          end: {
            line: 191,
            column: 20
          }
        },
        loc: {
          start: {
            line: 191,
            column: 23
          },
          end: {
            line: 198,
            column: 9
          }
        },
        line: 191
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 200,
            column: 21
          },
          end: {
            line: 200,
            column: 22
          }
        },
        loc: {
          start: {
            line: 200,
            column: 25
          },
          end: {
            line: 204,
            column: 9
          }
        },
        line: 200
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 206,
            column: 20
          },
          end: {
            line: 206,
            column: 21
          }
        },
        loc: {
          start: {
            line: 206,
            column: 31
          },
          end: {
            line: 211,
            column: 9
          }
        },
        line: 206
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 213,
            column: 22
          },
          end: {
            line: 213,
            column: 23
          }
        },
        loc: {
          start: {
            line: 213,
            column: 36
          },
          end: {
            line: 222,
            column: 9
          }
        },
        line: 213
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 224,
            column: 22
          },
          end: {
            line: 224,
            column: 23
          }
        },
        loc: {
          start: {
            line: 224,
            column: 26
          },
          end: {
            line: 229,
            column: 9
          }
        },
        line: 224
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 231,
            column: 20
          },
          end: {
            line: 231,
            column: 21
          }
        },
        loc: {
          start: {
            line: 231,
            column: 41
          },
          end: {
            line: 236,
            column: 9
          }
        },
        line: 231
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 238,
            column: 17
          },
          end: {
            line: 238,
            column: 18
          }
        },
        loc: {
          start: {
            line: 238,
            column: 25
          },
          end: {
            line: 242,
            column: 9
          }
        },
        line: 238
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 244,
            column: 21
          },
          end: {
            line: 244,
            column: 22
          }
        },
        loc: {
          start: {
            line: 244,
            column: 33
          },
          end: {
            line: 249,
            column: 9
          }
        },
        line: 244
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 251,
            column: 18
          },
          end: {
            line: 251,
            column: 19
          }
        },
        loc: {
          start: {
            line: 251,
            column: 22
          },
          end: {
            line: 258,
            column: 9
          }
        },
        line: 251
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 260,
            column: 18
          },
          end: {
            line: 260,
            column: 19
          }
        },
        loc: {
          start: {
            line: 260,
            column: 22
          },
          end: {
            line: 267,
            column: 9
          }
        },
        line: 260
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 269,
            column: 20
          },
          end: {
            line: 269,
            column: 21
          }
        },
        loc: {
          start: {
            line: 269,
            column: 31
          },
          end: {
            line: 273,
            column: 9
          }
        },
        line: 269
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 275,
            column: 18
          },
          end: {
            line: 275,
            column: 19
          }
        },
        loc: {
          start: {
            line: 275,
            column: 27
          },
          end: {
            line: 279,
            column: 9
          }
        },
        line: 275
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 281,
            column: 20
          },
          end: {
            line: 281,
            column: 21
          }
        },
        loc: {
          start: {
            line: 281,
            column: 24
          },
          end: {
            line: 285,
            column: 9
          }
        },
        line: 281
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 287,
            column: 15
          },
          end: {
            line: 287,
            column: 16
          }
        },
        loc: {
          start: {
            line: 287,
            column: 19
          },
          end: {
            line: 301,
            column: 9
          }
        },
        line: 287
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 303,
            column: 50
          },
          end: {
            line: 303,
            column: 51
          }
        },
        loc: {
          start: {
            line: 303,
            column: 63
          },
          end: {
            line: 519,
            column: 5
          }
        },
        line: 303
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 309,
            column: 21
          },
          end: {
            line: 309,
            column: 22
          }
        },
        loc: {
          start: {
            line: 309,
            column: 33
          },
          end: {
            line: 328,
            column: 9
          }
        },
        line: 309
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 330,
            column: 22
          },
          end: {
            line: 330,
            column: 23
          }
        },
        loc: {
          start: {
            line: 330,
            column: 36
          },
          end: {
            line: 352,
            column: 9
          }
        },
        line: 330
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 354,
            column: 22
          },
          end: {
            line: 354,
            column: 23
          }
        },
        loc: {
          start: {
            line: 354,
            column: 51
          },
          end: {
            line: 379,
            column: 9
          }
        },
        line: 354
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 381,
            column: 24
          },
          end: {
            line: 381,
            column: 25
          }
        },
        loc: {
          start: {
            line: 381,
            column: 59
          },
          end: {
            line: 407,
            column: 9
          }
        },
        line: 381
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 409,
            column: 23
          },
          end: {
            line: 409,
            column: 24
          }
        },
        loc: {
          start: {
            line: 409,
            column: 53
          },
          end: {
            line: 434,
            column: 9
          }
        },
        line: 409
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 436,
            column: 21
          },
          end: {
            line: 436,
            column: 22
          }
        },
        loc: {
          start: {
            line: 436,
            column: 54
          },
          end: {
            line: 462,
            column: 9
          }
        },
        line: 436
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 464,
            column: 22
          },
          end: {
            line: 464,
            column: 23
          }
        },
        loc: {
          start: {
            line: 464,
            column: 38
          },
          end: {
            line: 486,
            column: 9
          }
        },
        line: 464
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 488,
            column: 19
          },
          end: {
            line: 488,
            column: 20
          }
        },
        loc: {
          start: {
            line: 488,
            column: 29
          },
          end: {
            line: 492,
            column: 9
          }
        },
        line: 488
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 494,
            column: 20
          },
          end: {
            line: 494,
            column: 21
          }
        },
        loc: {
          start: {
            line: 494,
            column: 31
          },
          end: {
            line: 498,
            column: 9
          }
        },
        line: 494
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 500,
            column: 18
          },
          end: {
            line: 500,
            column: 19
          }
        },
        loc: {
          start: {
            line: 500,
            column: 27
          },
          end: {
            line: 504,
            column: 9
          }
        },
        line: 500
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 506,
            column: 20
          },
          end: {
            line: 506,
            column: 21
          }
        },
        loc: {
          start: {
            line: 506,
            column: 24
          },
          end: {
            line: 510,
            column: 9
          }
        },
        line: 506
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 512,
            column: 15
          },
          end: {
            line: 512,
            column: 16
          }
        },
        loc: {
          start: {
            line: 512,
            column: 19
          },
          end: {
            line: 518,
            column: 9
          }
        },
        line: 512
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 35,
            column: 38
          },
          end: {
            line: 35,
            column: 40
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 60,
            column: 37
          },
          end: {
            line: 60,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 62
          },
          end: {
            line: 60,
            column: 75
          }
        }, {
          start: {
            line: 60,
            column: 78
          },
          end: {
            line: 60,
            column: 88
          }
        }],
        line: 60
      },
      "2": {
        loc: {
          start: {
            line: 80,
            column: 37
          },
          end: {
            line: 80,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 62
          },
          end: {
            line: 80,
            column: 75
          }
        }, {
          start: {
            line: 80,
            column: 78
          },
          end: {
            line: 80,
            column: 86
          }
        }],
        line: 80
      },
      "3": {
        loc: {
          start: {
            line: 99,
            column: 67
          },
          end: {
            line: 99,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 86
          },
          end: {
            line: 99,
            column: 101
          }
        }, {
          start: {
            line: 99,
            column: 104
          },
          end: {
            line: 99,
            column: 110
          }
        }],
        line: 99
      },
      "4": {
        loc: {
          start: {
            line: 105,
            column: 37
          },
          end: {
            line: 105,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 105,
            column: 62
          },
          end: {
            line: 105,
            column: 75
          }
        }, {
          start: {
            line: 105,
            column: 78
          },
          end: {
            line: 105,
            column: 86
          }
        }],
        line: 105
      },
      "5": {
        loc: {
          start: {
            line: 133,
            column: 37
          },
          end: {
            line: 133,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 62
          },
          end: {
            line: 133,
            column: 75
          }
        }, {
          start: {
            line: 133,
            column: 78
          },
          end: {
            line: 133,
            column: 86
          }
        }],
        line: 133
      },
      "6": {
        loc: {
          start: {
            line: 160,
            column: 37
          },
          end: {
            line: 160,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 62
          },
          end: {
            line: 160,
            column: 75
          }
        }, {
          start: {
            line: 160,
            column: 78
          },
          end: {
            line: 160,
            column: 88
          }
        }],
        line: 160
      },
      "7": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "8": {
        loc: {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "9": {
        loc: {
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "10": {
        loc: {
          start: {
            line: 321,
            column: 37
          },
          end: {
            line: 321,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 321,
            column: 62
          },
          end: {
            line: 321,
            column: 75
          }
        }, {
          start: {
            line: 321,
            column: 78
          },
          end: {
            line: 321,
            column: 88
          }
        }],
        line: 321
      },
      "11": {
        loc: {
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 332,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 332,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "12": {
        loc: {
          start: {
            line: 344,
            column: 37
          },
          end: {
            line: 344,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 344,
            column: 62
          },
          end: {
            line: 344,
            column: 75
          }
        }, {
          start: {
            line: 344,
            column: 78
          },
          end: {
            line: 344,
            column: 86
          }
        }],
        line: 344
      },
      "13": {
        loc: {
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 356,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 356,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 356
      },
      "14": {
        loc: {
          start: {
            line: 371,
            column: 37
          },
          end: {
            line: 371,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 371,
            column: 62
          },
          end: {
            line: 371,
            column: 75
          }
        }, {
          start: {
            line: 371,
            column: 78
          },
          end: {
            line: 371,
            column: 86
          }
        }],
        line: 371
      },
      "15": {
        loc: {
          start: {
            line: 383,
            column: 12
          },
          end: {
            line: 383,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 383,
            column: 12
          },
          end: {
            line: 383,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 383
      },
      "16": {
        loc: {
          start: {
            line: 399,
            column: 37
          },
          end: {
            line: 399,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 399,
            column: 62
          },
          end: {
            line: 399,
            column: 75
          }
        }, {
          start: {
            line: 399,
            column: 78
          },
          end: {
            line: 399,
            column: 86
          }
        }],
        line: 399
      },
      "17": {
        loc: {
          start: {
            line: 411,
            column: 12
          },
          end: {
            line: 411,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 12
          },
          end: {
            line: 411,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "18": {
        loc: {
          start: {
            line: 426,
            column: 37
          },
          end: {
            line: 426,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 426,
            column: 62
          },
          end: {
            line: 426,
            column: 75
          }
        }, {
          start: {
            line: 426,
            column: 78
          },
          end: {
            line: 426,
            column: 86
          }
        }],
        line: 426
      },
      "19": {
        loc: {
          start: {
            line: 438,
            column: 12
          },
          end: {
            line: 438,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 438,
            column: 12
          },
          end: {
            line: 438,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 438
      },
      "20": {
        loc: {
          start: {
            line: 454,
            column: 37
          },
          end: {
            line: 454,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 454,
            column: 62
          },
          end: {
            line: 454,
            column: 75
          }
        }, {
          start: {
            line: 454,
            column: 78
          },
          end: {
            line: 454,
            column: 86
          }
        }],
        line: 454
      },
      "21": {
        loc: {
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 466,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 466,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "22": {
        loc: {
          start: {
            line: 478,
            column: 37
          },
          end: {
            line: 478,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 478,
            column: 62
          },
          end: {
            line: 478,
            column: 75
          }
        }, {
          start: {
            line: 478,
            column: 78
          },
          end: {
            line: 478,
            column: 88
          }
        }],
        line: 478
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/stores/ticket-store.ts"],
      sourcesContent: ["import { create } from 'zustand';\nimport { TicketAPI, Ticket, ListTicketsRequest, CreateTicketRequest, UpdateTicketRequest } from '../api/ticket-api';\n\n/**\n * \u5DE5\u5355\u5217\u8868\u72B6\u6001\n */\ninterface TicketListState {\n  // \u6570\u636E\u72B6\u6001\n  tickets: Ticket[];\n  total: number;\n  page: number;\n  pageSize: number;\n  totalPages: number;\n  \n  // UI\u72B6\u6001\n  loading: boolean;\n  error: string | null;\n  selectedTickets: Ticket[];\n  \n  // \u8FC7\u6EE4\u548C\u6392\u5E8F\n  filters: Partial<ListTicketsRequest>;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n  \n  // \u64CD\u4F5C\u65B9\u6CD5\n  fetchTickets: (params?: Partial<ListTicketsRequest>) => Promise<void>;\n  createTicket: (data: CreateTicketRequest) => Promise<void>;\n  updateTicket: (id: number, data: UpdateTicketRequest) => Promise<void>;\n  deleteTicket: (id: number) => Promise<void>;\n  batchDeleteTickets: (ids: number[]) => Promise<void>;\n  \n  // \u9009\u62E9\u64CD\u4F5C\n  selectTicket: (ticket: Ticket) => void;\n  deselectTicket: (ticket: Ticket) => void;\n  selectAll: () => void;\n  deselectAll: () => void;\n  \n  // \u8FC7\u6EE4\u548C\u6392\u5E8F\n  setFilters: (filters: Partial<ListTicketsRequest>) => void;\n  updateFilter: (key: keyof ListTicketsRequest, value: unknown) => void;\n  clearFilters: () => void;\n  setSorting: (sortBy: string, sortOrder: 'asc' | 'desc') => void;\n  \n  // \u5206\u9875\n  setPage: (page: number) => void;\n  setPageSize: (pageSize: number) => void;\n  nextPage: () => void;\n  prevPage: () => void;\n  \n  // \u5DE5\u5177\u65B9\u6CD5\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  clearError: () => void;\n  reset: () => void;\n}\n\n/**\n * \u5DE5\u5355\u8BE6\u60C5\u72B6\u6001\n */\ninterface TicketDetailState {\n  // \u6570\u636E\u72B6\u6001\n  ticket: Ticket | null;\n  \n  // UI\u72B6\u6001\n  loading: boolean;\n  error: string | null;\n  \n  // \u64CD\u4F5C\u65B9\u6CD5\n  fetchTicket: (id: number) => Promise<void>;\n  updateTicket: (data: UpdateTicketRequest) => Promise<void>;\n  assignTicket: (assigneeId: number, comment?: string) => Promise<void>;\n  escalateTicket: (level: number, reason: string, assigneeId?: number) => Promise<void>;\n  resolveTicket: (resolution: string, category?: string) => Promise<void>;\n  closeTicket: (reason?: string, rating?: number, comment?: string) => Promise<void>;\n  reopenTicket: (reason?: string) => Promise<void>;\n  \n  // \u5DE5\u5177\u65B9\u6CD5\n  setTicket: (ticket: Ticket | null) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  clearError: () => void;\n  reset: () => void;\n}\n\n/**\n * \u521B\u5EFA\u5DE5\u5355\u5217\u8868store\n */\nexport const useTicketListStore = create<TicketListState>((set, get) => ({\n  // \u521D\u59CB\u72B6\u6001\n  tickets: [],\n  total: 0,\n  page: 1,\n  pageSize: 20,\n  totalPages: 0,\n  loading: false,\n  error: null,\n  selectedTickets: [],\n  filters: {},\n  sortBy: undefined,\n  sortOrder: undefined,\n\n  // \u83B7\u53D6\u5DE5\u5355\u5217\u8868\n  fetchTickets: async (params = {}) => {\n    const state = get();\n    const requestParams = {\n      page: state.page,\n      page_size: state.pageSize,\n      sort_by: state.sortBy,\n      sort_order: state.sortOrder,\n      ...state.filters,\n      ...params,\n    };\n\n    try {\n      set({ loading: true, error: null });\n      const response = await TicketAPI.listTickets(requestParams);\n      \n      set({\n        tickets: response.tickets,\n        total: response.total,\n        page: response.page,\n        pageSize: response.page_size,\n        totalPages: response.total_pages,\n        loading: false,\n      });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u83B7\u53D6\u5DE5\u5355\u5217\u8868\u5931\u8D25';\n      set({ error: errorMessage, loading: false });\n      console.error('Failed to fetch tickets:', error);\n    }\n  },\n\n  // \u521B\u5EFA\u5DE5\u5355\n  createTicket: async (data) => {\n    try {\n      set({ loading: true, error: null });\n      await TicketAPI.createTicket(data);\n      \n      // \u91CD\u65B0\u83B7\u53D6\u5217\u8868\n      const state = get();\n      await state.fetchTickets();\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u521B\u5EFA\u5DE5\u5355\u5931\u8D25';\n      set({ error: errorMessage, loading: false });\n      console.error('Failed to create ticket:', error);\n      throw error;\n    }\n  },\n\n  // \u66F4\u65B0\u5DE5\u5355\n  updateTicket: async (id, data) => {\n    try {\n      set({ loading: true, error: null });\n      const response = await TicketAPI.updateTicket(id, data);\n      \n      // \u66F4\u65B0\u672C\u5730\u72B6\u6001\n      const state = get();\n      const updatedTickets = state.tickets.map(ticket =>\n        ticket.id === id ? response.ticket : ticket\n      );\n      \n      set({ tickets: updatedTickets, loading: false });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u66F4\u65B0\u5DE5\u5355\u5931\u8D25';\n      set({ error: errorMessage, loading: false });\n      console.error('Failed to update ticket:', error);\n      throw error;\n    }\n  },\n\n  // \u5220\u9664\u5DE5\u5355\n  deleteTicket: async (id) => {\n    try {\n      set({ loading: true, error: null });\n      await TicketAPI.deleteTicket(id);\n      \n      // \u4ECE\u672C\u5730\u72B6\u6001\u4E2D\u79FB\u9664\n      const state = get();\n      const filteredTickets = state.tickets.filter(ticket => ticket.id !== id);\n      const filteredSelected = state.selectedTickets.filter(ticket => ticket.id !== id);\n      \n      set({\n        tickets: filteredTickets,\n        selectedTickets: filteredSelected,\n        total: state.total - 1,\n        loading: false,\n      });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u5220\u9664\u5DE5\u5355\u5931\u8D25';\n      set({ error: errorMessage, loading: false });\n      console.error('Failed to delete ticket:', error);\n      throw error;\n    }\n  },\n\n  // \u6279\u91CF\u5220\u9664\u5DE5\u5355\n  batchDeleteTickets: async (ids) => {\n    try {\n      set({ loading: true, error: null });\n      await TicketAPI.batchDeleteTickets(ids);\n      \n      // \u4ECE\u672C\u5730\u72B6\u6001\u4E2D\u79FB\u9664\n      const state = get();\n      const filteredTickets = state.tickets.filter(ticket => !ids.includes(ticket.id));\n      \n      set({\n        tickets: filteredTickets,\n        selectedTickets: [],\n        total: state.total - ids.length,\n        loading: false,\n      });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u6279\u91CF\u5220\u9664\u5DE5\u5355\u5931\u8D25';\n      set({ error: errorMessage, loading: false });\n      console.error('Failed to batch delete tickets:', error);\n      throw error;\n    }\n  },\n\n  // \u9009\u62E9\u5DE5\u5355\n  selectTicket: (ticket) => {\n    const state = get();\n    const isSelected = state.selectedTickets.some(selected => selected.id === ticket.id);\n    if (!isSelected) {\n      set({ selectedTickets: [...state.selectedTickets, ticket] });\n    }\n  },\n\n  // \u53D6\u6D88\u9009\u62E9\u5DE5\u5355\n  deselectTicket: (ticket) => {\n    const state = get();\n    const filteredSelected = state.selectedTickets.filter(selected => selected.id !== ticket.id);\n    set({ selectedTickets: filteredSelected });\n  },\n\n  // \u5168\u9009\n  selectAll: () => {\n    const state = get();\n    set({ selectedTickets: [...state.tickets] });\n  },\n\n  // \u53D6\u6D88\u5168\u9009\n  deselectAll: () => {\n    set({ selectedTickets: [] });\n  },\n\n  // \u8BBE\u7F6E\u8FC7\u6EE4\u6761\u4EF6\n  setFilters: (filters) => {\n    set({ filters, page: 1 });\n  },\n\n  // \u66F4\u65B0\u5355\u4E2A\u8FC7\u6EE4\u6761\u4EF6\n  updateFilter: (key, value) => {\n    const state = get();\n    set({\n      filters: { ...state.filters, [key]: value },\n      page: 1,\n    });\n  },\n\n  // \u6E05\u9664\u8FC7\u6EE4\u6761\u4EF6\n  clearFilters: () => {\n    set({ filters: {}, page: 1 });\n  },\n\n  // \u8BBE\u7F6E\u6392\u5E8F\n  setSorting: (sortBy, sortOrder) => {\n    set({ sortBy, sortOrder });\n  },\n\n  // \u8BBE\u7F6E\u9875\u7801\n  setPage: (page) => {\n    set({ page });\n  },\n\n  // \u8BBE\u7F6E\u9875\u5927\u5C0F\n  setPageSize: (pageSize) => {\n    set({ pageSize, page: 1 });\n  },\n\n  // \u4E0B\u4E00\u9875\n  nextPage: () => {\n    const state = get();\n    if (state.page < state.totalPages) {\n      set({ page: state.page + 1 });\n    }\n  },\n\n  // \u4E0A\u4E00\u9875\n  prevPage: () => {\n    const state = get();\n    if (state.page > 1) {\n      set({ page: state.page - 1 });\n    }\n  },\n\n  // \u8BBE\u7F6E\u52A0\u8F7D\u72B6\u6001\n  setLoading: (loading) => {\n    set({ loading });\n  },\n\n  // \u8BBE\u7F6E\u9519\u8BEF\u4FE1\u606F\n  setError: (error) => {\n    set({ error });\n  },\n\n  // \u6E05\u9664\u9519\u8BEF\u4FE1\u606F\n  clearError: () => {\n    set({ error: null });\n  },\n\n  // \u91CD\u7F6E\u72B6\u6001\n  reset: () => {\n    set({\n      tickets: [],\n      total: 0,\n      page: 1,\n      pageSize: 20,\n      totalPages: 0,\n      loading: false,\n      error: null,\n      selectedTickets: [],\n      filters: {},\n      sortBy: undefined,\n      sortOrder: undefined,\n    });\n  },\n}));\n\n/**\n * \u521B\u5EFA\u5DE5\u5355\u8BE6\u60C5store\n */\nexport const useTicketDetailStore = create<TicketDetailState>((set, get) => ({\n  // \u521D\u59CB\u72B6\u6001\n  ticket: null,\n  loading: false,\n  error: null,\n\n  // \u83B7\u53D6\u5DE5\u5355\u8BE6\u60C5\n  fetchTicket: async (id) => {\n    try {\n      set({ loading: true, error: null });\n      const response = await TicketAPI.getTicket(id);\n      set({ ticket: response.ticket, loading: false });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u83B7\u53D6\u5DE5\u5355\u8BE6\u60C5\u5931\u8D25';\n      set({ error: errorMessage, loading: false });\n      console.error('Failed to fetch ticket:', error);\n    }\n  },\n\n  // \u66F4\u65B0\u5DE5\u5355\n  updateTicket: async (data) => {\n    const state = get();\n    if (!state.ticket) return;\n\n    try {\n      set({ loading: true, error: null });\n      const response = await TicketAPI.updateTicket(state.ticket.id, data);\n      set({ ticket: response.ticket, loading: false });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u66F4\u65B0\u5DE5\u5355\u5931\u8D25';\n      set({ error: errorMessage, loading: false });\n      console.error('Failed to update ticket:', error);\n      throw error;\n    }\n  },\n\n  // \u5206\u914D\u5DE5\u5355\n  assignTicket: async (assigneeId, comment) => {\n    const state = get();\n    if (!state.ticket) return;\n\n    try {\n      set({ loading: true, error: null });\n      const response = await TicketAPI.assignTicket(state.ticket.id, { assignee_id: assigneeId, comment });\n      set({ ticket: response.ticket, loading: false });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u5206\u914D\u5DE5\u5355\u5931\u8D25';\n      set({ error: errorMessage, loading: false });\n      console.error('Failed to assign ticket:', error);\n      throw error;\n    }\n  },\n\n  // \u5347\u7EA7\u5DE5\u5355\n  escalateTicket: async (level, reason, assigneeId) => {\n    const state = get();\n    if (!state.ticket) return;\n\n    try {\n      set({ loading: true, error: null });\n      const response = await TicketAPI.escalateTicket(state.ticket.id, {\n        escalation_level: level,\n        reason,\n        assignee_id: assigneeId,\n      });\n      set({ ticket: response.ticket, loading: false });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u5347\u7EA7\u5DE5\u5355\u5931\u8D25';\n      set({ error: errorMessage, loading: false });\n      console.error('Failed to escalate ticket:', error);\n      throw error;\n    }\n  },\n\n  // \u89E3\u51B3\u5DE5\u5355\n  resolveTicket: async (resolution, category) => {\n    const state = get();\n    if (!state.ticket) return;\n\n    try {\n      set({ loading: true, error: null });\n      const response = await TicketAPI.resolveTicket(state.ticket.id, {\n        resolution,\n        resolution_category: category,\n      });\n      set({ ticket: response.ticket, loading: false });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u89E3\u51B3\u5DE5\u5355\u5931\u8D25';\n      set({ error: errorMessage, loading: false });\n      console.error('Failed to resolve ticket:', error);\n      throw error;\n    }\n  },\n\n  // \u5173\u95ED\u5DE5\u5355\n  closeTicket: async (reason, rating, comment) => {\n    const state = get();\n    if (!state.ticket) return;\n\n    try {\n      set({ loading: true, error: null });\n      const response = await TicketAPI.closeTicket(state.ticket.id, {\n        close_reason: reason,\n        satisfaction_rating: rating,\n        satisfaction_comment: comment,\n      });\n      set({ ticket: response.ticket, loading: false });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u5173\u95ED\u5DE5\u5355\u5931\u8D25';\n      set({ error: errorMessage, loading: false });\n      console.error('Failed to close ticket:', error);\n      throw error;\n    }\n  },\n\n  // \u91CD\u65B0\u6253\u5F00\u5DE5\u5355\n  reopenTicket: async (reason) => {\n    const state = get();\n    if (!state.ticket) return;\n\n    try {\n      set({ loading: true, error: null });\n      const response = await TicketAPI.reopenTicket(state.ticket.id, reason);\n      set({ ticket: response.ticket, loading: false });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : '\u91CD\u65B0\u6253\u5F00\u5DE5\u5355\u5931\u8D25';\n      set({ error: errorMessage, loading: false });\n      console.error('Failed to reopen ticket:', error);\n      throw error;\n    }\n  },\n\n  // \u8BBE\u7F6E\u5DE5\u5355\n  setTicket: (ticket) => {\n    set({ ticket });\n  },\n\n  // \u8BBE\u7F6E\u52A0\u8F7D\u72B6\u6001\n  setLoading: (loading) => {\n    set({ loading });\n  },\n\n  // \u8BBE\u7F6E\u9519\u8BEF\u4FE1\u606F\n  setError: (error) => {\n    set({ error });\n  },\n\n  // \u6E05\u9664\u9519\u8BEF\u4FE1\u606F\n  clearError: () => {\n    set({ error: null });\n  },\n\n  // \u91CD\u7F6E\u72B6\u6001\n  reset: () => {\n    set({\n      ticket: null,\n      loading: false,\n      error: null,\n    });\n  },\n}));"],
      names: ["useTicketDetailStore", "useTicketListStore", "create", "set", "get", "tickets", "total", "page", "pageSize", "totalPages", "loading", "error", "selectedTickets", "filters", "sortBy", "undefined", "sortOrder", "fetchTickets", "params", "state", "requestParams", "page_size", "sort_by", "sort_order", "response", "TicketAPI", "listTickets", "total_pages", "errorMessage", "Error", "message", "console", "createTicket", "data", "updateTicket", "id", "updatedTickets", "map", "ticket", "deleteTicket", "filteredTickets", "filter", "filteredSelected", "batchDeleteTickets", "ids", "includes", "length", "selectTicket", "isSelected", "some", "selected", "deselectTicket", "selectAll", "deselectAll", "setFilters", "updateFilter", "key", "value", "clearFilters", "setSorting", "setPage", "setPageSize", "nextPage", "prevPage", "setLoading", "setError", "clearError", "reset", "fetchTicket", "getTicket", "assignTicket", "assigneeId", "comment", "assignee_id", "escalateTicket", "level", "reason", "escalation_level", "resolveTicket", "resolution", "category", "resolution_category", "closeTicket", "rating", "close_reason", "satisfaction_rating", "satisfaction_comment", "reopenTicket", "setTicket"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "48db25c633e2533311486024e00315ae7adccd30"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_agfrf1f2z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_agfrf1f2z();
cov_agfrf1f2z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_agfrf1f2z().f[0]++;
  cov_agfrf1f2z().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_agfrf1f2z().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_agfrf1f2z().s[3]++;
_export(exports, {
  useTicketDetailStore: function () {
    /* istanbul ignore next */
    cov_agfrf1f2z().f[1]++;
    cov_agfrf1f2z().s[4]++;
    return useTicketDetailStore;
  },
  useTicketListStore: function () {
    /* istanbul ignore next */
    cov_agfrf1f2z().f[2]++;
    cov_agfrf1f2z().s[5]++;
    return useTicketListStore;
  }
});
const _zustand =
/* istanbul ignore next */
(cov_agfrf1f2z().s[6]++, require("zustand"));
const _ticketapi =
/* istanbul ignore next */
(cov_agfrf1f2z().s[7]++, require("../api/ticket-api"));
const useTicketListStore =
/* istanbul ignore next */
(cov_agfrf1f2z().s[8]++, (0, _zustand.create)((set, get) => {
  /* istanbul ignore next */
  cov_agfrf1f2z().f[3]++;
  cov_agfrf1f2z().s[9]++;
  return {
    // 初始状态
    tickets: [],
    total: 0,
    page: 1,
    pageSize: 20,
    totalPages: 0,
    loading: false,
    error: null,
    selectedTickets: [],
    filters: {},
    sortBy: undefined,
    sortOrder: undefined,
    // 获取工单列表
    fetchTickets: async (params =
    /* istanbul ignore next */
    (cov_agfrf1f2z().b[0][0]++, {})) => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[4]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[10]++, get());
      const requestParams =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[11]++, {
        page: state.page,
        page_size: state.pageSize,
        sort_by: state.sortBy,
        sort_order: state.sortOrder,
        ...state.filters,
        ...params
      });
      /* istanbul ignore next */
      cov_agfrf1f2z().s[12]++;
      try {
        /* istanbul ignore next */
        cov_agfrf1f2z().s[13]++;
        set({
          loading: true,
          error: null
        });
        const response =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[14]++, await _ticketapi.TicketAPI.listTickets(requestParams));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[15]++;
        set({
          tickets: response.tickets,
          total: response.total,
          page: response.page,
          pageSize: response.page_size,
          totalPages: response.total_pages,
          loading: false
        });
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[16]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[1][0]++, error.message) :
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[1][1]++, '获取工单列表失败'));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[17]++;
        set({
          error: errorMessage,
          loading: false
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[18]++;
        console.error('Failed to fetch tickets:', error);
      }
    },
    // 创建工单
    createTicket: async data => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[5]++;
      cov_agfrf1f2z().s[19]++;
      try {
        /* istanbul ignore next */
        cov_agfrf1f2z().s[20]++;
        set({
          loading: true,
          error: null
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[21]++;
        await _ticketapi.TicketAPI.createTicket(data);
        // 重新获取列表
        const state =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[22]++, get());
        /* istanbul ignore next */
        cov_agfrf1f2z().s[23]++;
        await state.fetchTickets();
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[24]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[2][0]++, error.message) :
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[2][1]++, '创建工单失败'));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[25]++;
        set({
          error: errorMessage,
          loading: false
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[26]++;
        console.error('Failed to create ticket:', error);
        /* istanbul ignore next */
        cov_agfrf1f2z().s[27]++;
        throw error;
      }
    },
    // 更新工单
    updateTicket: async (id, data) => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[6]++;
      cov_agfrf1f2z().s[28]++;
      try {
        /* istanbul ignore next */
        cov_agfrf1f2z().s[29]++;
        set({
          loading: true,
          error: null
        });
        const response =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[30]++, await _ticketapi.TicketAPI.updateTicket(id, data));
        // 更新本地状态
        const state =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[31]++, get());
        const updatedTickets =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[32]++, state.tickets.map(ticket => {
          /* istanbul ignore next */
          cov_agfrf1f2z().f[7]++;
          cov_agfrf1f2z().s[33]++;
          return ticket.id === id ?
          /* istanbul ignore next */
          (cov_agfrf1f2z().b[3][0]++, response.ticket) :
          /* istanbul ignore next */
          (cov_agfrf1f2z().b[3][1]++, ticket);
        }));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[34]++;
        set({
          tickets: updatedTickets,
          loading: false
        });
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[35]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[4][0]++, error.message) :
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[4][1]++, '更新工单失败'));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[36]++;
        set({
          error: errorMessage,
          loading: false
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[37]++;
        console.error('Failed to update ticket:', error);
        /* istanbul ignore next */
        cov_agfrf1f2z().s[38]++;
        throw error;
      }
    },
    // 删除工单
    deleteTicket: async id => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[8]++;
      cov_agfrf1f2z().s[39]++;
      try {
        /* istanbul ignore next */
        cov_agfrf1f2z().s[40]++;
        set({
          loading: true,
          error: null
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[41]++;
        await _ticketapi.TicketAPI.deleteTicket(id);
        // 从本地状态中移除
        const state =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[42]++, get());
        const filteredTickets =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[43]++, state.tickets.filter(ticket => {
          /* istanbul ignore next */
          cov_agfrf1f2z().f[9]++;
          cov_agfrf1f2z().s[44]++;
          return ticket.id !== id;
        }));
        const filteredSelected =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[45]++, state.selectedTickets.filter(ticket => {
          /* istanbul ignore next */
          cov_agfrf1f2z().f[10]++;
          cov_agfrf1f2z().s[46]++;
          return ticket.id !== id;
        }));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[47]++;
        set({
          tickets: filteredTickets,
          selectedTickets: filteredSelected,
          total: state.total - 1,
          loading: false
        });
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[48]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[5][0]++, error.message) :
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[5][1]++, '删除工单失败'));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[49]++;
        set({
          error: errorMessage,
          loading: false
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[50]++;
        console.error('Failed to delete ticket:', error);
        /* istanbul ignore next */
        cov_agfrf1f2z().s[51]++;
        throw error;
      }
    },
    // 批量删除工单
    batchDeleteTickets: async ids => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[11]++;
      cov_agfrf1f2z().s[52]++;
      try {
        /* istanbul ignore next */
        cov_agfrf1f2z().s[53]++;
        set({
          loading: true,
          error: null
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[54]++;
        await _ticketapi.TicketAPI.batchDeleteTickets(ids);
        // 从本地状态中移除
        const state =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[55]++, get());
        const filteredTickets =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[56]++, state.tickets.filter(ticket => {
          /* istanbul ignore next */
          cov_agfrf1f2z().f[12]++;
          cov_agfrf1f2z().s[57]++;
          return !ids.includes(ticket.id);
        }));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[58]++;
        set({
          tickets: filteredTickets,
          selectedTickets: [],
          total: state.total - ids.length,
          loading: false
        });
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[59]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[6][0]++, error.message) :
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[6][1]++, '批量删除工单失败'));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[60]++;
        set({
          error: errorMessage,
          loading: false
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[61]++;
        console.error('Failed to batch delete tickets:', error);
        /* istanbul ignore next */
        cov_agfrf1f2z().s[62]++;
        throw error;
      }
    },
    // 选择工单
    selectTicket: ticket => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[13]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[63]++, get());
      const isSelected =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[64]++, state.selectedTickets.some(selected => {
        /* istanbul ignore next */
        cov_agfrf1f2z().f[14]++;
        cov_agfrf1f2z().s[65]++;
        return selected.id === ticket.id;
      }));
      /* istanbul ignore next */
      cov_agfrf1f2z().s[66]++;
      if (!isSelected) {
        /* istanbul ignore next */
        cov_agfrf1f2z().b[7][0]++;
        cov_agfrf1f2z().s[67]++;
        set({
          selectedTickets: [...state.selectedTickets, ticket]
        });
      } else
      /* istanbul ignore next */
      {
        cov_agfrf1f2z().b[7][1]++;
      }
    },
    // 取消选择工单
    deselectTicket: ticket => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[15]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[68]++, get());
      const filteredSelected =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[69]++, state.selectedTickets.filter(selected => {
        /* istanbul ignore next */
        cov_agfrf1f2z().f[16]++;
        cov_agfrf1f2z().s[70]++;
        return selected.id !== ticket.id;
      }));
      /* istanbul ignore next */
      cov_agfrf1f2z().s[71]++;
      set({
        selectedTickets: filteredSelected
      });
    },
    // 全选
    selectAll: () => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[17]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[72]++, get());
      /* istanbul ignore next */
      cov_agfrf1f2z().s[73]++;
      set({
        selectedTickets: [...state.tickets]
      });
    },
    // 取消全选
    deselectAll: () => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[18]++;
      cov_agfrf1f2z().s[74]++;
      set({
        selectedTickets: []
      });
    },
    // 设置过滤条件
    setFilters: filters => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[19]++;
      cov_agfrf1f2z().s[75]++;
      set({
        filters,
        page: 1
      });
    },
    // 更新单个过滤条件
    updateFilter: (key, value) => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[20]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[76]++, get());
      /* istanbul ignore next */
      cov_agfrf1f2z().s[77]++;
      set({
        filters: {
          ...state.filters,
          [key]: value
        },
        page: 1
      });
    },
    // 清除过滤条件
    clearFilters: () => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[21]++;
      cov_agfrf1f2z().s[78]++;
      set({
        filters: {},
        page: 1
      });
    },
    // 设置排序
    setSorting: (sortBy, sortOrder) => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[22]++;
      cov_agfrf1f2z().s[79]++;
      set({
        sortBy,
        sortOrder
      });
    },
    // 设置页码
    setPage: page => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[23]++;
      cov_agfrf1f2z().s[80]++;
      set({
        page
      });
    },
    // 设置页大小
    setPageSize: pageSize => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[24]++;
      cov_agfrf1f2z().s[81]++;
      set({
        pageSize,
        page: 1
      });
    },
    // 下一页
    nextPage: () => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[25]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[82]++, get());
      /* istanbul ignore next */
      cov_agfrf1f2z().s[83]++;
      if (state.page < state.totalPages) {
        /* istanbul ignore next */
        cov_agfrf1f2z().b[8][0]++;
        cov_agfrf1f2z().s[84]++;
        set({
          page: state.page + 1
        });
      } else
      /* istanbul ignore next */
      {
        cov_agfrf1f2z().b[8][1]++;
      }
    },
    // 上一页
    prevPage: () => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[26]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[85]++, get());
      /* istanbul ignore next */
      cov_agfrf1f2z().s[86]++;
      if (state.page > 1) {
        /* istanbul ignore next */
        cov_agfrf1f2z().b[9][0]++;
        cov_agfrf1f2z().s[87]++;
        set({
          page: state.page - 1
        });
      } else
      /* istanbul ignore next */
      {
        cov_agfrf1f2z().b[9][1]++;
      }
    },
    // 设置加载状态
    setLoading: loading => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[27]++;
      cov_agfrf1f2z().s[88]++;
      set({
        loading
      });
    },
    // 设置错误信息
    setError: error => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[28]++;
      cov_agfrf1f2z().s[89]++;
      set({
        error
      });
    },
    // 清除错误信息
    clearError: () => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[29]++;
      cov_agfrf1f2z().s[90]++;
      set({
        error: null
      });
    },
    // 重置状态
    reset: () => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[30]++;
      cov_agfrf1f2z().s[91]++;
      set({
        tickets: [],
        total: 0,
        page: 1,
        pageSize: 20,
        totalPages: 0,
        loading: false,
        error: null,
        selectedTickets: [],
        filters: {},
        sortBy: undefined,
        sortOrder: undefined
      });
    }
  };
}));
const useTicketDetailStore =
/* istanbul ignore next */
(cov_agfrf1f2z().s[92]++, (0, _zustand.create)((set, get) => {
  /* istanbul ignore next */
  cov_agfrf1f2z().f[31]++;
  cov_agfrf1f2z().s[93]++;
  return {
    // 初始状态
    ticket: null,
    loading: false,
    error: null,
    // 获取工单详情
    fetchTicket: async id => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[32]++;
      cov_agfrf1f2z().s[94]++;
      try {
        /* istanbul ignore next */
        cov_agfrf1f2z().s[95]++;
        set({
          loading: true,
          error: null
        });
        const response =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[96]++, await _ticketapi.TicketAPI.getTicket(id));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[97]++;
        set({
          ticket: response.ticket,
          loading: false
        });
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[98]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[10][0]++, error.message) :
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[10][1]++, '获取工单详情失败'));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[99]++;
        set({
          error: errorMessage,
          loading: false
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[100]++;
        console.error('Failed to fetch ticket:', error);
      }
    },
    // 更新工单
    updateTicket: async data => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[33]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[101]++, get());
      /* istanbul ignore next */
      cov_agfrf1f2z().s[102]++;
      if (!state.ticket) {
        /* istanbul ignore next */
        cov_agfrf1f2z().b[11][0]++;
        cov_agfrf1f2z().s[103]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_agfrf1f2z().b[11][1]++;
      }
      cov_agfrf1f2z().s[104]++;
      try {
        /* istanbul ignore next */
        cov_agfrf1f2z().s[105]++;
        set({
          loading: true,
          error: null
        });
        const response =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[106]++, await _ticketapi.TicketAPI.updateTicket(state.ticket.id, data));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[107]++;
        set({
          ticket: response.ticket,
          loading: false
        });
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[108]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[12][0]++, error.message) :
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[12][1]++, '更新工单失败'));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[109]++;
        set({
          error: errorMessage,
          loading: false
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[110]++;
        console.error('Failed to update ticket:', error);
        /* istanbul ignore next */
        cov_agfrf1f2z().s[111]++;
        throw error;
      }
    },
    // 分配工单
    assignTicket: async (assigneeId, comment) => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[34]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[112]++, get());
      /* istanbul ignore next */
      cov_agfrf1f2z().s[113]++;
      if (!state.ticket) {
        /* istanbul ignore next */
        cov_agfrf1f2z().b[13][0]++;
        cov_agfrf1f2z().s[114]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_agfrf1f2z().b[13][1]++;
      }
      cov_agfrf1f2z().s[115]++;
      try {
        /* istanbul ignore next */
        cov_agfrf1f2z().s[116]++;
        set({
          loading: true,
          error: null
        });
        const response =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[117]++, await _ticketapi.TicketAPI.assignTicket(state.ticket.id, {
          assignee_id: assigneeId,
          comment
        }));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[118]++;
        set({
          ticket: response.ticket,
          loading: false
        });
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[119]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[14][0]++, error.message) :
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[14][1]++, '分配工单失败'));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[120]++;
        set({
          error: errorMessage,
          loading: false
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[121]++;
        console.error('Failed to assign ticket:', error);
        /* istanbul ignore next */
        cov_agfrf1f2z().s[122]++;
        throw error;
      }
    },
    // 升级工单
    escalateTicket: async (level, reason, assigneeId) => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[35]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[123]++, get());
      /* istanbul ignore next */
      cov_agfrf1f2z().s[124]++;
      if (!state.ticket) {
        /* istanbul ignore next */
        cov_agfrf1f2z().b[15][0]++;
        cov_agfrf1f2z().s[125]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_agfrf1f2z().b[15][1]++;
      }
      cov_agfrf1f2z().s[126]++;
      try {
        /* istanbul ignore next */
        cov_agfrf1f2z().s[127]++;
        set({
          loading: true,
          error: null
        });
        const response =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[128]++, await _ticketapi.TicketAPI.escalateTicket(state.ticket.id, {
          escalation_level: level,
          reason,
          assignee_id: assigneeId
        }));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[129]++;
        set({
          ticket: response.ticket,
          loading: false
        });
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[130]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[16][0]++, error.message) :
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[16][1]++, '升级工单失败'));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[131]++;
        set({
          error: errorMessage,
          loading: false
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[132]++;
        console.error('Failed to escalate ticket:', error);
        /* istanbul ignore next */
        cov_agfrf1f2z().s[133]++;
        throw error;
      }
    },
    // 解决工单
    resolveTicket: async (resolution, category) => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[36]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[134]++, get());
      /* istanbul ignore next */
      cov_agfrf1f2z().s[135]++;
      if (!state.ticket) {
        /* istanbul ignore next */
        cov_agfrf1f2z().b[17][0]++;
        cov_agfrf1f2z().s[136]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_agfrf1f2z().b[17][1]++;
      }
      cov_agfrf1f2z().s[137]++;
      try {
        /* istanbul ignore next */
        cov_agfrf1f2z().s[138]++;
        set({
          loading: true,
          error: null
        });
        const response =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[139]++, await _ticketapi.TicketAPI.resolveTicket(state.ticket.id, {
          resolution,
          resolution_category: category
        }));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[140]++;
        set({
          ticket: response.ticket,
          loading: false
        });
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[141]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[18][0]++, error.message) :
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[18][1]++, '解决工单失败'));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[142]++;
        set({
          error: errorMessage,
          loading: false
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[143]++;
        console.error('Failed to resolve ticket:', error);
        /* istanbul ignore next */
        cov_agfrf1f2z().s[144]++;
        throw error;
      }
    },
    // 关闭工单
    closeTicket: async (reason, rating, comment) => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[37]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[145]++, get());
      /* istanbul ignore next */
      cov_agfrf1f2z().s[146]++;
      if (!state.ticket) {
        /* istanbul ignore next */
        cov_agfrf1f2z().b[19][0]++;
        cov_agfrf1f2z().s[147]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_agfrf1f2z().b[19][1]++;
      }
      cov_agfrf1f2z().s[148]++;
      try {
        /* istanbul ignore next */
        cov_agfrf1f2z().s[149]++;
        set({
          loading: true,
          error: null
        });
        const response =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[150]++, await _ticketapi.TicketAPI.closeTicket(state.ticket.id, {
          close_reason: reason,
          satisfaction_rating: rating,
          satisfaction_comment: comment
        }));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[151]++;
        set({
          ticket: response.ticket,
          loading: false
        });
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[152]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[20][0]++, error.message) :
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[20][1]++, '关闭工单失败'));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[153]++;
        set({
          error: errorMessage,
          loading: false
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[154]++;
        console.error('Failed to close ticket:', error);
        /* istanbul ignore next */
        cov_agfrf1f2z().s[155]++;
        throw error;
      }
    },
    // 重新打开工单
    reopenTicket: async reason => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[38]++;
      const state =
      /* istanbul ignore next */
      (cov_agfrf1f2z().s[156]++, get());
      /* istanbul ignore next */
      cov_agfrf1f2z().s[157]++;
      if (!state.ticket) {
        /* istanbul ignore next */
        cov_agfrf1f2z().b[21][0]++;
        cov_agfrf1f2z().s[158]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_agfrf1f2z().b[21][1]++;
      }
      cov_agfrf1f2z().s[159]++;
      try {
        /* istanbul ignore next */
        cov_agfrf1f2z().s[160]++;
        set({
          loading: true,
          error: null
        });
        const response =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[161]++, await _ticketapi.TicketAPI.reopenTicket(state.ticket.id, reason));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[162]++;
        set({
          ticket: response.ticket,
          loading: false
        });
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_agfrf1f2z().s[163]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[22][0]++, error.message) :
        /* istanbul ignore next */
        (cov_agfrf1f2z().b[22][1]++, '重新打开工单失败'));
        /* istanbul ignore next */
        cov_agfrf1f2z().s[164]++;
        set({
          error: errorMessage,
          loading: false
        });
        /* istanbul ignore next */
        cov_agfrf1f2z().s[165]++;
        console.error('Failed to reopen ticket:', error);
        /* istanbul ignore next */
        cov_agfrf1f2z().s[166]++;
        throw error;
      }
    },
    // 设置工单
    setTicket: ticket => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[39]++;
      cov_agfrf1f2z().s[167]++;
      set({
        ticket
      });
    },
    // 设置加载状态
    setLoading: loading => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[40]++;
      cov_agfrf1f2z().s[168]++;
      set({
        loading
      });
    },
    // 设置错误信息
    setError: error => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[41]++;
      cov_agfrf1f2z().s[169]++;
      set({
        error
      });
    },
    // 清除错误信息
    clearError: () => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[42]++;
      cov_agfrf1f2z().s[170]++;
      set({
        error: null
      });
    },
    // 重置状态
    reset: () => {
      /* istanbul ignore next */
      cov_agfrf1f2z().f[43]++;
      cov_agfrf1f2z().s[171]++;
      set({
        ticket: null,
        loading: false,
        error: null
      });
    }
  };
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,