{"version":3,"names":["PERMISSIONS","cov_8a99iilty","f","s","ROLES","useAuthStore","usePermissions","_zustand","create","_middleware","persist","set","get","user","token","isAuthenticated","isLoading","login","logout","updateUser","userData","b","setLoading","loading","hasPermission","permission","permissions","includes","hasRole","role","name","partialize","state","TICKET_VIEW","TICKET_CREATE","TICKET_UPDATE","TICKET_DELETE","TICKET_ASSIGN","TICKET_CLOSE","USER_VIEW","USER_CREATE","USER_UPDATE","USER_DELETE","SYSTEM_CONFIG","SYSTEM_LOGS","REPORT_VIEW","REPORT_EXPORT","ADMIN","MANAGER","AGENT","USER","canViewTickets","canCreateTickets","canUpdateTickets","canDeleteTickets","canManageUsers","canViewReports","isAdmin","isManager","isAgent"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/store/auth-store.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\n// 用户信息接口\nexport interface User {\n  id: number;\n  username: string;\n  email: string;\n  full_name: string;\n  role: string;\n  status: string;\n  avatar?: string;\n  permissions: string[];\n  created_at: string;\n  updated_at: string;\n}\n\n// 认证状态接口\ninterface AuthState {\n  // 状态\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  \n  // 操作方法\n  login: (user: User, token: string) => void;\n  logout: () => void;\n  updateUser: (user: Partial<User>) => void;\n  setLoading: (loading: boolean) => void;\n  \n  // 权限检查\n  hasPermission: (permission: string) => boolean;\n  hasRole: (role: string) => boolean;\n}\n\n/**\n * 认证状态管理 Store\n * 使用 Zustand 进行全局状态管理，支持持久化存储\n */\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set, get) => ({\n      // 初始状态\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      isLoading: false,\n\n      // 登录操作\n      login: (user: User, token: string) => {\n        set({\n          user,\n          token,\n          isAuthenticated: true,\n          isLoading: false,\n        });\n      },\n\n      // 登出操作\n      logout: () => {\n        set({\n          user: null,\n          token: null,\n          isAuthenticated: false,\n          isLoading: false,\n        });\n      },\n\n      // 更新用户信息\n      updateUser: (userData: Partial<User>) => {\n        const { user } = get();\n        if (user) {\n          set({\n            user: { ...user, ...userData },\n          });\n        }\n      },\n\n      // 设置加载状态\n      setLoading: (loading: boolean) => {\n        set({ isLoading: loading });\n      },\n\n      // 检查用户权限\n      hasPermission: (permission: string) => {\n        const { user } = get();\n        return user?.permissions?.includes(permission) || false;\n      },\n\n      // 检查用户角色\n      hasRole: (role: string) => {\n        const { user } = get();\n        return user?.role === role;\n      },\n    }),\n    {\n      name: 'auth-storage', // localStorage 中的键名\n      partialize: (state) => ({\n        user: state.user,\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n      }),\n    }\n  )\n);\n\n// 权限常量\nexport const PERMISSIONS = {\n  // 工单权限\n  TICKET_VIEW: 'ticket:view',\n  TICKET_CREATE: 'ticket:create',\n  TICKET_UPDATE: 'ticket:update',\n  TICKET_DELETE: 'ticket:delete',\n  TICKET_ASSIGN: 'ticket:assign',\n  TICKET_CLOSE: 'ticket:close',\n  \n  // 用户权限\n  USER_VIEW: 'user:view',\n  USER_CREATE: 'user:create',\n  USER_UPDATE: 'user:update',\n  USER_DELETE: 'user:delete',\n  \n  // 系统权限\n  SYSTEM_CONFIG: 'system:config',\n  SYSTEM_LOGS: 'system:logs',\n  \n  // 报告权限\n  REPORT_VIEW: 'report:view',\n  REPORT_EXPORT: 'report:export',\n} as const;\n\n// 角色常量\nexport const ROLES = {\n  ADMIN: 'admin',\n  MANAGER: 'manager',\n  AGENT: 'agent',\n  USER: 'user',\n} as const;\n\n// 权限检查 Hook\nexport const usePermissions = () => {\n  const hasPermission = useAuthStore((state) => state.hasPermission);\n  const hasRole = useAuthStore((state) => state.hasRole);\n  \n  return {\n    hasPermission,\n    hasRole,\n    canViewTickets: () => hasPermission(PERMISSIONS.TICKET_VIEW),\n    canCreateTickets: () => hasPermission(PERMISSIONS.TICKET_CREATE),\n    canUpdateTickets: () => hasPermission(PERMISSIONS.TICKET_UPDATE),\n    canDeleteTickets: () => hasPermission(PERMISSIONS.TICKET_DELETE),\n    canManageUsers: () => hasPermission(PERMISSIONS.USER_VIEW),\n    canViewReports: () => hasPermission(PERMISSIONS.REPORT_VIEW),\n    isAdmin: () => hasRole(ROLES.ADMIN),\n    isManager: () => hasRole(ROLES.MANAGER),\n    isAgent: () => hasRole(ROLES.AGENT),\n  };\n};"],"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","ignoreList":[]}