89b32ed8d7840f4195c2ad21f0b83ddb
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    CMDBLoadingEmptyError: function() {
        return CMDBLoadingEmptyError;
    },
    ChangesLoadingEmptyError: function() {
        return ChangesLoadingEmptyError;
    },
    Empty: function() {
        return Empty;
    },
    Error: function() {
        return Error;
    },
    IncidentsLoadingEmptyError: function() {
        return IncidentsLoadingEmptyError;
    },
    Loading: function() {
        return Loading;
    },
    LoadingEmptyError: function() {
        return LoadingEmptyError;
    },
    ProblemsLoadingEmptyError: function() {
        return ProblemsLoadingEmptyError;
    },
    TicketsLoadingEmptyError: function() {
        return TicketsLoadingEmptyError;
    },
    UsersLoadingEmptyError: function() {
        return UsersLoadingEmptyError;
    },
    WorkflowsLoadingEmptyError: function() {
        return WorkflowsLoadingEmptyError;
    },
    default: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _antd = require("antd");
const _lucidereact = require("lucide-react");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const { Text, Title } = _antd.Typography;
// 预定义的空状态配置
const getDefaultEmptyConfig = (context)=>{
    switch(context){
        case "tickets":
            return {
                title: "暂无工单",
                description: "当前没有工单数据，点击下方按钮创建第一个工单",
                actionText: "创建工单",
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.FileText, {
                    size: 48
                })
            };
        case "incidents":
            return {
                title: "暂无事件",
                description: "当前没有事件数据，点击下方按钮创建第一个事件",
                actionText: "创建事件",
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                    size: 48
                })
            };
        case "problems":
            return {
                title: "暂无问题",
                description: "当前没有问题数据，点击下方按钮创建第一个问题",
                actionText: "创建问题",
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                    size: 48
                })
            };
        case "changes":
            return {
                title: "暂无变更",
                description: "当前没有变更数据，点击下方按钮创建第一个变更",
                actionText: "创建变更",
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Settings, {
                    size: 48
                })
            };
        case "cmdb":
            return {
                title: "暂无配置项",
                description: "当前没有配置项数据，点击下方按钮创建第一个配置项",
                actionText: "创建配置项",
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Database, {
                    size: 48
                })
            };
        case "users":
            return {
                title: "暂无用户",
                description: "当前没有用户数据，点击下方按钮创建第一个用户",
                actionText: "创建用户",
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.User, {
                    size: 48
                })
            };
        case "workflows":
            return {
                title: "暂无工作流",
                description: "当前没有工作流数据，点击下方按钮创建第一个工作流",
                actionText: "创建工作流",
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Settings, {
                    size: 48
                })
            };
        default:
            return {
                title: "暂无数据",
                description: "当前没有数据，点击下方按钮创建第一条记录",
                actionText: "创建",
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.FileText, {
                    size: 48
                })
            };
    }
};
const LoadingEmptyError = ({ state, loadingText = "加载中...", empty, error, success, minHeight = 200, className = "", children })=>{
    // 成功状态直接显示内容
    if (state === "success") {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: className,
            children: [
                success?.title && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "mb-4 text-center",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(Title, {
                            level: 4,
                            className: "text-gray-700",
                            children: success.title
                        }),
                        success.description && /*#__PURE__*/ (0, _jsxruntime.jsx)(Text, {
                            type: "secondary",
                            className: "text-sm",
                            children: success.description
                        }),
                        success.showAction && success.actionText && success.onAction && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "mt-3",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Button, {
                                type: "primary",
                                onClick: success.onAction,
                                children: success.actionText
                            })
                        })
                    ]
                }),
                children
            ]
        });
    }
    // 加载状态
    if (state === "loading") {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: `flex flex-col items-center justify-center ${className}`,
            style: {
                minHeight
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Spin, {
                    size: "large"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(Text, {
                    className: "mt-4 text-gray-500",
                    children: loadingText
                })
            ]
        });
    }
    // 空状态
    if (state === "empty") {
        const defaultConfig = getDefaultEmptyConfig();
        const config = {
            ...defaultConfig,
            ...empty,
            icon: empty?.icon || defaultConfig.icon
        };
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: `flex flex-col items-center justify-center ${className}`,
            style: {
                minHeight
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "text-gray-300 mb-4",
                    children: config.icon
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(Title, {
                    level: 4,
                    className: "text-gray-600 mb-2",
                    children: config.title
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(Text, {
                    type: "secondary",
                    className: "text-center mb-6 max-w-md",
                    children: config.description
                }),
                config.showAction !== false && config.actionText && config.onAction && /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Button, {
                    type: "primary",
                    icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Plus, {
                        size: 16
                    }),
                    onClick: config.onAction,
                    children: config.actionText
                })
            ]
        });
    }
    // 错误状态
    if (state === "error") {
        const defaultErrorConfig = {
            title: "加载失败",
            description: "数据加载失败，请检查网络连接或稍后重试",
            actionText: "重试",
            showRetry: true,
            showAction: false
        };
        const config = {
            ...defaultErrorConfig,
            ...error
        };
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: `flex flex-col items-center justify-center ${className}`,
            style: {
                minHeight
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Result, {
                status: "error",
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                    style: {
                        color: "#ff4d4f"
                    }
                }),
                title: config.title,
                subTitle: config.description,
                extra: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex gap-2",
                    children: [
                        config.showRetry && /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Button, {
                            type: "primary",
                            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.RotateCcw, {
                                size: 16
                            }),
                            onClick: config.onAction,
                            children: config.actionText
                        }),
                        config.showAction && config.actionText && config.onAction && /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Button, {
                            onClick: config.onAction,
                            children: config.actionText
                        })
                    ]
                })
            })
        });
    }
    return null;
};
const TicketsLoadingEmptyError = (props)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(LoadingEmptyError, {
        ...props,
        empty: getDefaultEmptyConfig("tickets")
    });
const IncidentsLoadingEmptyError = (props)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(LoadingEmptyError, {
        ...props,
        empty: getDefaultEmptyConfig("incidents")
    });
const ProblemsLoadingEmptyError = (props)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(LoadingEmptyError, {
        ...props,
        empty: getDefaultEmptyConfig("problems")
    });
const ChangesLoadingEmptyError = (props)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(LoadingEmptyError, {
        ...props,
        empty: getDefaultEmptyConfig("changes")
    });
const CMDBLoadingEmptyError = (props)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(LoadingEmptyError, {
        ...props,
        empty: getDefaultEmptyConfig("cmdb")
    });
const UsersLoadingEmptyError = (props)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(LoadingEmptyError, {
        ...props,
        empty: getDefaultEmptyConfig("users")
    });
const WorkflowsLoadingEmptyError = (props)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(LoadingEmptyError, {
        ...props,
        empty: getDefaultEmptyConfig("workflows")
    });
const Loading = ({ text = "加载中...", className = "" })=>/*#__PURE__*/ (0, _jsxruntime.jsx)(LoadingEmptyError, {
        state: "loading",
        loadingText: text,
        className: className
    });
const Empty = ({ title = "暂无数据", description = "当前没有数据", actionText, onAction, className = "" })=>/*#__PURE__*/ (0, _jsxruntime.jsx)(LoadingEmptyError, {
        state: "empty",
        empty: {
            title,
            description,
            actionText,
            onAction
        },
        className: className
    });
const Error = ({ title = "加载失败", description = "数据加载失败", actionText = "重试", onAction, className = "" })=>/*#__PURE__*/ (0, _jsxruntime.jsx)(LoadingEmptyError, {
        state: "error",
        error: {
            title,
            description,
            actionText,
            onAction
        },
        className: className
    });
const _default = LoadingEmptyError;

//# sourceMappingURL=data:application/json;base64,