{"version":3,"names":["cov_2hgntlpok6","actualCoverage","s","AdminOnly","f","AgentOnly","AuthGuard","CanCreateIncidents","CanManageIncidents","CanViewIncidents","ManagerOnly","Permission","usePermissions","LoadingSpinner","_jsxruntime","jsx","className","UnauthorizedAccess","message","b","onLogin","jsxs","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","InsufficientPermissions","window","history","back","children","fallback","redirectTo","requireAuth","requiredRoles","requiredPermissions","requireAll","authState","setAuthState","_react","useState","isAuthenticated","user","loading","error","useEffect","unsubscribe","_auth","authService","addListener","state","getUser","handleLogin","location","href","checkRolePermissions","length","hasRole","every","role","roles","includes","some","hasPermission","hasAllPermissions","hasAnyPermission","Fragment","missingRoles","filter","missingPermissions","permission","join","permissions","checkPermission","hasRequiredRoles","hasRequiredPermissions","ROLES","ADMIN","SUPER_ADMIN","MANAGER","AGENT","PERMISSIONS","INCIDENT_VIEW","INCIDENT_CREATE","INCIDENT_UPDATE","INCIDENT_DELETE","INCIDENT_ASSIGN"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/components/auth/auth-guard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { authService, User, PERMISSIONS, ROLES } from '../../auth';\n\n// 认证守卫属性\nexport interface AuthGuardProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n  redirectTo?: string;\n  requireAuth?: boolean;\n  requiredRoles?: string[];\n  requiredPermissions?: string[];\n  requireAll?: boolean; // true: 需要所有权限, false: 需要任一权限\n}\n\n// 加载组件\nconst LoadingSpinner: React.FC = () => (\n  <div className=\"min-h-screen flex items-center justify-center\">\n    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n  </div>\n);\n\n// 未认证组件\nconst UnauthorizedAccess: React.FC<{ message?: string; onLogin?: () => void }> = ({ \n  message = '您需要登录才能访问此页面', \n  onLogin \n}) => (\n  <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n    <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-6 text-center\">\n      <div className=\"mb-4\">\n        <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n        </svg>\n      </div>\n      <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">访问受限</h2>\n      <p className=\"text-gray-600 mb-4\">{message}</p>\n      {onLogin && (\n        <button\n          onClick={onLogin}\n          className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n        >\n          立即登录\n        </button>\n      )}\n    </div>\n  </div>\n);\n\n// 权限不足组件\nconst InsufficientPermissions: React.FC<{ message?: string }> = ({ \n  message = '您没有足够的权限访问此页面' \n}) => (\n  <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n    <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-6 text-center\">\n      <div className=\"mb-4\">\n        <svg className=\"mx-auto h-12 w-12 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728\" />\n        </svg>\n      </div>\n      <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">权限不足</h2>\n      <p className=\"text-gray-600 mb-4\">{message}</p>\n      <button\n        onClick={() => window.history.back()}\n        className=\"w-full bg-gray-600 text-white py-2 px-4 rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\n      >\n        返回上一页\n      </button>\n    </div>\n  </div>\n);\n\n// 认证守卫组件\nexport const AuthGuard: React.FC<AuthGuardProps> = ({\n  children,\n  fallback,\n  redirectTo = '/login',\n  requireAuth = true,\n  requiredRoles = [],\n  requiredPermissions = [],\n  requireAll = true,\n}) => {\n  const [authState, setAuthState] = useState({\n    isAuthenticated: false,\n    user: null as User | null,\n    loading: true,\n    error: null as string | null,\n  });\n\n  useEffect(() => {\n    // 监听认证状态变化\n    const unsubscribe = authService.addListener((state) => {\n      setAuthState(state);\n    });\n\n    // 初始化认证状态\n    setAuthState({\n      isAuthenticated: authService.isAuthenticated(),\n      user: authService.getUser(),\n      loading: false,\n      error: null,\n    });\n\n    return unsubscribe;\n  }, []);\n\n  // 处理登录跳转\n  const handleLogin = () => {\n    if (typeof window !== 'undefined') {\n      window.location.href = redirectTo;\n    }\n  };\n\n  // 检查角色权限\n  const checkRolePermissions = (): boolean => {\n    if (!authState.user) return false;\n\n    // 检查角色\n    if (requiredRoles.length > 0) {\n      const hasRole = requireAll\n        ? requiredRoles.every(role => authState.user!.roles.includes(role))\n        : requiredRoles.some(role => authState.user!.roles.includes(role));\n      \n      if (!hasRole) return false;\n    }\n\n    // 检查权限\n    if (requiredPermissions.length > 0) {\n      const hasPermission = requireAll\n        ? authService.hasAllPermissions(requiredPermissions)\n        : authService.hasAnyPermission(requiredPermissions);\n      \n      if (!hasPermission) return false;\n    }\n\n    return true;\n  };\n\n  // 加载中状态\n  if (authState.loading) {\n    return fallback || <LoadingSpinner />;\n  }\n\n  // 不需要认证，直接渲染\n  if (!requireAuth) {\n    return <>{children}</>;\n  }\n\n  // 需要认证但未登录\n  if (!authState.isAuthenticated) {\n    return fallback || <UnauthorizedAccess onLogin={handleLogin} />;\n  }\n\n  // 已登录但权限不足\n  if (!checkRolePermissions()) {\n    const missingRoles = requiredRoles.filter(role => !authState.user!.roles.includes(role));\n    const missingPermissions = requiredPermissions.filter(permission => !authService.hasPermission(permission));\n    \n    let message = '您没有足够的权限访问此页面。';\n    if (missingRoles.length > 0) {\n      message += `\\n缺少角色: ${missingRoles.join(', ')}`;\n    }\n    if (missingPermissions.length > 0) {\n      message += `\\n缺少权限: ${missingPermissions.join(', ')}`;\n    }\n\n    return fallback || <InsufficientPermissions message={message} />;\n  }\n\n  // 通过所有检查，渲染子组件\n  return <>{children}</>;\n};\n\n// 权限检查Hook\nexport const usePermissions = () => {\n  const [authState, setAuthState] = useState({\n    isAuthenticated: false,\n    user: null as User | null,\n    loading: true,\n  });\n\n  useEffect(() => {\n    const unsubscribe = authService.addListener((state) => {\n      setAuthState({\n        isAuthenticated: state.isAuthenticated,\n        user: state.user,\n        loading: state.loading,\n      });\n    });\n\n    setAuthState({\n      isAuthenticated: authService.isAuthenticated(),\n      user: authService.getUser(),\n      loading: false,\n    });\n\n    return unsubscribe;\n  }, []);\n\n  return {\n    ...authState,\n    hasRole: (role: string) => authService.hasRole(role),\n    hasAllPermissions: (permissions: string[]) => authService.hasAllPermissions(permissions),\n    hasAnyPermission: (permissions: string[]) => authService.hasAnyPermission(permissions),\n    checkPermission: (permission: string) => authService.checkPermission(permission),\n  };\n};\n\n// 权限组件 - 根据权限条件渲染内容\nexport interface PermissionProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n  roles?: string[];\n  permissions?: string[];\n  requireAll?: boolean;\n}\n\nexport const Permission: React.FC<PermissionProps> = ({\n  children,\n  fallback = null,\n  roles = [],\n  permissions = [],\n  requireAll = true,\n}) => {\n  const { hasRole, hasAllPermissions, hasAnyPermission } = usePermissions();\n\n  // 检查角色\n  const hasRequiredRoles = roles.length === 0 || (\n    requireAll\n      ? roles.every(role => hasRole(role))\n      : roles.some(role => hasRole(role))\n  );\n\n  // 检查权限\n  const hasRequiredPermissions = permissions.length === 0 || (\n    requireAll\n      ? hasAllPermissions(permissions)\n      : hasAnyPermission(permissions)\n  );\n\n  // 如果有任何条件不满足，显示fallback\n  if (!hasRequiredRoles || !hasRequiredPermissions) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n};\n\n// 预定义的权限组件\nexport const AdminOnly: React.FC<{ children: React.ReactNode; fallback?: React.ReactNode }> = ({ \n  children, \n  fallback \n}) => (\n  <Permission roles={[ROLES.ADMIN, ROLES.SUPER_ADMIN]} requireAll={false} fallback={fallback}>\n    {children}\n  </Permission>\n);\n\nexport const ManagerOnly: React.FC<{ children: React.ReactNode; fallback?: React.ReactNode }> = ({ \n  children, \n  fallback \n}) => (\n  <Permission roles={[ROLES.MANAGER, ROLES.ADMIN, ROLES.SUPER_ADMIN]} requireAll={false} fallback={fallback}>\n    {children}\n  </Permission>\n);\n\nexport const AgentOnly: React.FC<{ children: React.ReactNode; fallback?: React.ReactNode }> = ({ \n  children, \n  fallback \n}) => (\n  <Permission roles={[ROLES.AGENT, ROLES.MANAGER, ROLES.ADMIN, ROLES.SUPER_ADMIN]} requireAll={false} fallback={fallback}>\n    {children}\n  </Permission>\n);\n\n// 事件管理权限组件\nexport const CanViewIncidents: React.FC<{ children: React.ReactNode; fallback?: React.ReactNode }> = ({ \n  children, \n  fallback \n}) => (\n  <Permission permissions={[PERMISSIONS.INCIDENT_VIEW]} fallback={fallback}>\n    {children}\n  </Permission>\n);\n\nexport const CanCreateIncidents: React.FC<{ children: React.ReactNode; fallback?: React.ReactNode }> = ({ \n  children, \n  fallback \n}) => (\n  <Permission permissions={[PERMISSIONS.INCIDENT_CREATE]} fallback={fallback}>\n    {children}\n  </Permission>\n);\n\nexport const CanManageIncidents: React.FC<{ children: React.ReactNode; fallback?: React.ReactNode }> = ({ \n  children, \n  fallback \n}) => (\n  <Permission \n    permissions={[PERMISSIONS.INCIDENT_UPDATE, PERMISSIONS.INCIDENT_DELETE, PERMISSIONS.INCIDENT_ASSIGN]} \n    requireAll={false} \n    fallback={fallback}\n  >\n    {children}\n  </Permission>\n);"],"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","ignoreList":[]}