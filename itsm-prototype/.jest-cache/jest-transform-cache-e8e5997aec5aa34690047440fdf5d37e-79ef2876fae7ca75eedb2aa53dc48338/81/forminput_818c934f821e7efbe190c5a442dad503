eb785912245a20334b92adf716bd1392
'use client';
"use strict";

/* istanbul ignore next */
function cov_1ot16u1p9j() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/components/form/form-input.tsx";
  var hash = "b5a98362f6b602808440981abd90845ff64d6705";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/components/form/form-input.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 25
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "7": {
        start: {
          line: 16,
          column: 39
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "9": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "10": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 20
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 66
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "14": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "16": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 53
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "19": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "20": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 39,
          column: 88
        }
      },
      "21": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "22": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "23": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 95
        }
      },
      "24": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 57
        }
      },
      "26": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 25
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "29": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "30": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "31": {
        start: {
          line: 56,
          column: 28
        },
        end: {
          line: 107,
          column: 2
        }
      },
      "32": {
        start: {
          line: 57,
          column: 25
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "33": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 35
        }
      },
      "34": {
        start: {
          line: 60,
          column: 25
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "35": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 106,
          column: 7
        }
      },
      "36": {
        start: {
          line: 108,
          column: 0
        },
        end: {
          line: 108,
          column: 28
        }
      },
      "37": {
        start: {
          line: 109,
          column: 18
        },
        end: {
          line: 126,
          column: 1
        }
      },
      "38": {
        start: {
          line: 110,
          column: 50
        },
        end: {
          line: 110,
          column: 55
        }
      },
      "39": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "40": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "41": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 125,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 47
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 19,
            column: 40
          }
        },
        loc: {
          start: {
            line: 19,
            column: 61
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 34
          }
        },
        loc: {
          start: {
            line: 23,
            column: 53
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 51
          },
          end: {
            line: 56,
            column: 52
          }
        },
        loc: {
          start: {
            line: 56,
            column: 271
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 57,
            column: 25
          },
          end: {
            line: 57,
            column: 26
          }
        },
        loc: {
          start: {
            line: 57,
            column: 30
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 109,
            column: 18
          },
          end: {
            line: 109,
            column: 19
          }
        },
        loc: {
          start: {
            line: 109,
            column: 27
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 109
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 20,
            column: 45
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 65
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 20
          }
        }, {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 27
          }
        }, {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 45
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 20
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 47
          }
        }, {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 76
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 31
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 53
          }
        }, {
          start: {
            line: 39,
            column: 57
          },
          end: {
            line: 39,
            column: 88
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "10": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 29
          }
        }, {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 41,
            column: 79
          }
        }],
        line: 41
      },
      "11": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 47
          },
          end: {
            line: 42,
            column: 88
          }
        }, {
          start: {
            line: 42,
            column: 91
          },
          end: {
            line: 42,
            column: 95
          }
        }],
        line: 42
      },
      "12": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 19
          },
          end: {
            line: 47,
            column: 13
          }
        }],
        line: 43
      },
      "13": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 20
          }
        }, {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 43,
            column: 33
          }
        }, {
          start: {
            line: 43,
            column: 37
          },
          end: {
            line: 43,
            column: 45
          }
        }],
        line: 43
      },
      "14": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "15": {
        loc: {
          start: {
            line: 56,
            column: 54
          },
          end: {
            line: 56,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 56,
            column: 61
          },
          end: {
            line: 56,
            column: 67
          }
        }],
        line: 56
      },
      "16": {
        loc: {
          start: {
            line: 56,
            column: 69
          },
          end: {
            line: 56,
            column: 79
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 56,
            column: 77
          },
          end: {
            line: 56,
            column: 79
          }
        }],
        line: 56
      },
      "17": {
        loc: {
          start: {
            line: 56,
            column: 94
          },
          end: {
            line: 56,
            column: 110
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 56,
            column: 105
          },
          end: {
            line: 56,
            column: 110
          }
        }],
        line: 56
      },
      "18": {
        loc: {
          start: {
            line: 56,
            column: 112
          },
          end: {
            line: 56,
            column: 128
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 56,
            column: 123
          },
          end: {
            line: 56,
            column: 128
          }
        }],
        line: 56
      },
      "19": {
        loc: {
          start: {
            line: 56,
            column: 175
          },
          end: {
            line: 56,
            column: 192
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 56,
            column: 187
          },
          end: {
            line: 56,
            column: 192
          }
        }],
        line: 56
      },
      "20": {
        loc: {
          start: {
            line: 56,
            column: 237
          },
          end: {
            line: 56,
            column: 251
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 56,
            column: 249
          },
          end: {
            line: 56,
            column: 251
          }
        }],
        line: 56
      },
      "21": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 65,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 17
          },
          end: {
            line: 65,
            column: 24
          }
        }, {
          start: {
            line: 65,
            column: 27
          },
          end: {
            line: 65,
            column: 33
          }
        }],
        line: 65
      },
      "22": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 66,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 17
          },
          end: {
            line: 66,
            column: 24
          }
        }, {
          start: {
            line: 66,
            column: 27
          },
          end: {
            line: 66,
            column: 33
          }
        }],
        line: 66
      },
      "23": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 79,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 73,
            column: 18
          }
        }, {
          start: {
            line: 73,
            column: 36
          },
          end: {
            line: 79,
            column: 14
          }
        }],
        line: 73
      },
      "24": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 104,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 98,
            column: 18
          }
        }, {
          start: {
            line: 98,
            column: 36
          },
          end: {
            line: 104,
            column: 14
          }
        }],
        line: 98
      },
      "25": {
        loc: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "26": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 111,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: 111,
            column: 17
          },
          end: {
            line: 111,
            column: 22
          }
        }, {
          start: {
            line: 111,
            column: 26
          },
          end: {
            line: 111,
            column: 30
          }
        }],
        line: 111
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/components/form/form-input.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { forwardRef } from 'react';\nimport { FormInputProps } from './types';\nimport { FormField } from './form-field';\n\nconst Input = forwardRef<HTMLInputElement, Omit<FormInputProps, 'label' | 'error' | 'help'>>(\n  ({\n    type = 'text',\n    value = '',\n    placeholder,\n    disabled = false,\n    readonly = false,\n    maxLength,\n    minLength,\n    pattern,\n    autoComplete,\n    autoFocus = false,\n    prefix,\n    suffix,\n    onChange,\n    onBlur,\n    onFocus,\n    className = '',\n    ...props\n  }, ref) => {\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChange?.(e.target.value);\n    };\n\n    const inputClasses = [\n      'block w-full rounded-md border-gray-300 shadow-sm',\n      'focus:border-blue-500 focus:ring-blue-500',\n      'disabled:bg-gray-50 disabled:text-gray-500 disabled:cursor-not-allowed',\n      'readonly:bg-gray-50 readonly:cursor-default',\n      prefix ? 'pl-10' : 'px-3',\n      suffix ? 'pr-10' : 'px-3',\n      'py-2',\n      className\n    ].filter(Boolean).join(' ');\n\n    return (\n      <div className=\"relative\">\n        {prefix && (\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <span className=\"text-gray-500 sm:text-sm\">{prefix}</span>\n          </div>\n        )}\n        \n        <input\n          ref={ref}\n          type={type}\n          value={value}\n          placeholder={placeholder}\n          disabled={disabled}\n          readOnly={readonly}\n          maxLength={maxLength}\n          minLength={minLength}\n          pattern={pattern}\n          autoComplete={autoComplete}\n          autoFocus={autoFocus}\n          onChange={handleChange}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          className={inputClasses}\n          {...props}\n        />\n        \n        {suffix && (\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n            <span className=\"text-gray-500 sm:text-sm\">{suffix}</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n\nexport const FormInput: React.FC<FormInputProps> = (props) => {\n  const { label, error, help, ...inputProps } = props;\n\n  if (label || error || help) {\n    return (\n      <FormField\n        name={props.name}\n        label={label}\n        required={props.required}\n        error={error}\n        help={help}\n      >\n        <Input {...inputProps} />\n      </FormField>\n    );\n  }\n\n  return <Input {...inputProps} />;\n};"],
      names: ["FormInput", "Input", "forwardRef", "type", "value", "placeholder", "disabled", "readonly", "maxLength", "minLength", "pattern", "autoComplete", "autoFocus", "prefix", "suffix", "onChange", "onBlur", "onFocus", "className", "props", "ref", "handleChange", "e", "target", "inputClasses", "filter", "Boolean", "join", "div", "span", "input", "readOnly", "displayName", "label", "error", "help", "inputProps", "FormField", "name", "required"],
      mappings: "AAAA;;;;;+BAgFaA;;;eAAAA;;;;+DA9EqB;2BAER;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE1B,MAAMC,sBAAQC,IAAAA,iBAAU,EACtB,CAAC,EACCC,OAAO,MAAM,EACbC,QAAQ,EAAE,EACVC,WAAW,EACXC,WAAW,KAAK,EAChBC,WAAW,KAAK,EAChBC,SAAS,EACTC,SAAS,EACTC,OAAO,EACPC,YAAY,EACZC,YAAY,KAAK,EACjBC,MAAM,EACNC,MAAM,EACNC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,YAAY,EAAE,EACd,GAAGC,OACJ,EAAEC;IACD,MAAMC,eAAe,CAACC;QACpBP,WAAWO,EAAEC,MAAM,CAACnB,KAAK;IAC3B;IAEA,MAAMoB,eAAe;QACnB;QACA;QACA;QACA;QACAX,SAAS,UAAU;QACnBC,SAAS,UAAU;QACnB;QACAI;KACD,CAACO,MAAM,CAACC,SAASC,IAAI,CAAC;IAEvB,qBACE,sBAACC;QAAIV,WAAU;;YACZL,wBACC,qBAACe;gBAAIV,WAAU;0BACb,cAAA,qBAACW;oBAAKX,WAAU;8BAA4BL;;;0BAIhD,qBAACiB;gBACCV,KAAKA;gBACLjB,MAAMA;gBACNC,OAAOA;gBACPC,aAAaA;gBACbC,UAAUA;gBACVyB,UAAUxB;gBACVC,WAAWA;gBACXC,WAAWA;gBACXC,SAASA;gBACTC,cAAcA;gBACdC,WAAWA;gBACXG,UAAUM;gBACVL,QAAQA;gBACRC,SAASA;gBACTC,WAAWM;gBACV,GAAGL,KAAK;;YAGVL,wBACC,qBAACc;gBAAIV,WAAU;0BACb,cAAA,qBAACW;oBAAKX,WAAU;8BAA4BJ;;;;;AAKtD;AAGFb,MAAM+B,WAAW,GAAG;AAEb,MAAMhC,YAAsC,CAACmB;IAClD,MAAM,EAAEc,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAE,GAAGC,YAAY,GAAGjB;IAE9C,IAAIc,SAASC,SAASC,MAAM;QAC1B,qBACE,qBAACE,oBAAS;YACRC,MAAMnB,MAAMmB,IAAI;YAChBL,OAAOA;YACPM,UAAUpB,MAAMoB,QAAQ;YACxBL,OAAOA;YACPC,MAAMA;sBAEN,cAAA,qBAAClC;gBAAO,GAAGmC,UAAU;;;IAG3B;IAEA,qBAAO,qBAACnC;QAAO,GAAGmC,UAAU;;AAC9B"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b5a98362f6b602808440981abd90845ff64d6705"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ot16u1p9j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ot16u1p9j();
cov_1ot16u1p9j().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ot16u1p9j().s[1]++;
Object.defineProperty(exports, "FormInput", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1ot16u1p9j().f[0]++;
    cov_1ot16u1p9j().s[2]++;
    return FormInput;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1ot16u1p9j().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ot16u1p9j().s[4]++, _interop_require_wildcard(require("react")));
const _formfield =
/* istanbul ignore next */
(cov_1ot16u1p9j().s[5]++, require("./form-field"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1ot16u1p9j().f[1]++;
  cov_1ot16u1p9j().s[6]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1ot16u1p9j().b[0][0]++;
    cov_1ot16u1p9j().s[7]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1ot16u1p9j().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().s[8]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().s[9]++, new WeakMap());
  /* istanbul ignore next */
  cov_1ot16u1p9j().s[10]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1ot16u1p9j().f[2]++;
    cov_1ot16u1p9j().s[11]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1ot16u1p9j().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1ot16u1p9j().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1ot16u1p9j().f[3]++;
  cov_1ot16u1p9j().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1ot16u1p9j().b[2][0]++;
    cov_1ot16u1p9j().s[13]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1ot16u1p9j().b[2][1]++;
  }
  cov_1ot16u1p9j().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1ot16u1p9j().b[4][0]++;
    cov_1ot16u1p9j().s[15]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1ot16u1p9j().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().s[16]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1ot16u1p9j().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1ot16u1p9j().b[6][0]++;
    cov_1ot16u1p9j().s[18]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1ot16u1p9j().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().s[19]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().s[20]++,
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1ot16u1p9j().s[21]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1ot16u1p9j().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_1ot16u1p9j().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1ot16u1p9j().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1ot16u1p9j().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1ot16u1p9j().s[23]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1ot16u1p9j().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1ot16u1p9j().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1ot16u1p9j().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_1ot16u1p9j().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1ot16u1p9j().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1ot16u1p9j().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1ot16u1p9j().b[12][0]++;
        cov_1ot16u1p9j().s[25]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1ot16u1p9j().b[12][1]++;
        cov_1ot16u1p9j().s[26]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ot16u1p9j().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1ot16u1p9j().s[27]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1ot16u1p9j().s[28]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1ot16u1p9j().b[14][0]++;
    cov_1ot16u1p9j().s[29]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1ot16u1p9j().b[14][1]++;
  }
  cov_1ot16u1p9j().s[30]++;
  return newObj;
}
const Input =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ot16u1p9j().s[31]++, (0, _react.forwardRef)(({
  type =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[15][0]++, 'text'),
  value =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[16][0]++, ''),
  placeholder,
  disabled =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[17][0]++, false),
  readonly =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[18][0]++, false),
  maxLength,
  minLength,
  pattern,
  autoComplete,
  autoFocus =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[19][0]++, false),
  prefix,
  suffix,
  onChange,
  onBlur,
  onFocus,
  className =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[20][0]++, ''),
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_1ot16u1p9j().f[4]++;
  cov_1ot16u1p9j().s[32]++;
  const handleChange = e => {
    /* istanbul ignore next */
    cov_1ot16u1p9j().f[5]++;
    cov_1ot16u1p9j().s[33]++;
    onChange?.(e.target.value);
  };
  const inputClasses =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().s[34]++, ['block w-full rounded-md border-gray-300 shadow-sm', 'focus:border-blue-500 focus:ring-blue-500', 'disabled:bg-gray-50 disabled:text-gray-500 disabled:cursor-not-allowed', 'readonly:bg-gray-50 readonly:cursor-default', prefix ?
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[21][0]++, 'pl-10') :
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[21][1]++, 'px-3'), suffix ?
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[22][0]++, 'pr-10') :
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[22][1]++, 'px-3'), 'py-2', className].filter(Boolean).join(' '));
  /* istanbul ignore next */
  cov_1ot16u1p9j().s[35]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "relative",
    children: [
    /* istanbul ignore next */
    (cov_1ot16u1p9j().b[23][0]++, prefix) &&
    /* istanbul ignore next */
    (cov_1ot16u1p9j().b[23][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
        className: "text-gray-500 sm:text-sm",
        children: prefix
      })
    })), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
      ref: ref,
      type: type,
      value: value,
      placeholder: placeholder,
      disabled: disabled,
      readOnly: readonly,
      maxLength: maxLength,
      minLength: minLength,
      pattern: pattern,
      autoComplete: autoComplete,
      autoFocus: autoFocus,
      onChange: handleChange,
      onBlur: onBlur,
      onFocus: onFocus,
      className: inputClasses,
      ...props
    }),
    /* istanbul ignore next */
    (cov_1ot16u1p9j().b[24][0]++, suffix) &&
    /* istanbul ignore next */
    (cov_1ot16u1p9j().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
        className: "text-gray-500 sm:text-sm",
        children: suffix
      })
    }))]
  });
}));
/* istanbul ignore next */
cov_1ot16u1p9j().s[36]++;
Input.displayName = 'Input';
/* istanbul ignore next */
cov_1ot16u1p9j().s[37]++;
const FormInput = props => {
  /* istanbul ignore next */
  cov_1ot16u1p9j().f[6]++;
  const {
    label,
    error,
    help,
    ...inputProps
  } =
  /* istanbul ignore next */
  (cov_1ot16u1p9j().s[38]++, props);
  /* istanbul ignore next */
  cov_1ot16u1p9j().s[39]++;
  if (
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[26][0]++, label) ||
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[26][1]++, error) ||
  /* istanbul ignore next */
  (cov_1ot16u1p9j().b[26][2]++, help)) {
    /* istanbul ignore next */
    cov_1ot16u1p9j().b[25][0]++;
    cov_1ot16u1p9j().s[40]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_formfield.FormField, {
      name: props.name,
      label: label,
      required: props.required,
      error: error,
      help: help,
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(Input, {
        ...inputProps
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_1ot16u1p9j().b[25][1]++;
  }
  cov_1ot16u1p9j().s[41]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(Input, {
    ...inputProps
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,