{"version":3,"names":["_default","Header","Content","cov_2obxj6gu56","s","_antd","Layout","Title","Text","Typography","Option","Select","TabPane","Tabs","WorkflowDesignerPage","params","f","router","_navigation","useRouter","searchParams","useSearchParams","form","Form","useForm","workflow","setWorkflow","_react","useState","saving","setSaving","deploying","setDeploying","currentXML","setCurrentXML","hasChanges","setHasChanges","activeTab","setActiveTab","showVersionModal","setShowVersionModal","showSettingsModal","setShowSettingsModal","workflowVersions","setWorkflowVersions","approvalConfig","setApprovalConfig","require_approval","approval_type","approvers","auto_approve_roles","escalation_rules","workflowId","b","id","get","useEffect","loadWorkflow","loadWorkflowVersions","newWorkflow","name","description","version","category","status","xml","getDefaultBPMNXML","created_at","Date","toISOString","updated_at","created_by","tags","approval_config","variables","sla_config","response_time_hours","resolution_time_hours","business_hours_only","exclude_weekends","exclude_holidays","response","_workflowapi","WorkflowAPI","getProcessDefinition","key","toString","is_active","error","console","message","versions","getProcessVersions","handleSave","createProcessDefinition","bpmn_xml","tenant_id","prev","success","updateProcessDefinition","handleDeploy","deployProcessDefinition","activate","handleCreateVersion","newVersion","createProcessVersion","parseFloat","slice","change_log","handleSwitchVersion","versionId","find","v","handleSaveSettings","values","validateFields","getStatusColor","getStatusIcon","_jsxruntime","jsx","_lucidereact","CheckCircle","className","Edit3","Clock","AlertCircle","jsxs","style","height","background","padding","borderBottom","Button","type","icon","ArrowLeft","onClick","back","level","Tag","color","Space","GitBranch","Settings","Save","loading","disabled","PlayCircle","activeKey","onChange","tab","_EnhancedBPMNDesigner","default","onSave","Card","Timeline","map","Item","dot","Badge","text","strong","toLocaleString","size","Eye","Row","gutter","Col","span","title","value","width","mode","placeholder","Input","suffix","e","parseInt","target","checked","Modal","open","onOk","onCancel","okText","cancelText","Alert","showIcon","layout","initialValues","label","rules","required","valuePropName"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/workflow/designer/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport {\n  Layout,\n  Button,\n  Space,\n  message,\n  Typography,\n  Row,\n  Col,\n  Tag,\n  Card,\n  Tabs,\n  Select,\n  Input,\n  Form,\n  Modal,\n  Timeline,\n  Badge,\n  Alert,\n} from \"antd\";\nimport {\n  ArrowLeft,\n  Save,\n  PlayCircle,\n  GitBranch,\n  Settings,\n  Eye,\n  Edit3,\n  CheckCircle,\n  Clock,\n  AlertCircle,\n} from \"lucide-react\";\nimport EnhancedBPMNDesigner from \"../../components/EnhancedBPMNDesigner\";\nimport { WorkflowAPI } from \"../../lib/workflow-api\";\n\nconst { Header, Content } = Layout;\nconst { Title, Text } = Typography;\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n\ninterface WorkflowDesignerPageProps {\n  params: { id?: string };\n}\n\ninterface WorkflowDefinition {\n  id: string;\n  name: string;\n  description: string;\n  version: string;\n  category: string;\n  status: \"draft\" | \"active\" | \"inactive\" | \"archived\";\n  xml: string;\n  created_at: string;\n  updated_at: string;\n  created_by: string;\n  tags: string[];\n  approval_config?: ApprovalConfig;\n  variables?: WorkflowVariable[];\n  sla_config?: SLAConfig;\n}\n\ninterface ApprovalConfig {\n  require_approval: boolean;\n  approval_type: \"single\" | \"parallel\" | \"sequential\" | \"conditional\";\n  approvers: string[];\n  auto_approve_roles: string[];\n  escalation_rules: EscalationRule[];\n}\n\ninterface EscalationRule {\n  level: number;\n  timeout_hours: number;\n  escalate_to: string[];\n  action: \"notify\" | \"auto_approve\" | \"escalate\";\n}\n\ninterface WorkflowVariable {\n  name: string;\n  type: \"string\" | \"number\" | \"boolean\" | \"date\" | \"object\";\n  required: boolean;\n  default_value?: string | number | boolean | Date | Record<string, unknown>;\n  description: string;\n}\n\ninterface SLAConfig {\n  response_time_hours: number;\n  resolution_time_hours: number;\n  business_hours_only: boolean;\n  exclude_weekends: boolean;\n  exclude_holidays: boolean;\n}\n\ninterface WorkflowVersion {\n  id: string;\n  version: string;\n  status: \"draft\" | \"active\" | \"archived\";\n  created_at: string;\n  created_by: string;\n  change_log: string;\n  xml: string;\n}\n\nconst WorkflowDesignerPage: React.FC<WorkflowDesignerPageProps> = ({\n  params,\n}) => {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n\n  const [form] = Form.useForm();\n\n  const [workflow, setWorkflow] = useState<WorkflowDefinition | null>(null);\n  const [saving, setSaving] = useState(false);\n  const [deploying, setDeploying] = useState(false);\n  const [currentXML, setCurrentXML] = useState(\"\");\n  const [hasChanges, setHasChanges] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"designer\");\n  const [showVersionModal, setShowVersionModal] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [workflowVersions, setWorkflowVersions] = useState<WorkflowVersion[]>(\n    []\n  );\n  const [approvalConfig, setApprovalConfig] = useState<ApprovalConfig>({\n    require_approval: true,\n    approval_type: \"sequential\",\n    approvers: [],\n    auto_approve_roles: [],\n    escalation_rules: [],\n  });\n\n  // 从URL参数获取工作流ID\n  const workflowId = params.id || searchParams.get(\"id\");\n\n  useEffect(() => {\n    if (workflowId) {\n      loadWorkflow(workflowId);\n      loadWorkflowVersions(workflowId);\n    } else {\n      // 创建新工作流\n      const newWorkflow: WorkflowDefinition = {\n        id: \"new\",\n        name: \"新工作流\",\n        description: \"\",\n        version: \"1.0.0\",\n        category: \"general\",\n        status: \"draft\",\n        xml: getDefaultBPMNXML(),\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n        created_by: \"当前用户\",\n        tags: [],\n        approval_config: approvalConfig,\n        variables: [],\n        sla_config: {\n          response_time_hours: 24,\n          resolution_time_hours: 72,\n          business_hours_only: true,\n          exclude_weekends: true,\n          exclude_holidays: true,\n        },\n      };\n      setWorkflow(newWorkflow);\n      setCurrentXML(getDefaultBPMNXML());\n    }\n  }, [workflowId]);\n\n  const loadWorkflow = async (id: string) => {\n    if (id === \"new\") return;\n\n    try {\n      // 使用新的BPMN API\n      const response = await WorkflowAPI.getProcessDefinition(id);\n      setWorkflow({\n        id: response.key,\n        name: response.name,\n        description: response.description || \"\",\n        version: response.version.toString(),\n        category: response.category || \"general\",\n        status: response.is_active ? \"active\" : \"inactive\",\n        xml: \"\", // BPMN XML需要从部署的资源中获取\n        created_at: response.created_at,\n        updated_at: response.updated_at,\n        created_by: \"系统\", // 从用户信息中获取\n        tags: [],\n        approval_config: approvalConfig,\n        variables: [],\n        sla_config: {\n          response_time_hours: 24,\n          resolution_time_hours: 72,\n          business_hours_only: true,\n          exclude_weekends: true,\n          exclude_holidays: true,\n        },\n      });\n      // 这里需要从部署资源中获取BPMN XML\n      setCurrentXML(getDefaultBPMNXML());\n    } catch (error) {\n      console.error(\"加载工作流失败:\", error);\n      message.error(\"加载工作流失败\");\n    }\n  };\n\n  const loadWorkflowVersions = async (id: string) => {\n    if (id === \"new\") return;\n\n    try {\n      const versions = await WorkflowAPI.getProcessVersions(id);\n      setWorkflowVersions(versions);\n    } catch (error) {\n      console.error(\"加载工作流版本失败:\", error);\n    }\n  };\n\n  const getDefaultBPMNXML = () => {\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" \n                  xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" \n                  xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" \n                  xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" \n                  id=\"Definitions_1\" \n                  targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn:startEvent id=\"StartEvent_1\" name=\"开始\">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:userTask id=\"UserTask_1\" name=\"提交申请\">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:userTask>\n    <bpmn:userTask id=\"UserTask_2\" name=\"审核\">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n      <bpmn:outgoing>Flow_3</bpmn:outgoing>\n    </bpmn:userTask>\n    <bpmn:endEvent id=\"EndEvent_1\" name=\"结束\">\n      <bpmn:incoming>Flow_3</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"Flow_1\" sourceRef=\"StartEvent_1\" targetRef=\"UserTask_1\" />\n    <bpmn:sequenceFlow id=\"Flow_2\" sourceRef=\"UserTask_1\" targetRef=\"UserTask_2\" />\n    <bpmn:sequenceFlow id=\"Flow_3\" sourceRef=\"UserTask_2\" targetRef=\"EndEvent_1\" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"StartEvent_1_di\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds x=\"152\" y=\"102\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"158\" y=\"145\" width=\"24\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"UserTask_1_di\" bpmnElement=\"UserTask_1\">\n        <dc:Bounds x=\"240\" y=\"80\" width=\"100\" height=\"80\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"255\" y=\"105\" width=\"70\" height=\"30\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"UserTask_2_di\" bpmnElement=\"UserTask_2\">\n        <dc:Bounds x=\"400\" y=\"80\" width=\"100\" height=\"80\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"425\" y=\"105\" width=\"50\" height=\"30\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"EndEvent_1_di\" bpmnElement=\"EndEvent_1\">\n        <dc:Bounds x=\"552\" y=\"102\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"558\" y=\"145\" width=\"24\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"Flow_1_di\" bpmnElement=\"Flow_1\">\n        <di:waypoint x=\"188\" y=\"120\" />\n        <di:waypoint x=\"240\" y=\"120\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_2_di\" bpmnElement=\"Flow_2\">\n        <di:waypoint x=\"340\" y=\"120\" />\n        <di:waypoint x=\"400\" y=\"120\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_3_di\" bpmnElement=\"Flow_3\">\n        <di:waypoint x=\"500\" y=\"120\" />\n        <di:waypoint x=\"552\" y=\"120\" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>`;\n  };\n\n  const handleSave = async (xml: string) => {\n    if (!workflow) return;\n\n    setSaving(true);\n    try {\n      if (workflow.id === \"new\") {\n        // 创建新工作流 - 使用新的BPMN API\n        const response = await WorkflowAPI.createProcessDefinition({\n          name: workflow.name,\n          description: workflow.description,\n          category: workflow.category,\n          bpmn_xml: xml,\n          tenant_id: 1, // 从当前用户信息中获取\n        });\n\n        // 更新工作流ID和状态\n        setWorkflow((prev) =>\n          prev\n            ? {\n                ...prev,\n                id: response.key,\n                status: \"draft\",\n              }\n            : null\n        );\n\n        message.success(\"工作流创建成功\");\n      } else {\n        // 更新现有工作流\n        await WorkflowAPI.updateProcessDefinition(workflow.id, {\n          name: workflow.name,\n          description: workflow.description,\n          category: workflow.category,\n          bpmn_xml: xml,\n        });\n\n        message.success(\"工作流更新成功\");\n      }\n\n      setCurrentXML(xml);\n      setHasChanges(false);\n    } catch (error) {\n      console.error(\"保存工作流失败:\", error);\n      message.error(\"保存工作流失败\");\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleDeploy = async () => {\n    if (!workflow || !currentXML) return;\n\n    setDeploying(true);\n    try {\n      // 部署工作流\n      await WorkflowAPI.deployProcessDefinition(workflow.id, {\n        bpmn_xml: currentXML,\n        activate: true,\n      });\n\n      // 更新状态\n      setWorkflow((prev) =>\n        prev\n          ? {\n              ...prev,\n              status: \"active\",\n            }\n          : null\n      );\n\n      message.success(\"工作流部署成功\");\n    } catch (error) {\n      console.error(\"部署工作流失败:\", error);\n      message.error(\"部署工作流失败\");\n    } finally {\n      setDeploying(false);\n    }\n  };\n\n  const handleCreateVersion = async () => {\n    if (!workflow) return;\n\n    try {\n      const newVersion = await WorkflowAPI.createProcessVersion(workflow.id, {\n        version: `${parseFloat(workflow.version) + 0.1}`.slice(0, 3),\n        change_log: \"创建新版本\",\n        bpmn_xml: currentXML,\n      });\n\n      setWorkflowVersions([...workflowVersions, newVersion]);\n      setWorkflow((prev) =>\n        prev\n          ? {\n              ...prev,\n              version: newVersion.version,\n            }\n          : null\n      );\n\n      message.success(\"新版本创建成功\");\n      setShowVersionModal(false);\n    } catch (error) {\n      console.error(\"创建版本失败:\", error);\n      message.error(\"创建版本失败\");\n    }\n  };\n\n  const handleSwitchVersion = async (versionId: string) => {\n    try {\n      const version = workflowVersions.find((v) => v.id === versionId);\n      if (version) {\n        setCurrentXML(version.xml);\n        setWorkflow((prev) =>\n          prev\n            ? {\n                ...prev,\n                version: version.version,\n              }\n            : null\n        );\n        message.success(`已切换到版本 ${version.version}`);\n      }\n    } catch (error) {\n      console.error(\"切换版本失败:\", error);\n      message.error(\"切换版本失败\");\n    }\n  };\n\n  const handleSaveSettings = async () => {\n    try {\n      const values = await form.validateFields();\n\n      setWorkflow((prev) =>\n        prev\n          ? {\n              ...prev,\n              approval_config: values.approval_config,\n              sla_config: values.sla_config,\n            }\n          : null\n      );\n\n      message.success(\"设置保存成功\");\n      setShowSettingsModal(false);\n    } catch (error) {\n      console.error(\"保存设置失败:\", error);\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"active\":\n        return \"success\";\n      case \"draft\":\n        return \"processing\";\n      case \"inactive\":\n        return \"default\";\n      case \"archived\":\n        return \"warning\";\n      default:\n        return \"default\";\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case \"active\":\n        return <CheckCircle className=\"w-4 h-4\" />;\n      case \"draft\":\n        return <Edit3 className=\"w-4 h-4\" />;\n      case \"inactive\":\n        return <Clock className=\"w-4 h-4\" />;\n      case \"archived\":\n        return <AlertCircle className=\"w-4 h-4\" />;\n      default:\n        return <Clock className=\"w-4 h-4\" />;\n    }\n  };\n\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      <Header\n        style={{\n          background: \"#fff\",\n          padding: \"0 24px\",\n          borderBottom: \"1px solid #f0f0f0\",\n        }}\n      >\n        <div className=\"flex items-center justify-between h-full\">\n          <div className=\"flex items-center\">\n            <Button\n              type=\"text\"\n              icon={<ArrowLeft className=\"w-4 h-4\" />}\n              onClick={() => router.back()}\n              className=\"mr-4\"\n            >\n              返回\n            </Button>\n            <div>\n              <Title level={4} className=\"!mb-0\">\n                {workflow?.name || \"工作流设计器\"}\n              </Title>\n              <div className=\"flex items-center gap-2\">\n                <Tag color={getStatusColor(workflow?.status || \"draft\")}>\n                  {getStatusIcon(workflow?.status || \"draft\")}\n                  {workflow?.status === \"active\"\n                    ? \"已激活\"\n                    : workflow?.status === \"draft\"\n                    ? \"草稿\"\n                    : workflow?.status === \"inactive\"\n                    ? \"未激活\"\n                    : \"已归档\"}\n                </Tag>\n                <Text type=\"secondary\">版本 {workflow?.version}</Text>\n                {workflow?.category && (\n                  <Tag color=\"blue\">{workflow.category}</Tag>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <Space>\n            <Button\n              icon={<GitBranch className=\"w-4 h-4\" />}\n              onClick={() => setShowVersionModal(true)}\n            >\n              版本管理\n            </Button>\n            <Button\n              icon={<Settings className=\"w-4 h-4\" />}\n              onClick={() => setShowSettingsModal(true)}\n            >\n              流程设置\n            </Button>\n            <Button\n              icon={<Save className=\"w-4 h-4\" />}\n              loading={saving}\n              onClick={() => handleSave(currentXML)}\n              disabled={!hasChanges}\n            >\n              保存\n            </Button>\n            <Button\n              type=\"primary\"\n              icon={<PlayCircle className=\"w-4 h-4\" />}\n              loading={deploying}\n              onClick={handleDeploy}\n              disabled={!workflow || workflow.status === \"active\"}\n            >\n              部署\n            </Button>\n          </Space>\n        </div>\n      </Header>\n\n      <Layout>\n        <Content style={{ padding: \"24px\" }}>\n          <Tabs activeKey={activeTab} onChange={setActiveTab}>\n            <TabPane tab=\"流程设计\" key=\"designer\">\n              <div style={{ height: \"calc(100vh - 200px)\" }}>\n                <EnhancedBPMNDesigner\n                  xml={currentXML}\n                  onSave={handleSave}\n                  onChange={(xml) => {\n                    setCurrentXML(xml);\n                    setHasChanges(true);\n                  }}\n                />\n              </div>\n            </TabPane>\n\n            <TabPane tab=\"版本历史\" key=\"versions\">\n              <Card>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <Title level={5}>版本历史</Title>\n                  <Button\n                    type=\"primary\"\n                    icon={<GitBranch className=\"w-4 h-4\" />}\n                    onClick={() => setShowVersionModal(true)}\n                  >\n                    创建新版本\n                  </Button>\n                </div>\n\n                <Timeline>\n                  {workflowVersions.map((version) => (\n                    <Timeline.Item\n                      key={version.id}\n                      dot={\n                        <Badge\n                          status={\n                            version.status === \"active\" ? \"success\" : \"default\"\n                          }\n                          text={version.status === \"active\" ? \"当前\" : \"\"}\n                        />\n                      }\n                    >\n                      <div className=\"flex justify-between items-center\">\n                        <div>\n                          <Text strong>版本 {version.version}</Text>\n                          <div className=\"text-sm text-gray-500\">\n                            {version.change_log}\n                          </div>\n                          <div className=\"text-xs text-gray-400\">\n                            {new Date(version.created_at).toLocaleString()} -{\" \"}\n                            {version.created_by}\n                          </div>\n                        </div>\n                        <Space>\n                          <Button\n                            size=\"small\"\n                            icon={<Eye className=\"w-3 h-3\" />}\n                            onClick={() => handleSwitchVersion(version.id)}\n                          >\n                            查看\n                          </Button>\n                          {version.status !== \"active\" && (\n                            <Button\n                              size=\"small\"\n                              type=\"primary\"\n                              onClick={() => handleSwitchVersion(version.id)}\n                            >\n                              切换到此版本\n                            </Button>\n                          )}\n                        </Space>\n                      </div>\n                    </Timeline.Item>\n                  ))}\n                </Timeline>\n              </Card>\n            </TabPane>\n\n            <TabPane tab=\"流程配置\" key=\"config\">\n              <Row gutter={[16, 16]}>\n                <Col span={12}>\n                  <Card title=\"审批配置\" className=\"h-full\">\n                    <div className=\"space-y-4\">\n                      <div>\n                        <Text strong>审批类型</Text>\n                        <div className=\"mt-2\">\n                          <Select\n                            value={approvalConfig.approval_type}\n                            onChange={(value) =>\n                              setApprovalConfig((prev) => ({\n                                ...prev,\n                                approval_type: value,\n                              }))\n                            }\n                            style={{ width: \"100%\" }}\n                          >\n                            <Option value=\"single\">单人审批</Option>\n                            <Option value=\"parallel\">并行审批</Option>\n                            <Option value=\"sequential\">串行审批</Option>\n                            <Option value=\"conditional\">条件审批</Option>\n                          </Select>\n                        </div>\n                      </div>\n\n                      <div>\n                        <Text strong>审批人</Text>\n                        <div className=\"mt-2\">\n                          <Select\n                            mode=\"multiple\"\n                            placeholder=\"选择审批人\"\n                            value={approvalConfig.approvers}\n                            onChange={(value) =>\n                              setApprovalConfig((prev) => ({\n                                ...prev,\n                                approvers: value,\n                              }))\n                            }\n                            style={{ width: \"100%\" }}\n                          >\n                            <Option value=\"user1\">张三</Option>\n                            <Option value=\"user2\">李四</Option>\n                            <Option value=\"user3\">王五</Option>\n                          </Select>\n                        </div>\n                      </div>\n\n                      <div>\n                        <Text strong>自动审批角色</Text>\n                        <div className=\"mt-2\">\n                          <Select\n                            mode=\"multiple\"\n                            placeholder=\"选择角色\"\n                            value={approvalConfig.auto_approve_roles}\n                            onChange={(value) =>\n                              setApprovalConfig((prev) => ({\n                                ...prev,\n                                auto_approve_roles: value,\n                              }))\n                            }\n                            style={{ width: \"100%\" }}\n                          >\n                            <Option value=\"admin\">管理员</Option>\n                            <Option value=\"manager\">经理</Option>\n                            <Option value=\"supervisor\">主管</Option>\n                          </Select>\n                        </div>\n                      </div>\n                    </div>\n                  </Card>\n                </Col>\n\n                <Col span={12}>\n                  <Card title=\"SLA配置\" className=\"h-full\">\n                    <div className=\"space-y-4\">\n                      <div>\n                        <Text strong>响应时间</Text>\n                        <div className=\"mt-2\">\n                          <Input\n                            type=\"number\"\n                            suffix=\"小时\"\n                            value={workflow?.sla_config?.response_time_hours}\n                            onChange={(e) =>\n                              setWorkflow((prev) =>\n                                prev\n                                  ? {\n                                      ...prev,\n                                      sla_config: {\n                                        ...prev.sla_config!,\n                                        response_time_hours:\n                                          parseInt(e.target.value) || 24,\n                                      },\n                                    }\n                                  : null\n                              )\n                            }\n                          />\n                        </div>\n                      </div>\n\n                      <div>\n                        <Text strong>解决时间</Text>\n                        <div className=\"mt-2\">\n                          <Input\n                            type=\"number\"\n                            suffix=\"小时\"\n                            value={workflow?.sla_config?.resolution_time_hours}\n                            onChange={(e) =>\n                              setWorkflow((prev) =>\n                                prev\n                                  ? {\n                                      ...prev,\n                                      sla_config: {\n                                        ...prev.sla_config!,\n                                        resolution_time_hours:\n                                          parseInt(e.target.value) || 72,\n                                      },\n                                    }\n                                  : null\n                              )\n                            }\n                          />\n                        </div>\n                      </div>\n\n                      <div>\n                        <Text strong>工作时间设置</Text>\n                        <div className=\"mt-2 space-y-2\">\n                          <div>\n                            <input\n                              type=\"checkbox\"\n                              checked={\n                                workflow?.sla_config?.business_hours_only\n                              }\n                              onChange={(e) =>\n                                setWorkflow((prev) =>\n                                  prev\n                                    ? {\n                                        ...prev,\n                                        sla_config: {\n                                          ...prev.sla_config!,\n                                          business_hours_only: e.target.checked,\n                                        },\n                                      }\n                                    : null\n                                )\n                              }\n                            />\n                            <Text className=\"ml-2\">仅工作时间</Text>\n                          </div>\n                          <div>\n                            <input\n                              type=\"checkbox\"\n                              checked={workflow?.sla_config?.exclude_weekends}\n                              onChange={(e) =>\n                                setWorkflow((prev) =>\n                                  prev\n                                    ? {\n                                        ...prev,\n                                        sla_config: {\n                                          ...prev.sla_config!,\n                                          exclude_weekends: e.target.checked,\n                                        },\n                                      }\n                                    : null\n                                )\n                              }\n                            />\n                            <Text className=\"ml-2\">排除周末</Text>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Card>\n                </Col>\n              </Row>\n            </TabPane>\n          </Tabs>\n        </Content>\n      </Layout>\n\n      {/* 版本管理模态框 */}\n      <Modal\n        title=\"创建新版本\"\n        open={showVersionModal}\n        onOk={handleCreateVersion}\n        onCancel={() => setShowVersionModal(false)}\n        okText=\"创建\"\n        cancelText=\"取消\"\n      >\n        <div className=\"space-y-4\">\n          <Alert\n            message=\"版本管理\"\n            description=\"创建新版本将保存当前的设计状态，不会影响已部署的版本。\"\n            type=\"info\"\n            showIcon\n          />\n          <div>\n            <Text strong>当前版本</Text>\n            <div className=\"mt-1\">\n              <Tag color=\"blue\">{workflow?.version}</Tag>\n            </div>\n          </div>\n          <div>\n            <Text strong>新版本号</Text>\n            <div className=\"mt-1\">\n              <Tag color=\"green\">\n                {workflow\n                  ? `${parseFloat(workflow.version) + 0.1}`.slice(0, 3)\n                  : \"1.1\"}\n              </Tag>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      {/* 流程设置模态框 */}\n      <Modal\n        title=\"流程设置\"\n        open={showSettingsModal}\n        onOk={handleSaveSettings}\n        onCancel={() => setShowSettingsModal(false)}\n        width={800}\n        okText=\"保存\"\n        cancelText=\"取消\"\n      >\n        <Form form={form} layout=\"vertical\" initialValues={workflow || {}}>\n          <Tabs>\n            <TabPane tab=\"审批配置\" key=\"approval\">\n              <Form.Item\n                label=\"审批类型\"\n                name={[\"approval_config\", \"approval_type\"]}\n                rules={[{ required: true, message: \"请选择审批类型\" }]}\n              >\n                <Select>\n                  <Option value=\"single\">单人审批</Option>\n                  <Option value=\"parallel\">并行审批</Option>\n                  <Option value=\"sequential\">串行审批</Option>\n                  <Option value=\"conditional\">条件审批</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item label=\"审批人\" name={[\"approval_config\", \"approvers\"]}>\n                <Select mode=\"multiple\" placeholder=\"选择审批人\">\n                  <Option value=\"user1\">张三</Option>\n                  <Option value=\"user2\">李四</Option>\n                  <Option value=\"user3\">王五</Option>\n                </Select>\n              </Form.Item>\n            </TabPane>\n\n            <TabPane tab=\"SLA配置\" key=\"sla\">\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Form.Item\n                    label=\"响应时间(小时)\"\n                    name={[\"sla_config\", \"response_time_hours\"]}\n                  >\n                    <Input type=\"number\" />\n                  </Form.Item>\n                </Col>\n                <Col span={12}>\n                  <Form.Item\n                    label=\"解决时间(小时)\"\n                    name={[\"sla_config\", \"resolution_time_hours\"]}\n                  >\n                    <Input type=\"number\" />\n                  </Form.Item>\n                </Col>\n              </Row>\n\n              <Form.Item\n                label=\"工作时间设置\"\n                name={[\"sla_config\", \"business_hours_only\"]}\n                valuePropName=\"checked\"\n              >\n                <input type=\"checkbox\" />\n                <Text className=\"ml-2\">仅工作时间</Text>\n              </Form.Item>\n            </TabPane>\n          </Tabs>\n        </Form>\n      </Modal>\n    </Layout>\n  );\n};\n\nexport default WorkflowDesignerPage;\n"],"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","ignoreList":[]}