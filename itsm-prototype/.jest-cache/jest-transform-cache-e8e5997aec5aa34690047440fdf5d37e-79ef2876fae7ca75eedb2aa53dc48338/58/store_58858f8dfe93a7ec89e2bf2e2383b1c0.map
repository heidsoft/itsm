{"version":3,"names":["useAuthStore","cov_1kadltx5qp","f","s","useTenantStore","_zustand","create","_middleware","persist","set","get","user","token","currentTenant","isAuthenticated","login","tenant","localStorage","setItem","_httpclient","httpClient","setToken","b","setTenantId","id","logout","removeItem","clearToken","setCurrentTenant","clearTenant","name","partialize","state","tenants","loading","error","setTenants","addTenant","updateTenant","updatedTenant","map","removeTenant","filter","setLoading","setError"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/store.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { Tenant } from './api-config';\nimport { httpClient } from './http-client';\n\ninterface User {\n  id: number;\n  username: string;\n  role: string;\n  tenant_id?: number;\n  email?: string;\n  name?: string;\n  department?: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  currentTenant: Tenant | null;\n  isAuthenticated: boolean;\n  login: (user: User, token: string, tenant?: Tenant) => void;\n  logout: () => void;\n  setCurrentTenant: (tenant: Tenant) => void;\n  clearTenant: () => void;\n}\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set, get) => ({\n      user: null,\n      token: null,\n      currentTenant: null,\n      isAuthenticated: false,\n      login: (user, token, tenant) => {\n        set({ user, token, isAuthenticated: true, currentTenant: tenant });\n        // 统一使用 access_token 作为键名\n        localStorage.setItem('access_token', token);\n        httpClient.setToken(token);\n        if (tenant) {\n          httpClient.setTenantId(tenant.id);\n        }\n      },\n      logout: () => {\n        set({ user: null, token: null, isAuthenticated: false, currentTenant: null });\n        // 清除所有可能的 token 键名\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('current_tenant_id');\n        httpClient.clearToken();\n        httpClient.setTenantId(null);\n      },\n      setCurrentTenant: (tenant) => {\n        set({ currentTenant: tenant });\n        httpClient.setTenantId(tenant.id);\n      },\n      clearTenant: () => {\n        set({ currentTenant: null });\n        httpClient.setTenantId(null);\n      },\n    }),\n    {\n      name: 'auth-storage',\n      partialize: (state) => ({ \n        user: state.user, \n        token: state.token, \n        currentTenant: state.currentTenant \n      }),\n    }\n  )\n);\n\n// 租户管理状态\ninterface TenantState {\n  tenants: Tenant[];\n  loading: boolean;\n  error: string | null;\n  setTenants: (tenants: Tenant[]) => void;\n  addTenant: (tenant: Tenant) => void;\n  updateTenant: (id: number, tenant: Partial<Tenant>) => void;\n  removeTenant: (id: number) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n}\n\nexport const useTenantStore = create<TenantState>((set) => ({\n  tenants: [],\n  loading: false,\n  error: null,\n  setTenants: (tenants) => set({ tenants }),\n  addTenant: (tenant) => set((state) => ({ tenants: [...state.tenants, tenant] })),\n  updateTenant: (id, updatedTenant) => set((state) => ({\n    tenants: state.tenants.map((tenant) => \n      tenant.id === id ? { ...tenant, ...updatedTenant } : tenant\n    )\n  })),\n  removeTenant: (id) => set((state) => ({\n    tenants: state.tenants.filter((tenant) => tenant.id !== id)\n  })),\n  setLoading: (loading) => set({ loading }),\n  setError: (error) => set({ error }),\n}));"],"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","ignoreList":[]}