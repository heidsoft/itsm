b114ed33ed9a7270f1cc9e303087ca38
"use strict";

/* istanbul ignore next */
function cov_1kadltx5qp() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/store.ts";
  var hash = "828791db01490197c8b53749780f6c28b584a643";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/store.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 30
        }
      },
      "6": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "7": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 49
        }
      },
      "8": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 44
        }
      },
      "9": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 75,
          column: 3
        }
      },
      "10": {
        start: {
          line: 22,
          column: 82
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "11": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "12": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 56
        }
      },
      "13": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "14": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 39,
          column: 13
        }
      },
      "15": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "16": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "17": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 52
        }
      },
      "18": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 50
        }
      },
      "19": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 53
        }
      },
      "20": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 57
        }
      },
      "21": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 48
        }
      },
      "22": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 53
        }
      },
      "23": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 59,
          column: 15
        }
      },
      "24": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 58
        }
      },
      "25": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 65,
          column: 15
        }
      },
      "26": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 53
        }
      },
      "27": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "28": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 104,
          column: 7
        }
      },
      "29": {
        start: {
          line: 76,
          column: 52
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "30": {
        start: {
          line: 80,
          column: 31
        },
        end: {
          line: 82,
          column: 14
        }
      },
      "31": {
        start: {
          line: 83,
          column: 29
        },
        end: {
          line: 88,
          column: 19
        }
      },
      "32": {
        start: {
          line: 83,
          column: 43
        },
        end: {
          line: 88,
          column: 17
        }
      },
      "33": {
        start: {
          line: 89,
          column: 43
        },
        end: {
          line: 94,
          column: 19
        }
      },
      "34": {
        start: {
          line: 89,
          column: 57
        },
        end: {
          line: 94,
          column: 17
        }
      },
      "35": {
        start: {
          line: 90,
          column: 57
        },
        end: {
          line: 93,
          column: 34
        }
      },
      "36": {
        start: {
          line: 95,
          column: 28
        },
        end: {
          line: 97,
          column: 19
        }
      },
      "37": {
        start: {
          line: 95,
          column: 42
        },
        end: {
          line: 97,
          column: 17
        }
      },
      "38": {
        start: {
          line: 96,
          column: 60
        },
        end: {
          line: 96,
          column: 76
        }
      },
      "39": {
        start: {
          line: 98,
          column: 31
        },
        end: {
          line: 100,
          column: 14
        }
      },
      "40": {
        start: {
          line: 101,
          column: 27
        },
        end: {
          line: 103,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 19
          }
        },
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 15,
            column: 21
          }
        },
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 69
          },
          end: {
            line: 22,
            column: 70
          }
        },
        loc: {
          start: {
            line: 22,
            column: 82
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 16
          }
        },
        loc: {
          start: {
            line: 27,
            column: 38
          },
          end: {
            line: 40,
            column: 9
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 17
          }
        },
        loc: {
          start: {
            line: 41,
            column: 20
          },
          end: {
            line: 55,
            column: 9
          }
        },
        line: 41
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 56,
            column: 26
          },
          end: {
            line: 56,
            column: 27
          }
        },
        loc: {
          start: {
            line: 56,
            column: 36
          },
          end: {
            line: 61,
            column: 9
          }
        },
        line: 56
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 62,
            column: 21
          },
          end: {
            line: 62,
            column: 22
          }
        },
        loc: {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 67,
            column: 9
          }
        },
        line: 62
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 70,
            column: 17
          }
        },
        loc: {
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 70
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 76,
            column: 44
          },
          end: {
            line: 76,
            column: 45
          }
        },
        loc: {
          start: {
            line: 76,
            column: 52
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 76
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 80,
            column: 20
          },
          end: {
            line: 80,
            column: 21
          }
        },
        loc: {
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 82,
            column: 14
          }
        },
        line: 80
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 83,
            column: 20
          }
        },
        loc: {
          start: {
            line: 83,
            column: 29
          },
          end: {
            line: 88,
            column: 19
          }
        },
        line: 83
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 83,
            column: 33
          },
          end: {
            line: 83,
            column: 34
          }
        },
        loc: {
          start: {
            line: 83,
            column: 43
          },
          end: {
            line: 88,
            column: 17
          }
        },
        line: 83
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 89,
            column: 22
          },
          end: {
            line: 89,
            column: 23
          }
        },
        loc: {
          start: {
            line: 89,
            column: 43
          },
          end: {
            line: 94,
            column: 19
          }
        },
        line: 89
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 89,
            column: 47
          },
          end: {
            line: 89,
            column: 48
          }
        },
        loc: {
          start: {
            line: 89,
            column: 57
          },
          end: {
            line: 94,
            column: 17
          }
        },
        line: 89
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 90,
            column: 47
          },
          end: {
            line: 90,
            column: 48
          }
        },
        loc: {
          start: {
            line: 90,
            column: 57
          },
          end: {
            line: 93,
            column: 34
          }
        },
        line: 90
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 95,
            column: 22
          },
          end: {
            line: 95,
            column: 23
          }
        },
        loc: {
          start: {
            line: 95,
            column: 28
          },
          end: {
            line: 97,
            column: 19
          }
        },
        line: 95
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 95,
            column: 32
          },
          end: {
            line: 95,
            column: 33
          }
        },
        loc: {
          start: {
            line: 95,
            column: 42
          },
          end: {
            line: 97,
            column: 17
          }
        },
        line: 95
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 96,
            column: 50
          },
          end: {
            line: 96,
            column: 51
          }
        },
        loc: {
          start: {
            line: 96,
            column: 60
          },
          end: {
            line: 96,
            column: 76
          }
        },
        line: 96
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 98,
            column: 20
          },
          end: {
            line: 98,
            column: 21
          }
        },
        loc: {
          start: {
            line: 98,
            column: 31
          },
          end: {
            line: 100,
            column: 14
          }
        },
        line: 98
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 101,
            column: 18
          },
          end: {
            line: 101,
            column: 19
          }
        },
        loc: {
          start: {
            line: 101,
            column: 27
          },
          end: {
            line: 103,
            column: 14
          }
        },
        line: 101
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 90,
            column: 57
          },
          end: {
            line: 93,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 76
          },
          end: {
            line: 93,
            column: 25
          }
        }, {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 34
          }
        }],
        line: 90
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/store.ts"],
      sourcesContent: ["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { Tenant } from './api-config';\nimport { httpClient } from './http-client';\n\ninterface User {\n  id: number;\n  username: string;\n  role: string;\n  tenant_id?: number;\n  email?: string;\n  name?: string;\n  department?: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  currentTenant: Tenant | null;\n  isAuthenticated: boolean;\n  login: (user: User, token: string, tenant?: Tenant) => void;\n  logout: () => void;\n  setCurrentTenant: (tenant: Tenant) => void;\n  clearTenant: () => void;\n}\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set, get) => ({\n      user: null,\n      token: null,\n      currentTenant: null,\n      isAuthenticated: false,\n      login: (user, token, tenant) => {\n        set({ user, token, isAuthenticated: true, currentTenant: tenant });\n        // \u7EDF\u4E00\u4F7F\u7528 access_token \u4F5C\u4E3A\u952E\u540D\n        localStorage.setItem('access_token', token);\n        httpClient.setToken(token);\n        if (tenant) {\n          httpClient.setTenantId(tenant.id);\n        }\n      },\n      logout: () => {\n        set({ user: null, token: null, isAuthenticated: false, currentTenant: null });\n        // \u6E05\u9664\u6240\u6709\u53EF\u80FD\u7684 token \u952E\u540D\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('current_tenant_id');\n        httpClient.clearToken();\n        httpClient.setTenantId(null);\n      },\n      setCurrentTenant: (tenant) => {\n        set({ currentTenant: tenant });\n        httpClient.setTenantId(tenant.id);\n      },\n      clearTenant: () => {\n        set({ currentTenant: null });\n        httpClient.setTenantId(null);\n      },\n    }),\n    {\n      name: 'auth-storage',\n      partialize: (state) => ({ \n        user: state.user, \n        token: state.token, \n        currentTenant: state.currentTenant \n      }),\n    }\n  )\n);\n\n// \u79DF\u6237\u7BA1\u7406\u72B6\u6001\ninterface TenantState {\n  tenants: Tenant[];\n  loading: boolean;\n  error: string | null;\n  setTenants: (tenants: Tenant[]) => void;\n  addTenant: (tenant: Tenant) => void;\n  updateTenant: (id: number, tenant: Partial<Tenant>) => void;\n  removeTenant: (id: number) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n}\n\nexport const useTenantStore = create<TenantState>((set) => ({\n  tenants: [],\n  loading: false,\n  error: null,\n  setTenants: (tenants) => set({ tenants }),\n  addTenant: (tenant) => set((state) => ({ tenants: [...state.tenants, tenant] })),\n  updateTenant: (id, updatedTenant) => set((state) => ({\n    tenants: state.tenants.map((tenant) => \n      tenant.id === id ? { ...tenant, ...updatedTenant } : tenant\n    )\n  })),\n  removeTenant: (id) => set((state) => ({\n    tenants: state.tenants.filter((tenant) => tenant.id !== id)\n  })),\n  setLoading: (loading) => set({ loading }),\n  setError: (error) => set({ error }),\n}));"],
      names: ["useAuthStore", "useTenantStore", "create", "persist", "set", "get", "user", "token", "currentTenant", "isAuthenticated", "login", "tenant", "localStorage", "setItem", "httpClient", "setToken", "setTenantId", "id", "logout", "removeItem", "clearToken", "setCurrentTenant", "clearTenant", "name", "partialize", "state", "tenants", "loading", "error", "setTenants", "addTenant", "updateTenant", "updatedTenant", "map", "removeTenant", "filter", "setLoading", "setError"],
      mappings: ";;;;;;;;;;;IA0BaA,YAAY;eAAZA;;IA2DAC,cAAc;eAAdA;;;yBArFU;4BACC;4BAEG;AAuBpB,MAAMD,eAAeE,IAAAA,eAAM,IAChCC,IAAAA,mBAAO,EACL,CAACC,KAAKC,MAAS,CAAA;QACbC,MAAM;QACNC,OAAO;QACPC,eAAe;QACfC,iBAAiB;QACjBC,OAAO,CAACJ,MAAMC,OAAOI;YACnBP,IAAI;gBAAEE;gBAAMC;gBAAOE,iBAAiB;gBAAMD,eAAeG;YAAO;YAChE,yBAAyB;YACzBC,aAAaC,OAAO,CAAC,gBAAgBN;YACrCO,sBAAU,CAACC,QAAQ,CAACR;YACpB,IAAII,QAAQ;gBACVG,sBAAU,CAACE,WAAW,CAACL,OAAOM,EAAE;YAClC;QACF;QACAC,QAAQ;YACNd,IAAI;gBAAEE,MAAM;gBAAMC,OAAO;gBAAME,iBAAiB;gBAAOD,eAAe;YAAK;YAC3E,mBAAmB;YACnBI,aAAaO,UAAU,CAAC;YACxBP,aAAaO,UAAU,CAAC;YACxBP,aAAaO,UAAU,CAAC;YACxBP,aAAaO,UAAU,CAAC;YACxBL,sBAAU,CAACM,UAAU;YACrBN,sBAAU,CAACE,WAAW,CAAC;QACzB;QACAK,kBAAkB,CAACV;YACjBP,IAAI;gBAAEI,eAAeG;YAAO;YAC5BG,sBAAU,CAACE,WAAW,CAACL,OAAOM,EAAE;QAClC;QACAK,aAAa;YACXlB,IAAI;gBAAEI,eAAe;YAAK;YAC1BM,sBAAU,CAACE,WAAW,CAAC;QACzB;IACF,CAAA,GACA;IACEO,MAAM;IACNC,YAAY,CAACC,QAAW,CAAA;YACtBnB,MAAMmB,MAAMnB,IAAI;YAChBC,OAAOkB,MAAMlB,KAAK;YAClBC,eAAeiB,MAAMjB,aAAa;QACpC,CAAA;AACF;AAiBG,MAAMP,iBAAiBC,IAAAA,eAAM,EAAc,CAACE,MAAS,CAAA;QAC1DsB,SAAS,EAAE;QACXC,SAAS;QACTC,OAAO;QACPC,YAAY,CAACH,UAAYtB,IAAI;gBAAEsB;YAAQ;QACvCI,WAAW,CAACnB,SAAWP,IAAI,CAACqB,QAAW,CAAA;oBAAEC,SAAS;2BAAID,MAAMC,OAAO;wBAAEf;qBAAO;gBAAC,CAAA;QAC7EoB,cAAc,CAACd,IAAIe,gBAAkB5B,IAAI,CAACqB,QAAW,CAAA;oBACnDC,SAASD,MAAMC,OAAO,CAACO,GAAG,CAAC,CAACtB,SAC1BA,OAAOM,EAAE,KAAKA,KAAK;4BAAE,GAAGN,MAAM;4BAAE,GAAGqB,aAAa;wBAAC,IAAIrB;gBAEzD,CAAA;QACAuB,cAAc,CAACjB,KAAOb,IAAI,CAACqB,QAAW,CAAA;oBACpCC,SAASD,MAAMC,OAAO,CAACS,MAAM,CAAC,CAACxB,SAAWA,OAAOM,EAAE,KAAKA;gBAC1D,CAAA;QACAmB,YAAY,CAACT,UAAYvB,IAAI;gBAAEuB;YAAQ;QACvCU,UAAU,CAACT,QAAUxB,IAAI;gBAAEwB;YAAM;IACnC,CAAA"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "828791db01490197c8b53749780f6c28b584a643"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kadltx5qp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kadltx5qp();
cov_1kadltx5qp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1kadltx5qp().f[0]++;
  cov_1kadltx5qp().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1kadltx5qp().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1kadltx5qp().s[3]++;
_export(exports, {
  useAuthStore: function () {
    /* istanbul ignore next */
    cov_1kadltx5qp().f[1]++;
    cov_1kadltx5qp().s[4]++;
    return useAuthStore;
  },
  useTenantStore: function () {
    /* istanbul ignore next */
    cov_1kadltx5qp().f[2]++;
    cov_1kadltx5qp().s[5]++;
    return useTenantStore;
  }
});
const _zustand =
/* istanbul ignore next */
(cov_1kadltx5qp().s[6]++, require("zustand"));
const _middleware =
/* istanbul ignore next */
(cov_1kadltx5qp().s[7]++, require("zustand/middleware"));
const _httpclient =
/* istanbul ignore next */
(cov_1kadltx5qp().s[8]++, require("./http-client"));
const useAuthStore =
/* istanbul ignore next */
(cov_1kadltx5qp().s[9]++, (0, _zustand.create)()((0, _middleware.persist)((set, get) => {
  /* istanbul ignore next */
  cov_1kadltx5qp().f[3]++;
  cov_1kadltx5qp().s[10]++;
  return {
    user: null,
    token: null,
    currentTenant: null,
    isAuthenticated: false,
    login: (user, token, tenant) => {
      /* istanbul ignore next */
      cov_1kadltx5qp().f[4]++;
      cov_1kadltx5qp().s[11]++;
      set({
        user,
        token,
        isAuthenticated: true,
        currentTenant: tenant
      });
      // 统一使用 access_token 作为键名
      /* istanbul ignore next */
      cov_1kadltx5qp().s[12]++;
      localStorage.setItem('access_token', token);
      /* istanbul ignore next */
      cov_1kadltx5qp().s[13]++;
      _httpclient.httpClient.setToken(token);
      /* istanbul ignore next */
      cov_1kadltx5qp().s[14]++;
      if (tenant) {
        /* istanbul ignore next */
        cov_1kadltx5qp().b[0][0]++;
        cov_1kadltx5qp().s[15]++;
        _httpclient.httpClient.setTenantId(tenant.id);
      } else
      /* istanbul ignore next */
      {
        cov_1kadltx5qp().b[0][1]++;
      }
    },
    logout: () => {
      /* istanbul ignore next */
      cov_1kadltx5qp().f[5]++;
      cov_1kadltx5qp().s[16]++;
      set({
        user: null,
        token: null,
        isAuthenticated: false,
        currentTenant: null
      });
      // 清除所有可能的 token 键名
      /* istanbul ignore next */
      cov_1kadltx5qp().s[17]++;
      localStorage.removeItem('access_token');
      /* istanbul ignore next */
      cov_1kadltx5qp().s[18]++;
      localStorage.removeItem('auth_token');
      /* istanbul ignore next */
      cov_1kadltx5qp().s[19]++;
      localStorage.removeItem('refresh_token');
      /* istanbul ignore next */
      cov_1kadltx5qp().s[20]++;
      localStorage.removeItem('current_tenant_id');
      /* istanbul ignore next */
      cov_1kadltx5qp().s[21]++;
      _httpclient.httpClient.clearToken();
      /* istanbul ignore next */
      cov_1kadltx5qp().s[22]++;
      _httpclient.httpClient.setTenantId(null);
    },
    setCurrentTenant: tenant => {
      /* istanbul ignore next */
      cov_1kadltx5qp().f[6]++;
      cov_1kadltx5qp().s[23]++;
      set({
        currentTenant: tenant
      });
      /* istanbul ignore next */
      cov_1kadltx5qp().s[24]++;
      _httpclient.httpClient.setTenantId(tenant.id);
    },
    clearTenant: () => {
      /* istanbul ignore next */
      cov_1kadltx5qp().f[7]++;
      cov_1kadltx5qp().s[25]++;
      set({
        currentTenant: null
      });
      /* istanbul ignore next */
      cov_1kadltx5qp().s[26]++;
      _httpclient.httpClient.setTenantId(null);
    }
  };
}, {
  name: 'auth-storage',
  partialize: state => {
    /* istanbul ignore next */
    cov_1kadltx5qp().f[8]++;
    cov_1kadltx5qp().s[27]++;
    return {
      user: state.user,
      token: state.token,
      currentTenant: state.currentTenant
    };
  }
})));
const useTenantStore =
/* istanbul ignore next */
(cov_1kadltx5qp().s[28]++, (0, _zustand.create)(set => {
  /* istanbul ignore next */
  cov_1kadltx5qp().f[9]++;
  cov_1kadltx5qp().s[29]++;
  return {
    tenants: [],
    loading: false,
    error: null,
    setTenants: tenants => {
      /* istanbul ignore next */
      cov_1kadltx5qp().f[10]++;
      cov_1kadltx5qp().s[30]++;
      return set({
        tenants
      });
    },
    addTenant: tenant => {
      /* istanbul ignore next */
      cov_1kadltx5qp().f[11]++;
      cov_1kadltx5qp().s[31]++;
      return set(state => {
        /* istanbul ignore next */
        cov_1kadltx5qp().f[12]++;
        cov_1kadltx5qp().s[32]++;
        return {
          tenants: [...state.tenants, tenant]
        };
      });
    },
    updateTenant: (id, updatedTenant) => {
      /* istanbul ignore next */
      cov_1kadltx5qp().f[13]++;
      cov_1kadltx5qp().s[33]++;
      return set(state => {
        /* istanbul ignore next */
        cov_1kadltx5qp().f[14]++;
        cov_1kadltx5qp().s[34]++;
        return {
          tenants: state.tenants.map(tenant => {
            /* istanbul ignore next */
            cov_1kadltx5qp().f[15]++;
            cov_1kadltx5qp().s[35]++;
            return tenant.id === id ?
            /* istanbul ignore next */
            (cov_1kadltx5qp().b[1][0]++, {
              ...tenant,
              ...updatedTenant
            }) :
            /* istanbul ignore next */
            (cov_1kadltx5qp().b[1][1]++, tenant);
          })
        };
      });
    },
    removeTenant: id => {
      /* istanbul ignore next */
      cov_1kadltx5qp().f[16]++;
      cov_1kadltx5qp().s[36]++;
      return set(state => {
        /* istanbul ignore next */
        cov_1kadltx5qp().f[17]++;
        cov_1kadltx5qp().s[37]++;
        return {
          tenants: state.tenants.filter(tenant => {
            /* istanbul ignore next */
            cov_1kadltx5qp().f[18]++;
            cov_1kadltx5qp().s[38]++;
            return tenant.id !== id;
          })
        };
      });
    },
    setLoading: loading => {
      /* istanbul ignore next */
      cov_1kadltx5qp().f[19]++;
      cov_1kadltx5qp().s[39]++;
      return set({
        loading
      });
    },
    setError: error => {
      /* istanbul ignore next */
      cov_1kadltx5qp().f[20]++;
      cov_1kadltx5qp().s[40]++;
      return set({
        error
      });
    }
  };
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,