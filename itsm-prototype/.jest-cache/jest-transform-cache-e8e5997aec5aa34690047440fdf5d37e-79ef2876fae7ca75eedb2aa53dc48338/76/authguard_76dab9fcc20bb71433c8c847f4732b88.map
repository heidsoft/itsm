{"version":3,"names":["cov_txn8ptpip","actualCoverage","s","AdminGuard","f","AuthGuard","ConditionalGuard","OperationGuard","PermissionGuard","RoleGuard","SuperAdminGuard","withAdmin","withAuth","withPermission","withRole","children","requiredPermissions","requiredRoles","fallbackPath","b","showFallback","router","_navigation","useRouter","isAuthenticated","_store","useAuthStore","checkRoutePermission","_usepermissions","useRoutePermissions","_jsxruntime","jsx","LoginRequired","onLogin","push","AccessDenied","Fragment","fallback","requireAll","hasAnyRole","hasAllRoles","usePermissions","hasAccess","resource","action","hasPermission","isAdmin","isSuperAdmin","condition","className","jsxs","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","window","history","back","Component","AuthenticatedComponent","props","displayName","name","PermissionComponent","RoleComponent","AdminComponent"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/components/auth-guard.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAuthStore } from '../../app/lib/store';\nimport { usePermissions, useRoutePermissions } from '../hooks/use-permissions';\nimport { RoutePermission } from '../router/route-config';\n\ninterface AuthGuardProps {\n  children: React.ReactNode;\n  requiredPermissions?: RoutePermission[];\n  requiredRoles?: string[];\n  fallbackPath?: string;\n  showFallback?: boolean;\n}\n\n/**\n * 认证守卫组件\n * 用于保护需要认证的路由和组件\n */\nexport const AuthGuard: React.FC<AuthGuardProps> = ({\n  children,\n  requiredPermissions,\n  requiredRoles,\n  fallbackPath = '/login',\n  showFallback = false,\n}) => {\n  const router = useRouter();\n  const { isAuthenticated } = useAuthStore();\n  const { checkRoutePermission } = useRoutePermissions();\n\n  // 检查是否已认证\n  if (!isAuthenticated) {\n    if (showFallback) {\n      return <LoginRequired onLogin={() => router.push(fallbackPath)} />;\n    }\n    router.push(fallbackPath);\n    return null;\n  }\n\n  // 检查权限\n  if (!checkRoutePermission(requiredPermissions, requiredRoles)) {\n    if (showFallback) {\n      return <AccessDenied />;\n    }\n    router.push('/unauthorized');\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\n/**\n * 权限守卫组件\n * 仅检查权限，不检查认证状态\n */\ninterface PermissionGuardProps {\n  children: React.ReactNode;\n  requiredPermissions?: RoutePermission[];\n  requiredRoles?: string[];\n  fallback?: React.ReactNode;\n  showFallback?: boolean;\n}\n\nexport const PermissionGuard: React.FC<PermissionGuardProps> = ({\n  children,\n  requiredPermissions,\n  requiredRoles,\n  fallback,\n  showFallback = true,\n}) => {\n  const { checkRoutePermission } = useRoutePermissions();\n\n  // 检查权限\n  if (!checkRoutePermission(requiredPermissions, requiredRoles)) {\n    if (showFallback) {\n      return fallback || <AccessDenied />;\n    }\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\n/**\n * 角色守卫组件\n * 仅检查角色权限\n */\ninterface RoleGuardProps {\n  children: React.ReactNode;\n  requiredRoles: string[];\n  requireAll?: boolean; // 是否需要所有角色\n  fallback?: React.ReactNode;\n  showFallback?: boolean;\n}\n\nexport const RoleGuard: React.FC<RoleGuardProps> = ({\n  children,\n  requiredRoles,\n  requireAll = false,\n  fallback,\n  showFallback = true,\n}) => {\n  const { hasAnyRole, hasAllRoles } = usePermissions();\n\n  // 检查角色权限\n  const hasAccess = requireAll \n    ? hasAllRoles(requiredRoles)\n    : hasAnyRole(requiredRoles);\n\n  if (!hasAccess) {\n    if (showFallback) {\n      return fallback || <AccessDenied />;\n    }\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\n/**\n * 操作权限守卫组件\n * 用于保护特定的操作按钮或功能\n */\ninterface OperationGuardProps {\n  children: React.ReactNode;\n  resource: string;\n  action: string;\n  fallback?: React.ReactNode;\n  showFallback?: boolean;\n}\n\nexport const OperationGuard: React.FC<OperationGuardProps> = ({\n  children,\n  resource,\n  action,\n  fallback,\n  showFallback = false,\n}) => {\n  const { hasPermission } = usePermissions();\n\n  if (!hasPermission(resource, action)) {\n    if (showFallback && fallback) {\n      return <>{fallback}</>;\n    }\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\n/**\n * 管理员守卫组件\n * 仅管理员可访问\n */\ninterface AdminGuardProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n  showFallback?: boolean;\n}\n\nexport const AdminGuard: React.FC<AdminGuardProps> = ({\n  children,\n  fallback,\n  showFallback = true,\n}) => {\n  const { isAdmin } = usePermissions();\n\n  if (!isAdmin()) {\n    if (showFallback) {\n      return fallback || <AccessDenied />;\n    }\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\n/**\n * 超级管理员守卫组件\n * 仅超级管理员可访问\n */\ninterface SuperAdminGuardProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n  showFallback?: boolean;\n}\n\nexport const SuperAdminGuard: React.FC<SuperAdminGuardProps> = ({\n  children,\n  fallback,\n  showFallback = true,\n}) => {\n  const { isSuperAdmin } = usePermissions();\n\n  if (!isSuperAdmin()) {\n    if (showFallback) {\n      return fallback || <AccessDenied />;\n    }\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\n/**\n * 条件守卫组件\n * 根据自定义条件显示内容\n */\ninterface ConditionalGuardProps {\n  children: React.ReactNode;\n  condition: boolean;\n  fallback?: React.ReactNode;\n  showFallback?: boolean;\n}\n\nexport const ConditionalGuard: React.FC<ConditionalGuardProps> = ({\n  children,\n  condition,\n  fallback,\n  showFallback = false,\n}) => {\n  if (!condition) {\n    if (showFallback && fallback) {\n      return <>{fallback}</>;\n    }\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\n// 默认的访问拒绝组件\nconst AccessDenied: React.FC = () => (\n  <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n    <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-6 text-center\">\n      <div className=\"w-16 h-16 mx-auto mb-4 bg-red-100 rounded-full flex items-center justify-center\">\n        <svg\n          className=\"w-8 h-8 text-red-600\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\"\n          />\n        </svg>\n      </div>\n      <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">访问被拒绝</h2>\n      <p className=\"text-gray-600 mb-4\">\n        您没有权限访问此页面或执行此操作。\n      </p>\n      <button\n        onClick={() => window.history.back()}\n        className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n      >\n        返回上一页\n      </button>\n    </div>\n  </div>\n);\n\n// 登录要求组件\ninterface LoginRequiredProps {\n  onLogin: () => void;\n}\n\nconst LoginRequired: React.FC<LoginRequiredProps> = ({ onLogin }) => (\n  <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n    <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-6 text-center\">\n      <div className=\"w-16 h-16 mx-auto mb-4 bg-blue-100 rounded-full flex items-center justify-center\">\n        <svg\n          className=\"w-8 h-8 text-blue-600\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n          />\n        </svg>\n      </div>\n      <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">需要登录</h2>\n      <p className=\"text-gray-600 mb-4\">\n        请先登录以访问此页面。\n      </p>\n      <button\n        onClick={onLogin}\n        className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n      >\n        前往登录\n      </button>\n    </div>\n  </div>\n);\n\n// 权限检查工具函数\nexport const withAuth = <P extends object>(\n  Component: React.ComponentType<P>,\n  requiredPermissions?: RoutePermission[],\n  requiredRoles?: string[]\n) => {\n  const AuthenticatedComponent: React.FC<P> = (props) => (\n    <AuthGuard\n      requiredPermissions={requiredPermissions}\n      requiredRoles={requiredRoles}\n    >\n      <Component {...props} />\n    </AuthGuard>\n  );\n\n  AuthenticatedComponent.displayName = `withAuth(${Component.displayName || Component.name})`;\n  return AuthenticatedComponent;\n};\n\n// 权限检查高阶组件\nexport const withPermission = <P extends object>(\n  Component: React.ComponentType<P>,\n  requiredPermissions?: RoutePermission[],\n  requiredRoles?: string[]\n) => {\n  const PermissionComponent: React.FC<P> = (props) => (\n    <PermissionGuard\n      requiredPermissions={requiredPermissions}\n      requiredRoles={requiredRoles}\n    >\n      <Component {...props} />\n    </PermissionGuard>\n  );\n\n  PermissionComponent.displayName = `withPermission(${Component.displayName || Component.name})`;\n  return PermissionComponent;\n};\n\n// 角色检查高阶组件\nexport const withRole = <P extends object>(\n  Component: React.ComponentType<P>,\n  requiredRoles: string[],\n  requireAll = false\n) => {\n  const RoleComponent: React.FC<P> = (props) => (\n    <RoleGuard\n      requiredRoles={requiredRoles}\n      requireAll={requireAll}\n    >\n      <Component {...props} />\n    </RoleGuard>\n  );\n\n  RoleComponent.displayName = `withRole(${Component.displayName || Component.name})`;\n  return RoleComponent;\n};\n\n// 管理员检查高阶组件\nexport const withAdmin = <P extends object>(\n  Component: React.ComponentType<P>\n) => {\n  const AdminComponent: React.FC<P> = (props) => (\n    <AdminGuard>\n      <Component {...props} />\n    </AdminGuard>\n  );\n\n  AdminComponent.displayName = `withAdmin(${Component.displayName || Component.name})`;\n  return AdminComponent;\n};"],"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","ignoreList":[]}