4c5266b585dd8b8a5257397b0761ef53
"use client";
"use strict";

/* istanbul ignore next */
function cov_2kzk1c5svw() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/hooks/useDashboardData.ts";
  var hash = "765bfd9ec12125b57e32bc99af8a4d4d04709106";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/hooks/useDashboardData.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 24
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "6": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "7": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "8": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "9": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 36
        }
      },
      "10": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 28
        }
      },
      "11": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "12": {
        start: {
          line: 28,
          column: 14
        },
        end: {
          line: 28,
          column: 67
        }
      },
      "13": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 67
        }
      },
      "14": {
        start: {
          line: 28,
          column: 43
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "15": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 143,
          column: 1
        }
      },
      "16": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "17": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "18": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "19": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 38
        }
      },
      "20": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 134,
          column: 10
        }
      },
      "21": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "22": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 86
        }
      },
      "23": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 56
        }
      },
      "24": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 50
        }
      },
      "25": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 20
        }
      },
      "26": {
        start: {
          line: 145,
          column: 27
        },
        end: {
          line: 147,
          column: 1
        }
      },
      "27": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 28
        }
      },
      "28": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 311,
          column: 1
        }
      },
      "29": {
        start: {
          line: 149,
          column: 28
        },
        end: {
          line: 149,
          column: 54
        }
      },
      "30": {
        start: {
          line: 150,
          column: 34
        },
        end: {
          line: 150,
          column: 61
        }
      },
      "31": {
        start: {
          line: 151,
          column: 30
        },
        end: {
          line: 151,
          column: 56
        }
      },
      "32": {
        start: {
          line: 152,
          column: 42
        },
        end: {
          line: 152,
          column: 68
        }
      },
      "33": {
        start: {
          line: 153,
          column: 40
        },
        end: {
          line: 153,
          column: 63
        }
      },
      "34": {
        start: {
          line: 155,
          column: 40
        },
        end: {
          line: 155,
          column: 93
        }
      },
      "35": {
        start: {
          line: 157,
          column: 44
        },
        end: {
          line: 160,
          column: 6
        }
      },
      "36": {
        start: {
          line: 161,
          column: 31
        },
        end: {
          line: 161,
          column: 55
        }
      },
      "37": {
        start: {
          line: 162,
          column: 35
        },
        end: {
          line: 162,
          column: 59
        }
      },
      "38": {
        start: {
          line: 163,
          column: 29
        },
        end: {
          line: 163,
          column: 53
        }
      },
      "39": {
        start: {
          line: 164,
          column: 21
        },
        end: {
          line: 229,
          column: 6
        }
      },
      "40": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "41": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 47
        }
      },
      "42": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "43": {
        start: {
          line: 171,
          column: 24
        },
        end: {
          line: 171,
          column: 34
        }
      },
      "44": {
        start: {
          line: 172,
          column: 29
        },
        end: {
          line: 172,
          column: 55
        }
      },
      "45": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "46": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 78
        }
      },
      "47": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 41
        }
      },
      "48": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 63
        }
      },
      "49": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 34
        }
      },
      "50": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 31
        }
      },
      "51": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 23
        }
      },
      "52": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 41
        }
      },
      "53": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "54": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 29
        }
      },
      "55": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 27
        }
      },
      "56": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 29
        }
      },
      "57": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 63
        }
      },
      "58": {
        start: {
          line: 189,
          column: 34
        },
        end: {
          line: 189,
          column: 60
        }
      },
      "59": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "60": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 23
        }
      },
      "61": {
        start: {
          line: 194,
          column: 24
        },
        end: {
          line: 194,
          column: 34
        }
      },
      "62": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 35
        }
      },
      "63": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 42
        }
      },
      "64": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 201,
          column: 15
        }
      },
      "65": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 206,
          column: 20
        }
      },
      "66": {
        start: {
          line: 203,
          column: 37
        },
        end: {
          line: 206,
          column: 17
        }
      },
      "67": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "68": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 23
        }
      },
      "69": {
        start: {
          line: 211,
          column: 33
        },
        end: {
          line: 211,
          column: 78
        }
      },
      "70": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 35
        }
      },
      "71": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 44
        }
      },
      "72": {
        start: {
          line: 213,
          column: 34
        },
        end: {
          line: 213,
          column: 42
        }
      },
      "73": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 219,
          column: 13
        }
      },
      "74": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 62
        }
      },
      "75": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 217,
          column: 41
        }
      },
      "76": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 218,
          column: 63
        }
      },
      "77": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 30
        }
      },
      "78": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 46
        }
      },
      "79": {
        start: {
          line: 230,
          column: 24
        },
        end: {
          line: 234,
          column: 6
        }
      },
      "80": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 23
        }
      },
      "81": {
        start: {
          line: 235,
          column: 30
        },
        end: {
          line: 242,
          column: 6
        }
      },
      "82": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 239,
          column: 16
        }
      },
      "83": {
        start: {
          line: 236,
          column: 33
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "84": {
        start: {
          line: 243,
          column: 23
        },
        end: {
          line: 249,
          column: 6
        }
      },
      "85": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 28
        }
      },
      "86": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 23
        }
      },
      "87": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 255,
          column: 7
        }
      },
      "88": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 19
        }
      },
      "89": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 278,
          column: 7
        }
      },
      "90": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "91": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 262,
          column: 13
        }
      },
      "92": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 260,
          column: 62
        }
      },
      "93": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 261,
          column: 54
        }
      },
      "94": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 19
        }
      },
      "95": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 268,
          column: 26
        }
      },
      "96": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 23
        }
      },
      "97": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 274,
          column: 10
        }
      },
      "98": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "99": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 271,
          column: 62
        }
      },
      "100": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 272,
          column: 54
        }
      },
      "101": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 289,
          column: 11
        }
      },
      "102": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 288,
          column: 10
        }
      },
      "103": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 284,
          column: 13
        }
      },
      "104": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 51
        }
      },
      "105": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 287,
          column: 13
        }
      },
      "106": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 286,
          column: 62
        }
      },
      "107": {
        start: {
          line: 290,
          column: 4
        },
        end: {
          line: 310,
          column: 6
        }
      },
      "108": {
        start: {
          line: 312,
          column: 17
        },
        end: {
          line: 312,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 13
          },
          end: {
            line: 13,
            column: 14
          }
        },
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 16,
            column: 23
          }
        },
        loc: {
          start: {
            line: 16,
            column: 33
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 14
          },
          end: {
            line: 28,
            column: 15
          }
        },
        loc: {
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 67
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 28,
            column: 33
          }
        },
        loc: {
          start: {
            line: 28,
            column: 43
          },
          end: {
            line: 28,
            column: 66
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 30,
            column: 24
          }
        },
        loc: {
          start: {
            line: 30,
            column: 47
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 145,
            column: 27
          },
          end: {
            line: 145,
            column: 28
          }
        },
        loc: {
          start: {
            line: 145,
            column: 37
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 145
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 148,
            column: 25
          },
          end: {
            line: 148,
            column: 26
          }
        },
        loc: {
          start: {
            line: 148,
            column: 29
          },
          end: {
            line: 311,
            column: 1
          }
        },
        line: 148
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 164,
            column: 45
          },
          end: {
            line: 164,
            column: 46
          }
        },
        loc: {
          start: {
            line: 164,
            column: 75
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 164
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 203,
            column: 28
          },
          end: {
            line: 203,
            column: 29
          }
        },
        loc: {
          start: {
            line: 203,
            column: 37
          },
          end: {
            line: 206,
            column: 17
          }
        },
        line: 203
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 213,
            column: 26
          },
          end: {
            line: 213,
            column: 27
          }
        },
        loc: {
          start: {
            line: 213,
            column: 34
          },
          end: {
            line: 213,
            column: 42
          }
        },
        line: 213
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 230,
            column: 48
          },
          end: {
            line: 230,
            column: 49
          }
        },
        loc: {
          start: {
            line: 230,
            column: 52
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 230
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 235,
            column: 54
          },
          end: {
            line: 235,
            column: 55
          }
        },
        loc: {
          start: {
            line: 235,
            column: 58
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 235
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 236,
            column: 24
          },
          end: {
            line: 236,
            column: 25
          }
        },
        loc: {
          start: {
            line: 236,
            column: 33
          },
          end: {
            line: 239,
            column: 13
          }
        },
        line: 236
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 243,
            column: 47
          },
          end: {
            line: 243,
            column: 48
          }
        },
        loc: {
          start: {
            line: 243,
            column: 51
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 243
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 251,
            column: 26
          },
          end: {
            line: 251,
            column: 27
          }
        },
        loc: {
          start: {
            line: 251,
            column: 30
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 251
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 257,
            column: 26
          },
          end: {
            line: 257,
            column: 27
          }
        },
        loc: {
          start: {
            line: 257,
            column: 30
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 257
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 266,
            column: 53
          },
          end: {
            line: 266,
            column: 54
          }
        },
        loc: {
          start: {
            line: 266,
            column: 57
          },
          end: {
            line: 268,
            column: 9
          }
        },
        line: 266
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 269,
            column: 15
          },
          end: {
            line: 269,
            column: 16
          }
        },
        loc: {
          start: {
            line: 269,
            column: 19
          },
          end: {
            line: 274,
            column: 9
          }
        },
        line: 269
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 280,
            column: 26
          },
          end: {
            line: 280,
            column: 27
          }
        },
        loc: {
          start: {
            line: 280,
            column: 30
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 280
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 281,
            column: 15
          },
          end: {
            line: 281,
            column: 16
          }
        },
        loc: {
          start: {
            line: 281,
            column: 19
          },
          end: {
            line: 288,
            column: 9
          }
        },
        line: 281
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 30,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 30,
            column: 43
          },
          end: {
            line: 30,
            column: 44
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 31
          }
        }, {
          start: {
            line: 35,
            column: 35
          },
          end: {
            line: 35,
            column: 51
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "4": {
        loc: {
          start: {
            line: 164,
            column: 52
          },
          end: {
            line: 164,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 164,
            column: 67
          },
          end: {
            line: 164,
            column: 72
          }
        }],
        line: 164
      },
      "5": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "6": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "7": {
        loc: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 170,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 170,
            column: 25
          }
        }, {
          start: {
            line: 170,
            column: 29
          },
          end: {
            line: 170,
            column: 39
          }
        }, {
          start: {
            line: 170,
            column: 43
          },
          end: {
            line: 170,
            column: 68
          }
        }],
        line: 170
      },
      "8": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "9": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "10": {
        loc: {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "11": {
        loc: {
          start: {
            line: 211,
            column: 33
          },
          end: {
            line: 211,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 211,
            column: 56
          },
          end: {
            line: 211,
            column: 67
          }
        }, {
          start: {
            line: 211,
            column: 70
          },
          end: {
            line: 211,
            column: 78
          }
        }],
        line: 211
      },
      "12": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "13": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 215,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 215,
            column: 26
          }
        }, {
          start: {
            line: 215,
            column: 30
          },
          end: {
            line: 215,
            column: 35
          }
        }],
        line: 215
      },
      "14": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "15": {
        loc: {
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 262,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 262,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "16": {
        loc: {
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "17": {
        loc: {
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 284,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 284,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "18": {
        loc: {
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 287,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 287,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "19": {
        loc: {
          start: {
            line: 301,
            column: 21
          },
          end: {
            line: 309,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 301,
            column: 34
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 309,
            column: 9
          }
        }],
        line: 301
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/hooks/useDashboardData.ts"],
      sourcesContent: ["\"use client\";\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { useLocalStorage, useSessionStorage } from './usePerformance';\n\n// \u7C7B\u578B\u5B9A\u4E49\nexport interface SystemAlert {\n  type: 'warning' | 'error' | 'info' | 'success';\n  message: string;\n  time: string;\n  severity: 'low' | 'medium' | 'high';\n}\n\nexport interface RecentTicket {\n  id: string;\n  title: string;\n  priority: 'high' | 'medium' | 'low';\n  status: 'processing' | 'pending' | 'resolved';\n  assignee: string;\n  time: string;\n  category: string;\n  sla: string;\n}\n\nexport interface RecentActivity {\n  operator: string;\n  action: string;\n  target: string;\n  time: string;\n  avatar: string;\n}\n\nexport interface KPIData {\n  totalTickets: { value: number; change: number; trend: 'up' | 'down' };\n  pendingEvents: { value: number; change: number; trend: 'up' | 'down' };\n  activeUsers: { value: number; change: number; trend: 'up' | 'down' };\n  avgResponseTime: { value: number; change: number; trend: 'up' | 'down' };\n  slaCompliance: { value: number; change: number; trend: 'up' | 'down' };\n  customerSatisfaction: { value: number; change: number; trend: 'up' | 'down' };\n}\n\nexport interface DashboardData {\n  systemAlerts: SystemAlert[];\n  recentTickets: RecentTicket[];\n  recentActivities: RecentActivity[];\n  kpiData: KPIData;\n}\n\n// \u7F13\u5B58\u914D\u7F6E\nconst CACHE_KEY = 'dashboard_data_cache';\nconst CACHE_DURATION = 5 * 60 * 1000; // 5\u5206\u949F\u7F13\u5B58\nconst MAX_RETRY_ATTEMPTS = 3;\nconst RETRY_DELAY = 1000; // 1\u79D2\u91CD\u8BD5\u5EF6\u8FDF\n\n// \u5EF6\u8FDF\u51FD\u6570\nconst delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n// \u5E26\u91CD\u8BD5\u7684API\u8C03\u7528\nconst fetchWithRetry = async (retryCount = 0): Promise<DashboardData> => {\n  try {\n    // \u6A21\u62DF\u7F51\u7EDC\u5EF6\u8FDF\n    await delay(Math.random() * 500 + 500); // 500-1000ms\u968F\u673A\u5EF6\u8FDF\n    \n    // \u6A21\u62DF\u5076\u5C14\u7684\u7F51\u7EDC\u9519\u8BEF\n    if (Math.random() < 0.1 && retryCount === 0) {\n      throw new Error('\u7F51\u7EDC\u8FDE\u63A5\u8D85\u65F6');\n    }\n  \n    return {\n      systemAlerts: [\n        {\n          type: \"warning\",\n          message: \"\u7CFB\u7EDF\u8D1F\u8F7D\u8F83\u9AD8\uFF0C\u5EFA\u8BAE\u68C0\u67E5\u670D\u52A1\u5668\u72B6\u6001\",\n          time: \"2\u5206\u949F\u524D\",\n          severity: \"medium\",\n        },\n      ],\n    recentTickets: [\n      {\n        id: \"T-2024-001\",\n        title: \"\u7F51\u7EDC\u8FDE\u63A5\u5F02\u5E38\",\n        priority: \"high\",\n        status: \"processing\",\n        assignee: \"\u5F20\u4E09\",\n        time: \"10\u5206\u949F\u524D\",\n        category: \"\u7F51\u7EDC\",\n        sla: \"4\u5C0F\u65F6\",\n      },\n      {\n        id: \"T-2024-002\",\n        title: \"\u8F6F\u4EF6\u5B89\u88C5\u5931\u8D25\",\n        priority: \"medium\",\n        status: \"pending\",\n        assignee: \"\u674E\u56DB\",\n        time: \"30\u5206\u949F\u524D\",\n        category: \"\u8F6F\u4EF6\",\n        sla: \"8\u5C0F\u65F6\",\n      },\n      {\n        id: \"T-2024-003\",\n        title: \"\u6570\u636E\u5E93\u6027\u80FD\u4F18\u5316\",\n        priority: \"low\",\n        status: \"resolved\",\n        assignee: \"\u738B\u4E94\",\n        time: \"2\u5C0F\u65F6\u524D\",\n        category: \"\u6570\u636E\u5E93\",\n        sla: \"24\u5C0F\u65F6\",\n      },\n    ],\n    recentActivities: [\n      {\n        operator: \"\u5F20\u4E09\",\n        action: \"\u5904\u7406\u4E86\u5DE5\u5355\",\n        target: \"T-2024-001\",\n        time: \"10\u5206\u949F\u524D\",\n        avatar: \"https://api.dicebear.com/7x/avataaars/svg?seed=\u5F20\u4E09\",\n      },\n      {\n        operator: \"\u7CFB\u7EDF\",\n        action: \"\u81EA\u52A8\u5206\u914D\u5DE5\u5355\",\n        target: \"T-2024-002\",\n        time: \"30\u5206\u949F\u524D\",\n        avatar: \"https://api.dicebear.com/7x/avataaars/svg?seed=\u7CFB\u7EDF\",\n      },\n      {\n        operator: \"\u674E\u56DB\",\n        action: \"\u66F4\u65B0\u4E86\u914D\u7F6E\",\n        target: \"\u6570\u636E\u5E93\u914D\u7F6E\",\n        time: \"1\u5C0F\u65F6\u524D\",\n        avatar: \"https://api.dicebear.com/7x/avataaars/svg?seed=\u674E\u56DB\",\n      },\n    ],\n      kpiData: {\n        totalTickets: { value: 1247 + Math.floor(Math.random() * 100), change: 12, trend: \"up\" },\n        pendingEvents: { value: 23 + Math.floor(Math.random() * 10), change: -5, trend: \"down\" },\n        activeUsers: { value: 156 + Math.floor(Math.random() * 20), change: 8, trend: \"up\" },\n        avgResponseTime: { value: 2.4 + Math.random() * 0.5, change: -15, trend: \"down\" },\n        slaCompliance: { value: 98.5 + Math.random() * 1, change: 2, trend: \"up\" },\n        customerSatisfaction: { value: 4.7 + Math.random() * 0.3, change: 0.3, trend: \"up\" },\n      },\n    };\n  } catch (error) {\n    if (retryCount < MAX_RETRY_ATTEMPTS - 1) {\n      console.warn(`API\u8C03\u7528\u5931\u8D25\uFF0C\u6B63\u5728\u91CD\u8BD5... (${retryCount + 1}/${MAX_RETRY_ATTEMPTS})`);\n      await delay(RETRY_DELAY * (retryCount + 1)); // \u9012\u589E\u5EF6\u8FDF\n      return fetchWithRetry(retryCount + 1);\n    }\n    throw error;\n  }\n};\n\n// \u4E3B\u8981\u7684\u6570\u636E\u83B7\u53D6\u51FD\u6570\nconst fetchDashboardData = async (): Promise<DashboardData> => {\n  return fetchWithRetry();\n};\n\nexport const useDashboardData = () => {\n  const [data, setData] = useState<DashboardData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\n  const [retryCount, setRetryCount] = useState(0);\n  \n  // \u4F7F\u7528\u672C\u5730\u5B58\u50A8\u7F13\u5B58\u6570\u636E\n  const [cachedData, setCachedData] = useLocalStorage<{\n    data: DashboardData;\n    timestamp: number;\n  } | null>(CACHE_KEY, null);\n  \n  // \u4F7F\u7528\u4F1A\u8BDD\u5B58\u50A8\u8BB0\u5F55\u5237\u65B0\u72B6\u6001\n  const [refreshState, setRefreshState] = useSessionStorage('dashboard_refresh_state', {\n    lastRefresh: 0,\n    autoRefreshEnabled: true,\n  });\n  \n  const abortControllerRef = useRef<AbortController | null>(null);\n  const autoRefreshIntervalRef = useRef<NodeJS.Timeout | null>(null);\n  const isInitialLoadRef = useRef(true);\n\n  const loadData = useCallback(async (forceRefresh = false) => {\n    // \u53D6\u6D88\u4E4B\u524D\u7684\u8BF7\u6C42\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n    }\n    \n    // \u68C0\u67E5\u7F13\u5B58\uFF08\u4EC5\u5728\u975E\u5F3A\u5236\u5237\u65B0\u65F6\uFF09\n    if (!forceRefresh && cachedData && !isInitialLoadRef.current) {\n      const now = Date.now();\n      const cacheAge = now - cachedData.timestamp;\n      \n      if (cacheAge < CACHE_DURATION) {\n        console.log('\u4F7F\u7528\u7F13\u5B58\u6570\u636E\uFF0C\u7F13\u5B58\u5E74\u9F84:', Math.round(cacheAge / 1000), '\u79D2');\n        setData(cachedData.data);\n        setLastUpdated(new Date(cachedData.timestamp));\n        setLoading(false);\n        setError(null);\n        return;\n      }\n    }\n    \n    // \u6807\u8BB0\u975E\u521D\u59CB\u52A0\u8F7D\n    isInitialLoadRef.current = false;\n    \n    try {\n      setLoading(true);\n      setError(null);\n      setRetryCount(0);\n      \n      abortControllerRef.current = new AbortController();\n      \n      const dashboardData = await fetchDashboardData();\n      \n      // \u68C0\u67E5\u8BF7\u6C42\u662F\u5426\u88AB\u53D6\u6D88\n      if (abortControllerRef.current?.signal.aborted) {\n        return;\n      }\n      \n      const now = Date.now();\n      setData(dashboardData);\n      setLastUpdated(new Date(now));\n      \n      // \u66F4\u65B0\u7F13\u5B58\n      setCachedData({\n        data: dashboardData,\n        timestamp: now,\n      });\n      \n      // \u66F4\u65B0\u5237\u65B0\u72B6\u6001\n      setRefreshState(prev => ({\n        ...prev,\n        lastRefresh: now,\n      }));\n      \n    } catch (err) {\n      if (abortControllerRef.current?.signal.aborted) {\n        return;\n      }\n      \n      const errorMessage = err instanceof Error ? err.message : '\u52A0\u8F7D\u6570\u636E\u5931\u8D25';\n      setError(errorMessage);\n      setRetryCount(prev => prev + 1);\n      \n      // \u5982\u679C\u6709\u7F13\u5B58\u6570\u636E\uFF0C\u5728\u9519\u8BEF\u65F6\u4ECD\u7136\u663E\u793A\u7F13\u5B58\u6570\u636E\n      if (cachedData && !data) {\n        console.warn('API\u8C03\u7528\u5931\u8D25\uFF0C\u4F7F\u7528\u7F13\u5B58\u6570\u636E:', errorMessage);\n        setData(cachedData.data);\n        setLastUpdated(new Date(cachedData.timestamp));\n      }\n    } finally {\n      setLoading(false);\n      abortControllerRef.current = null;\n    }\n  }, [cachedData, setCachedData, setRefreshState, data]);\n\n  const refreshData = useCallback(() => {\n    loadData(true); // \u5F3A\u5236\u5237\u65B0\uFF0C\u8DF3\u8FC7\u7F13\u5B58\n  }, [loadData]);\n  \n  const toggleAutoRefresh = useCallback(() => {\n    setRefreshState(prev => ({\n      ...prev,\n      autoRefreshEnabled: !prev.autoRefreshEnabled,\n    }));\n  }, [setRefreshState]);\n  \n  const clearCache = useCallback(() => {\n    setCachedData(null);\n    loadData(true);\n  }, [setCachedData, loadData]);\n\n  // \u521D\u59CB\u5316\u6570\u636E\u52A0\u8F7D\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n  \n  // \u81EA\u52A8\u5237\u65B0\u903B\u8F91\n  useEffect(() => {\n    if (!refreshState.autoRefreshEnabled) {\n      if (autoRefreshIntervalRef.current) {\n        clearInterval(autoRefreshIntervalRef.current);\n        autoRefreshIntervalRef.current = null;\n      }\n      return;\n    }\n    \n    // \u8BBE\u7F6E\u81EA\u52A8\u5237\u65B0\uFF0C\u6BCF5\u5206\u949F\u5237\u65B0\u4E00\u6B21\n    autoRefreshIntervalRef.current = setInterval(() => {\n      loadData();\n    }, 5 * 60 * 1000);\n    \n    return () => {\n      if (autoRefreshIntervalRef.current) {\n        clearInterval(autoRefreshIntervalRef.current);\n        autoRefreshIntervalRef.current = null;\n      }\n    };\n  }, [refreshState.autoRefreshEnabled, loadData]);\n  \n  // \u6E05\u7406\u51FD\u6570\n  useEffect(() => {\n    return () => {\n      if (abortControllerRef.current) {\n        abortControllerRef.current.abort();\n      }\n      if (autoRefreshIntervalRef.current) {\n        clearInterval(autoRefreshIntervalRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    data,\n    loading,\n    error,\n    lastUpdated,\n    refreshData,\n    retryCount,\n    autoRefreshEnabled: refreshState.autoRefreshEnabled,\n    toggleAutoRefresh,\n    clearCache,\n    // \u8BA1\u7B97\u7F13\u5B58\u72B6\u6001\n    cacheStatus: cachedData ? {\n      hasCache: true,\n      cacheAge: Date.now() - cachedData.timestamp,\n      isStale: Date.now() - cachedData.timestamp > CACHE_DURATION,\n    } : {\n      hasCache: false,\n      cacheAge: 0,\n      isStale: false,\n    },\n  };\n};\n\nexport default useDashboardData;"],
      names: ["useDashboardData", "CACHE_KEY", "CACHE_DURATION", "MAX_RETRY_ATTEMPTS", "RETRY_DELAY", "delay", "ms", "Promise", "resolve", "setTimeout", "fetchWithRetry", "retryCount", "Math", "random", "Error", "systemAlerts", "type", "message", "time", "severity", "recentTickets", "id", "title", "priority", "status", "assignee", "category", "sla", "recentActivities", "operator", "action", "target", "avatar", "kpiData", "totalTickets", "value", "floor", "change", "trend", "pendingEvents", "activeUsers", "avgResponseTime", "slaCompliance", "customerSatisfaction", "error", "console", "warn", "fetchDashboardData", "data", "setData", "useState", "loading", "setLoading", "setError", "lastUpdated", "setLastUpdated", "setRetryCount", "cachedData", "setCachedData", "useLocalStorage", "refreshState", "setRefreshState", "useSessionStorage", "lastRefresh", "autoRefreshEnabled", "abortControllerRef", "useRef", "autoRefreshIntervalRef", "isInitialLoadRef", "loadData", "useCallback", "forceRefresh", "current", "abort", "now", "Date", "cacheAge", "timestamp", "log", "round", "AbortController", "dashboardData", "signal", "aborted", "prev", "err", "errorMessage", "refreshData", "toggleAutoRefresh", "clearCache", "useEffect", "clearInterval", "setInterval", "cacheStatus", "hasCache", "isStale"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "765bfd9ec12125b57e32bc99af8a4d4d04709106"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2kzk1c5svw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2kzk1c5svw();
cov_2kzk1c5svw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2kzk1c5svw().f[0]++;
  cov_2kzk1c5svw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2kzk1c5svw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2kzk1c5svw().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_2kzk1c5svw().f[1]++;
    cov_2kzk1c5svw().s[4]++;
    return _default;
  },
  useDashboardData: function () {
    /* istanbul ignore next */
    cov_2kzk1c5svw().f[2]++;
    cov_2kzk1c5svw().s[5]++;
    return useDashboardData;
  }
});
const _react =
/* istanbul ignore next */
(cov_2kzk1c5svw().s[6]++, require("react"));
const _usePerformance =
/* istanbul ignore next */
(cov_2kzk1c5svw().s[7]++, require("./usePerformance"));
// 缓存配置
const CACHE_KEY =
/* istanbul ignore next */
(cov_2kzk1c5svw().s[8]++, 'dashboard_data_cache');
const CACHE_DURATION =
/* istanbul ignore next */
(cov_2kzk1c5svw().s[9]++, 5 * 60 * 1000); // 5分钟缓存
const MAX_RETRY_ATTEMPTS =
/* istanbul ignore next */
(cov_2kzk1c5svw().s[10]++, 3);
const RETRY_DELAY =
/* istanbul ignore next */
(cov_2kzk1c5svw().s[11]++, 1000); // 1秒重试延迟
// 延迟函数
/* istanbul ignore next */
cov_2kzk1c5svw().s[12]++;
const delay = ms => {
  /* istanbul ignore next */
  cov_2kzk1c5svw().f[3]++;
  cov_2kzk1c5svw().s[13]++;
  return new Promise(resolve => {
    /* istanbul ignore next */
    cov_2kzk1c5svw().f[4]++;
    cov_2kzk1c5svw().s[14]++;
    return setTimeout(resolve, ms);
  });
};
// 带重试的API调用
/* istanbul ignore next */
cov_2kzk1c5svw().s[15]++;
const fetchWithRetry = async (retryCount =
/* istanbul ignore next */
(cov_2kzk1c5svw().b[0][0]++, 0)) => {
  /* istanbul ignore next */
  cov_2kzk1c5svw().f[5]++;
  cov_2kzk1c5svw().s[16]++;
  try {
    /* istanbul ignore next */
    cov_2kzk1c5svw().s[17]++;
    // 模拟网络延迟
    await delay(Math.random() * 500 + 500); // 500-1000ms随机延迟
    // 模拟偶尔的网络错误
    /* istanbul ignore next */
    cov_2kzk1c5svw().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_2kzk1c5svw().b[2][0]++, Math.random() < 0.1) &&
    /* istanbul ignore next */
    (cov_2kzk1c5svw().b[2][1]++, retryCount === 0)) {
      /* istanbul ignore next */
      cov_2kzk1c5svw().b[1][0]++;
      cov_2kzk1c5svw().s[19]++;
      throw new Error('网络连接超时');
    } else
    /* istanbul ignore next */
    {
      cov_2kzk1c5svw().b[1][1]++;
    }
    cov_2kzk1c5svw().s[20]++;
    return {
      systemAlerts: [{
        type: "warning",
        message: "系统负载较高，建议检查服务器状态",
        time: "2分钟前",
        severity: "medium"
      }],
      recentTickets: [{
        id: "T-2024-001",
        title: "网络连接异常",
        priority: "high",
        status: "processing",
        assignee: "张三",
        time: "10分钟前",
        category: "网络",
        sla: "4小时"
      }, {
        id: "T-2024-002",
        title: "软件安装失败",
        priority: "medium",
        status: "pending",
        assignee: "李四",
        time: "30分钟前",
        category: "软件",
        sla: "8小时"
      }, {
        id: "T-2024-003",
        title: "数据库性能优化",
        priority: "low",
        status: "resolved",
        assignee: "王五",
        time: "2小时前",
        category: "数据库",
        sla: "24小时"
      }],
      recentActivities: [{
        operator: "张三",
        action: "处理了工单",
        target: "T-2024-001",
        time: "10分钟前",
        avatar: "https://api.dicebear.com/7x/avataaars/svg?seed=张三"
      }, {
        operator: "系统",
        action: "自动分配工单",
        target: "T-2024-002",
        time: "30分钟前",
        avatar: "https://api.dicebear.com/7x/avataaars/svg?seed=系统"
      }, {
        operator: "李四",
        action: "更新了配置",
        target: "数据库配置",
        time: "1小时前",
        avatar: "https://api.dicebear.com/7x/avataaars/svg?seed=李四"
      }],
      kpiData: {
        totalTickets: {
          value: 1247 + Math.floor(Math.random() * 100),
          change: 12,
          trend: "up"
        },
        pendingEvents: {
          value: 23 + Math.floor(Math.random() * 10),
          change: -5,
          trend: "down"
        },
        activeUsers: {
          value: 156 + Math.floor(Math.random() * 20),
          change: 8,
          trend: "up"
        },
        avgResponseTime: {
          value: 2.4 + Math.random() * 0.5,
          change: -15,
          trend: "down"
        },
        slaCompliance: {
          value: 98.5 + Math.random() * 1,
          change: 2,
          trend: "up"
        },
        customerSatisfaction: {
          value: 4.7 + Math.random() * 0.3,
          change: 0.3,
          trend: "up"
        }
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2kzk1c5svw().s[21]++;
    if (retryCount < MAX_RETRY_ATTEMPTS - 1) {
      /* istanbul ignore next */
      cov_2kzk1c5svw().b[3][0]++;
      cov_2kzk1c5svw().s[22]++;
      console.warn(`API调用失败，正在重试... (${retryCount + 1}/${MAX_RETRY_ATTEMPTS})`);
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[23]++;
      await delay(RETRY_DELAY * (retryCount + 1)); // 递增延迟
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[24]++;
      return fetchWithRetry(retryCount + 1);
    } else
    /* istanbul ignore next */
    {
      cov_2kzk1c5svw().b[3][1]++;
    }
    cov_2kzk1c5svw().s[25]++;
    throw error;
  }
};
// 主要的数据获取函数
/* istanbul ignore next */
cov_2kzk1c5svw().s[26]++;
const fetchDashboardData = async () => {
  /* istanbul ignore next */
  cov_2kzk1c5svw().f[6]++;
  cov_2kzk1c5svw().s[27]++;
  return fetchWithRetry();
};
/* istanbul ignore next */
cov_2kzk1c5svw().s[28]++;
const useDashboardData = () => {
  /* istanbul ignore next */
  cov_2kzk1c5svw().f[7]++;
  const [data, setData] =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[29]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[30]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[31]++, (0, _react.useState)(null));
  const [lastUpdated, setLastUpdated] =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[32]++, (0, _react.useState)(null));
  const [retryCount, setRetryCount] =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[33]++, (0, _react.useState)(0));
  // 使用本地存储缓存数据
  const [cachedData, setCachedData] =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[34]++, (0, _usePerformance.useLocalStorage)(CACHE_KEY, null));
  // 使用会话存储记录刷新状态
  const [refreshState, setRefreshState] =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[35]++, (0, _usePerformance.useSessionStorage)('dashboard_refresh_state', {
    lastRefresh: 0,
    autoRefreshEnabled: true
  }));
  const abortControllerRef =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[36]++, (0, _react.useRef)(null));
  const autoRefreshIntervalRef =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[37]++, (0, _react.useRef)(null));
  const isInitialLoadRef =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[38]++, (0, _react.useRef)(true));
  const loadData =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[39]++, (0, _react.useCallback)(async (forceRefresh =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().b[4][0]++, false)) => {
    /* istanbul ignore next */
    cov_2kzk1c5svw().f[8]++;
    cov_2kzk1c5svw().s[40]++;
    // 取消之前的请求
    if (abortControllerRef.current) {
      /* istanbul ignore next */
      cov_2kzk1c5svw().b[5][0]++;
      cov_2kzk1c5svw().s[41]++;
      abortControllerRef.current.abort();
    } else
    /* istanbul ignore next */
    {
      cov_2kzk1c5svw().b[5][1]++;
    }
    // 检查缓存（仅在非强制刷新时）
    cov_2kzk1c5svw().s[42]++;
    if (
    /* istanbul ignore next */
    (cov_2kzk1c5svw().b[7][0]++, !forceRefresh) &&
    /* istanbul ignore next */
    (cov_2kzk1c5svw().b[7][1]++, cachedData) &&
    /* istanbul ignore next */
    (cov_2kzk1c5svw().b[7][2]++, !isInitialLoadRef.current)) {
      /* istanbul ignore next */
      cov_2kzk1c5svw().b[6][0]++;
      const now =
      /* istanbul ignore next */
      (cov_2kzk1c5svw().s[43]++, Date.now());
      const cacheAge =
      /* istanbul ignore next */
      (cov_2kzk1c5svw().s[44]++, now - cachedData.timestamp);
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[45]++;
      if (cacheAge < CACHE_DURATION) {
        /* istanbul ignore next */
        cov_2kzk1c5svw().b[8][0]++;
        cov_2kzk1c5svw().s[46]++;
        console.log('使用缓存数据，缓存年龄:', Math.round(cacheAge / 1000), '秒');
        /* istanbul ignore next */
        cov_2kzk1c5svw().s[47]++;
        setData(cachedData.data);
        /* istanbul ignore next */
        cov_2kzk1c5svw().s[48]++;
        setLastUpdated(new Date(cachedData.timestamp));
        /* istanbul ignore next */
        cov_2kzk1c5svw().s[49]++;
        setLoading(false);
        /* istanbul ignore next */
        cov_2kzk1c5svw().s[50]++;
        setError(null);
        /* istanbul ignore next */
        cov_2kzk1c5svw().s[51]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2kzk1c5svw().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2kzk1c5svw().b[6][1]++;
    }
    // 标记非初始加载
    cov_2kzk1c5svw().s[52]++;
    isInitialLoadRef.current = false;
    /* istanbul ignore next */
    cov_2kzk1c5svw().s[53]++;
    try {
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[54]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[55]++;
      setError(null);
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[56]++;
      setRetryCount(0);
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[57]++;
      abortControllerRef.current = new AbortController();
      const dashboardData =
      /* istanbul ignore next */
      (cov_2kzk1c5svw().s[58]++, await fetchDashboardData());
      // 检查请求是否被取消
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[59]++;
      if (abortControllerRef.current?.signal.aborted) {
        /* istanbul ignore next */
        cov_2kzk1c5svw().b[9][0]++;
        cov_2kzk1c5svw().s[60]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2kzk1c5svw().b[9][1]++;
      }
      const now =
      /* istanbul ignore next */
      (cov_2kzk1c5svw().s[61]++, Date.now());
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[62]++;
      setData(dashboardData);
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[63]++;
      setLastUpdated(new Date(now));
      // 更新缓存
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[64]++;
      setCachedData({
        data: dashboardData,
        timestamp: now
      });
      // 更新刷新状态
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[65]++;
      setRefreshState(prev => {
        /* istanbul ignore next */
        cov_2kzk1c5svw().f[9]++;
        cov_2kzk1c5svw().s[66]++;
        return {
          ...prev,
          lastRefresh: now
        };
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[67]++;
      if (abortControllerRef.current?.signal.aborted) {
        /* istanbul ignore next */
        cov_2kzk1c5svw().b[10][0]++;
        cov_2kzk1c5svw().s[68]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2kzk1c5svw().b[10][1]++;
      }
      const errorMessage =
      /* istanbul ignore next */
      (cov_2kzk1c5svw().s[69]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2kzk1c5svw().b[11][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2kzk1c5svw().b[11][1]++, '加载数据失败'));
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[70]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[71]++;
      setRetryCount(prev => {
        /* istanbul ignore next */
        cov_2kzk1c5svw().f[10]++;
        cov_2kzk1c5svw().s[72]++;
        return prev + 1;
      });
      // 如果有缓存数据，在错误时仍然显示缓存数据
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[73]++;
      if (
      /* istanbul ignore next */
      (cov_2kzk1c5svw().b[13][0]++, cachedData) &&
      /* istanbul ignore next */
      (cov_2kzk1c5svw().b[13][1]++, !data)) {
        /* istanbul ignore next */
        cov_2kzk1c5svw().b[12][0]++;
        cov_2kzk1c5svw().s[74]++;
        console.warn('API调用失败，使用缓存数据:', errorMessage);
        /* istanbul ignore next */
        cov_2kzk1c5svw().s[75]++;
        setData(cachedData.data);
        /* istanbul ignore next */
        cov_2kzk1c5svw().s[76]++;
        setLastUpdated(new Date(cachedData.timestamp));
      } else
      /* istanbul ignore next */
      {
        cov_2kzk1c5svw().b[12][1]++;
      }
    } finally {
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[77]++;
      setLoading(false);
      /* istanbul ignore next */
      cov_2kzk1c5svw().s[78]++;
      abortControllerRef.current = null;
    }
  }, [cachedData, setCachedData, setRefreshState, data]));
  const refreshData =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[79]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2kzk1c5svw().f[11]++;
    cov_2kzk1c5svw().s[80]++;
    loadData(true); // 强制刷新，跳过缓存
  }, [loadData]));
  const toggleAutoRefresh =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[81]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2kzk1c5svw().f[12]++;
    cov_2kzk1c5svw().s[82]++;
    setRefreshState(prev => {
      /* istanbul ignore next */
      cov_2kzk1c5svw().f[13]++;
      cov_2kzk1c5svw().s[83]++;
      return {
        ...prev,
        autoRefreshEnabled: !prev.autoRefreshEnabled
      };
    });
  }, [setRefreshState]));
  const clearCache =
  /* istanbul ignore next */
  (cov_2kzk1c5svw().s[84]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2kzk1c5svw().f[14]++;
    cov_2kzk1c5svw().s[85]++;
    setCachedData(null);
    /* istanbul ignore next */
    cov_2kzk1c5svw().s[86]++;
    loadData(true);
  }, [setCachedData, loadData]));
  // 初始化数据加载
  /* istanbul ignore next */
  cov_2kzk1c5svw().s[87]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2kzk1c5svw().f[15]++;
    cov_2kzk1c5svw().s[88]++;
    loadData();
  }, [loadData]);
  // 自动刷新逻辑
  /* istanbul ignore next */
  cov_2kzk1c5svw().s[89]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2kzk1c5svw().f[16]++;
    cov_2kzk1c5svw().s[90]++;
    if (!refreshState.autoRefreshEnabled) {
      /* istanbul ignore next */
      cov_2kzk1c5svw().b[14][0]++;
      cov_2kzk1c5svw().s[91]++;
      if (autoRefreshIntervalRef.current) {
        /* istanbul ignore next */
        cov_2kzk1c5svw().b[15][0]++;
        cov_2kzk1c5svw().s[92]++;
        clearInterval(autoRefreshIntervalRef.current);
        /* istanbul ignore next */
        cov_2kzk1c5svw().s[93]++;
        autoRefreshIntervalRef.current = null;
      } else
      /* istanbul ignore next */
      {
        cov_2kzk1c5svw().b[15][1]++;
      }
      cov_2kzk1c5svw().s[94]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2kzk1c5svw().b[14][1]++;
    }
    // 设置自动刷新，每5分钟刷新一次
    cov_2kzk1c5svw().s[95]++;
    autoRefreshIntervalRef.current = setInterval(() => {
      /* istanbul ignore next */
      cov_2kzk1c5svw().f[17]++;
      cov_2kzk1c5svw().s[96]++;
      loadData();
    }, 5 * 60 * 1000);
    /* istanbul ignore next */
    cov_2kzk1c5svw().s[97]++;
    return () => {
      /* istanbul ignore next */
      cov_2kzk1c5svw().f[18]++;
      cov_2kzk1c5svw().s[98]++;
      if (autoRefreshIntervalRef.current) {
        /* istanbul ignore next */
        cov_2kzk1c5svw().b[16][0]++;
        cov_2kzk1c5svw().s[99]++;
        clearInterval(autoRefreshIntervalRef.current);
        /* istanbul ignore next */
        cov_2kzk1c5svw().s[100]++;
        autoRefreshIntervalRef.current = null;
      } else
      /* istanbul ignore next */
      {
        cov_2kzk1c5svw().b[16][1]++;
      }
    };
  }, [refreshState.autoRefreshEnabled, loadData]);
  // 清理函数
  /* istanbul ignore next */
  cov_2kzk1c5svw().s[101]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2kzk1c5svw().f[19]++;
    cov_2kzk1c5svw().s[102]++;
    return () => {
      /* istanbul ignore next */
      cov_2kzk1c5svw().f[20]++;
      cov_2kzk1c5svw().s[103]++;
      if (abortControllerRef.current) {
        /* istanbul ignore next */
        cov_2kzk1c5svw().b[17][0]++;
        cov_2kzk1c5svw().s[104]++;
        abortControllerRef.current.abort();
      } else
      /* istanbul ignore next */
      {
        cov_2kzk1c5svw().b[17][1]++;
      }
      cov_2kzk1c5svw().s[105]++;
      if (autoRefreshIntervalRef.current) {
        /* istanbul ignore next */
        cov_2kzk1c5svw().b[18][0]++;
        cov_2kzk1c5svw().s[106]++;
        clearInterval(autoRefreshIntervalRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_2kzk1c5svw().b[18][1]++;
      }
    };
  }, []);
  /* istanbul ignore next */
  cov_2kzk1c5svw().s[107]++;
  return {
    data,
    loading,
    error,
    lastUpdated,
    refreshData,
    retryCount,
    autoRefreshEnabled: refreshState.autoRefreshEnabled,
    toggleAutoRefresh,
    clearCache,
    // 计算缓存状态
    cacheStatus: cachedData ?
    /* istanbul ignore next */
    (cov_2kzk1c5svw().b[19][0]++, {
      hasCache: true,
      cacheAge: Date.now() - cachedData.timestamp,
      isStale: Date.now() - cachedData.timestamp > CACHE_DURATION
    }) :
    /* istanbul ignore next */
    (cov_2kzk1c5svw().b[19][1]++, {
      hasCache: false,
      cacheAge: 0,
      isStale: false
    })
  };
};
const _default =
/* istanbul ignore next */
(cov_2kzk1c5svw().s[108]++, useDashboardData);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,