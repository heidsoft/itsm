db55fb0de7adf1e9b45765560f7f41a0
'use client';
"use strict";

/* istanbul ignore next */
function cov_2ek1ea9nae() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/TestRunner.tsx";
  var hash = "9e250e9207c1de1f694b3aea3d16d2ab5542c76e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/TestRunner.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 26
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 14
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "9": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "11": {
        start: {
          line: 25,
          column: 39
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "12": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "13": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "14": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 20
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "18": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "19": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "20": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "21": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "22": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "23": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "24": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 88
        }
      },
      "25": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "26": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "27": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "28": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "29": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "30": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "31": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "32": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "33": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "34": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "35": {
        start: {
          line: 65,
          column: 18
        },
        end: {
          line: 65,
          column: 32
        }
      },
      "36": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 188,
          column: 1
        }
      },
      "37": {
        start: {
          line: 190,
          column: 30
        },
        end: {
          line: 209,
          column: 1
        }
      },
      "38": {
        start: {
          line: 191,
          column: 21
        },
        end: {
          line: 191,
          column: 47
        }
      },
      "39": {
        start: {
          line: 192,
          column: 22
        },
        end: {
          line: 192,
          column: 32
        }
      },
      "40": {
        start: {
          line: 194,
          column: 21
        },
        end: {
          line: 198,
          column: 11
        }
      },
      "41": {
        start: {
          line: 195,
          column: 24
        },
        end: {
          line: 195,
          column: 46
        }
      },
      "42": {
        start: {
          line: 196,
          column: 25
        },
        end: {
          line: 196,
          column: 56
        }
      },
      "43": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 29
        }
      },
      "44": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 199,
          column: 64
        }
      },
      "45": {
        start: {
          line: 199,
          column: 33
        },
        end: {
          line: 199,
          column: 62
        }
      },
      "46": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 200,
          column: 28
        }
      },
      "47": {
        start: {
          line: 202,
          column: 20
        },
        end: {
          line: 202,
          column: 39
        }
      },
      "48": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 208,
          column: 6
        }
      },
      "49": {
        start: {
          line: 210,
          column: 19
        },
        end: {
          line: 629,
          column: 1
        }
      },
      "50": {
        start: {
          line: 211,
          column: 30
        },
        end: {
          line: 222,
          column: 6
        }
      },
      "51": {
        start: {
          line: 223,
          column: 24
        },
        end: {
          line: 307,
          column: 10
        }
      },
      "52": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 239,
          column: 16
        }
      },
      "53": {
        start: {
          line: 224,
          column: 26
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "54": {
        start: {
          line: 228,
          column: 50
        },
        end: {
          line: 238,
          column: 21
        }
      },
      "55": {
        start: {
          line: 232,
          column: 56
        },
        end: {
          line: 237,
          column: 29
        }
      },
      "56": {
        start: {
          line: 240,
          column: 27
        },
        end: {
          line: 240,
          column: 91
        }
      },
      "57": {
        start: {
          line: 240,
          column: 63
        },
        end: {
          line: 240,
          column: 87
        }
      },
      "58": {
        start: {
          line: 241,
          column: 29
        },
        end: {
          line: 241,
          column: 30
        }
      },
      "59": {
        start: {
          line: 242,
          column: 26
        },
        end: {
          line: 242,
          column: 36
        }
      },
      "60": {
        start: {
          line: 243,
          column: 30
        },
        end: {
          line: 243,
          column: 32
        }
      },
      "61": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "62": {
        start: {
          line: 245,
          column: 35
        },
        end: {
          line: 245,
          column: 45
        }
      },
      "63": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 253,
          column: 20
        }
      },
      "64": {
        start: {
          line: 247,
          column: 30
        },
        end: {
          line: 253,
          column: 17
        }
      },
      "65": {
        start: {
          line: 249,
          column: 49
        },
        end: {
          line: 252,
          column: 29
        }
      },
      "66": {
        start: {
          line: 254,
          column: 33
        },
        end: {
          line: 254,
          column: 35
        }
      },
      "67": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 275,
          column: 13
        }
      },
      "68": {
        start: {
          line: 256,
          column: 31
        },
        end: {
          line: 263,
          column: 18
        }
      },
      "69": {
        start: {
          line: 258,
          column: 37
        },
        end: {
          line: 258,
          column: 70
        }
      },
      "70": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 262,
          column: 28
        }
      },
      "71": {
        start: {
          line: 259,
          column: 38
        },
        end: {
          line: 262,
          column: 25
        }
      },
      "72": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 264,
          column: 42
        }
      },
      "73": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 265,
          column: 33
        }
      },
      "74": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 274,
          column: 24
        }
      },
      "75": {
        start: {
          line: 267,
          column: 34
        },
        end: {
          line: 274,
          column: 21
        }
      },
      "76": {
        start: {
          line: 270,
          column: 53
        },
        end: {
          line: 273,
          column: 33
        }
      },
      "77": {
        start: {
          line: 272,
          column: 56
        },
        end: {
          line: 272,
          column: 85
        }
      },
      "78": {
        start: {
          line: 276,
          column: 34
        },
        end: {
          line: 276,
          column: 61
        }
      },
      "79": {
        start: {
          line: 277,
          column: 32
        },
        end: {
          line: 277,
          column: 100
        }
      },
      "80": {
        start: {
          line: 277,
          column: 56
        },
        end: {
          line: 277,
          column: 77
        }
      },
      "81": {
        start: {
          line: 278,
          column: 33
        },
        end: {
          line: 283,
          column: 13
        }
      },
      "82": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 45
        }
      },
      "83": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 289,
          column: 20
        }
      },
      "84": {
        start: {
          line: 286,
          column: 30
        },
        end: {
          line: 289,
          column: 17
        }
      },
      "85": {
        start: {
          line: 288,
          column: 49
        },
        end: {
          line: 288,
          column: 85
        }
      },
      "86": {
        start: {
          line: 292,
          column: 30
        },
        end: {
          line: 292,
          column: 52
        }
      },
      "87": {
        start: {
          line: 293,
          column: 25
        },
        end: {
          line: 293,
          column: 60
        }
      },
      "88": {
        start: {
          line: 293,
          column: 52
        },
        end: {
          line: 293,
          column: 59
        }
      },
      "89": {
        start: {
          line: 294,
          column: 24
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "90": {
        start: {
          line: 296,
          column: 41
        },
        end: {
          line: 296,
          column: 62
        }
      },
      "91": {
        start: {
          line: 297,
          column: 41
        },
        end: {
          line: 297,
          column: 62
        }
      },
      "92": {
        start: {
          line: 298,
          column: 42
        },
        end: {
          line: 298,
          column: 64
        }
      },
      "93": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 306,
          column: 16
        }
      },
      "94": {
        start: {
          line: 301,
          column: 26
        },
        end: {
          line: 306,
          column: 13
        }
      },
      "95": {
        start: {
          line: 308,
          column: 26
        },
        end: {
          line: 336,
          column: 5
        }
      },
      "96": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "97": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 314,
          column: 19
        }
      },
      "98": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 319,
          column: 19
        }
      },
      "99": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 324,
          column: 19
        }
      },
      "100": {
        start: {
          line: 326,
          column: 16
        },
        end: {
          line: 329,
          column: 19
        }
      },
      "101": {
        start: {
          line: 331,
          column: 16
        },
        end: {
          line: 334,
          column: 19
        }
      },
      "102": {
        start: {
          line: 337,
          column: 27
        },
        end: {
          line: 350,
          column: 5
        }
      },
      "103": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 349,
          column: 9
        }
      },
      "104": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 340,
          column: 33
        }
      },
      "105": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 342,
          column: 31
        }
      },
      "106": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 344,
          column: 36
        }
      },
      "107": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 346,
          column: 33
        }
      },
      "108": {
        start: {
          line: 348,
          column: 16
        },
        end: {
          line: 348,
          column: 33
        }
      },
      "109": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 628,
          column: 7
        }
      },
      "110": {
        start: {
          line: 482,
          column: 70
        },
        end: {
          line: 565,
          column: 36
        }
      },
      "111": {
        start: {
          line: 497,
          column: 76
        },
        end: {
          line: 497,
          column: 97
        }
      },
      "112": {
        start: {
          line: 520,
          column: 74
        },
        end: {
          line: 562,
          column: 51
        }
      },
      "113": {
        start: {
          line: 630,
          column: 17
        },
        end: {
          line: 630,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 13,
            column: 17
          }
        },
        loc: {
          start: {
            line: 13,
            column: 27
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 47
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 28,
            column: 40
          }
        },
        loc: {
          start: {
            line: 28,
            column: 61
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 34
          }
        },
        loc: {
          start: {
            line: 32,
            column: 53
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 32
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 190,
            column: 30
          },
          end: {
            line: 190,
            column: 31
          }
        },
        loc: {
          start: {
            line: 190,
            column: 56
          },
          end: {
            line: 209,
            column: 1
          }
        },
        line: 190
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 194,
            column: 33
          },
          end: {
            line: 194,
            column: 34
          }
        },
        loc: {
          start: {
            line: 194,
            column: 37
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 194
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 199,
            column: 22
          },
          end: {
            line: 199,
            column: 23
          }
        },
        loc: {
          start: {
            line: 199,
            column: 33
          },
          end: {
            line: 199,
            column: 62
          }
        },
        line: 199
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 210,
            column: 19
          },
          end: {
            line: 210,
            column: 20
          }
        },
        loc: {
          start: {
            line: 210,
            column: 23
          },
          end: {
            line: 629,
            column: 1
          }
        },
        line: 210
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 223,
            column: 48
          },
          end: {
            line: 223,
            column: 49
          }
        },
        loc: {
          start: {
            line: 223,
            column: 58
          },
          end: {
            line: 307,
            column: 5
          }
        },
        line: 223
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 224,
            column: 17
          },
          end: {
            line: 224,
            column: 18
          }
        },
        loc: {
          start: {
            line: 224,
            column: 26
          },
          end: {
            line: 239,
            column: 13
          }
        },
        line: 224
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 228,
            column: 40
          },
          end: {
            line: 228,
            column: 41
          }
        },
        loc: {
          start: {
            line: 228,
            column: 50
          },
          end: {
            line: 238,
            column: 21
          }
        },
        line: 228
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 232,
            column: 47
          },
          end: {
            line: 232,
            column: 48
          }
        },
        loc: {
          start: {
            line: 232,
            column: 56
          },
          end: {
            line: 237,
            column: 29
          }
        },
        line: 232
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 240,
            column: 49
          },
          end: {
            line: 240,
            column: 50
          }
        },
        loc: {
          start: {
            line: 240,
            column: 63
          },
          end: {
            line: 240,
            column: 87
          }
        },
        line: 240
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 247,
            column: 21
          },
          end: {
            line: 247,
            column: 22
          }
        },
        loc: {
          start: {
            line: 247,
            column: 30
          },
          end: {
            line: 253,
            column: 17
          }
        },
        line: 247
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 249,
            column: 44
          },
          end: {
            line: 249,
            column: 45
          }
        },
        loc: {
          start: {
            line: 249,
            column: 49
          },
          end: {
            line: 252,
            column: 29
          }
        },
        line: 249
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 256,
            column: 65
          },
          end: {
            line: 256,
            column: 66
          }
        },
        loc: {
          start: {
            line: 256,
            column: 69
          },
          end: {
            line: 263,
            column: 17
          }
        },
        line: 256
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 259,
            column: 29
          },
          end: {
            line: 259,
            column: 30
          }
        },
        loc: {
          start: {
            line: 259,
            column: 38
          },
          end: {
            line: 262,
            column: 25
          }
        },
        line: 259
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 267,
            column: 25
          },
          end: {
            line: 267,
            column: 26
          }
        },
        loc: {
          start: {
            line: 267,
            column: 34
          },
          end: {
            line: 274,
            column: 21
          }
        },
        line: 267
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 270,
            column: 48
          },
          end: {
            line: 270,
            column: 49
          }
        },
        loc: {
          start: {
            line: 270,
            column: 53
          },
          end: {
            line: 273,
            column: 33
          }
        },
        line: 270
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 272,
            column: 51
          },
          end: {
            line: 272,
            column: 52
          }
        },
        loc: {
          start: {
            line: 272,
            column: 56
          },
          end: {
            line: 272,
            column: 85
          }
        },
        line: 272
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 277,
            column: 51
          },
          end: {
            line: 277,
            column: 52
          }
        },
        loc: {
          start: {
            line: 277,
            column: 56
          },
          end: {
            line: 277,
            column: 77
          }
        },
        line: 277
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 286,
            column: 21
          },
          end: {
            line: 286,
            column: 22
          }
        },
        loc: {
          start: {
            line: 286,
            column: 30
          },
          end: {
            line: 289,
            column: 17
          }
        },
        line: 286
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 288,
            column: 44
          },
          end: {
            line: 288,
            column: 45
          }
        },
        loc: {
          start: {
            line: 288,
            column: 49
          },
          end: {
            line: 288,
            column: 85
          }
        },
        line: 288
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 293,
            column: 47
          },
          end: {
            line: 293,
            column: 48
          }
        },
        loc: {
          start: {
            line: 293,
            column: 52
          },
          end: {
            line: 293,
            column: 59
          }
        },
        line: 293
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 296,
            column: 36
          },
          end: {
            line: 296,
            column: 37
          }
        },
        loc: {
          start: {
            line: 296,
            column: 41
          },
          end: {
            line: 296,
            column: 62
          }
        },
        line: 296
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 297,
            column: 36
          },
          end: {
            line: 297,
            column: 37
          }
        },
        loc: {
          start: {
            line: 297,
            column: 41
          },
          end: {
            line: 297,
            column: 62
          }
        },
        line: 297
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 298,
            column: 37
          },
          end: {
            line: 298,
            column: 38
          }
        },
        loc: {
          start: {
            line: 298,
            column: 42
          },
          end: {
            line: 298,
            column: 64
          }
        },
        line: 298
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 301,
            column: 17
          },
          end: {
            line: 301,
            column: 18
          }
        },
        loc: {
          start: {
            line: 301,
            column: 26
          },
          end: {
            line: 306,
            column: 13
          }
        },
        line: 301
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 308,
            column: 26
          },
          end: {
            line: 308,
            column: 27
          }
        },
        loc: {
          start: {
            line: 308,
            column: 36
          },
          end: {
            line: 336,
            column: 5
          }
        },
        line: 308
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 337,
            column: 27
          },
          end: {
            line: 337,
            column: 28
          }
        },
        loc: {
          start: {
            line: 337,
            column: 37
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 337
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 482,
            column: 47
          },
          end: {
            line: 482,
            column: 48
          }
        },
        loc: {
          start: {
            line: 482,
            column: 70
          },
          end: {
            line: 565,
            column: 36
          }
        },
        line: 482
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 497,
            column: 71
          },
          end: {
            line: 497,
            column: 72
          }
        },
        loc: {
          start: {
            line: 497,
            column: 76
          },
          end: {
            line: 497,
            column: 97
          }
        },
        line: 497
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 520,
            column: 52
          },
          end: {
            line: 520,
            column: 53
          }
        },
        loc: {
          start: {
            line: 520,
            column: 74
          },
          end: {
            line: 562,
            column: 51
          }
        },
        line: 520
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 45
          }
        }, {
          start: {
            line: 29,
            column: 48
          },
          end: {
            line: 29,
            column: 65
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 27
          }
        }, {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 33,
            column: 45
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 47
          }
        }, {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 76
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 31
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 48,
            column: 88
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 29
          }
        }, {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 79
          }
        }],
        line: 50
      },
      "11": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 51,
            column: 88
          }
        }, {
          start: {
            line: 51,
            column: 91
          },
          end: {
            line: 51,
            column: 95
          }
        }],
        line: 51
      },
      "12": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 56,
            column: 13
          }
        }],
        line: 52
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 20
          }
        }, {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 33
          }
        }, {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 45
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 205,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 26
          },
          end: {
            line: 205,
            column: 34
          }
        }, {
          start: {
            line: 205,
            column: 37
          },
          end: {
            line: 205,
            column: 45
          }
        }],
        line: 205
      },
      "16": {
        loc: {
          start: {
            line: 207,
            column: 15
          },
          end: {
            line: 207,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 207,
            column: 25
          },
          end: {
            line: 207,
            column: 34
          }
        }, {
          start: {
            line: 207,
            column: 37
          },
          end: {
            line: 207,
            column: 52
          }
        }],
        line: 207
      },
      "17": {
        loc: {
          start: {
            line: 249,
            column: 49
          },
          end: {
            line: 252,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 249,
            column: 69
          },
          end: {
            line: 252,
            column: 25
          }
        }, {
          start: {
            line: 252,
            column: 28
          },
          end: {
            line: 252,
            column: 29
          }
        }],
        line: 249
      },
      "18": {
        loc: {
          start: {
            line: 270,
            column: 53
          },
          end: {
            line: 273,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 270,
            column: 73
          },
          end: {
            line: 273,
            column: 29
          }
        }, {
          start: {
            line: 273,
            column: 32
          },
          end: {
            line: 273,
            column: 33
          }
        }],
        line: 270
      },
      "19": {
        loc: {
          start: {
            line: 272,
            column: 56
          },
          end: {
            line: 272,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 272,
            column: 75
          },
          end: {
            line: 272,
            column: 81
          }
        }, {
          start: {
            line: 272,
            column: 84
          },
          end: {
            line: 272,
            column: 85
          }
        }],
        line: 272
      },
      "20": {
        loc: {
          start: {
            line: 277,
            column: 32
          },
          end: {
            line: 277,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 277,
            column: 81
          },
          end: {
            line: 277,
            column: 89
          }
        }, {
          start: {
            line: 277,
            column: 92
          },
          end: {
            line: 277,
            column: 100
          }
        }],
        line: 277
      },
      "21": {
        loc: {
          start: {
            line: 288,
            column: 49
          },
          end: {
            line: 288,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 288,
            column: 69
          },
          end: {
            line: 288,
            column: 81
          }
        }, {
          start: {
            line: 288,
            column: 84
          },
          end: {
            line: 288,
            column: 85
          }
        }],
        line: 288
      },
      "22": {
        loc: {
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 310,
            column: 12
          },
          end: {
            line: 314,
            column: 19
          }
        }, {
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 319,
            column: 19
          }
        }, {
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 324,
            column: 19
          }
        }, {
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 329,
            column: 19
          }
        }, {
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 334,
            column: 19
          }
        }],
        line: 309
      },
      "23": {
        loc: {
          start: {
            line: 338,
            column: 8
          },
          end: {
            line: 349,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 339,
            column: 12
          },
          end: {
            line: 340,
            column: 33
          }
        }, {
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 342,
            column: 31
          }
        }, {
          start: {
            line: 343,
            column: 12
          },
          end: {
            line: 344,
            column: 36
          }
        }, {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 346,
            column: 33
          }
        }, {
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 348,
            column: 33
          }
        }],
        line: 338
      },
      "24": {
        loc: {
          start: {
            line: 383,
            column: 34
          },
          end: {
            line: 383,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 383,
            column: 52
          },
          end: {
            line: 383,
            column: 60
          }
        }, {
          start: {
            line: 383,
            column: 63
          },
          end: {
            line: 383,
            column: 71
          }
        }],
        line: 383
      },
      "25": {
        loc: {
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 417,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 387,
            column: 27
          }
        }, {
          start: {
            line: 387,
            column: 45
          },
          end: {
            line: 417,
            column: 14
          }
        }],
        line: 387
      },
      "26": {
        loc: {
          start: {
            line: 409,
            column: 36
          },
          end: {
            line: 409,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 409,
            column: 54
          },
          end: {
            line: 409,
            column: 62
          }
        }, {
          start: {
            line: 409,
            column: 65
          },
          end: {
            line: 409,
            column: 74
          }
        }],
        line: 409
      },
      "27": {
        loc: {
          start: {
            line: 418,
            column: 12
          },
          end: {
            line: 478,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 418,
            column: 12
          },
          end: {
            line: 418,
            column: 35
          }
        }, {
          start: {
            line: 418,
            column: 53
          },
          end: {
            line: 478,
            column: 14
          }
        }],
        line: 418
      },
      "28": {
        loc: {
          start: {
            line: 470,
            column: 20
          },
          end: {
            line: 476,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 470,
            column: 20
          },
          end: {
            line: 470,
            column: 44
          }
        }, {
          start: {
            line: 470,
            column: 62
          },
          end: {
            line: 476,
            column: 22
          }
        }],
        line: 470
      },
      "29": {
        loc: {
          start: {
            line: 504,
            column: 36
          },
          end: {
            line: 510,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 504,
            column: 36
          },
          end: {
            line: 504,
            column: 54
          }
        }, {
          start: {
            line: 504,
            column: 72
          },
          end: {
            line: 510,
            column: 38
          }
        }],
        line: 504
      },
      "30": {
        loc: {
          start: {
            line: 534,
            column: 64
          },
          end: {
            line: 537,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 534,
            column: 64
          },
          end: {
            line: 534,
            column: 80
          }
        }, {
          start: {
            line: 534,
            column: 98
          },
          end: {
            line: 537,
            column: 66
          }
        }],
        line: 534
      },
      "31": {
        loc: {
          start: {
            line: 538,
            column: 64
          },
          end: {
            line: 541,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 538,
            column: 64
          },
          end: {
            line: 538,
            column: 74
          }
        }, {
          start: {
            line: 538,
            column: 92
          },
          end: {
            line: 541,
            column: 66
          }
        }],
        line: 538
      },
      "32": {
        loc: {
          start: {
            line: 549,
            column: 56
          },
          end: {
            line: 554,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 549,
            column: 56
          },
          end: {
            line: 549,
            column: 73
          }
        }, {
          start: {
            line: 549,
            column: 91
          },
          end: {
            line: 554,
            column: 58
          }
        }],
        line: 549
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0, 0, 0],
      "23": [0, 0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/TestRunner.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Progress, Tag, Collapse, Alert, Statistic, Row, Col } from 'antd';\nimport { Play, CheckCircle, XCircle, Clock, AlertTriangle, FileText, Code } from 'lucide-react';\n\nconst { Panel } = Collapse;\n\n// \u6D4B\u8BD5\u7ED3\u679C\u7C7B\u578B\u5B9A\u4E49\ninterface TestResult {\n  id: string;\n  name: string;\n  status: 'passed' | 'failed' | 'pending' | 'skipped';\n  duration: number;\n  error?: string;\n  description?: string;\n}\n\ninterface TestSuite {\n  id: string;\n  name: string;\n  description: string;\n  tests: TestResult[];\n  status: 'passed' | 'failed' | 'running' | 'pending';\n  duration: number;\n}\n\ninterface TestRunnerState {\n  isRunning: boolean;\n  progress: number;\n  suites: TestSuite[];\n  summary: {\n    total: number;\n    passed: number;\n    failed: number;\n    skipped: number;\n    duration: number;\n  };\n}\n\n// \u6A21\u62DF\u6D4B\u8BD5\u6570\u636E\nconst mockTestSuites: TestSuite[] = [\n  {\n    id: 'auth-tests',\n    name: '\u8BA4\u8BC1\u6A21\u5757\u6D4B\u8BD5',\n    description: '\u6D4B\u8BD5\u7528\u6237\u8BA4\u8BC1\u3001\u6743\u9650\u9A8C\u8BC1\u7B49\u529F\u80FD',\n    status: 'pending',\n    duration: 0,\n    tests: [\n      {\n        id: 'auth-1',\n        name: '\u7528\u6237\u767B\u5F55\u6D4B\u8BD5',\n        status: 'pending',\n        duration: 0,\n        description: '\u6D4B\u8BD5\u7528\u6237\u767B\u5F55\u529F\u80FD\u662F\u5426\u6B63\u5E38\u5DE5\u4F5C',\n      },\n      {\n        id: 'auth-2',\n        name: '\u6743\u9650\u9A8C\u8BC1\u6D4B\u8BD5',\n        status: 'pending',\n        duration: 0,\n        description: '\u6D4B\u8BD5\u7528\u6237\u6743\u9650\u9A8C\u8BC1\u903B\u8F91',\n      },\n      {\n        id: 'auth-3',\n        name: 'Token\u5237\u65B0\u6D4B\u8BD5',\n        status: 'pending',\n        duration: 0,\n        description: '\u6D4B\u8BD5JWT Token\u81EA\u52A8\u5237\u65B0\u673A\u5236',\n      },\n    ],\n  },\n  {\n    id: 'dashboard-tests',\n    name: '\u4EEA\u8868\u677F\u7EC4\u4EF6\u6D4B\u8BD5',\n    description: '\u6D4B\u8BD5\u4EEA\u8868\u677F\u9875\u9762\u7684\u5404\u4E2A\u7EC4\u4EF6',\n    status: 'pending',\n    duration: 0,\n    tests: [\n      {\n        id: 'dashboard-1',\n        name: 'KPI\u6307\u6807\u5361\u7247\u6E32\u67D3\u6D4B\u8BD5',\n        status: 'pending',\n        duration: 0,\n        description: '\u6D4B\u8BD5KPI\u6307\u6807\u5361\u7247\u662F\u5426\u6B63\u786E\u6E32\u67D3',\n      },\n      {\n        id: 'dashboard-2',\n        name: '\u7CFB\u7EDF\u72B6\u6001\u76D1\u63A7\u6D4B\u8BD5',\n        status: 'pending',\n        duration: 0,\n        description: '\u6D4B\u8BD5\u7CFB\u7EDF\u72B6\u6001\u76D1\u63A7\u7EC4\u4EF6',\n      },\n      {\n        id: 'dashboard-3',\n        name: '\u6570\u636E\u83B7\u53D6Hook\u6D4B\u8BD5',\n        status: 'pending',\n        duration: 0,\n        description: '\u6D4B\u8BD5useDashboardData Hook\u7684\u6570\u636E\u83B7\u53D6\u903B\u8F91',\n      },\n    ],\n  },\n  {\n    id: 'ticket-tests',\n    name: '\u5DE5\u5355\u7BA1\u7406\u6D4B\u8BD5',\n    description: '\u6D4B\u8BD5\u5DE5\u5355\u521B\u5EFA\u3001\u66F4\u65B0\u3001\u67E5\u8BE2\u7B49\u529F\u80FD',\n    status: 'pending',\n    duration: 0,\n    tests: [\n      {\n        id: 'ticket-1',\n        name: '\u5DE5\u5355\u521B\u5EFA\u6D4B\u8BD5',\n        status: 'pending',\n        duration: 0,\n        description: '\u6D4B\u8BD5\u5DE5\u5355\u521B\u5EFA\u8868\u5355\u548CAPI\u8C03\u7528',\n      },\n      {\n        id: 'ticket-2',\n        name: '\u5DE5\u5355\u5217\u8868\u67E5\u8BE2\u6D4B\u8BD5',\n        status: 'pending',\n        duration: 0,\n        description: '\u6D4B\u8BD5\u5DE5\u5355\u5217\u8868\u7684\u5206\u9875\u548C\u7B5B\u9009\u529F\u80FD',\n      },\n      {\n        id: 'ticket-3',\n        name: '\u5DE5\u5355\u72B6\u6001\u66F4\u65B0\u6D4B\u8BD5',\n        status: 'pending',\n        duration: 0,\n        description: '\u6D4B\u8BD5\u5DE5\u5355\u72B6\u6001\u53D8\u66F4\u903B\u8F91',\n      },\n    ],\n  },\n  {\n    id: 'api-tests',\n    name: 'API\u63A5\u53E3\u6D4B\u8BD5',\n    description: '\u6D4B\u8BD5\u524D\u7AEFAPI\u8C03\u7528\u5C42',\n    status: 'pending',\n    duration: 0,\n    tests: [\n      {\n        id: 'api-1',\n        name: 'HTTP\u5BA2\u6237\u7AEF\u6D4B\u8BD5',\n        status: 'pending',\n        duration: 0,\n        description: '\u6D4B\u8BD5HTTP\u5BA2\u6237\u7AEF\u7684\u8BF7\u6C42\u548C\u54CD\u5E94\u5904\u7406',\n      },\n      {\n        id: 'api-2',\n        name: '\u9519\u8BEF\u5904\u7406\u6D4B\u8BD5',\n        status: 'pending',\n        duration: 0,\n        description: '\u6D4B\u8BD5API\u9519\u8BEF\u5904\u7406\u548C\u91CD\u8BD5\u673A\u5236',\n      },\n      {\n        id: 'api-3',\n        name: '\u7F13\u5B58\u673A\u5236\u6D4B\u8BD5',\n        status: 'pending',\n        duration: 0,\n        description: '\u6D4B\u8BD5API\u54CD\u5E94\u7F13\u5B58\u529F\u80FD',\n      },\n    ],\n  },\n];\n\n// \u6A21\u62DF\u6D4B\u8BD5\u6267\u884C\nconst simulateTestExecution = async (\n  test: TestResult,\n  onProgress: (progress: number) => void\n): Promise<TestResult> => {\n  const duration = Math.random() * 2000 + 500; // 0.5-2.5\u79D2\n  const startTime = Date.now();\n  \n  // \u6A21\u62DF\u6D4B\u8BD5\u6267\u884C\u8FC7\u7A0B\n  const interval = setInterval(() => {\n    const elapsed = Date.now() - startTime;\n    const progress = Math.min(elapsed / duration, 1);\n    onProgress(progress);\n  }, 100);\n\n  await new Promise(resolve => setTimeout(resolve, duration));\n  clearInterval(interval);\n\n  // \u968F\u673A\u751F\u6210\u6D4B\u8BD5\u7ED3\u679C\n  const success = Math.random() > 0.2; // 80%\u6210\u529F\u7387\n  \n  return {\n    ...test,\n    status: success ? 'passed' : 'failed',\n    duration: Math.round(duration),\n    error: success ? undefined : '\u6A21\u62DF\u6D4B\u8BD5\u5931\u8D25: \u65AD\u8A00\u4E0D\u5339\u914D',\n  };\n};\n\nexport const TestRunner: React.FC = () => {\n  const [state, setState] = useState<TestRunnerState>({\n    isRunning: false,\n    progress: 0,\n    suites: mockTestSuites,\n    summary: {\n      total: 0,\n      passed: 0,\n      failed: 0,\n      skipped: 0,\n      duration: 0,\n    },\n  });\n\n  const runAllTests = useCallback(async () => {\n    setState(prev => ({\n      ...prev,\n      isRunning: true,\n      progress: 0,\n      suites: prev.suites.map(suite => ({\n        ...suite,\n        status: 'pending',\n        duration: 0,\n        tests: suite.tests.map(test => ({\n          ...test,\n          status: 'pending',\n          duration: 0,\n          error: undefined,\n        })),\n      })),\n    }));\n\n    const totalTests = mockTestSuites.reduce((sum, suite) => sum + suite.tests.length, 0);\n    let completedTests = 0;\n    const startTime = Date.now();\n\n    const updatedSuites: TestSuite[] = [];\n\n    for (const suite of mockTestSuites) {\n      const suiteStartTime = Date.now();\n      \n      // \u66F4\u65B0\u5957\u4EF6\u72B6\u6001\u4E3A\u8FD0\u884C\u4E2D\n      setState(prev => ({\n        ...prev,\n        suites: prev.suites.map(s => \n          s.id === suite.id ? { ...s, status: 'running' } : s\n        ),\n      }));\n\n      const updatedTests: TestResult[] = [];\n      \n      for (const test of suite.tests) {\n        const result = await simulateTestExecution(test, () => {\n          // \u66F4\u65B0\u8FDB\u5EA6\n          const progress = (completedTests / totalTests) * 100;\n          setState(prev => ({ ...prev, progress }));\n        });\n        \n        updatedTests.push(result);\n        completedTests++;\n        \n        // \u66F4\u65B0\u5355\u4E2A\u6D4B\u8BD5\u7ED3\u679C\n        setState(prev => ({\n          ...prev,\n          progress: (completedTests / totalTests) * 100,\n          suites: prev.suites.map(s => \n            s.id === suite.id \n              ? {\n                  ...s,\n                  tests: s.tests.map(t => t.id === test.id ? result : t),\n                }\n              : s\n          ),\n        }));\n      }\n\n      const suiteDuration = Date.now() - suiteStartTime;\n      const suiteStatus = updatedTests.every(t => t.status === 'passed') ? 'passed' : 'failed';\n      \n      const updatedSuite: TestSuite = {\n        ...suite,\n        status: suiteStatus,\n        duration: suiteDuration,\n        tests: updatedTests,\n      };\n      \n      updatedSuites.push(updatedSuite);\n      \n      // \u66F4\u65B0\u5957\u4EF6\u72B6\u6001\n      setState(prev => ({\n        ...prev,\n        suites: prev.suites.map(s => \n          s.id === suite.id ? updatedSuite : s\n        ),\n      }));\n    }\n\n    // \u8BA1\u7B97\u603B\u7ED3\n    const totalDuration = Date.now() - startTime;\n    const allTests = updatedSuites.flatMap(s => s.tests);\n    const summary = {\n      total: allTests.length,\n      passed: allTests.filter(t => t.status === 'passed').length,\n      failed: allTests.filter(t => t.status === 'failed').length,\n      skipped: allTests.filter(t => t.status === 'skipped').length,\n      duration: totalDuration,\n    };\n\n    setState(prev => ({\n      ...prev,\n      isRunning: false,\n      progress: 100,\n      summary,\n    }));\n  }, []);\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'passed':\n        return <CheckCircle size={16} className=\"text-green-500\" />;\n      case 'failed':\n        return <XCircle size={16} className=\"text-red-500\" />;\n      case 'running':\n        return <Clock size={16} className=\"text-blue-500\" />;\n      case 'skipped':\n        return <AlertTriangle size={16} className=\"text-yellow-500\" />;\n      default:\n        return <Clock size={16} className=\"text-gray-400\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'passed':\n        return 'success';\n      case 'failed':\n        return 'error';\n      case 'running':\n        return 'processing';\n      case 'skipped':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\n            <Code size={24} />\n            \u6D4B\u8BD5\u8FD0\u884C\u5668\n          </h1>\n          <p className=\"text-gray-600 mt-1\">\n            \u8FD0\u884C\u524D\u7AEF\u7EC4\u4EF6\u548CAPI\u63A5\u53E3\u7684\u81EA\u52A8\u5316\u6D4B\u8BD5\n          </p>\n        </div>\n        \n        <Button\n          type=\"primary\"\n          size=\"large\"\n          icon={<Play size={16} />}\n          onClick={runAllTests}\n          loading={state.isRunning}\n          disabled={state.isRunning}\n        >\n          {state.isRunning ? '\u8FD0\u884C\u4E2D...' : '\u8FD0\u884C\u6240\u6709\u6D4B\u8BD5'}\n        </Button>\n      </div>\n\n      {/* \u6D4B\u8BD5\u8FDB\u5EA6 */}\n      {state.isRunning && (\n        <Card>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm font-medium\">\u6D4B\u8BD5\u8FDB\u5EA6</span>\n              <span className=\"text-sm text-gray-500\">\n                {Math.round(state.progress)}%\n              </span>\n            </div>\n            <Progress \n              percent={state.progress} \n              status={state.isRunning ? 'active' : 'success'}\n              strokeColor={{\n                '0%': '#108ee9',\n                '100%': '#87d068',\n              }}\n            />\n          </div>\n        </Card>\n      )}\n\n      {/* \u6D4B\u8BD5\u6458\u8981 */}\n      {state.summary.total > 0 && (\n        <Card title=\"\u6D4B\u8BD5\u6458\u8981\" extra={<FileText size={16} />}>\n          <Row gutter={16}>\n            <Col span={6}>\n              <Statistic\n                title=\"\u603B\u6D4B\u8BD5\u6570\"\n                value={state.summary.total}\n                valueStyle={{ color: '#1890ff' }}\n              />\n            </Col>\n            <Col span={6}>\n              <Statistic\n                title=\"\u901A\u8FC7\"\n                value={state.summary.passed}\n                valueStyle={{ color: '#52c41a' }}\n              />\n            </Col>\n            <Col span={6}>\n              <Statistic\n                title=\"\u5931\u8D25\"\n                value={state.summary.failed}\n                valueStyle={{ color: '#f5222d' }}\n              />\n            </Col>\n            <Col span={6}>\n              <Statistic\n                title=\"\u6267\u884C\u65F6\u95F4\"\n                value={state.summary.duration}\n                suffix=\"ms\"\n                valueStyle={{ color: '#722ed1' }}\n              />\n            </Col>\n          </Row>\n          \n          {state.summary.failed > 0 && (\n            <Alert\n              message=\"\u90E8\u5206\u6D4B\u8BD5\u5931\u8D25\"\n              description={`${state.summary.failed} \u4E2A\u6D4B\u8BD5\u672A\u901A\u8FC7\uFF0C\u8BF7\u68C0\u67E5\u8BE6\u7EC6\u4FE1\u606F`}\n              type=\"warning\"\n              showIcon\n              className=\"mt-4\"\n            />\n          )}\n        </Card>\n      )}\n\n      {/* \u6D4B\u8BD5\u5957\u4EF6\u8BE6\u60C5 */}\n      <Card title=\"\u6D4B\u8BD5\u5957\u4EF6\">\n        <Collapse>\n          {state.suites.map(suite => (\n            <Panel\n              key={suite.id}\n              header={\n                <div className=\"flex items-center justify-between w-full pr-4\">\n                  <div className=\"flex items-center gap-3\">\n                    {getStatusIcon(suite.status)}\n                    <span className=\"font-medium\">{suite.name}</span>\n                    <Tag color={getStatusColor(suite.status)}>\n                      {suite.tests.filter(t => t.status === 'passed').length}/{suite.tests.length}\n                    </Tag>\n                  </div>\n                  {suite.duration > 0 && (\n                    <span className=\"text-sm text-gray-500\">\n                      {suite.duration}ms\n                    </span>\n                  )}\n                </div>\n              }\n            >\n              <div className=\"space-y-3\">\n                <p className=\"text-gray-600 text-sm mb-4\">\n                  {suite.description}\n                </p>\n                \n                {suite.tests.map(test => (\n                  <div\n                    key={test.id}\n                    className=\"flex items-start justify-between p-3 bg-gray-50 rounded-lg\"\n                  >\n                    <div className=\"flex items-start gap-3 flex-1\">\n                      {getStatusIcon(test.status)}\n                      <div className=\"flex-1\">\n                        <div className=\"font-medium text-sm\">{test.name}</div>\n                        {test.description && (\n                          <div className=\"text-xs text-gray-500 mt-1\">\n                            {test.description}\n                          </div>\n                        )}\n                        {test.error && (\n                          <div className=\"text-xs text-red-600 mt-2 p-2 bg-red-50 rounded\">\n                            {test.error}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center gap-2 text-xs text-gray-500\">\n                      {test.duration > 0 && (\n                        <span>{test.duration}ms</span>\n                      )}\n                      <Tag color={getStatusColor(test.status)}>\n                        {test.status}\n                      </Tag>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </Panel>\n          ))}\n        </Collapse>\n      </Card>\n\n      {/* \u6D4B\u8BD5\u8986\u76D6\u7387\u4FE1\u606F */}\n      <Card title=\"\u6D4B\u8BD5\u8986\u76D6\u7387\" className=\"mb-6\">\n        <div className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">85%</div>\n              <div className=\"text-sm text-gray-600\">\u8BED\u53E5\u8986\u76D6\u7387</div>\n            </div>\n            <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">78%</div>\n              <div className=\"text-sm text-gray-600\">\u5206\u652F\u8986\u76D6\u7387</div>\n            </div>\n            <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-purple-600\">92%</div>\n              <div className=\"text-sm text-gray-600\">\u51FD\u6570\u8986\u76D6\u7387</div>\n            </div>\n          </div>\n          \n          <Alert\n            message=\"\u6D4B\u8BD5\u8986\u76D6\u7387\u5EFA\u8BAE\"\n            description=\"\u5EFA\u8BAE\u4FDD\u6301\u8BED\u53E5\u8986\u76D6\u7387\u572880%\u4EE5\u4E0A\uFF0C\u5206\u652F\u8986\u76D6\u7387\u572875%\u4EE5\u4E0A\uFF0C\u4EE5\u786E\u4FDD\u4EE3\u7801\u8D28\u91CF\u3002\"\n            type=\"info\"\n            showIcon\n          />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default TestRunner;"],
      names: ["TestRunner", "Panel", "Collapse", "mockTestSuites", "id", "name", "description", "status", "duration", "tests", "simulateTestExecution", "test", "onProgress", "Math", "random", "startTime", "Date", "now", "interval", "setInterval", "elapsed", "progress", "min", "Promise", "resolve", "setTimeout", "clearInterval", "success", "round", "error", "undefined", "state", "setState", "useState", "isRunning", "suites", "summary", "total", "passed", "failed", "skipped", "runAllTests", "useCallback", "prev", "map", "suite", "totalTests", "reduce", "sum", "length", "completedTests", "updatedSuites", "suiteStartTime", "s", "updatedTests", "result", "push", "t", "suiteDuration", "suiteStatus", "every", "updatedSuite", "totalDuration", "allTests", "flatMap", "filter", "getStatusIcon", "CheckCircle", "size", "className", "XCircle", "Clock", "AlertTriangle", "getStatusColor", "div", "h1", "Code", "p", "Button", "type", "icon", "Play", "onClick", "loading", "disabled", "Card", "span", "Progress", "percent", "strokeColor", "title", "extra", "FileText", "Row", "gutter", "Col", "Statistic", "value", "valueStyle", "color", "suffix", "Alert", "message", "showIcon", "header", "Tag"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9e250e9207c1de1f694b3aea3d16d2ab5542c76e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ek1ea9nae = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ek1ea9nae();
cov_2ek1ea9nae().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2ek1ea9nae().f[0]++;
  cov_2ek1ea9nae().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2ek1ea9nae().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2ek1ea9nae().s[3]++;
_export(exports, {
  TestRunner: function () {
    /* istanbul ignore next */
    cov_2ek1ea9nae().f[1]++;
    cov_2ek1ea9nae().s[4]++;
    return TestRunner;
  },
  default: function () {
    /* istanbul ignore next */
    cov_2ek1ea9nae().f[2]++;
    cov_2ek1ea9nae().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2ek1ea9nae().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2ek1ea9nae().s[7]++, _interop_require_wildcard(require("react")));
const _antd =
/* istanbul ignore next */
(cov_2ek1ea9nae().s[8]++, require("antd"));
const _lucidereact =
/* istanbul ignore next */
(cov_2ek1ea9nae().s[9]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2ek1ea9nae().f[3]++;
  cov_2ek1ea9nae().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2ek1ea9nae().b[0][0]++;
    cov_2ek1ea9nae().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2ek1ea9nae().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2ek1ea9nae().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2ek1ea9nae().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_2ek1ea9nae().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2ek1ea9nae().f[4]++;
    cov_2ek1ea9nae().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2ek1ea9nae().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2ek1ea9nae().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2ek1ea9nae().f[5]++;
  cov_2ek1ea9nae().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_2ek1ea9nae().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2ek1ea9nae().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2ek1ea9nae().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2ek1ea9nae().b[2][0]++;
    cov_2ek1ea9nae().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2ek1ea9nae().b[2][1]++;
  }
  cov_2ek1ea9nae().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_2ek1ea9nae().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2ek1ea9nae().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2ek1ea9nae().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2ek1ea9nae().b[4][0]++;
    cov_2ek1ea9nae().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2ek1ea9nae().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2ek1ea9nae().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2ek1ea9nae().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_2ek1ea9nae().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2ek1ea9nae().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2ek1ea9nae().b[6][0]++;
    cov_2ek1ea9nae().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2ek1ea9nae().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2ek1ea9nae().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2ek1ea9nae().s[24]++,
  /* istanbul ignore next */
  (cov_2ek1ea9nae().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2ek1ea9nae().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2ek1ea9nae().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2ek1ea9nae().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_2ek1ea9nae().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2ek1ea9nae().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2ek1ea9nae().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2ek1ea9nae().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2ek1ea9nae().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2ek1ea9nae().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2ek1ea9nae().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_2ek1ea9nae().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2ek1ea9nae().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2ek1ea9nae().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2ek1ea9nae().b[12][0]++;
        cov_2ek1ea9nae().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2ek1ea9nae().b[12][1]++;
        cov_2ek1ea9nae().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2ek1ea9nae().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2ek1ea9nae().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2ek1ea9nae().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2ek1ea9nae().b[14][0]++;
    cov_2ek1ea9nae().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2ek1ea9nae().b[14][1]++;
  }
  cov_2ek1ea9nae().s[34]++;
  return newObj;
}
const {
  Panel
} =
/* istanbul ignore next */
(cov_2ek1ea9nae().s[35]++, _antd.Collapse);
// 模拟测试数据
const mockTestSuites =
/* istanbul ignore next */
(cov_2ek1ea9nae().s[36]++, [{
  id: 'auth-tests',
  name: '认证模块测试',
  description: '测试用户认证、权限验证等功能',
  status: 'pending',
  duration: 0,
  tests: [{
    id: 'auth-1',
    name: '用户登录测试',
    status: 'pending',
    duration: 0,
    description: '测试用户登录功能是否正常工作'
  }, {
    id: 'auth-2',
    name: '权限验证测试',
    status: 'pending',
    duration: 0,
    description: '测试用户权限验证逻辑'
  }, {
    id: 'auth-3',
    name: 'Token刷新测试',
    status: 'pending',
    duration: 0,
    description: '测试JWT Token自动刷新机制'
  }]
}, {
  id: 'dashboard-tests',
  name: '仪表板组件测试',
  description: '测试仪表板页面的各个组件',
  status: 'pending',
  duration: 0,
  tests: [{
    id: 'dashboard-1',
    name: 'KPI指标卡片渲染测试',
    status: 'pending',
    duration: 0,
    description: '测试KPI指标卡片是否正确渲染'
  }, {
    id: 'dashboard-2',
    name: '系统状态监控测试',
    status: 'pending',
    duration: 0,
    description: '测试系统状态监控组件'
  }, {
    id: 'dashboard-3',
    name: '数据获取Hook测试',
    status: 'pending',
    duration: 0,
    description: '测试useDashboardData Hook的数据获取逻辑'
  }]
}, {
  id: 'ticket-tests',
  name: '工单管理测试',
  description: '测试工单创建、更新、查询等功能',
  status: 'pending',
  duration: 0,
  tests: [{
    id: 'ticket-1',
    name: '工单创建测试',
    status: 'pending',
    duration: 0,
    description: '测试工单创建表单和API调用'
  }, {
    id: 'ticket-2',
    name: '工单列表查询测试',
    status: 'pending',
    duration: 0,
    description: '测试工单列表的分页和筛选功能'
  }, {
    id: 'ticket-3',
    name: '工单状态更新测试',
    status: 'pending',
    duration: 0,
    description: '测试工单状态变更逻辑'
  }]
}, {
  id: 'api-tests',
  name: 'API接口测试',
  description: '测试前端API调用层',
  status: 'pending',
  duration: 0,
  tests: [{
    id: 'api-1',
    name: 'HTTP客户端测试',
    status: 'pending',
    duration: 0,
    description: '测试HTTP客户端的请求和响应处理'
  }, {
    id: 'api-2',
    name: '错误处理测试',
    status: 'pending',
    duration: 0,
    description: '测试API错误处理和重试机制'
  }, {
    id: 'api-3',
    name: '缓存机制测试',
    status: 'pending',
    duration: 0,
    description: '测试API响应缓存功能'
  }]
}]);
// 模拟测试执行
/* istanbul ignore next */
cov_2ek1ea9nae().s[37]++;
const simulateTestExecution = async (test, onProgress) => {
  /* istanbul ignore next */
  cov_2ek1ea9nae().f[6]++;
  const duration =
  /* istanbul ignore next */
  (cov_2ek1ea9nae().s[38]++, Math.random() * 2000 + 500); // 0.5-2.5秒
  const startTime =
  /* istanbul ignore next */
  (cov_2ek1ea9nae().s[39]++, Date.now());
  // 模拟测试执行过程
  const interval =
  /* istanbul ignore next */
  (cov_2ek1ea9nae().s[40]++, setInterval(() => {
    /* istanbul ignore next */
    cov_2ek1ea9nae().f[7]++;
    const elapsed =
    /* istanbul ignore next */
    (cov_2ek1ea9nae().s[41]++, Date.now() - startTime);
    const progress =
    /* istanbul ignore next */
    (cov_2ek1ea9nae().s[42]++, Math.min(elapsed / duration, 1));
    /* istanbul ignore next */
    cov_2ek1ea9nae().s[43]++;
    onProgress(progress);
  }, 100));
  /* istanbul ignore next */
  cov_2ek1ea9nae().s[44]++;
  await new Promise(resolve => {
    /* istanbul ignore next */
    cov_2ek1ea9nae().f[8]++;
    cov_2ek1ea9nae().s[45]++;
    return setTimeout(resolve, duration);
  });
  /* istanbul ignore next */
  cov_2ek1ea9nae().s[46]++;
  clearInterval(interval);
  // 随机生成测试结果
  const success =
  /* istanbul ignore next */
  (cov_2ek1ea9nae().s[47]++, Math.random() > 0.2); // 80%成功率
  /* istanbul ignore next */
  cov_2ek1ea9nae().s[48]++;
  return {
    ...test,
    status: success ?
    /* istanbul ignore next */
    (cov_2ek1ea9nae().b[15][0]++, 'passed') :
    /* istanbul ignore next */
    (cov_2ek1ea9nae().b[15][1]++, 'failed'),
    duration: Math.round(duration),
    error: success ?
    /* istanbul ignore next */
    (cov_2ek1ea9nae().b[16][0]++, undefined) :
    /* istanbul ignore next */
    (cov_2ek1ea9nae().b[16][1]++, '模拟测试失败: 断言不匹配')
  };
};
/* istanbul ignore next */
cov_2ek1ea9nae().s[49]++;
const TestRunner = () => {
  /* istanbul ignore next */
  cov_2ek1ea9nae().f[9]++;
  const [state, setState] =
  /* istanbul ignore next */
  (cov_2ek1ea9nae().s[50]++, (0, _react.useState)({
    isRunning: false,
    progress: 0,
    suites: mockTestSuites,
    summary: {
      total: 0,
      passed: 0,
      failed: 0,
      skipped: 0,
      duration: 0
    }
  }));
  const runAllTests =
  /* istanbul ignore next */
  (cov_2ek1ea9nae().s[51]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2ek1ea9nae().f[10]++;
    cov_2ek1ea9nae().s[52]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2ek1ea9nae().f[11]++;
      cov_2ek1ea9nae().s[53]++;
      return {
        ...prev,
        isRunning: true,
        progress: 0,
        suites: prev.suites.map(suite => {
          /* istanbul ignore next */
          cov_2ek1ea9nae().f[12]++;
          cov_2ek1ea9nae().s[54]++;
          return {
            ...suite,
            status: 'pending',
            duration: 0,
            tests: suite.tests.map(test => {
              /* istanbul ignore next */
              cov_2ek1ea9nae().f[13]++;
              cov_2ek1ea9nae().s[55]++;
              return {
                ...test,
                status: 'pending',
                duration: 0,
                error: undefined
              };
            })
          };
        })
      };
    });
    const totalTests =
    /* istanbul ignore next */
    (cov_2ek1ea9nae().s[56]++, mockTestSuites.reduce((sum, suite) => {
      /* istanbul ignore next */
      cov_2ek1ea9nae().f[14]++;
      cov_2ek1ea9nae().s[57]++;
      return sum + suite.tests.length;
    }, 0));
    let completedTests =
    /* istanbul ignore next */
    (cov_2ek1ea9nae().s[58]++, 0);
    const startTime =
    /* istanbul ignore next */
    (cov_2ek1ea9nae().s[59]++, Date.now());
    const updatedSuites =
    /* istanbul ignore next */
    (cov_2ek1ea9nae().s[60]++, []);
    /* istanbul ignore next */
    cov_2ek1ea9nae().s[61]++;
    for (const suite of mockTestSuites) {
      const suiteStartTime =
      /* istanbul ignore next */
      (cov_2ek1ea9nae().s[62]++, Date.now());
      // 更新套件状态为运行中
      /* istanbul ignore next */
      cov_2ek1ea9nae().s[63]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_2ek1ea9nae().f[15]++;
        cov_2ek1ea9nae().s[64]++;
        return {
          ...prev,
          suites: prev.suites.map(s => {
            /* istanbul ignore next */
            cov_2ek1ea9nae().f[16]++;
            cov_2ek1ea9nae().s[65]++;
            return s.id === suite.id ?
            /* istanbul ignore next */
            (cov_2ek1ea9nae().b[17][0]++, {
              ...s,
              status: 'running'
            }) :
            /* istanbul ignore next */
            (cov_2ek1ea9nae().b[17][1]++, s);
          })
        };
      });
      const updatedTests =
      /* istanbul ignore next */
      (cov_2ek1ea9nae().s[66]++, []);
      /* istanbul ignore next */
      cov_2ek1ea9nae().s[67]++;
      for (const test of suite.tests) {
        const result =
        /* istanbul ignore next */
        (cov_2ek1ea9nae().s[68]++, await simulateTestExecution(test, () => {
          /* istanbul ignore next */
          cov_2ek1ea9nae().f[17]++;
          // 更新进度
          const progress =
          /* istanbul ignore next */
          (cov_2ek1ea9nae().s[69]++, completedTests / totalTests * 100);
          /* istanbul ignore next */
          cov_2ek1ea9nae().s[70]++;
          setState(prev => {
            /* istanbul ignore next */
            cov_2ek1ea9nae().f[18]++;
            cov_2ek1ea9nae().s[71]++;
            return {
              ...prev,
              progress
            };
          });
        }));
        /* istanbul ignore next */
        cov_2ek1ea9nae().s[72]++;
        updatedTests.push(result);
        /* istanbul ignore next */
        cov_2ek1ea9nae().s[73]++;
        completedTests++;
        // 更新单个测试结果
        /* istanbul ignore next */
        cov_2ek1ea9nae().s[74]++;
        setState(prev => {
          /* istanbul ignore next */
          cov_2ek1ea9nae().f[19]++;
          cov_2ek1ea9nae().s[75]++;
          return {
            ...prev,
            progress: completedTests / totalTests * 100,
            suites: prev.suites.map(s => {
              /* istanbul ignore next */
              cov_2ek1ea9nae().f[20]++;
              cov_2ek1ea9nae().s[76]++;
              return s.id === suite.id ?
              /* istanbul ignore next */
              (cov_2ek1ea9nae().b[18][0]++, {
                ...s,
                tests: s.tests.map(t => {
                  /* istanbul ignore next */
                  cov_2ek1ea9nae().f[21]++;
                  cov_2ek1ea9nae().s[77]++;
                  return t.id === test.id ?
                  /* istanbul ignore next */
                  (cov_2ek1ea9nae().b[19][0]++, result) :
                  /* istanbul ignore next */
                  (cov_2ek1ea9nae().b[19][1]++, t);
                })
              }) :
              /* istanbul ignore next */
              (cov_2ek1ea9nae().b[18][1]++, s);
            })
          };
        });
      }
      const suiteDuration =
      /* istanbul ignore next */
      (cov_2ek1ea9nae().s[78]++, Date.now() - suiteStartTime);
      const suiteStatus =
      /* istanbul ignore next */
      (cov_2ek1ea9nae().s[79]++, updatedTests.every(t => {
        /* istanbul ignore next */
        cov_2ek1ea9nae().f[22]++;
        cov_2ek1ea9nae().s[80]++;
        return t.status === 'passed';
      }) ?
      /* istanbul ignore next */
      (cov_2ek1ea9nae().b[20][0]++, 'passed') :
      /* istanbul ignore next */
      (cov_2ek1ea9nae().b[20][1]++, 'failed'));
      const updatedSuite =
      /* istanbul ignore next */
      (cov_2ek1ea9nae().s[81]++, {
        ...suite,
        status: suiteStatus,
        duration: suiteDuration,
        tests: updatedTests
      });
      /* istanbul ignore next */
      cov_2ek1ea9nae().s[82]++;
      updatedSuites.push(updatedSuite);
      // 更新套件状态
      /* istanbul ignore next */
      cov_2ek1ea9nae().s[83]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_2ek1ea9nae().f[23]++;
        cov_2ek1ea9nae().s[84]++;
        return {
          ...prev,
          suites: prev.suites.map(s => {
            /* istanbul ignore next */
            cov_2ek1ea9nae().f[24]++;
            cov_2ek1ea9nae().s[85]++;
            return s.id === suite.id ?
            /* istanbul ignore next */
            (cov_2ek1ea9nae().b[21][0]++, updatedSuite) :
            /* istanbul ignore next */
            (cov_2ek1ea9nae().b[21][1]++, s);
          })
        };
      });
    }
    // 计算总结
    const totalDuration =
    /* istanbul ignore next */
    (cov_2ek1ea9nae().s[86]++, Date.now() - startTime);
    const allTests =
    /* istanbul ignore next */
    (cov_2ek1ea9nae().s[87]++, updatedSuites.flatMap(s => {
      /* istanbul ignore next */
      cov_2ek1ea9nae().f[25]++;
      cov_2ek1ea9nae().s[88]++;
      return s.tests;
    }));
    const summary =
    /* istanbul ignore next */
    (cov_2ek1ea9nae().s[89]++, {
      total: allTests.length,
      passed: allTests.filter(t => {
        /* istanbul ignore next */
        cov_2ek1ea9nae().f[26]++;
        cov_2ek1ea9nae().s[90]++;
        return t.status === 'passed';
      }).length,
      failed: allTests.filter(t => {
        /* istanbul ignore next */
        cov_2ek1ea9nae().f[27]++;
        cov_2ek1ea9nae().s[91]++;
        return t.status === 'failed';
      }).length,
      skipped: allTests.filter(t => {
        /* istanbul ignore next */
        cov_2ek1ea9nae().f[28]++;
        cov_2ek1ea9nae().s[92]++;
        return t.status === 'skipped';
      }).length,
      duration: totalDuration
    });
    /* istanbul ignore next */
    cov_2ek1ea9nae().s[93]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2ek1ea9nae().f[29]++;
      cov_2ek1ea9nae().s[94]++;
      return {
        ...prev,
        isRunning: false,
        progress: 100,
        summary
      };
    });
  }, []));
  /* istanbul ignore next */
  cov_2ek1ea9nae().s[95]++;
  const getStatusIcon = status => {
    /* istanbul ignore next */
    cov_2ek1ea9nae().f[30]++;
    cov_2ek1ea9nae().s[96]++;
    switch (status) {
      case 'passed':
        /* istanbul ignore next */
        cov_2ek1ea9nae().b[22][0]++;
        cov_2ek1ea9nae().s[97]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
          size: 16,
          className: "text-green-500"
        });
      case 'failed':
        /* istanbul ignore next */
        cov_2ek1ea9nae().b[22][1]++;
        cov_2ek1ea9nae().s[98]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.XCircle, {
          size: 16,
          className: "text-red-500"
        });
      case 'running':
        /* istanbul ignore next */
        cov_2ek1ea9nae().b[22][2]++;
        cov_2ek1ea9nae().s[99]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
          size: 16,
          className: "text-blue-500"
        });
      case 'skipped':
        /* istanbul ignore next */
        cov_2ek1ea9nae().b[22][3]++;
        cov_2ek1ea9nae().s[100]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
          size: 16,
          className: "text-yellow-500"
        });
      default:
        /* istanbul ignore next */
        cov_2ek1ea9nae().b[22][4]++;
        cov_2ek1ea9nae().s[101]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
          size: 16,
          className: "text-gray-400"
        });
    }
  };
  /* istanbul ignore next */
  cov_2ek1ea9nae().s[102]++;
  const getStatusColor = status => {
    /* istanbul ignore next */
    cov_2ek1ea9nae().f[31]++;
    cov_2ek1ea9nae().s[103]++;
    switch (status) {
      case 'passed':
        /* istanbul ignore next */
        cov_2ek1ea9nae().b[23][0]++;
        cov_2ek1ea9nae().s[104]++;
        return 'success';
      case 'failed':
        /* istanbul ignore next */
        cov_2ek1ea9nae().b[23][1]++;
        cov_2ek1ea9nae().s[105]++;
        return 'error';
      case 'running':
        /* istanbul ignore next */
        cov_2ek1ea9nae().b[23][2]++;
        cov_2ek1ea9nae().s[106]++;
        return 'processing';
      case 'skipped':
        /* istanbul ignore next */
        cov_2ek1ea9nae().b[23][3]++;
        cov_2ek1ea9nae().s[107]++;
        return 'warning';
      default:
        /* istanbul ignore next */
        cov_2ek1ea9nae().b[23][4]++;
        cov_2ek1ea9nae().s[108]++;
        return 'default';
    }
  };
  /* istanbul ignore next */
  cov_2ek1ea9nae().s[109]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "p-6 space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h1", {
          className: "text-2xl font-bold text-gray-900 flex items-center gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Code, {
            size: 24
          }), "测试运行器"]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-gray-600 mt-1",
          children: "运行前端组件和API接口的自动化测试"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Button, {
        type: "primary",
        size: "large",
        icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Play, {
          size: 16
        }),
        onClick: runAllTests,
        loading: state.isRunning,
        disabled: state.isRunning,
        children: state.isRunning ?
        /* istanbul ignore next */
        (cov_2ek1ea9nae().b[24][0]++, '运行中...') :
        /* istanbul ignore next */
        (cov_2ek1ea9nae().b[24][1]++, '运行所有测试')
      })]
    }),
    /* istanbul ignore next */
    (cov_2ek1ea9nae().b[25][0]++, state.isRunning) &&
    /* istanbul ignore next */
    (cov_2ek1ea9nae().b[25][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-sm font-medium",
            children: "测试进度"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
            className: "text-sm text-gray-500",
            children: [Math.round(state.progress), "%"]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Progress, {
          percent: state.progress,
          status: state.isRunning ?
          /* istanbul ignore next */
          (cov_2ek1ea9nae().b[26][0]++, 'active') :
          /* istanbul ignore next */
          (cov_2ek1ea9nae().b[26][1]++, 'success'),
          strokeColor: {
            '0%': '#108ee9',
            '100%': '#87d068'
          }
        })]
      })
    })),
    /* istanbul ignore next */
    (cov_2ek1ea9nae().b[27][0]++, state.summary.total > 0) &&
    /* istanbul ignore next */
    (cov_2ek1ea9nae().b[27][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Card, {
      title: "测试摘要",
      extra: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.FileText, {
        size: 16
      }),
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Row, {
        gutter: 16,
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
          span: 6,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
            title: "总测试数",
            value: state.summary.total,
            valueStyle: {
              color: '#1890ff'
            }
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
          span: 6,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
            title: "通过",
            value: state.summary.passed,
            valueStyle: {
              color: '#52c41a'
            }
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
          span: 6,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
            title: "失败",
            value: state.summary.failed,
            valueStyle: {
              color: '#f5222d'
            }
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
          span: 6,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
            title: "执行时间",
            value: state.summary.duration,
            suffix: "ms",
            valueStyle: {
              color: '#722ed1'
            }
          })
        })]
      }),
      /* istanbul ignore next */
      (cov_2ek1ea9nae().b[28][0]++, state.summary.failed > 0) &&
      /* istanbul ignore next */
      (cov_2ek1ea9nae().b[28][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Alert, {
        message: "部分测试失败",
        description: `${state.summary.failed} 个测试未通过，请检查详细信息`,
        type: "warning",
        showIcon: true,
        className: "mt-4"
      }))]
    })), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
      title: "测试套件",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Collapse, {
        children: state.suites.map(suite => {
          /* istanbul ignore next */
          cov_2ek1ea9nae().f[32]++;
          cov_2ek1ea9nae().s[110]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)(Panel, {
            header: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between w-full pr-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-3",
                children: [getStatusIcon(suite.status), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "font-medium",
                  children: suite.name
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Tag, {
                  color: getStatusColor(suite.status),
                  children: [suite.tests.filter(t => {
                    /* istanbul ignore next */
                    cov_2ek1ea9nae().f[33]++;
                    cov_2ek1ea9nae().s[111]++;
                    return t.status === 'passed';
                  }).length, "/", suite.tests.length]
                })]
              }),
              /* istanbul ignore next */
              (cov_2ek1ea9nae().b[29][0]++, suite.duration > 0) &&
              /* istanbul ignore next */
              (cov_2ek1ea9nae().b[29][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                className: "text-sm text-gray-500",
                children: [suite.duration, "ms"]
              }))]
            }),
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-gray-600 text-sm mb-4",
                children: suite.description
              }), suite.tests.map(test => {
                /* istanbul ignore next */
                cov_2ek1ea9nae().f[34]++;
                cov_2ek1ea9nae().s[112]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-start justify-between p-3 bg-gray-50 rounded-lg",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-start gap-3 flex-1",
                    children: [getStatusIcon(test.status), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex-1",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "font-medium text-sm",
                        children: test.name
                      }),
                      /* istanbul ignore next */
                      (cov_2ek1ea9nae().b[30][0]++, test.description) &&
                      /* istanbul ignore next */
                      (cov_2ek1ea9nae().b[30][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "text-xs text-gray-500 mt-1",
                        children: test.description
                      })),
                      /* istanbul ignore next */
                      (cov_2ek1ea9nae().b[31][0]++, test.error) &&
                      /* istanbul ignore next */
                      (cov_2ek1ea9nae().b[31][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "text-xs text-red-600 mt-2 p-2 bg-red-50 rounded",
                        children: test.error
                      }))]
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center gap-2 text-xs text-gray-500",
                    children: [
                    /* istanbul ignore next */
                    (cov_2ek1ea9nae().b[32][0]++, test.duration > 0) &&
                    /* istanbul ignore next */
                    (cov_2ek1ea9nae().b[32][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [test.duration, "ms"]
                    })), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Tag, {
                      color: getStatusColor(test.status),
                      children: test.status
                    })]
                  })]
                }, test.id);
              })]
            })
          }, suite.id);
        })
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
      title: "测试覆盖率",
      className: "mb-6",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-1 md:grid-cols-3 gap-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center p-4 bg-blue-50 rounded-lg",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-2xl font-bold text-blue-600",
              children: "85%"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-sm text-gray-600",
              children: "语句覆盖率"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center p-4 bg-green-50 rounded-lg",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-2xl font-bold text-green-600",
              children: "78%"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-sm text-gray-600",
              children: "分支覆盖率"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center p-4 bg-purple-50 rounded-lg",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-2xl font-bold text-purple-600",
              children: "92%"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-sm text-gray-600",
              children: "函数覆盖率"
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Alert, {
          message: "测试覆盖率建议",
          description: "建议保持语句覆盖率在80%以上，分支覆盖率在75%以上，以确保代码质量。",
          type: "info",
          showIcon: true
        })]
      })
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_2ek1ea9nae().s[113]++, TestRunner);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,