{"version":3,"names":["_default","Title","Text","Paragraph","cov_1hksq9l57t","s","_antd","Typography","Option","Select","TabPane","Tabs","RangePicker","DatePicker","TextArea","Input","AdvancedReporting","f","activeTab","setActiveTab","_react","useState","reports","setReports","executions","setExecutions","currentReport","setCurrentReport","reportData","setReportData","loading","setLoading","showReportModal","setShowReportModal","showExecutionModal","setShowExecutionModal","selectedReport","setSelectedReport","form","Form","useForm","executionForm","dashboardWidgets","setDashboardWidgets","isEditing","setIsEditing","useEffect","loadData","Promise","resolve","setTimeout","mockReports","id","name","description","category","data_source","query","parameters","type","label","required","options","value","visualization","chart_type","is_active","created_at","updated_at","created_by","default_value","mockExecutions","report_id","report_name","status","started_at","completed_at","result_count","initialWidgets","title","config","chartType","dataSource","position","x","y","w","h","metric","format","maxRows","error","console","message","handleCreateReport","values","validateFields","newReport","Date","now","toISOString","prev","success","resetFields","handleEditReport","b","map","r","handleDeleteReport","filter","handleExecuteReport","report","mockData","columns","rows","total","summary","total_tickets","avg_response_time","avg_resolution_time","overall_sla_compliance","handleExportReport","formatNames","excel","csv","pdf","handleSaveDashboard","getCategoryColor","getCategoryIcon","_jsxruntime","jsx","_lucidereact","FileText","className","CheckCircle","Users","Settings","BarChart3","getStatusColor","getStatusIcon","Clock","AlertTriangle","reportColumns","key","render","_","record","jsxs","width","Tag","color","Space","size","Button","onClick","icon","Edit","setFieldsValue","Popconfirm","onConfirm","okText","cancelText","danger","Trash2","executionColumns","toLocaleString","error_message","Eye","RefreshCw","level","activeKey","onChange","tab","Plus","Table","rowKey","Fragment","style","minHeight","widget","gridColumn","gridRow","Card","extra","Statistic","suffix","valueStyle","Modal","open","onOk","onCancel","layout","Row","gutter","Col","span","Item","rules","placeholder","valuePropName","Switch","footer","Dropdown","overlay","Menu","Download","Object","entries","replace","l","toUpperCase","col","dataIndex","row","index","obj","forEach","cell","cellIndex","pagination","pageSize","showSizeChanger","showQuickJumper","showTotal","scroll"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/AdvancedReporting.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  Row,\n  Col,\n  Button,\n  Space,\n  Typography,\n  Tabs,\n  Form,\n  Select,\n  DatePicker,\n  Input,\n  Table,\n  Tag,\n  Modal,\n  message,\n  Tooltip,\n  Popconfirm,\n  Divider,\n  Statistic,\n  Progress,\n  Alert,\n  Spin,\n  Empty,\n  Upload,\n  Dropdown,\n  Menu,\n} from \"antd\";\nimport {\n  BarChart3,\n  TrendingUp,\n  TrendingDown,\n  Download,\n  Eye,\n  Filter,\n  Calendar,\n  Users,\n  Clock,\n  CheckCircle,\n  AlertTriangle,\n  Plus,\n  Edit,\n  Trash2,\n  Save,\n  Share2,\n  RefreshCw,\n  FileText,\n  PieChart,\n  LineChart,\n  Settings,\n  Database,\n  CloudDownload,\n  BarChart,\n  PieChart3,\n  Activity,\n} from \"lucide-react\";\nimport type { ColumnsType } from \"antd/es/table\";\n\nconst { Title, Text, Paragraph } = Typography;\nconst { Option } = Select;\nconst { TabPane } = Tabs;\nconst { RangePicker } = DatePicker;\nconst { TextArea } = Input;\n\ninterface ReportDefinition {\n  id: number;\n  name: string;\n  description: string;\n  category: \"ticket\" | \"sla\" | \"user\" | \"system\" | \"custom\";\n  data_source: string;\n  query: string;\n  parameters: ReportParameter[];\n  visualization: \"table\" | \"chart\" | \"dashboard\";\n  chart_type?: \"bar\" | \"line\" | \"pie\" | \"area\" | \"scatter\";\n  schedule?: string;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n  created_by: string;\n}\n\ninterface ReportParameter {\n  name: string;\n  type: \"string\" | \"number\" | \"date\" | \"select\" | \"boolean\";\n  label: string;\n  required: boolean;\n  default_value?: any;\n  options?: { label: string; value: any }[];\n}\n\ninterface ReportExecution {\n  id: number;\n  report_id: number;\n  report_name: string;\n  status: \"running\" | \"completed\" | \"failed\";\n  started_at: string;\n  completed_at?: string;\n  result_count?: number;\n  error_message?: string;\n  created_by: string;\n}\n\ninterface ReportData {\n  columns: string[];\n  rows: any[][];\n  total: number;\n  summary: Record<string, any>;\n}\n\ninterface DashboardWidget {\n  id: string;\n  title: string;\n  type: \"chart\" | \"metric\" | \"table\";\n  config: any;\n  position: { x: number; y: number; w: number; h: number };\n}\n\nconst AdvancedReporting: React.FC = () => {\n  const [activeTab, setActiveTab] = useState(\"reports\");\n  const [reports, setReports] = useState<ReportDefinition[]>([]);\n  const [executions, setExecutions] = useState<ReportExecution[]>([]);\n  const [currentReport, setCurrentReport] = useState<ReportDefinition | null>(null);\n  const [reportData, setReportData] = useState<ReportData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [showReportModal, setShowReportModal] = useState(false);\n  const [showExecutionModal, setShowExecutionModal] = useState(false);\n  const [selectedReport, setSelectedReport] = useState<ReportDefinition | null>(null);\n  const [form] = Form.useForm();\n  const [executionForm] = Form.useForm();\n  const [dashboardWidgets, setDashboardWidgets] = useState<DashboardWidget[]>([]);\n  const [isEditing, setIsEditing] = useState(false);\n\n  // 模拟数据\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    setLoading(true);\n    try {\n      // 模拟API调用\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // 模拟报表定义数据\n      const mockReports: ReportDefinition[] = [\n        {\n          id: 1,\n          name: \"工单处理效率分析\",\n          description: \"分析工单处理效率、响应时间和解决时间\",\n          category: \"ticket\",\n          data_source: \"tickets\",\n          query: \"SELECT * FROM tickets WHERE created_at >= :start_date AND created_at <= :end_date\",\n          parameters: [\n            {\n              name: \"start_date\",\n              type: \"date\",\n              label: \"开始日期\",\n              required: true,\n            },\n            {\n              name: \"end_date\",\n              type: \"date\",\n              label: \"结束日期\",\n              required: true,\n            },\n            {\n              name: \"priority\",\n              type: \"select\",\n              label: \"优先级\",\n              required: false,\n              options: [\n                { label: \"高\", value: \"high\" },\n                { label: \"中\", value: \"medium\" },\n                { label: \"低\", value: \"low\" },\n              ],\n            },\n          ],\n          visualization: \"chart\",\n          chart_type: \"bar\",\n          is_active: true,\n          created_at: \"2024-01-01T00:00:00Z\",\n          updated_at: \"2024-01-01T00:00:00Z\",\n          created_by: \"张三\",\n        },\n        {\n          id: 2,\n          name: \"SLA合规率报表\",\n          description: \"统计SLA合规率、违规情况和趋势分析\",\n          category: \"sla\",\n          data_source: \"sla_metrics\",\n          query: \"SELECT * FROM sla_metrics WHERE period = :period\",\n          parameters: [\n            {\n              name: \"period\",\n              type: \"select\",\n              label: \"统计周期\",\n              required: true,\n              options: [\n                { label: \"日\", value: \"daily\" },\n                { label: \"周\", value: \"weekly\" },\n                { label: \"月\", value: \"monthly\" },\n              ],\n              default_value: \"monthly\",\n            },\n          ],\n          visualization: \"dashboard\",\n          is_active: true,\n          created_at: \"2024-01-01T00:00:00Z\",\n          updated_at: \"2024-01-01T00:00:00Z\",\n          created_by: \"李四\",\n        },\n        {\n          id: 3,\n          name: \"用户工作量统计\",\n          description: \"统计用户工作量、处理工单数量和效率\",\n          category: \"user\",\n          data_source: \"user_workload\",\n          query: \"SELECT * FROM user_workload WHERE user_id = :user_id\",\n          parameters: [\n            {\n              name: \"user_id\",\n              type: \"select\",\n              label: \"用户\",\n              required: true,\n              options: [\n                { label: \"张三\", value: \"1\" },\n                { label: \"李四\", value: \"2\" },\n                { label: \"王五\", value: \"3\" },\n              ],\n            },\n          ],\n          visualization: \"table\",\n          is_active: true,\n          created_at: \"2024-01-01T00:00:00Z\",\n          updated_at: \"2024-01-01T00:00:00Z\",\n          created_by: \"王五\",\n        },\n      ];\n\n      const mockExecutions: ReportExecution[] = [\n        {\n          id: 1,\n          report_id: 1,\n          report_name: \"工单处理效率分析\",\n          status: \"completed\",\n          started_at: \"2024-01-15T10:00:00Z\",\n          completed_at: \"2024-01-15T10:05:00Z\",\n          result_count: 1250,\n          created_by: \"张三\",\n        },\n        {\n          id: 2,\n          report_id: 2,\n          report_name: \"SLA合规率报表\",\n          status: \"running\",\n          started_at: \"2024-01-15T10:30:00Z\",\n          created_by: \"李四\",\n        },\n      ];\n\n      setReports(mockReports);\n      setExecutions(mockExecutions);\n      \n      // 初始化仪表盘组件\n      const initialWidgets: DashboardWidget[] = [\n        {\n          id: \"widget1\",\n          title: \"工单处理趋势\",\n          type: \"chart\",\n          config: { chartType: \"line\", dataSource: \"ticket_trends\" },\n          position: { x: 0, y: 0, w: 6, h: 4 },\n        },\n        {\n          id: \"widget2\",\n          title: \"SLA合规率\",\n          type: \"metric\",\n          config: { metric: \"sla_compliance\", format: \"percentage\" },\n          position: { x: 6, y: 0, w: 3, h: 2 },\n        },\n        {\n          id: \"widget3\",\n          title: \"用户工作量排行\",\n          type: \"table\",\n          config: { dataSource: \"user_workload_ranking\", maxRows: 5 },\n          position: { x: 9, y: 0, w: 3, h: 4 },\n        },\n      ];\n      \n      setDashboardWidgets(initialWidgets);\n    } catch (error) {\n      console.error(\"加载报表数据失败:\", error);\n      message.error(\"加载数据失败\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateReport = async () => {\n    try {\n      const values = await form.validateFields();\n      \n      const newReport: ReportDefinition = {\n        id: Date.now(),\n        ...values,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n        created_by: \"当前用户\",\n      };\n      \n      setReports(prev => [...prev, newReport]);\n      message.success(\"报表创建成功\");\n      setShowReportModal(false);\n      form.resetFields();\n    } catch (error) {\n      console.error(\"创建报表失败:\", error);\n    }\n  };\n\n  const handleEditReport = async () => {\n    try {\n      const values = await form.validateFields();\n      \n      if (selectedReport) {\n        setReports(prev => \n          prev.map(r => \n            r.id === selectedReport.id \n              ? { ...r, ...values, updated_at: new Date().toISOString() }\n              : r\n          )\n        );\n        message.success(\"报表更新成功\");\n        setShowReportModal(false);\n        setSelectedReport(null);\n        form.resetFields();\n      }\n    } catch (error) {\n      console.error(\"更新报表失败:\", error);\n    }\n  };\n\n  const handleDeleteReport = async (id: number) => {\n    try {\n      setReports(prev => prev.filter(r => r.id !== id));\n      message.success(\"报表删除成功\");\n    } catch (error) {\n      message.error(\"删除失败\");\n    }\n  };\n\n  const handleExecuteReport = async (report: ReportDefinition) => {\n    try {\n      setCurrentReport(report);\n      setLoading(true);\n      \n      // 模拟执行报表\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // 模拟报表数据\n      const mockData: ReportData = {\n        columns: [\"日期\", \"工单数量\", \"平均响应时间\", \"平均解决时间\", \"SLA合规率\"],\n        rows: [\n          [\"2024-01-01\", 45, \"2.3小时\", \"8.5小时\", \"95.6%\"],\n          [\"2024-01-02\", 52, \"2.1小时\", \"7.8小时\", \"96.2%\"],\n          [\"2024-01-03\", 38, \"2.5小时\", \"9.2小时\", \"94.8%\"],\n          [\"2024-01-04\", 61, \"1.9小时\", \"7.1小时\", \"97.1%\"],\n          [\"2024-01-05\", 47, \"2.2小时\", \"8.1小时\", \"95.9%\"],\n        ],\n        total: 5,\n        summary: {\n          total_tickets: 243,\n          avg_response_time: \"2.2小时\",\n          avg_resolution_time: \"8.1小时\",\n          overall_sla_compliance: \"95.9%\",\n        },\n      };\n      \n      setReportData(mockData);\n      setShowExecutionModal(true);\n    } catch (error) {\n      console.error(\"执行报表失败:\", error);\n      message.error(\"执行报表失败\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExportReport = async (format: \"excel\" | \"csv\" | \"pdf\") => {\n    try {\n      // 模拟导出\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const formatNames = {\n        excel: \"Excel\",\n        csv: \"CSV\",\n        pdf: \"PDF\",\n      };\n      \n      message.success(`${formatNames[format]}格式导出成功`);\n    } catch (error) {\n      message.error(\"导出失败\");\n    }\n  };\n\n  const handleSaveDashboard = async () => {\n    try {\n      // 模拟保存仪表盘配置\n      await new Promise(resolve => setTimeout(resolve, 500));\n      message.success(\"仪表盘配置保存成功\");\n      setIsEditing(false);\n    } catch (error) {\n      message.error(\"保存失败\");\n    }\n  };\n\n  const getCategoryColor = (category: string) => {\n    switch (category) {\n      case \"ticket\":\n        return \"blue\";\n      case \"sla\":\n        return \"green\";\n      case \"user\":\n        return \"purple\";\n      case \"system\":\n        return \"orange\";\n      case \"custom\":\n        return \"default\";\n      default:\n        return \"default\";\n    }\n  };\n\n  const getCategoryIcon = (category: string) => {\n    switch (category) {\n      case \"ticket\":\n        return <FileText className=\"w-4 h-4\" />;\n      case \"sla\":\n        return <CheckCircle className=\"w-4 h-4\" />;\n      case \"user\":\n        return <Users className=\"w-4 h-4\" />;\n      case \"system\":\n        return <Settings className=\"w-4 h-4\" />;\n      case \"custom\":\n        return <BarChart3 className=\"w-4 h-4\" />;\n      default:\n        return <BarChart3 className=\"w-4 h-4\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"completed\":\n        return \"success\";\n      case \"running\":\n        return \"processing\";\n      case \"failed\":\n        return \"error\";\n      default:\n        return \"default\";\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case \"completed\":\n        return <CheckCircle className=\"w-4 h-4\" />;\n      case \"running\":\n        return <Clock className=\"w-4 h-4\" />;\n      case \"failed\":\n        return <AlertTriangle className=\"w-4 h-4\" />;\n      default:\n        return <Clock className=\"w-4 h-4\" />;\n    }\n  };\n\n  const reportColumns: ColumnsType<ReportDefinition> = [\n    {\n      title: \"报表信息\",\n      key: \"info\",\n      render: (_, record) => (\n        <div className=\"space-y-1\">\n          <div className=\"font-medium\">{record.name}</div>\n          <div className=\"text-sm text-gray-600\">{record.description}</div>\n          <div className=\"flex items-center gap-2 text-xs text-gray-500\">\n            {getCategoryIcon(record.category)}\n            <span>{record.category === \"ticket\" ? \"工单\" : \n                   record.category === \"sla\" ? \"SLA\" : \n                   record.category === \"user\" ? \"用户\" : \n                   record.category === \"system\" ? \"系统\" : \"自定义\"}</span>\n            <span>•</span>\n            <span>创建者：{record.created_by}</span>\n          </div>\n        </div>\n      ),\n    },\n    {\n      title: \"可视化类型\",\n      key: \"visualization\",\n      width: 120,\n      render: (_, record) => (\n        <div className=\"space-y-1\">\n          <Tag color=\"blue\">\n            {record.visualization === \"table\" ? \"表格\" : \n             record.visualization === \"chart\" ? \"图表\" : \"仪表盘\"}\n          </Tag>\n          {record.chart_type && (\n            <div className=\"text-xs text-gray-500\">\n              {record.chart_type === \"bar\" ? \"柱状图\" : \n               record.chart_type === \"line\" ? \"折线图\" : \n               record.chart_type === \"pie\" ? \"饼图\" : \n               record.chart_type === \"area\" ? \"面积图\" : \"散点图\"}\n            </div>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: \"状态\",\n      key: \"is_active\",\n      width: 80,\n      render: (_, record) => (\n        <Tag color={record.is_active ? \"success\" : \"default\"}>\n          {record.is_active ? \"启用\" : \"禁用\"}\n        </Tag>\n      ),\n    },\n    {\n      title: \"操作\",\n      key: \"actions\",\n      width: 200,\n      render: (_, record) => (\n        <Space size=\"small\">\n          <Button\n            size=\"small\"\n            type=\"primary\"\n            onClick={() => handleExecuteReport(record)}\n          >\n            执行\n          </Button>\n          <Button\n            size=\"small\"\n            icon={<Edit className=\"w-3 h-3\" />}\n            onClick={() => {\n              setSelectedReport(record);\n              form.setFieldsValue(record);\n              setShowReportModal(true);\n            }}\n          >\n            编辑\n          </Button>\n          <Popconfirm\n            title=\"确认删除\"\n            description=\"确定要删除这个报表吗？\"\n            onConfirm={() => handleDeleteReport(record.id)}\n            okText=\"确认\"\n            cancelText=\"取消\"\n          >\n            <Button size=\"small\" danger icon={<Trash2 className=\"w-3 h-3\" />} />\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  const executionColumns: ColumnsType<ReportExecution> = [\n    {\n      title: \"报表名称\",\n      key: \"report_name\",\n      render: (_, record) => (\n        <div className=\"font-medium\">{record.report_name}</div>\n      ),\n    },\n    {\n      title: \"状态\",\n      key: \"status\",\n      width: 120,\n      render: (_, record) => (\n        <Tag color={getStatusColor(record.status)}>\n          {getStatusIcon(record.status)}\n          {record.status === \"completed\" ? \"已完成\" : \n           record.status === \"running\" ? \"执行中\" : \"执行失败\"}\n        </Tag>\n      ),\n    },\n    {\n      title: \"执行时间\",\n      key: \"execution_time\",\n      width: 150,\n      render: (_, record) => (\n        <div className=\"text-sm\">\n          <div>开始：{new Date(record.started_at).toLocaleString()}</div>\n          {record.completed_at && (\n            <div>完成：{new Date(record.completed_at).toLocaleString()}</div>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: \"结果\",\n      key: \"result\",\n      width: 100,\n      render: (_, record) => (\n        <div className=\"text-sm\">\n          {record.status === \"completed\" && record.result_count && (\n            <div>记录数：{record.result_count}</div>\n          )}\n          {record.status === \"failed\" && record.error_message && (\n            <div className=\"text-red-500\">错误：{record.error_message}</div>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: \"操作\",\n      key: \"actions\",\n      width: 120,\n      render: (_, record) => (\n        <Space size=\"small\">\n          {record.status === \"completed\" && (\n            <Button size=\"small\" icon={<Eye className=\"w-3 h-3\" />}>\n              查看结果\n            </Button>\n          )}\n          {record.status === \"running\" && (\n            <Button size=\"small\" icon={<RefreshCw className=\"w-3 h-3\" />}>\n              刷新状态\n            </Button>\n          )}\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <Title level={2}>\n            <BarChart3 className=\"inline-block w-6 h-6 mr-2\" />\n            高级报表分析\n          </Title>\n          <Text type=\"secondary\">创建自定义报表、分析数据和构建实时仪表盘</Text>\n        </div>\n        <Space>\n          <Button\n            icon={<RefreshCw className=\"w-4 h-4\" />}\n            onClick={loadData}\n          >\n            刷新\n          </Button>\n        </Space>\n      </div>\n\n      <Tabs activeKey={activeTab} onChange={setActiveTab}>\n        <TabPane tab=\"报表管理\" key=\"reports\">\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <Title level={4}>报表定义</Title>\n              <Button\n                type=\"primary\"\n                icon={<Plus className=\"w-4 h-4\" />}\n                onClick={() => {\n                  setSelectedReport(null);\n                  form.resetFields();\n                  setShowReportModal(true);\n                }}\n              >\n                新建报表\n              </Button>\n            </div>\n\n            <Table\n              columns={reportColumns}\n              dataSource={reports}\n              rowKey=\"id\"\n              loading={loading}\n              size=\"small\"\n            />\n          </div>\n        </TabPane>\n\n        <TabPane tab=\"执行历史\" key=\"executions\">\n          <div className=\"space-y-4\">\n            <Title level={4}>报表执行历史</Title>\n            <Table\n              columns={executionColumns}\n              dataSource={executions}\n              rowKey=\"id\"\n              size=\"small\"\n            />\n          </div>\n        </TabPane>\n\n        <TabPane tab=\"实时仪表盘\" key=\"dashboard\">\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <Title level={4}>实时数据仪表盘</Title>\n              <Space>\n                {isEditing ? (\n                  <>\n                    <Button onClick={() => setIsEditing(false)}>\n                      取消编辑\n                    </Button>\n                    <Button type=\"primary\" onClick={handleSaveDashboard}>\n                      保存配置\n                    </Button>\n                  </>\n                ) : (\n                  <Button\n                    icon={<Edit className=\"w-4 h-4\" />}\n                    onClick={() => setIsEditing(true)}\n                  >\n                    编辑布局\n                  </Button>\n                )}\n              </Space>\n            </div>\n\n            <div className=\"grid grid-cols-12 gap-4\" style={{ minHeight: \"600px\" }}>\n              {dashboardWidgets.map((widget) => (\n                <div\n                  key={widget.id}\n                  className=\"col-span-3\"\n                  style={{\n                    gridColumn: `span ${widget.position.w}`,\n                    gridRow: `span ${widget.position.h}`,\n                  }}\n                >\n                  <Card\n                    title={widget.title}\n                    size=\"small\"\n                    className=\"h-full\"\n                    extra={\n                      isEditing && (\n                        <Space>\n                          <Button size=\"small\" icon={<Settings className=\"w-3 h-3\" />} />\n                          <Button size=\"small\" icon={<Trash2 className=\"w-3 h-3\" />} />\n                        </Space>\n                      )\n                    }\n                  >\n                    <div className=\"h-full flex items-center justify-center\">\n                      {widget.type === \"chart\" && (\n                        <div className=\"text-center text-gray-500\">\n                          <BarChart3 className=\"w-12 h-12 mx-auto mb-2\" />\n                          <div>图表组件</div>\n                          <div className=\"text-xs\">{widget.config.chartType}</div>\n                        </div>\n                      )}\n                      {widget.type === \"metric\" && (\n                        <div className=\"text-center\">\n                          <Statistic\n                            title={widget.title}\n                            value={95.6}\n                            suffix=\"%\"\n                            valueStyle={{ color: \"#52c41a\" }}\n                          />\n                        </div>\n                      )}\n                      {widget.type === \"table\" && (\n                        <div className=\"text-center text-gray-500\">\n                          <Table className=\"w-full\" size=\"small\" />\n                        </div>\n                      )}\n                    </div>\n                  </Card>\n                </div>\n              ))}\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n\n      {/* 报表编辑模态框 */}\n      <Modal\n        title={selectedReport ? \"编辑报表\" : \"新建报表\"}\n        open={showReportModal}\n        onOk={selectedReport ? handleEditReport : handleCreateReport}\n        onCancel={() => {\n          setShowReportModal(false);\n          setSelectedReport(null);\n          form.resetFields();\n        }}\n        width={800}\n        okText=\"保存\"\n        cancelText=\"取消\"\n      >\n        <Form form={form} layout=\"vertical\">\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                label=\"报表名称\"\n                name=\"name\"\n                rules={[{ required: true, message: \"请输入报表名称\" }]}\n              >\n                <Input placeholder=\"请输入报表名称\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"报表分类\"\n                name=\"category\"\n                rules={[{ required: true, message: \"请选择报表分类\" }]}\n              >\n                <Select placeholder=\"请选择报表分类\">\n                  <Option value=\"ticket\">工单</Option>\n                  <Option value=\"sla\">SLA</Option>\n                  <Option value=\"user\">用户</Option>\n                  <Option value=\"system\">系统</Option>\n                  <Option value=\"custom\">自定义</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Form.Item\n            label=\"描述\"\n            name=\"description\"\n          >\n            <TextArea rows={2} placeholder=\"请输入报表描述\" />\n          </Form.Item>\n\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                label=\"数据源\"\n                name=\"data_source\"\n                rules={[{ required: true, message: \"请输入数据源\" }]}\n              >\n                <Input placeholder=\"请输入数据源\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"可视化类型\"\n                name=\"visualization\"\n                rules={[{ required: true, message: \"请选择可视化类型\" }]}\n              >\n                <Select placeholder=\"请选择可视化类型\">\n                  <Option value=\"table\">表格</Option>\n                  <Option value=\"chart\">图表</Option>\n                  <Option value=\"dashboard\">仪表盘</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Form.Item\n            label=\"SQL查询\"\n            name=\"query\"\n            rules={[{ required: true, message: \"请输入SQL查询\" }]}\n          >\n            <TextArea rows={4} placeholder=\"请输入SQL查询语句\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"启用状态\"\n            name=\"is_active\"\n            valuePropName=\"checked\"\n          >\n            <Switch />\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      {/* 报表执行结果模态框 */}\n      <Modal\n        title={`报表执行结果 - ${currentReport?.name}`}\n        open={showExecutionModal}\n        onCancel={() => setShowExecutionModal(false)}\n        width={1200}\n        footer={[\n          <Button key=\"close\" onClick={() => setShowExecutionModal(false)}>\n            关闭\n          </Button>,\n          <Dropdown\n            key=\"export\"\n            overlay={\n              <Menu>\n                <Menu.Item key=\"excel\" onClick={() => handleExportReport(\"excel\")}>\n                  <Download className=\"w-4 h-4 mr-2\" />\n                  导出Excel\n                </Menu.Item>\n                <Menu.Item key=\"csv\" onClick={() => handleExportReport(\"csv\")}>\n                  <Download className=\"w-4 h-4 mr-2\" />\n                  导出CSV\n                </Menu.Item>\n                <Menu.Item key=\"pdf\" onClick={() => handleExportReport(\"pdf\")}>\n                  <Download className=\"w-4 h-4 mr-2\" />\n                  导出PDF\n                </Menu.Item>\n              </Menu>\n            }\n          >\n            <Button type=\"primary\" icon={<Download className=\"w-4 h-4\" />}>\n              导出数据\n            </Button>\n          </Dropdown>,\n        ]}\n      >\n        {reportData && (\n          <div className=\"space-y-4\">\n            {/* 数据摘要 */}\n            <Card title=\"数据摘要\" size=\"small\">\n              <Row gutter={[16, 16]}>\n                {Object.entries(reportData.summary).map(([key, value]) => (\n                  <Col span={6} key={key}>\n                    <Statistic\n                      title={key.replace(/_/g, \" \").replace(/\\b\\w/g, l => l.toUpperCase())}\n                      value={value}\n                    />\n                  </Col>\n                ))}\n              </Row>\n            </Card>\n\n            {/* 数据表格 */}\n            <Card title=\"详细数据\" size=\"small\">\n              <Table\n                columns={reportData.columns.map(col => ({\n                  title: col,\n                  dataIndex: col,\n                  key: col,\n                }))}\n                dataSource={reportData.rows.map((row, index) => {\n                  const obj: any = { key: index };\n                  row.forEach((cell, cellIndex) => {\n                    obj[reportData.columns[cellIndex]] = cell;\n                  });\n                  return obj;\n                })}\n                pagination={{\n                  pageSize: 10,\n                  showSizeChanger: true,\n                  showQuickJumper: true,\n                  showTotal: (total) => `共 ${total} 条记录`,\n                }}\n                size=\"small\"\n                scroll={{ x: true }}\n              />\n            </Card>\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default AdvancedReporting;\n"],"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","ignoreList":[]}