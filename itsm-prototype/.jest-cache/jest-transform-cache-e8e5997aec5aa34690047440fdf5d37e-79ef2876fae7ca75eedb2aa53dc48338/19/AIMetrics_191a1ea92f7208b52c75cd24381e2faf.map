{"version":3,"names":["AIMetrics","AIMetricsComponent","className","cov_lj8826hfn","b","days","f","metrics","setMetrics","s","_react","useState","loading","setLoading","error","setError","formatResponseTime","useCallback","seconds","Math","round","toFixed","getKindLabel","kind","labels","triage","search","summarize","chat","sortedKindData","useMemo","by_kind","Object","entries","sort","a","loadMetrics","data","_aiapi","aiGetMetrics","err","console","errorMessage","Error","message","includes","useEffect","_jsxruntime","jsx","jsxs","onClick","_lucidereact","BarChart3","total_requests","TrendingUp","total_feedback","MessageSquare","useful_rate","Star","avg_response_time_seconds","Clock","useful_feedback","length","map","count","default","memo","prevProps","nextProps"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/AIMetrics.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport {\n  BarChart3,\n  TrendingUp,\n  Clock,\n  Star,\n  MessageSquare,\n} from \"lucide-react\";\nimport { aiGetMetrics, type AIMetrics as AIMetricsType } from \"../lib/ai-api\";\n\ninterface AIMetricsProps {\n  className?: string;\n  days?: number;\n}\n\nconst AIMetricsComponent: React.FC<AIMetricsProps> = ({\n  className = \"\",\n  days = 7,\n}) => {\n  const [metrics, setMetrics] = useState<AIMetricsType | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // 将所有hooks移到组件顶部\n  const formatResponseTime = useCallback((seconds: number) => {\n    if (seconds < 1) return `${Math.round(seconds * 1000)}ms`;\n    if (seconds < 60) return `${seconds.toFixed(1)}s`;\n    return `${Math.round(seconds / 60)}m ${Math.round(seconds % 60)}s`;\n  }, []);\n\n  const getKindLabel = useCallback((kind: string) => {\n    const labels: Record<string, string> = {\n      triage: \"智能分类\",\n      search: \"知识搜索\",\n      summarize: \"智能摘要\",\n      \"similar-incidents\": \"相似事件\",\n      chat: \"AI对话\",\n    };\n    return labels[kind] || kind;\n  }, []);\n\n  // 缓存排序后的数据\n  const sortedKindData = useMemo(() => {\n    if (!metrics?.by_kind) return [];\n    return Object.entries(metrics.by_kind).sort(([, a], [, b]) => b - a);\n  }, [metrics?.by_kind]);\n\n  const loadMetrics = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await aiGetMetrics(days);\n      setMetrics(data);\n    } catch (err) {\n      console.error(\"AI Metrics加载失败:\", err);\n\n      // 根据错误类型提供不同的错误信息\n      let errorMessage = \"加载指标失败\";\n      if (err instanceof Error) {\n        if (\n          err.message.includes(\"401\") ||\n          err.message.includes(\"Authentication failed\")\n        ) {\n          errorMessage = \"需要登录才能查看AI指标\";\n        } else if (err.message.includes(\"500\")) {\n          errorMessage = \"服务器暂时不可用，请稍后重试\";\n        } else if (err.message.includes(\"404\")) {\n          errorMessage = \"AI指标接口不可用\";\n        } else if (err.message.includes(\"Failed to fetch\")) {\n          errorMessage = \"网络连接失败，请检查网络设置\";\n        } else {\n          errorMessage = err.message;\n        }\n      }\n\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  }, [days]);\n\n  useEffect(() => {\n    loadMetrics();\n  }, [loadMetrics]);\n\n  if (loading) {\n    return (\n      <div className={`p-4 bg-white rounded-lg shadow ${className}`}>\n        <div className=\"animate-pulse\">\n          <div className=\"h-4 bg-gray-200 rounded w-1/3 mb-4\"></div>\n          <div className=\"space-y-3\">\n            <div className=\"h-3 bg-gray-200 rounded\"></div>\n            <div className=\"h-3 bg-gray-200 rounded w-5/6\"></div>\n            <div className=\"h-3 bg-gray-200 rounded w-4/6\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div\n        className={`p-4 bg-red-50 border border-red-200 rounded-lg ${className}`}\n      >\n        <div className=\"text-red-600 text-sm\">{error}</div>\n        <button\n          onClick={loadMetrics}\n          className=\"mt-2 text-xs text-red-700 hover:text-red-800 underline\"\n        >\n          重试\n        </button>\n      </div>\n    );\n  }\n\n  if (!metrics) {\n    return null;\n  }\n\n  return (\n    <div className={`bg-white rounded-lg shadow ${className}`}>\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold text-gray-800 flex items-center\">\n            <BarChart3 className=\"w-5 h-5 mr-2 text-blue-600\" />\n            AI 使用指标\n          </h3>\n          <span className=\"text-sm text-gray-500\">最近 {days} 天</span>\n        </div>\n      </div>\n\n      {/* Metrics Grid */}\n      <div className=\"p-4\">\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n          {/* Total Requests */}\n          <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {metrics.total_requests}\n            </div>\n            <div className=\"text-sm text-gray-600 flex items-center justify-center\">\n              <TrendingUp className=\"w-4 h-4 mr-1\" />\n              总请求数\n            </div>\n          </div>\n\n          {/* Total Feedback */}\n          <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {metrics.total_feedback}\n            </div>\n            <div className=\"text-sm text-gray-600 flex items-center justify-center\">\n              <MessageSquare className=\"w-4 h-4 mr-1\" />\n              反馈总数\n            </div>\n          </div>\n\n          {/* Useful Rate */}\n          <div className=\"text-center p-3 bg-yellow-50 rounded-lg\">\n            <div className=\"text-2xl font-bold text-yellow-600\">\n              {Math.round(metrics.useful_rate * 100)}%\n            </div>\n            <div className=\"text-sm text-gray-600 flex items-center justify-center\">\n              <Star className=\"w-4 h-4 mr-1\" />\n              有用率\n            </div>\n          </div>\n\n          {/* Avg Response Time */}\n          <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\n            <div className=\"text-2xl font-bold text-purple-600\">\n              {formatResponseTime(metrics.avg_response_time_seconds)}\n            </div>\n            <div className=\"text-sm text-gray-600 flex items-center justify-center\">\n              <Clock className=\"w-4 h-4 mr-1\" />\n              平均响应\n            </div>\n          </div>\n        </div>\n\n        {/* Feedback Details */}\n        <div className=\"mb-6\">\n          <h4 className=\"text-md font-semibold text-gray-700 mb-3\">反馈详情</h4>\n          <div className=\"bg-gray-50 rounded-lg p-3\">\n            <div className=\"flex items-center justify-between text-sm\">\n              <span className=\"text-gray-600\">有用反馈</span>\n              <span className=\"font-semibold text-green-600\">\n                {metrics.useful_feedback}\n              </span>\n            </div>\n            <div className=\"flex items-center justify-between text-sm mt-1\">\n              <span className=\"text-gray-600\">无用反馈</span>\n              <span className=\"font-semibold text-red-600\">\n                {metrics.total_feedback - metrics.useful_feedback}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {/* Usage by Kind */}\n        {sortedKindData.length > 0 && (\n          <div>\n            <h4 className=\"text-md font-semibold text-gray-700 mb-3\">\n              按功能分类\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedKindData.map(([kind, count]) => (\n                <div\n                  key={kind}\n                  className=\"flex items-center justify-between p-2 bg-gray-50 rounded\"\n                >\n                  <span className=\"text-sm text-gray-600\">\n                    {getKindLabel(kind)}\n                  </span>\n                  <span className=\"text-sm font-semibold text-gray-800\">\n                    {count}\n                  </span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// 使用React.memo优化性能\nexport const AIMetrics = React.memo(AIMetricsComponent, (prevProps, nextProps) => {\n  return prevProps.className === nextProps.className && prevProps.days === nextProps.days;\n});\n"],"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","ignoreList":[]}