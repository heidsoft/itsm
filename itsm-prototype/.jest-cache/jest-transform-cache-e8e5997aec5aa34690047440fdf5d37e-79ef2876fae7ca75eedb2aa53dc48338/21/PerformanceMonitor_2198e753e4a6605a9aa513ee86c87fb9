32b6b3a7a4c139b9c5270e3634a42f5e
'use client';
"use strict";

/* istanbul ignore next */
function cov_77wlcl4k5() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/PerformanceMonitor.tsx";
  var hash = "641613d21e3a7b0fa317ef649e0ada8250da53dd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/PerformanceMonitor.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 14
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "9": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "11": {
        start: {
          line: 25,
          column: 39
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "12": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "13": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "14": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 20
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "18": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "19": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "20": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "21": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "22": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "23": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "24": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 88
        }
      },
      "25": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "26": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "27": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "28": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "29": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "30": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "31": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "32": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "33": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "34": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "35": {
        start: {
          line: 65,
          column: 17
        },
        end: {
          line: 65,
          column: 33
        }
      },
      "36": {
        start: {
          line: 66,
          column: 27
        },
        end: {
          line: 758,
          column: 1
        }
      },
      "37": {
        start: {
          line: 67,
          column: 34
        },
        end: {
          line: 67,
          column: 60
        }
      },
      "38": {
        start: {
          line: 68,
          column: 32
        },
        end: {
          line: 68,
          column: 56
        }
      },
      "39": {
        start: {
          line: 69,
          column: 34
        },
        end: {
          line: 69,
          column: 61
        }
      },
      "40": {
        start: {
          line: 70,
          column: 40
        },
        end: {
          line: 70,
          column: 66
        }
      },
      "41": {
        start: {
          line: 72,
          column: 25
        },
        end: {
          line: 153,
          column: 10
        }
      },
      "42": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 25
        }
      },
      "43": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "44": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 68
        }
      },
      "45": {
        start: {
          line: 76,
          column: 41
        },
        end: {
          line: 76,
          column: 66
        }
      },
      "46": {
        start: {
          line: 78,
          column: 32
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "47": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 96
        }
      },
      "48": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 90
        }
      },
      "49": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 36
        }
      },
      "50": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 38
        }
      },
      "51": {
        start: {
          line: 116,
          column: 30
        },
        end: {
          line: 116,
          column: 32
        }
      },
      "52": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "53": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 124,
          column: 19
        }
      },
      "54": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "55": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 133,
          column: 19
        }
      },
      "56": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "57": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 142,
          column: 19
        }
      },
      "58": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 147,
          column: 19
        }
      },
      "59": {
        start: {
          line: 144,
          column: 30
        },
        end: {
          line: 147,
          column: 17
        }
      },
      "60": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 46
        }
      },
      "61": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 30
        }
      },
      "62": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 162,
          column: 7
        }
      },
      "63": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 23
        }
      },
      "64": {
        start: {
          line: 157,
          column: 25
        },
        end: {
          line: 157,
          column: 67
        }
      },
      "65": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 43
        }
      },
      "66": {
        start: {
          line: 158,
          column: 19
        },
        end: {
          line: 158,
          column: 42
        }
      },
      "67": {
        start: {
          line: 164,
          column: 27
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "68": {
        start: {
          line: 165,
          column: 27
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "69": {
        start: {
          line: 179,
          column: 26
        },
        end: {
          line: 179,
          column: 42
        }
      },
      "70": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 56
        }
      },
      "71": {
        start: {
          line: 180,
          column: 39
        },
        end: {
          line: 180,
          column: 56
        }
      },
      "72": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 57
        }
      },
      "73": {
        start: {
          line: 181,
          column: 40
        },
        end: {
          line: 181,
          column: 57
        }
      },
      "74": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 25
        }
      },
      "75": {
        start: {
          line: 185,
          column: 25
        },
        end: {
          line: 196,
          column: 5
        }
      },
      "76": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "77": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 190,
          column: 15
        }
      },
      "78": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 195,
          column: 11
        }
      },
      "79": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "80": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 214,
          column: 11
        }
      },
      "81": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 302,
          column: 5
        }
      },
      "82": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 301,
          column: 11
        }
      },
      "83": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 757,
          column: 7
        }
      },
      "84": {
        start: {
          line: 382,
          column: 67
        },
        end: {
          line: 382,
          column: 92
        }
      },
      "85": {
        start: {
          line: 443,
          column: 67
        },
        end: {
          line: 443,
          column: 92
        }
      },
      "86": {
        start: {
          line: 507,
          column: 67
        },
        end: {
          line: 507,
          column: 92
        }
      },
      "87": {
        start: {
          line: 723,
          column: 73
        },
        end: {
          line: 723,
          column: 84
        }
      },
      "88": {
        start: {
          line: 728,
          column: 92
        },
        end: {
          line: 749,
          column: 52
        }
      },
      "89": {
        start: {
          line: 759,
          column: 17
        },
        end: {
          line: 759,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 25
          }
        },
        loc: {
          start: {
            line: 13,
            column: 35
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 47
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 28,
            column: 40
          }
        },
        loc: {
          start: {
            line: 28,
            column: 61
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 34
          }
        },
        loc: {
          start: {
            line: 32,
            column: 53
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 32
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 66,
            column: 27
          },
          end: {
            line: 66,
            column: 28
          }
        },
        loc: {
          start: {
            line: 66,
            column: 110
          },
          end: {
            line: 758,
            column: 1
          }
        },
        line: 66
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 72,
            column: 49
          },
          end: {
            line: 72,
            column: 50
          }
        },
        loc: {
          start: {
            line: 72,
            column: 59
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 72
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 76,
            column: 30
          },
          end: {
            line: 76,
            column: 31
          }
        },
        loc: {
          start: {
            line: 76,
            column: 41
          },
          end: {
            line: 76,
            column: 66
          }
        },
        line: 76
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 144,
            column: 22
          },
          end: {
            line: 144,
            column: 23
          }
        },
        loc: {
          start: {
            line: 144,
            column: 30
          },
          end: {
            line: 147,
            column: 17
          }
        },
        line: 144
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 155,
            column: 26
          },
          end: {
            line: 155,
            column: 27
          }
        },
        loc: {
          start: {
            line: 155,
            column: 30
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 155
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 158,
            column: 15
          },
          end: {
            line: 158,
            column: 16
          }
        },
        loc: {
          start: {
            line: 158,
            column: 19
          },
          end: {
            line: 158,
            column: 42
          }
        },
        line: 158
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 164,
            column: 27
          },
          end: {
            line: 164,
            column: 28
          }
        },
        loc: {
          start: {
            line: 164,
            column: 50
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 164
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 185,
            column: 25
          },
          end: {
            line: 185,
            column: 26
          }
        },
        loc: {
          start: {
            line: 185,
            column: 45
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 185
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 382,
            column: 56
          },
          end: {
            line: 382,
            column: 57
          }
        },
        loc: {
          start: {
            line: 382,
            column: 67
          },
          end: {
            line: 382,
            column: 92
          }
        },
        line: 382
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 443,
            column: 56
          },
          end: {
            line: 443,
            column: 57
          }
        },
        loc: {
          start: {
            line: 443,
            column: 67
          },
          end: {
            line: 443,
            column: 92
          }
        },
        line: 443
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 507,
            column: 56
          },
          end: {
            line: 507,
            column: 57
          }
        },
        loc: {
          start: {
            line: 507,
            column: 67
          },
          end: {
            line: 507,
            column: 92
          }
        },
        line: 507
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 723,
            column: 68
          },
          end: {
            line: 723,
            column: 69
          }
        },
        loc: {
          start: {
            line: 723,
            column: 73
          },
          end: {
            line: 723,
            column: 84
          }
        },
        line: 723
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 728,
            column: 69
          },
          end: {
            line: 728,
            column: 70
          }
        },
        loc: {
          start: {
            line: 728,
            column: 92
          },
          end: {
            line: 749,
            column: 52
          }
        },
        line: 728
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 45
          }
        }, {
          start: {
            line: 29,
            column: 48
          },
          end: {
            line: 29,
            column: 65
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 27
          }
        }, {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 33,
            column: 45
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 47
          }
        }, {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 76
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 31
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 48,
            column: 88
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 29
          }
        }, {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 79
          }
        }],
        line: 50
      },
      "11": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 51,
            column: 88
          }
        }, {
          start: {
            line: 51,
            column: 91
          },
          end: {
            line: 51,
            column: 95
          }
        }],
        line: 51
      },
      "12": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 56,
            column: 13
          }
        }],
        line: 52
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 20
          }
        }, {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 33
          }
        }, {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 45
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 66,
            column: 30
          },
          end: {
            line: 66,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 48
          },
          end: {
            line: 66,
            column: 53
          }
        }],
        line: 66
      },
      "16": {
        loc: {
          start: {
            line: 66,
            column: 55
          },
          end: {
            line: 66,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 68
          },
          end: {
            line: 66,
            column: 72
          }
        }],
        line: 66
      },
      "17": {
        loc: {
          start: {
            line: 66,
            column: 74
          },
          end: {
            line: 66,
            column: 89
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 84
          },
          end: {
            line: 66,
            column: 89
          }
        }],
        line: 66
      },
      "18": {
        loc: {
          start: {
            line: 66,
            column: 91
          },
          end: {
            line: 66,
            column: 105
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 103
          },
          end: {
            line: 66,
            column: 105
          }
        }],
        line: 66
      },
      "19": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "20": {
        loc: {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "21": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "22": {
        loc: {
          start: {
            line: 164,
            column: 35
          },
          end: {
            line: 164,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 164,
            column: 42
          },
          end: {
            line: 164,
            column: 47
          }
        }],
        line: 164
      },
      "23": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 180,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 180,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "24": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 181,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 181,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "25": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "26": {
        loc: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "27": {
        loc: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "28": {
        loc: {
          start: {
            line: 295,
            column: 39
          },
          end: {
            line: 295,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 295,
            column: 80
          },
          end: {
            line: 295,
            column: 89
          }
        }, {
          start: {
            line: 295,
            column: 92
          },
          end: {
            line: 295,
            column: 101
          }
        }],
        line: 295
      },
      "29": {
        loc: {
          start: {
            line: 332,
            column: 40
          },
          end: {
            line: 338,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 40
          },
          end: {
            line: 332,
            column: 50
          }
        }, {
          start: {
            line: 332,
            column: 68
          },
          end: {
            line: 338,
            column: 42
          }
        }],
        line: 332
      },
      "30": {
        loc: {
          start: {
            line: 400,
            column: 52
          },
          end: {
            line: 413,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 400,
            column: 52
          },
          end: {
            line: 400,
            column: 75
          }
        }, {
          start: {
            line: 400,
            column: 93
          },
          end: {
            line: 413,
            column: 54
          }
        }],
        line: 400
      },
      "31": {
        loc: {
          start: {
            line: 612,
            column: 63
          },
          end: {
            line: 612,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 612,
            column: 95
          },
          end: {
            line: 612,
            column: 100
          }
        }, {
          start: {
            line: 612,
            column: 103
          },
          end: {
            line: 612,
            column: 110
          }
        }],
        line: 612
      },
      "32": {
        loc: {
          start: {
            line: 650,
            column: 59
          },
          end: {
            line: 650,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 650,
            column: 100
          },
          end: {
            line: 650,
            column: 108
          }
        }, {
          start: {
            line: 650,
            column: 111
          },
          end: {
            line: 650,
            column: 118
          }
        }],
        line: 650
      },
      "33": {
        loc: {
          start: {
            line: 666,
            column: 59
          },
          end: {
            line: 666,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 666,
            column: 100
          },
          end: {
            line: 666,
            column: 105
          }
        }, {
          start: {
            line: 666,
            column: 108
          },
          end: {
            line: 666,
            column: 114
          }
        }],
        line: 666
      },
      "34": {
        loc: {
          start: {
            line: 682,
            column: 59
          },
          end: {
            line: 682,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 682,
            column: 92
          },
          end: {
            line: 682,
            column: 97
          }
        }, {
          start: {
            line: 682,
            column: 100
          },
          end: {
            line: 682,
            column: 107
          }
        }],
        line: 682
      },
      "35": {
        loc: {
          start: {
            line: 698,
            column: 59
          },
          end: {
            line: 698,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 698,
            column: 95
          },
          end: {
            line: 698,
            column: 103
          }
        }, {
          start: {
            line: 698,
            column: 106
          },
          end: {
            line: 698,
            column: 112
          }
        }],
        line: 698
      },
      "36": {
        loc: {
          start: {
            line: 710,
            column: 28
          },
          end: {
            line: 751,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 710,
            column: 28
          },
          end: {
            line: 710,
            column: 38
          }
        }, {
          start: {
            line: 710,
            column: 42
          },
          end: {
            line: 710,
            column: 59
          }
        }, {
          start: {
            line: 710,
            column: 77
          },
          end: {
            line: 751,
            column: 30
          }
        }],
        line: 710
      },
      "37": {
        loc: {
          start: {
            line: 729,
            column: 49
          },
          end: {
            line: 735,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 729,
            column: 88
          },
          end: {
            line: 732,
            column: 46
          }
        }, {
          start: {
            line: 732,
            column: 63
          },
          end: {
            line: 735,
            column: 46
          }
        }],
        line: 729
      },
      "38": {
        loc: {
          start: {
            line: 740,
            column: 82
          },
          end: {
            line: 740,
            column: 141
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 740,
            column: 107
          },
          end: {
            line: 740,
            column: 121
          }
        }, {
          start: {
            line: 740,
            column: 124
          },
          end: {
            line: 740,
            column: 141
          }
        }],
        line: 740
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/PerformanceMonitor.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { \n  Card, \n  Progress, \n  Statistic, \n  Row, \n  Col, \n  Tag, \n  Timeline,\n  Typography,\n  Space,\n  Button\n} from 'antd';\nimport { \n  Activity, \n  Cpu, \n  HardDrive, \n  Wifi, \n  Clock, \n  AlertTriangle,\n  CheckCircle,\n  TrendingUp,\n  TrendingDown,\n  RefreshCw\n} from 'lucide-react';\n\nconst { Text } = Typography;\n\ninterface PerformanceMetrics {\n  cpu: {\n    usage: number;\n    cores: number;\n    temperature?: number;\n  };\n  memory: {\n    used: number;\n    total: number;\n    usage: number;\n  };\n  disk: {\n    used: number;\n    total: number;\n    usage: number;\n  };\n  network: {\n    inbound: number;\n    outbound: number;\n    latency: number;\n  };\n  response: {\n    avgResponseTime: number;\n    p95ResponseTime: number;\n    errorRate: number;\n  };\n  database: {\n    connections: number;\n    maxConnections: number;\n    queryTime: number;\n  };\n}\n\ninterface SystemAlert {\n  id: string;\n  type: 'warning' | 'error' | 'info';\n  message: string;\n  timestamp: string;\n  resolved: boolean;\n}\n\ninterface PerformanceMonitorProps {\n  refreshInterval?: number;\n  showAlerts?: boolean;\n  compact?: boolean;\n  className?: string;\n}\n\nexport const PerformanceMonitor: React.FC<PerformanceMonitorProps> = ({\n  refreshInterval = 30000, // 30\u79D2\u5237\u65B0\u4E00\u6B21\n  showAlerts = true,\n  compact = false,\n  className = ''\n}) => {\n  const [metrics, setMetrics] = useState<PerformanceMetrics | null>(null);\n  const [alerts, setAlerts] = useState<SystemAlert[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n\n  // \u6A21\u62DF\u83B7\u53D6\u6027\u80FD\u6307\u6807\u6570\u636E\n  const fetchMetrics = useCallback(async () => {\n    setLoading(true);\n    try {\n      // \u6A21\u62DFAPI\u8C03\u7528\u5EF6\u8FDF\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // \u751F\u6210\u6A21\u62DF\u6570\u636E\n      const mockMetrics: PerformanceMetrics = {\n        cpu: {\n          usage: Math.random() * 80 + 10, // 10-90%\n          cores: 8,\n          temperature: Math.random() * 20 + 45 // 45-65\xB0C\n        },\n        memory: {\n          used: Math.random() * 6 + 2, // 2-8GB\n          total: 16,\n          usage: 0\n        },\n        disk: {\n          used: Math.random() * 200 + 50, // 50-250GB\n          total: 500,\n          usage: 0\n        },\n        network: {\n          inbound: Math.random() * 100 + 10, // 10-110 Mbps\n          outbound: Math.random() * 50 + 5, // 5-55 Mbps\n          latency: Math.random() * 50 + 10 // 10-60ms\n        },\n        response: {\n          avgResponseTime: Math.random() * 200 + 50, // 50-250ms\n          p95ResponseTime: Math.random() * 500 + 200, // 200-700ms\n          errorRate: Math.random() * 2 // 0-2%\n        },\n        database: {\n          connections: Math.floor(Math.random() * 80 + 10), // 10-90\n          maxConnections: 100,\n          queryTime: Math.random() * 100 + 10 // 10-110ms\n        }\n      };\n\n      // \u8BA1\u7B97\u4F7F\u7528\u7387\u767E\u5206\u6BD4\n      mockMetrics.memory.usage = (mockMetrics.memory.used / mockMetrics.memory.total) * 100;\n      mockMetrics.disk.usage = (mockMetrics.disk.used / mockMetrics.disk.total) * 100;\n\n      setMetrics(mockMetrics);\n      setLastUpdate(new Date());\n\n      // \u751F\u6210\u544A\u8B66\n      const newAlerts: SystemAlert[] = [];\n      \n      if (mockMetrics.cpu.usage > 80) {\n        newAlerts.push({\n          id: `cpu-${Date.now()}`,\n          type: 'warning',\n          message: `CPU\u4F7F\u7528\u7387\u8FC7\u9AD8: ${mockMetrics.cpu.usage.toFixed(1)}%`,\n          timestamp: new Date().toISOString(),\n          resolved: false\n        });\n      }\n\n      if (mockMetrics.memory.usage > 85) {\n        newAlerts.push({\n          id: `memory-${Date.now()}`,\n          type: 'error',\n          message: `\u5185\u5B58\u4F7F\u7528\u7387\u8FC7\u9AD8: ${mockMetrics.memory.usage.toFixed(1)}%`,\n          timestamp: new Date().toISOString(),\n          resolved: false\n        });\n      }\n\n      if (mockMetrics.response.errorRate > 1) {\n        newAlerts.push({\n          id: `error-${Date.now()}`,\n          type: 'error',\n          message: `\u9519\u8BEF\u7387\u8FC7\u9AD8: ${mockMetrics.response.errorRate.toFixed(2)}%`,\n          timestamp: new Date().toISOString(),\n          resolved: false\n        });\n      }\n\n      setAlerts(prev => [...newAlerts, ...prev.slice(0, 10)]); // \u4FDD\u7559\u6700\u65B010\u6761\u544A\u8B66\n    } catch (error) {\n      console.error('\u83B7\u53D6\u6027\u80FD\u6307\u6807\u5931\u8D25:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // \u81EA\u52A8\u5237\u65B0\n  useEffect(() => {\n    fetchMetrics();\n    const interval = setInterval(fetchMetrics, refreshInterval);\n    return () => clearInterval(interval);\n  }, [fetchMetrics, refreshInterval]);\n\n  // \u83B7\u53D6\u72B6\u6001\u989C\u8272\n  const getStatusColor = (usage: number, type: 'cpu' | 'memory' | 'disk' = 'cpu') => {\n    const thresholds = {\n      cpu: { warning: 70, danger: 85 },\n      memory: { warning: 75, danger: 90 },\n      disk: { warning: 80, danger: 95 }\n    };\n    \n    const threshold = thresholds[type];\n    if (usage >= threshold.danger) return '#ff4d4f';\n    if (usage >= threshold.warning) return '#faad14';\n    return '#52c41a';\n  };\n\n  // \u83B7\u53D6\u8D8B\u52BF\u56FE\u6807\n  const getTrendIcon = (value: number, threshold: number) => {\n    if (value > threshold) {\n      return <TrendingUp size={14} className=\"text-red-500\" />;\n    }\n    return <TrendingDown size={14} className=\"text-green-500\" />;\n  };\n\n  if (!metrics) {\n    return (\n      <Card loading={loading} className={className}>\n        <div className=\"text-center py-8\">\n          <Activity size={48} className=\"text-gray-400 mx-auto mb-4\" />\n          <Text className=\"text-gray-500\">\u6B63\u5728\u52A0\u8F7D\u6027\u80FD\u6570\u636E...</Text>\n        </div>\n      </Card>\n    );\n  }\n\n  if (compact) {\n    return (\n      <Card \n        size=\"small\" \n        className={className}\n        title={\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n              <Activity size={16} />\n              <span>\u7CFB\u7EDF\u76D1\u63A7</span>\n            </div>\n            <Button \n              type=\"text\" \n              size=\"small\" \n              icon={<RefreshCw size={14} />}\n              loading={loading}\n              onClick={fetchMetrics}\n            />\n          </div>\n        }\n      >\n        <Row gutter={[16, 16]}>\n          <Col span={6}>\n            <Statistic\n              title=\"CPU\"\n              value={metrics.cpu.usage}\n              precision={1}\n              suffix=\"%\"\n              valueStyle={{ color: getStatusColor(metrics.cpu.usage, 'cpu') }}\n            />\n          </Col>\n          <Col span={6}>\n            <Statistic\n              title=\"\u5185\u5B58\"\n              value={metrics.memory.usage}\n              precision={1}\n              suffix=\"%\"\n              valueStyle={{ color: getStatusColor(metrics.memory.usage, 'memory') }}\n            />\n          </Col>\n          <Col span={6}>\n            <Statistic\n              title=\"\u78C1\u76D8\"\n              value={metrics.disk.usage}\n              precision={1}\n              suffix=\"%\"\n              valueStyle={{ color: getStatusColor(metrics.disk.usage, 'disk') }}\n            />\n          </Col>\n          <Col span={6}>\n            <Statistic\n              title=\"\u54CD\u5E94\u65F6\u95F4\"\n              value={metrics.response.avgResponseTime}\n              precision={0}\n              suffix=\"ms\"\n              valueStyle={{ \n                color: metrics.response.avgResponseTime > 200 ? '#faad14' : '#52c41a' \n              }}\n            />\n          </Col>\n        </Row>\n      </Card>\n    );\n  }\n\n  return (\n    <div className={`performance-monitor ${className}`}>\n      <Row gutter={[16, 16]}>\n        {/* \u7CFB\u7EDF\u8D44\u6E90\u76D1\u63A7 */}\n        <Col xs={24} lg={16}>\n          <Card \n            title={\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Activity size={20} />\n                  <span>\u7CFB\u7EDF\u8D44\u6E90\u76D1\u63A7</span>\n                </div>\n                <div className=\"flex items-center space-x-4\">\n                  {lastUpdate && (\n                    <Text className=\"text-sm text-gray-500\">\n                      \u6700\u540E\u66F4\u65B0: {lastUpdate.toLocaleTimeString()}\n                    </Text>\n                  )}\n                  <Button \n                    type=\"text\" \n                    size=\"small\" \n                    icon={<RefreshCw size={14} />}\n                    loading={loading}\n                    onClick={fetchMetrics}\n                  />\n                </div>\n              </div>\n            }\n          >\n            <Row gutter={[24, 24]}>\n              {/* CPU\u76D1\u63A7 */}\n              <Col xs={24} sm={12} lg={8}>\n                <div className=\"text-center\">\n                  <div className=\"flex items-center justify-center mb-2\">\n                    <Cpu size={20} className=\"text-blue-600 mr-2\" />\n                    <Text className=\"font-semibold\">CPU\u4F7F\u7528\u7387</Text>\n                    {getTrendIcon(metrics.cpu.usage, 70)}\n                  </div>\n                  <Progress\n                    type=\"circle\"\n                    percent={metrics.cpu.usage}\n                    format={(percent) => `${percent?.toFixed(1)}%`}\n                    strokeColor={getStatusColor(metrics.cpu.usage, 'cpu')}\n                    size={120}\n                  />\n                  <div className=\"mt-3 space-y-1\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span>\u6838\u5FC3\u6570:</span>\n                      <span>{metrics.cpu.cores}</span>\n                    </div>\n                    {metrics.cpu.temperature && (\n                      <div className=\"flex justify-between text-sm\">\n                        <span>\u6E29\u5EA6:</span>\n                        <span>{metrics.cpu.temperature.toFixed(1)}\xB0C</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </Col>\n\n              {/* \u5185\u5B58\u76D1\u63A7 */}\n              <Col xs={24} sm={12} lg={8}>\n                <div className=\"text-center\">\n                  <div className=\"flex items-center justify-center mb-2\">\n                    <HardDrive size={20} className=\"text-green-600 mr-2\" />\n                    <Text className=\"font-semibold\">\u5185\u5B58\u4F7F\u7528\u7387</Text>\n                    {getTrendIcon(metrics.memory.usage, 75)}\n                  </div>\n                  <Progress\n                    type=\"circle\"\n                    percent={metrics.memory.usage}\n                    format={(percent) => `${percent?.toFixed(1)}%`}\n                    strokeColor={getStatusColor(metrics.memory.usage, 'memory')}\n                    size={120}\n                  />\n                  <div className=\"mt-3 space-y-1\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span>\u5DF2\u7528:</span>\n                      <span>{metrics.memory.used.toFixed(1)}GB</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span>\u603B\u8BA1:</span>\n                      <span>{metrics.memory.total}GB</span>\n                    </div>\n                  </div>\n                </div>\n              </Col>\n\n              {/* \u78C1\u76D8\u76D1\u63A7 */}\n              <Col xs={24} sm={12} lg={8}>\n                <div className=\"text-center\">\n                  <div className=\"flex items-center justify-center mb-2\">\n                    <HardDrive size={20} className=\"text-purple-600 mr-2\" />\n                    <Text className=\"font-semibold\">\u78C1\u76D8\u4F7F\u7528\u7387</Text>\n                    {getTrendIcon(metrics.disk.usage, 80)}\n                  </div>\n                  <Progress\n                    type=\"circle\"\n                    percent={metrics.disk.usage}\n                    format={(percent) => `${percent?.toFixed(1)}%`}\n                    strokeColor={getStatusColor(metrics.disk.usage, 'disk')}\n                    size={120}\n                  />\n                  <div className=\"mt-3 space-y-1\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span>\u5DF2\u7528:</span>\n                      <span>{metrics.disk.used.toFixed(0)}GB</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span>\u603B\u8BA1:</span>\n                      <span>{metrics.disk.total}GB</span>\n                    </div>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n\n        {/* \u7F51\u7EDC\u548C\u6027\u80FD\u6307\u6807 */}\n        <Col xs={24} lg={8}>\n          <Space direction=\"vertical\" size=\"middle\" className=\"w-full\">\n            {/* \u7F51\u7EDC\u76D1\u63A7 */}\n            <Card size=\"small\" title={\n              <div className=\"flex items-center space-x-2\">\n                <Wifi size={16} />\n                <span>\u7F51\u7EDC\u72B6\u6001</span>\n              </div>\n            }>\n              <Row gutter={[16, 16]}>\n                <Col span={12}>\n                  <Statistic\n                    title=\"\u5165\u7AD9\u6D41\u91CF\"\n                    value={metrics.network.inbound}\n                    precision={1}\n                    suffix=\"Mbps\"\n                    valueStyle={{ fontSize: '16px' }}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Statistic\n                    title=\"\u51FA\u7AD9\u6D41\u91CF\"\n                    value={metrics.network.outbound}\n                    precision={1}\n                    suffix=\"Mbps\"\n                    valueStyle={{ fontSize: '16px' }}\n                  />\n                </Col>\n                <Col span={24}>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-600\">\u7F51\u7EDC\u5EF6\u8FDF:</span>\n                    <Tag color={metrics.network.latency > 100 ? 'red' : 'green'}>\n                      {metrics.network.latency.toFixed(0)}ms\n                    </Tag>\n                  </div>\n                </Col>\n              </Row>\n            </Card>\n\n            {/* \u5E94\u7528\u6027\u80FD */}\n            <Card size=\"small\" title={\n              <div className=\"flex items-center space-x-2\">\n                <Clock size={16} />\n                <span>\u5E94\u7528\u6027\u80FD</span>\n              </div>\n            }>\n              <Space direction=\"vertical\" size=\"small\" className=\"w-full\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm\">\u5E73\u5747\u54CD\u5E94\u65F6\u95F4:</span>\n                  <Tag color={metrics.response.avgResponseTime > 200 ? 'orange' : 'green'}>\n                    {metrics.response.avgResponseTime.toFixed(0)}ms\n                  </Tag>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm\">P95\u54CD\u5E94\u65F6\u95F4:</span>\n                  <Tag color={metrics.response.p95ResponseTime > 500 ? 'red' : 'blue'}>\n                    {metrics.response.p95ResponseTime.toFixed(0)}ms\n                  </Tag>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm\">\u9519\u8BEF\u7387:</span>\n                  <Tag color={metrics.response.errorRate > 1 ? 'red' : 'green'}>\n                    {metrics.response.errorRate.toFixed(2)}%\n                  </Tag>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm\">\u6570\u636E\u5E93\u8FDE\u63A5:</span>\n                  <Tag color={metrics.database.connections > 80 ? 'orange' : 'blue'}>\n                    {metrics.database.connections}/{metrics.database.maxConnections}\n                  </Tag>\n                </div>\n              </Space>\n            </Card>\n\n            {/* \u7CFB\u7EDF\u544A\u8B66 */}\n            {showAlerts && alerts.length > 0 && (\n              <Card size=\"small\" title={\n                <div className=\"flex items-center space-x-2\">\n                  <AlertTriangle size={16} />\n                  <span>\u7CFB\u7EDF\u544A\u8B66</span>\n                  <Tag color=\"red\">{alerts.filter(a => !a.resolved).length}</Tag>\n                </div>\n              }>\n                <Timeline>\n                  {alerts.slice(0, 5).map((alert) => (\n                    <Timeline.Item\n                      key={alert.id}\n                      dot={\n                        alert.type === 'error' ? \n                          <AlertTriangle size={12} className=\"text-red-500\" /> :\n                          <CheckCircle size={12} className=\"text-yellow-500\" />\n                      }\n                    >\n                      <div className=\"text-sm\">\n                        <div className={`font-medium ${\n                          alert.type === 'error' ? 'text-red-600' : 'text-yellow-600'\n                        }`}>\n                          {alert.message}\n                        </div>\n                        <div className=\"text-gray-500 text-xs\">\n                          {new Date(alert.timestamp).toLocaleTimeString()}\n                        </div>\n                      </div>\n                    </Timeline.Item>\n                  ))}\n                </Timeline>\n              </Card>\n            )}\n          </Space>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default PerformanceMonitor;"],
      names: ["PerformanceMonitor", "Text", "Typography", "refreshInterval", "showAlerts", "compact", "className", "metrics", "setMetrics", "useState", "alerts", "setAlerts", "loading", "setLoading", "lastUpdate", "setLastUpdate", "fetchMetrics", "useCallback", "Promise", "resolve", "setTimeout", "mockMetrics", "cpu", "usage", "Math", "random", "cores", "temperature", "memory", "used", "total", "disk", "network", "inbound", "outbound", "latency", "response", "avgResponseTime", "p95ResponseTime", "errorRate", "database", "connections", "floor", "maxConnections", "queryTime", "Date", "newAlerts", "push", "id", "now", "type", "message", "toFixed", "timestamp", "toISOString", "resolved", "prev", "slice", "error", "console", "useEffect", "interval", "setInterval", "clearInterval", "getStatusColor", "thresholds", "warning", "danger", "threshold", "getTrendIcon", "value", "TrendingUp", "size", "TrendingDown", "Card", "div", "Activity", "title", "span", "Button", "icon", "RefreshCw", "onClick", "Row", "gutter", "Col", "Statistic", "precision", "suffix", "valueStyle", "color", "xs", "lg", "toLocaleTimeString", "sm", "Cpu", "Progress", "percent", "format", "strokeColor", "HardDrive", "Space", "direction", "Wifi", "fontSize", "Tag", "Clock", "length", "AlertTriangle", "filter", "a", "Timeline", "map", "alert", "Item", "dot", "CheckCircle"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "641613d21e3a7b0fa317ef649e0ada8250da53dd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_77wlcl4k5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_77wlcl4k5();
cov_77wlcl4k5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_77wlcl4k5().f[0]++;
  cov_77wlcl4k5().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_77wlcl4k5().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_77wlcl4k5().s[3]++;
_export(exports, {
  PerformanceMonitor: function () {
    /* istanbul ignore next */
    cov_77wlcl4k5().f[1]++;
    cov_77wlcl4k5().s[4]++;
    return PerformanceMonitor;
  },
  default: function () {
    /* istanbul ignore next */
    cov_77wlcl4k5().f[2]++;
    cov_77wlcl4k5().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_77wlcl4k5().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_77wlcl4k5().s[7]++, _interop_require_wildcard(require("react")));
const _antd =
/* istanbul ignore next */
(cov_77wlcl4k5().s[8]++, require("antd"));
const _lucidereact =
/* istanbul ignore next */
(cov_77wlcl4k5().s[9]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_77wlcl4k5().f[3]++;
  cov_77wlcl4k5().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_77wlcl4k5().b[0][0]++;
    cov_77wlcl4k5().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_77wlcl4k5().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_77wlcl4k5().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_77wlcl4k5().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_77wlcl4k5().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_77wlcl4k5().f[4]++;
    cov_77wlcl4k5().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_77wlcl4k5().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_77wlcl4k5().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_77wlcl4k5().f[5]++;
  cov_77wlcl4k5().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_77wlcl4k5().b[2][0]++;
    cov_77wlcl4k5().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_77wlcl4k5().b[2][1]++;
  }
  cov_77wlcl4k5().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_77wlcl4k5().b[4][0]++;
    cov_77wlcl4k5().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_77wlcl4k5().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_77wlcl4k5().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_77wlcl4k5().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_77wlcl4k5().b[6][0]++;
    cov_77wlcl4k5().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_77wlcl4k5().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_77wlcl4k5().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_77wlcl4k5().s[24]++,
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_77wlcl4k5().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_77wlcl4k5().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_77wlcl4k5().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_77wlcl4k5().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_77wlcl4k5().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_77wlcl4k5().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_77wlcl4k5().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_77wlcl4k5().b[11][1]++, null));
      /* istanbul ignore next */
      cov_77wlcl4k5().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_77wlcl4k5().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_77wlcl4k5().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_77wlcl4k5().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_77wlcl4k5().b[12][0]++;
        cov_77wlcl4k5().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_77wlcl4k5().b[12][1]++;
        cov_77wlcl4k5().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_77wlcl4k5().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_77wlcl4k5().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_77wlcl4k5().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_77wlcl4k5().b[14][0]++;
    cov_77wlcl4k5().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_77wlcl4k5().b[14][1]++;
  }
  cov_77wlcl4k5().s[34]++;
  return newObj;
}
const {
  Text
} =
/* istanbul ignore next */
(cov_77wlcl4k5().s[35]++, _antd.Typography);
/* istanbul ignore next */
cov_77wlcl4k5().s[36]++;
const PerformanceMonitor = ({
  refreshInterval =
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[15][0]++, 30000),
  showAlerts =
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[16][0]++, true),
  compact =
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[17][0]++, false),
  className =
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[18][0]++, '')
}) => {
  /* istanbul ignore next */
  cov_77wlcl4k5().f[6]++;
  const [metrics, setMetrics] =
  /* istanbul ignore next */
  (cov_77wlcl4k5().s[37]++, (0, _react.useState)(null));
  const [alerts, setAlerts] =
  /* istanbul ignore next */
  (cov_77wlcl4k5().s[38]++, (0, _react.useState)([]));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_77wlcl4k5().s[39]++, (0, _react.useState)(false));
  const [lastUpdate, setLastUpdate] =
  /* istanbul ignore next */
  (cov_77wlcl4k5().s[40]++, (0, _react.useState)(null));
  // 模拟获取性能指标数据
  const fetchMetrics =
  /* istanbul ignore next */
  (cov_77wlcl4k5().s[41]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_77wlcl4k5().f[7]++;
    cov_77wlcl4k5().s[42]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_77wlcl4k5().s[43]++;
    try {
      /* istanbul ignore next */
      cov_77wlcl4k5().s[44]++;
      // 模拟API调用延迟
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_77wlcl4k5().f[8]++;
        cov_77wlcl4k5().s[45]++;
        return setTimeout(resolve, 1000);
      });
      // 生成模拟数据
      const mockMetrics =
      /* istanbul ignore next */
      (cov_77wlcl4k5().s[46]++, {
        cpu: {
          usage: Math.random() * 80 + 10,
          cores: 8,
          temperature: Math.random() * 20 + 45 // 45-65°C
        },
        memory: {
          used: Math.random() * 6 + 2,
          total: 16,
          usage: 0
        },
        disk: {
          used: Math.random() * 200 + 50,
          total: 500,
          usage: 0
        },
        network: {
          inbound: Math.random() * 100 + 10,
          outbound: Math.random() * 50 + 5,
          latency: Math.random() * 50 + 10 // 10-60ms
        },
        response: {
          avgResponseTime: Math.random() * 200 + 50,
          p95ResponseTime: Math.random() * 500 + 200,
          errorRate: Math.random() * 2 // 0-2%
        },
        database: {
          connections: Math.floor(Math.random() * 80 + 10),
          maxConnections: 100,
          queryTime: Math.random() * 100 + 10 // 10-110ms
        }
      });
      // 计算使用率百分比
      /* istanbul ignore next */
      cov_77wlcl4k5().s[47]++;
      mockMetrics.memory.usage = mockMetrics.memory.used / mockMetrics.memory.total * 100;
      /* istanbul ignore next */
      cov_77wlcl4k5().s[48]++;
      mockMetrics.disk.usage = mockMetrics.disk.used / mockMetrics.disk.total * 100;
      /* istanbul ignore next */
      cov_77wlcl4k5().s[49]++;
      setMetrics(mockMetrics);
      /* istanbul ignore next */
      cov_77wlcl4k5().s[50]++;
      setLastUpdate(new Date());
      // 生成告警
      const newAlerts =
      /* istanbul ignore next */
      (cov_77wlcl4k5().s[51]++, []);
      /* istanbul ignore next */
      cov_77wlcl4k5().s[52]++;
      if (mockMetrics.cpu.usage > 80) {
        /* istanbul ignore next */
        cov_77wlcl4k5().b[19][0]++;
        cov_77wlcl4k5().s[53]++;
        newAlerts.push({
          id: `cpu-${Date.now()}`,
          type: 'warning',
          message: `CPU使用率过高: ${mockMetrics.cpu.usage.toFixed(1)}%`,
          timestamp: new Date().toISOString(),
          resolved: false
        });
      } else
      /* istanbul ignore next */
      {
        cov_77wlcl4k5().b[19][1]++;
      }
      cov_77wlcl4k5().s[54]++;
      if (mockMetrics.memory.usage > 85) {
        /* istanbul ignore next */
        cov_77wlcl4k5().b[20][0]++;
        cov_77wlcl4k5().s[55]++;
        newAlerts.push({
          id: `memory-${Date.now()}`,
          type: 'error',
          message: `内存使用率过高: ${mockMetrics.memory.usage.toFixed(1)}%`,
          timestamp: new Date().toISOString(),
          resolved: false
        });
      } else
      /* istanbul ignore next */
      {
        cov_77wlcl4k5().b[20][1]++;
      }
      cov_77wlcl4k5().s[56]++;
      if (mockMetrics.response.errorRate > 1) {
        /* istanbul ignore next */
        cov_77wlcl4k5().b[21][0]++;
        cov_77wlcl4k5().s[57]++;
        newAlerts.push({
          id: `error-${Date.now()}`,
          type: 'error',
          message: `错误率过高: ${mockMetrics.response.errorRate.toFixed(2)}%`,
          timestamp: new Date().toISOString(),
          resolved: false
        });
      } else
      /* istanbul ignore next */
      {
        cov_77wlcl4k5().b[21][1]++;
      }
      cov_77wlcl4k5().s[58]++;
      setAlerts(prev => {
        /* istanbul ignore next */
        cov_77wlcl4k5().f[9]++;
        cov_77wlcl4k5().s[59]++;
        return [...newAlerts, ...prev.slice(0, 10)];
      }); // 保留最新10条告警
    } catch (error) {
      /* istanbul ignore next */
      cov_77wlcl4k5().s[60]++;
      console.error('获取性能指标失败:', error);
    } finally {
      /* istanbul ignore next */
      cov_77wlcl4k5().s[61]++;
      setLoading(false);
    }
  }, []));
  // 自动刷新
  /* istanbul ignore next */
  cov_77wlcl4k5().s[62]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_77wlcl4k5().f[10]++;
    cov_77wlcl4k5().s[63]++;
    fetchMetrics();
    const interval =
    /* istanbul ignore next */
    (cov_77wlcl4k5().s[64]++, setInterval(fetchMetrics, refreshInterval));
    /* istanbul ignore next */
    cov_77wlcl4k5().s[65]++;
    return () => {
      /* istanbul ignore next */
      cov_77wlcl4k5().f[11]++;
      cov_77wlcl4k5().s[66]++;
      return clearInterval(interval);
    };
  }, [fetchMetrics, refreshInterval]);
  // 获取状态颜色
  /* istanbul ignore next */
  cov_77wlcl4k5().s[67]++;
  const getStatusColor = (usage, type =
  /* istanbul ignore next */
  (cov_77wlcl4k5().b[22][0]++, 'cpu')) => {
    /* istanbul ignore next */
    cov_77wlcl4k5().f[12]++;
    const thresholds =
    /* istanbul ignore next */
    (cov_77wlcl4k5().s[68]++, {
      cpu: {
        warning: 70,
        danger: 85
      },
      memory: {
        warning: 75,
        danger: 90
      },
      disk: {
        warning: 80,
        danger: 95
      }
    });
    const threshold =
    /* istanbul ignore next */
    (cov_77wlcl4k5().s[69]++, thresholds[type]);
    /* istanbul ignore next */
    cov_77wlcl4k5().s[70]++;
    if (usage >= threshold.danger) {
      /* istanbul ignore next */
      cov_77wlcl4k5().b[23][0]++;
      cov_77wlcl4k5().s[71]++;
      return '#ff4d4f';
    } else
    /* istanbul ignore next */
    {
      cov_77wlcl4k5().b[23][1]++;
    }
    cov_77wlcl4k5().s[72]++;
    if (usage >= threshold.warning) {
      /* istanbul ignore next */
      cov_77wlcl4k5().b[24][0]++;
      cov_77wlcl4k5().s[73]++;
      return '#faad14';
    } else
    /* istanbul ignore next */
    {
      cov_77wlcl4k5().b[24][1]++;
    }
    cov_77wlcl4k5().s[74]++;
    return '#52c41a';
  };
  // 获取趋势图标
  /* istanbul ignore next */
  cov_77wlcl4k5().s[75]++;
  const getTrendIcon = (value, threshold) => {
    /* istanbul ignore next */
    cov_77wlcl4k5().f[13]++;
    cov_77wlcl4k5().s[76]++;
    if (value > threshold) {
      /* istanbul ignore next */
      cov_77wlcl4k5().b[25][0]++;
      cov_77wlcl4k5().s[77]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.TrendingUp, {
        size: 14,
        className: "text-red-500"
      });
    } else
    /* istanbul ignore next */
    {
      cov_77wlcl4k5().b[25][1]++;
    }
    cov_77wlcl4k5().s[78]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.TrendingDown, {
      size: 14,
      className: "text-green-500"
    });
  };
  /* istanbul ignore next */
  cov_77wlcl4k5().s[79]++;
  if (!metrics) {
    /* istanbul ignore next */
    cov_77wlcl4k5().b[26][0]++;
    cov_77wlcl4k5().s[80]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
      loading: loading,
      className: className,
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-center py-8",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
          size: 48,
          className: "text-gray-400 mx-auto mb-4"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(Text, {
          className: "text-gray-500",
          children: "正在加载性能数据..."
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_77wlcl4k5().b[26][1]++;
  }
  cov_77wlcl4k5().s[81]++;
  if (compact) {
    /* istanbul ignore next */
    cov_77wlcl4k5().b[27][0]++;
    cov_77wlcl4k5().s[82]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
      size: "small",
      className: className,
      title: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center space-x-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
            size: 16
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            children: "系统监控"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Button, {
          type: "text",
          size: "small",
          icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
            size: 14
          }),
          loading: loading,
          onClick: fetchMetrics
        })]
      }),
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Row, {
        gutter: [16, 16],
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
          span: 6,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
            title: "CPU",
            value: metrics.cpu.usage,
            precision: 1,
            suffix: "%",
            valueStyle: {
              color: getStatusColor(metrics.cpu.usage, 'cpu')
            }
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
          span: 6,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
            title: "内存",
            value: metrics.memory.usage,
            precision: 1,
            suffix: "%",
            valueStyle: {
              color: getStatusColor(metrics.memory.usage, 'memory')
            }
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
          span: 6,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
            title: "磁盘",
            value: metrics.disk.usage,
            precision: 1,
            suffix: "%",
            valueStyle: {
              color: getStatusColor(metrics.disk.usage, 'disk')
            }
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
          span: 6,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
            title: "响应时间",
            value: metrics.response.avgResponseTime,
            precision: 0,
            suffix: "ms",
            valueStyle: {
              color: metrics.response.avgResponseTime > 200 ?
              /* istanbul ignore next */
              (cov_77wlcl4k5().b[28][0]++, '#faad14') :
              /* istanbul ignore next */
              (cov_77wlcl4k5().b[28][1]++, '#52c41a')
            }
          })
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_77wlcl4k5().b[27][1]++;
  }
  cov_77wlcl4k5().s[83]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `performance-monitor ${className}`,
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Row, {
      gutter: [16, 16],
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
        xs: 24,
        lg: 16,
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
          title: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
                size: 20
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "系统资源监控"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-4",
              children: [
              /* istanbul ignore next */
              (cov_77wlcl4k5().b[29][0]++, lastUpdate) &&
              /* istanbul ignore next */
              (cov_77wlcl4k5().b[29][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(Text, {
                className: "text-sm text-gray-500",
                children: ["最后更新: ", lastUpdate.toLocaleTimeString()]
              })), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Button, {
                type: "text",
                size: "small",
                icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                  size: 14
                }),
                loading: loading,
                onClick: fetchMetrics
              })]
            })]
          }),
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Row, {
            gutter: [24, 24],
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
              xs: 24,
              sm: 12,
              lg: 8,
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-center mb-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Cpu, {
                    size: 20,
                    className: "text-blue-600 mr-2"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(Text, {
                    className: "font-semibold",
                    children: "CPU使用率"
                  }), getTrendIcon(metrics.cpu.usage, 70)]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Progress, {
                  type: "circle",
                  percent: metrics.cpu.usage,
                  format: percent => {
                    /* istanbul ignore next */
                    cov_77wlcl4k5().f[14]++;
                    cov_77wlcl4k5().s[84]++;
                    return `${percent?.toFixed(1)}%`;
                  },
                  strokeColor: getStatusColor(metrics.cpu.usage, 'cpu'),
                  size: 120
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "mt-3 space-y-1",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between text-sm",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "核心数:"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: metrics.cpu.cores
                    })]
                  }),
                  /* istanbul ignore next */
                  (cov_77wlcl4k5().b[30][0]++, metrics.cpu.temperature) &&
                  /* istanbul ignore next */
                  (cov_77wlcl4k5().b[30][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between text-sm",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "温度:"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [metrics.cpu.temperature.toFixed(1), "\xb0C"]
                    })]
                  }))]
                })]
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
              xs: 24,
              sm: 12,
              lg: 8,
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-center mb-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.HardDrive, {
                    size: 20,
                    className: "text-green-600 mr-2"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(Text, {
                    className: "font-semibold",
                    children: "内存使用率"
                  }), getTrendIcon(metrics.memory.usage, 75)]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Progress, {
                  type: "circle",
                  percent: metrics.memory.usage,
                  format: percent => {
                    /* istanbul ignore next */
                    cov_77wlcl4k5().f[15]++;
                    cov_77wlcl4k5().s[85]++;
                    return `${percent?.toFixed(1)}%`;
                  },
                  strokeColor: getStatusColor(metrics.memory.usage, 'memory'),
                  size: 120
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "mt-3 space-y-1",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between text-sm",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "已用:"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [metrics.memory.used.toFixed(1), "GB"]
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between text-sm",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "总计:"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [metrics.memory.total, "GB"]
                    })]
                  })]
                })]
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
              xs: 24,
              sm: 12,
              lg: 8,
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-center mb-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.HardDrive, {
                    size: 20,
                    className: "text-purple-600 mr-2"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(Text, {
                    className: "font-semibold",
                    children: "磁盘使用率"
                  }), getTrendIcon(metrics.disk.usage, 80)]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Progress, {
                  type: "circle",
                  percent: metrics.disk.usage,
                  format: percent => {
                    /* istanbul ignore next */
                    cov_77wlcl4k5().f[16]++;
                    cov_77wlcl4k5().s[86]++;
                    return `${percent?.toFixed(1)}%`;
                  },
                  strokeColor: getStatusColor(metrics.disk.usage, 'disk'),
                  size: 120
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "mt-3 space-y-1",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between text-sm",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "已用:"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [metrics.disk.used.toFixed(0), "GB"]
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between text-sm",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "总计:"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [metrics.disk.total, "GB"]
                    })]
                  })]
                })]
              })
            })]
          })
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
        xs: 24,
        lg: 8,
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Space, {
          direction: "vertical",
          size: "middle",
          className: "w-full",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
            size: "small",
            title: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Wifi, {
                size: 16
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "网络状态"
              })]
            }),
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Row, {
              gutter: [16, 16],
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
                span: 12,
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
                  title: "入站流量",
                  value: metrics.network.inbound,
                  precision: 1,
                  suffix: "Mbps",
                  valueStyle: {
                    fontSize: '16px'
                  }
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
                span: 12,
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Statistic, {
                  title: "出站流量",
                  value: metrics.network.outbound,
                  precision: 1,
                  suffix: "Mbps",
                  valueStyle: {
                    fontSize: '16px'
                  }
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Col, {
                span: 24,
                children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex justify-between items-center",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "text-sm text-gray-600",
                    children: "网络延迟:"
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Tag, {
                    color: metrics.network.latency > 100 ?
                    /* istanbul ignore next */
                    (cov_77wlcl4k5().b[31][0]++, 'red') :
                    /* istanbul ignore next */
                    (cov_77wlcl4k5().b[31][1]++, 'green'),
                    children: [metrics.network.latency.toFixed(0), "ms"]
                  })]
                })
              })]
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
            size: "small",
            title: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
                size: 16
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "应用性能"
              })]
            }),
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Space, {
              direction: "vertical",
              size: "small",
              className: "w-full",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex justify-between items-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-sm",
                  children: "平均响应时间:"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Tag, {
                  color: metrics.response.avgResponseTime > 200 ?
                  /* istanbul ignore next */
                  (cov_77wlcl4k5().b[32][0]++, 'orange') :
                  /* istanbul ignore next */
                  (cov_77wlcl4k5().b[32][1]++, 'green'),
                  children: [metrics.response.avgResponseTime.toFixed(0), "ms"]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex justify-between items-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-sm",
                  children: "P95响应时间:"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Tag, {
                  color: metrics.response.p95ResponseTime > 500 ?
                  /* istanbul ignore next */
                  (cov_77wlcl4k5().b[33][0]++, 'red') :
                  /* istanbul ignore next */
                  (cov_77wlcl4k5().b[33][1]++, 'blue'),
                  children: [metrics.response.p95ResponseTime.toFixed(0), "ms"]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex justify-between items-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-sm",
                  children: "错误率:"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Tag, {
                  color: metrics.response.errorRate > 1 ?
                  /* istanbul ignore next */
                  (cov_77wlcl4k5().b[34][0]++, 'red') :
                  /* istanbul ignore next */
                  (cov_77wlcl4k5().b[34][1]++, 'green'),
                  children: [metrics.response.errorRate.toFixed(2), "%"]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex justify-between items-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-sm",
                  children: "数据库连接:"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Tag, {
                  color: metrics.database.connections > 80 ?
                  /* istanbul ignore next */
                  (cov_77wlcl4k5().b[35][0]++, 'orange') :
                  /* istanbul ignore next */
                  (cov_77wlcl4k5().b[35][1]++, 'blue'),
                  children: [metrics.database.connections, "/", metrics.database.maxConnections]
                })]
              })]
            })
          }),
          /* istanbul ignore next */
          (cov_77wlcl4k5().b[36][0]++, showAlerts) &&
          /* istanbul ignore next */
          (cov_77wlcl4k5().b[36][1]++, alerts.length > 0) &&
          /* istanbul ignore next */
          (cov_77wlcl4k5().b[36][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
            size: "small",
            title: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                size: 16
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "系统告警"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Tag, {
                color: "red",
                children: alerts.filter(a => {
                  /* istanbul ignore next */
                  cov_77wlcl4k5().f[17]++;
                  cov_77wlcl4k5().s[87]++;
                  return !a.resolved;
                }).length
              })]
            }),
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Timeline, {
              children: alerts.slice(0, 5).map(alert => {
                /* istanbul ignore next */
                cov_77wlcl4k5().f[18]++;
                cov_77wlcl4k5().s[88]++;
                return /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Timeline.Item, {
                  dot: alert.type === 'error' ?
                  /* istanbul ignore next */
                  (/*#__PURE__*/cov_77wlcl4k5().b[37][0]++, (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                    size: 12,
                    className: "text-red-500"
                  })) :
                  /* istanbul ignore next */
                  (/*#__PURE__*/cov_77wlcl4k5().b[37][1]++, (0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
                    size: 12,
                    className: "text-yellow-500"
                  })),
                  children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "text-sm",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: `font-medium ${alert.type === 'error' ?
                      /* istanbul ignore next */
                      (cov_77wlcl4k5().b[38][0]++, 'text-red-600') :
                      /* istanbul ignore next */
                      (cov_77wlcl4k5().b[38][1]++, 'text-yellow-600')}`,
                      children: alert.message
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-gray-500 text-xs",
                      children: new Date(alert.timestamp).toLocaleTimeString()
                    })]
                  })
                }, alert.id);
              })
            })
          }))]
        })
      })]
    })
  });
};
const _default =
/* istanbul ignore next */
(cov_77wlcl4k5().s[89]++, PerformanceMonitor);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,