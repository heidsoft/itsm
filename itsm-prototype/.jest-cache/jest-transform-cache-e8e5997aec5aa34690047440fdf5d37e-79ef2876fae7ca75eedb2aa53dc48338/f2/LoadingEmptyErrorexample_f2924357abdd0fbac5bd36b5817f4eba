01abccc88af6efe77892b64411c4e1e8
"use strict";

/* istanbul ignore next */
function cov_19wf13nxne() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/ui/LoadingEmptyError.example.tsx";
  var hash = "aa08fa7651946063bb6e583d52522a4c9f5e9161";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/ui/LoadingEmptyError.example.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "9": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 48
        }
      },
      "10": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 29,
          column: 72
        }
      },
      "11": {
        start: {
          line: 30,
          column: 14
        },
        end: {
          line: 30,
          column: 29
        }
      },
      "12": {
        start: {
          line: 31,
          column: 41
        },
        end: {
          line: 31,
          column: 97
        }
      },
      "13": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 6
        }
      },
      "14": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "15": {
        start: {
          line: 38,
          column: 39
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "16": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 39,
          column: 41
        }
      },
      "17": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 40,
          column: 40
        }
      },
      "18": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 20
        }
      },
      "19": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 66
        }
      },
      "20": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "22": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "23": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "24": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 53
        }
      },
      "25": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "26": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 30
        }
      },
      "27": {
        start: {
          line: 58,
          column: 17
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "28": {
        start: {
          line: 61,
          column: 32
        },
        end: {
          line: 61,
          column: 88
        }
      },
      "29": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "30": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "31": {
        start: {
          line: 64,
          column: 23
        },
        end: {
          line: 64,
          column: 95
        }
      },
      "32": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "33": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 57
        }
      },
      "34": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 39
        }
      },
      "35": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 25
        }
      },
      "36": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "37": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 31
        }
      },
      "38": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 18
        }
      },
      "39": {
        start: {
          line: 78,
          column: 21
        },
        end: {
          line: 143,
          column: 1
        }
      },
      "40": {
        start: {
          line: 79,
          column: 30
        },
        end: {
          line: 79,
          column: 61
        }
      },
      "41": {
        start: {
          line: 80,
          column: 28
        },
        end: {
          line: 80,
          column: 51
        }
      },
      "42": {
        start: {
          line: 80,
          column: 32
        },
        end: {
          line: 80,
          column: 51
        }
      },
      "43": {
        start: {
          line: 81,
          column: 26
        },
        end: {
          line: 81,
          column: 47
        }
      },
      "44": {
        start: {
          line: 81,
          column: 30
        },
        end: {
          line: 81,
          column: 47
        }
      },
      "45": {
        start: {
          line: 82,
          column: 26
        },
        end: {
          line: 82,
          column: 47
        }
      },
      "46": {
        start: {
          line: 82,
          column: 30
        },
        end: {
          line: 82,
          column: 47
        }
      },
      "47": {
        start: {
          line: 83,
          column: 28
        },
        end: {
          line: 83,
          column: 51
        }
      },
      "48": {
        start: {
          line: 83,
          column: 32
        },
        end: {
          line: 83,
          column: 51
        }
      },
      "49": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 142,
          column: 7
        }
      },
      "50": {
        start: {
          line: 116,
          column: 34
        },
        end: {
          line: 116,
          column: 53
        }
      },
      "51": {
        start: {
          line: 123,
          column: 34
        },
        end: {
          line: 123,
          column: 51
        }
      },
      "52": {
        start: {
          line: 144,
          column: 26
        },
        end: {
          line: 216,
          column: 1
        }
      },
      "53": {
        start: {
          line: 145,
          column: 34
        },
        end: {
          line: 145,
          column: 61
        }
      },
      "54": {
        start: {
          line: 146,
          column: 34
        },
        end: {
          line: 146,
          column: 58
        }
      },
      "55": {
        start: {
          line: 147,
          column: 30
        },
        end: {
          line: 147,
          column: 56
        }
      },
      "56": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "57": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 25
        }
      },
      "58": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 23
        }
      },
      "59": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 168,
          column: 17
        }
      },
      "60": {
        start: {
          line: 153,
          column: 27
        },
        end: {
          line: 153,
          column: 40
        }
      },
      "61": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 166,
          column: 13
        }
      },
      "62": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 33
        }
      },
      "63": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 31
        }
      },
      "64": {
        start: {
          line: 157,
          column: 19
        },
        end: {
          line: 166,
          column: 13
        }
      },
      "65": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 31
        }
      },
      "66": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 165,
          column: 19
        }
      },
      "67": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 30
        }
      },
      "68": {
        start: {
          line: 170,
          column: 21
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "69": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 38
        }
      },
      "70": {
        start: {
          line: 171,
          column: 21
        },
        end: {
          line: 171,
          column: 38
        }
      },
      "71": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 34
        }
      },
      "72": {
        start: {
          line: 172,
          column: 19
        },
        end: {
          line: 172,
          column: 34
        }
      },
      "73": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 49
        }
      },
      "74": {
        start: {
          line: 173,
          column: 34
        },
        end: {
          line: 173,
          column: 49
        }
      },
      "75": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 25
        }
      },
      "76": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 215,
          column: 7
        }
      },
      "77": {
        start: {
          line: 195,
          column: 34
        },
        end: {
          line: 195,
          column: 53
        }
      },
      "78": {
        start: {
          line: 208,
          column: 66
        },
        end: {
          line: 211,
          column: 37
        }
      },
      "79": {
        start: {
          line: 217,
          column: 23
        },
        end: {
          line: 251,
          column: 1
        }
      },
      "80": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 250,
          column: 7
        }
      },
      "81": {
        start: {
          line: 231,
          column: 42
        },
        end: {
          line: 231,
          column: 61
        }
      },
      "82": {
        start: {
          line: 242,
          column: 42
        },
        end: {
          line: 242,
          column: 61
        }
      },
      "83": {
        start: {
          line: 252,
          column: 34
        },
        end: {
          line: 265,
          column: 1
        }
      },
      "84": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 264,
          column: 7
        }
      },
      "85": {
        start: {
          line: 266,
          column: 17
        },
        end: {
          line: 266,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 19
          }
        },
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 15,
            column: 32
          }
        },
        loc: {
          start: {
            line: 15,
            column: 42
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 21
          }
        },
        loc: {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 24
          }
        },
        loc: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 13
          },
          end: {
            line: 24,
            column: 14
          }
        },
        loc: {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 33
          }
        },
        loc: {
          start: {
            line: 32,
            column: 39
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 32
      },
      "7": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 33
          }
        },
        loc: {
          start: {
            line: 37,
            column: 47
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 37
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 41,
            column: 39
          },
          end: {
            line: 41,
            column: 40
          }
        },
        loc: {
          start: {
            line: 41,
            column: 61
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "9": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 34
          }
        },
        loc: {
          start: {
            line: 45,
            column: 53
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 45
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 78,
            column: 21
          },
          end: {
            line: 78,
            column: 22
          }
        },
        loc: {
          start: {
            line: 78,
            column: 25
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 78
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 80,
            column: 28
          },
          end: {
            line: 80,
            column: 29
          }
        },
        loc: {
          start: {
            line: 80,
            column: 32
          },
          end: {
            line: 80,
            column: 51
          }
        },
        line: 80
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 81,
            column: 27
          }
        },
        loc: {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 81,
            column: 47
          }
        },
        line: 81
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 82,
            column: 27
          }
        },
        loc: {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 82,
            column: 47
          }
        },
        line: 82
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 83,
            column: 28
          },
          end: {
            line: 83,
            column: 29
          }
        },
        loc: {
          start: {
            line: 83,
            column: 32
          },
          end: {
            line: 83,
            column: 51
          }
        },
        line: 83
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 116,
            column: 30
          },
          end: {
            line: 116,
            column: 31
          }
        },
        loc: {
          start: {
            line: 116,
            column: 34
          },
          end: {
            line: 116,
            column: 53
          }
        },
        line: 116
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 31
          }
        },
        loc: {
          start: {
            line: 123,
            column: 34
          },
          end: {
            line: 123,
            column: 51
          }
        },
        line: 123
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 144,
            column: 26
          },
          end: {
            line: 144,
            column: 27
          }
        },
        loc: {
          start: {
            line: 144,
            column: 30
          },
          end: {
            line: 216,
            column: 1
          }
        },
        line: 144
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 148,
            column: 25
          },
          end: {
            line: 148,
            column: 26
          }
        },
        loc: {
          start: {
            line: 148,
            column: 35
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 148
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 152,
            column: 19
          },
          end: {
            line: 152,
            column: 20
          }
        },
        loc: {
          start: {
            line: 152,
            column: 23
          },
          end: {
            line: 168,
            column: 9
          }
        },
        line: 152
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 170,
            column: 21
          },
          end: {
            line: 170,
            column: 22
          }
        },
        loc: {
          start: {
            line: 170,
            column: 25
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 170
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 195,
            column: 30
          },
          end: {
            line: 195,
            column: 31
          }
        },
        loc: {
          start: {
            line: 195,
            column: 34
          },
          end: {
            line: 195,
            column: 53
          }
        },
        line: 195
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 208,
            column: 42
          },
          end: {
            line: 208,
            column: 43
          }
        },
        loc: {
          start: {
            line: 208,
            column: 66
          },
          end: {
            line: 211,
            column: 37
          }
        },
        line: 208
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 217,
            column: 23
          },
          end: {
            line: 217,
            column: 24
          }
        },
        loc: {
          start: {
            line: 217,
            column: 27
          },
          end: {
            line: 251,
            column: 1
          }
        },
        line: 217
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 231,
            column: 38
          },
          end: {
            line: 231,
            column: 39
          }
        },
        loc: {
          start: {
            line: 231,
            column: 42
          },
          end: {
            line: 231,
            column: 61
          }
        },
        line: 231
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 242,
            column: 38
          },
          end: {
            line: 242,
            column: 39
          }
        },
        loc: {
          start: {
            line: 242,
            column: 42
          },
          end: {
            line: 242,
            column: 61
          }
        },
        line: 242
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 252,
            column: 34
          },
          end: {
            line: 252,
            column: 35
          }
        },
        loc: {
          start: {
            line: 252,
            column: 38
          },
          end: {
            line: 265,
            column: 1
          }
        },
        line: 252
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 11
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 33,
            column: 38
          }
        }, {
          start: {
            line: 33,
            column: 41
          },
          end: {
            line: 35,
            column: 5
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 11
          },
          end: {
            line: 33,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 11
          },
          end: {
            line: 33,
            column: 14
          }
        }, {
          start: {
            line: 33,
            column: 18
          },
          end: {
            line: 33,
            column: 32
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 15
          },
          end: {
            line: 42,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 29
          },
          end: {
            line: 42,
            column: 45
          }
        }, {
          start: {
            line: 42,
            column: 48
          },
          end: {
            line: 42,
            column: 65
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 20
          }
        }, {
          start: {
            line: 46,
            column: 24
          },
          end: {
            line: 46,
            column: 27
          }
        }, {
          start: {
            line: 46,
            column: 31
          },
          end: {
            line: 46,
            column: 45
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "7": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 47
          }
        }, {
          start: {
            line: 49,
            column: 51
          },
          end: {
            line: 49,
            column: 76
          }
        }],
        line: 49
      },
      "8": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "9": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 55,
            column: 17
          },
          end: {
            line: 55,
            column: 31
          }
        }],
        line: 55
      },
      "10": {
        loc: {
          start: {
            line: 61,
            column: 32
          },
          end: {
            line: 61,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 32
          },
          end: {
            line: 61,
            column: 53
          }
        }, {
          start: {
            line: 61,
            column: 57
          },
          end: {
            line: 61,
            column: 88
          }
        }],
        line: 61
      },
      "11": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "12": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 29
          }
        }, {
          start: {
            line: 63,
            column: 33
          },
          end: {
            line: 63,
            column: 79
          }
        }],
        line: 63
      },
      "13": {
        loc: {
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 47
          },
          end: {
            line: 64,
            column: 88
          }
        }, {
          start: {
            line: 64,
            column: 91
          },
          end: {
            line: 64,
            column: 95
          }
        }],
        line: 64
      },
      "14": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 69,
            column: 13
          }
        }],
        line: 65
      },
      "15": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 20
          }
        }, {
          start: {
            line: 65,
            column: 25
          },
          end: {
            line: 65,
            column: 33
          }
        }, {
          start: {
            line: 65,
            column: 37
          },
          end: {
            line: 65,
            column: 45
          }
        }],
        line: 65
      },
      "16": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "17": {
        loc: {
          start: {
            line: 127,
            column: 26
          },
          end: {
            line: 139,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 26
          },
          end: {
            line: 127,
            column: 45
          }
        }, {
          start: {
            line: 127,
            column: 63
          },
          end: {
            line: 139,
            column: 18
          }
        }],
        line: 127
      },
      "18": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 166,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 166,
            column: 13
          }
        }, {
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 166,
            column: 13
          }
        }],
        line: 154
      },
      "19": {
        loc: {
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 166,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 166,
            column: 13
          }
        }, {
          start: {
            line: 159,
            column: 19
          },
          end: {
            line: 166,
            column: 13
          }
        }],
        line: 157
      },
      "20": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 171,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 171,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "21": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 172,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 172,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "22": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 173,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 173,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "23": {
        loc: {
          start: {
            line: 200,
            column: 33
          },
          end: {
            line: 200,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 33
          },
          end: {
            line: 200,
            column: 38
          }
        }, {
          start: {
            line: 200,
            column: 42
          },
          end: {
            line: 200,
            column: 58
          }
        }],
        line: 200
      },
      "24": {
        loc: {
          start: {
            line: 206,
            column: 26
          },
          end: {
            line: 212,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 26
          },
          end: {
            line: 206,
            column: 44
          }
        }, {
          start: {
            line: 206,
            column: 62
          },
          end: {
            line: 212,
            column: 18
          }
        }],
        line: 206
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/ui/LoadingEmptyError.example.tsx"],
      sourcesContent: ["import React, { useState } from \"react\";\nimport { Button, Card, Space } from \"antd\";\nimport LoadingEmptyError from \"./LoadingEmptyError\";\n\n// \u793A\u4F8B1: \u57FA\u7840\u7528\u6CD5\nexport const BasicExample = () => {\n  const [state, setState] = useState<\"loading\" | \"empty\" | \"error\" | \"success\">(\n    \"loading\"\n  );\n\n  const simulateLoading = () => setState(\"loading\");\n  const simulateEmpty = () => setState(\"empty\");\n  const simulateError = () => setState(\"error\");\n  const simulateSuccess = () => setState(\"success\");\n\n  return (\n    <Card title=\"\u57FA\u7840\u7528\u6CD5\u793A\u4F8B\" className=\"mb-6\">\n      <Space className=\"mb-4\">\n        <Button onClick={simulateLoading}>\u52A0\u8F7D\u72B6\u6001</Button>\n        <Button onClick={simulateEmpty}>\u7A7A\u72B6\u6001</Button>\n        <Button onClick={simulateError}>\u9519\u8BEF\u72B6\u6001</Button>\n        <Button onClick={simulateSuccess}>\u6210\u529F\u72B6\u6001</Button>\n      </Space>\n\n      <LoadingEmptyError\n        state={state}\n        loadingText=\"\u6B63\u5728\u52A0\u8F7D\u6570\u636E...\"\n        empty={{\n          title: \"\u6682\u65E0\u6570\u636E\",\n          description: \"\u5F53\u524D\u6CA1\u6709\u76F8\u5173\u6570\u636E\uFF0C\u60A8\u53EF\u4EE5\u521B\u5EFA\u65B0\u7684\u8BB0\u5F55\",\n          actionText: \"\u521B\u5EFA\u8BB0\u5F55\",\n          onAction: () => console.log(\"\u521B\u5EFA\u8BB0\u5F55\"),\n          showAction: true,\n        }}\n        error={{\n          title: \"\u52A0\u8F7D\u5931\u8D25\",\n          description: \"\u6570\u636E\u52A0\u8F7D\u8FC7\u7A0B\u4E2D\u53D1\u751F\u9519\u8BEF\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5\",\n          actionText: \"\u91CD\u8BD5\",\n          onAction: () => console.log(\"\u91CD\u8BD5\"),\n          showRetry: true,\n          showAction: true,\n        }}\n      >\n        {state === \"success\" && (\n          <div className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-semibold text-green-600\">\u6570\u636E\u52A0\u8F7D\u6210\u529F\uFF01</h3>\n            <p className=\"text-gray-600\">\u8FD9\u91CC\u663E\u793A\u5B9E\u9645\u7684\u6570\u636E\u5185\u5BB9</p>\n          </div>\n        )}\n      </LoadingEmptyError>\n    </Card>\n  );\n};\n\n// \u793A\u4F8B2: \u5DE5\u5355\u5217\u8868\u793A\u4F8B\ninterface Ticket {\n  id: number;\n  title: string;\n}\n\nexport const TicketListExample = () => {\n  const [loading, setLoading] = useState(false);\n  const [tickets, setTickets] = useState<Ticket[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchTickets = async () => {\n    setLoading(true);\n    setError(null);\n    \n    // \u6A21\u62DFAPI\u8C03\u7528\n    setTimeout(() => {\n      const random = Math.random();\n      if (random < 0.3) {\n        setError(\"\u7F51\u7EDC\u9519\u8BEF\");\n        setTickets([]);\n      } else if (random < 0.6) {\n        setTickets([]);\n      } else {\n        setTickets([{ id: 1, title: \"\u793A\u4F8B\u5DE5\u5355\" }]);\n      }\n      setLoading(false);\n    }, 2000);\n  };\n\n  const getState = () => {\n    if (loading) return \"loading\";\n    if (error) return \"error\";\n    if (tickets.length === 0) return \"empty\";\n    return \"success\";\n  };\n\n  return (\n    <Card title=\"\u5DE5\u5355\u5217\u8868\u793A\u4F8B\" className=\"mb-6\">\n      <Space className=\"mb-4\">\n        <Button onClick={fetchTickets} loading={loading}>\n          \u83B7\u53D6\u5DE5\u5355\u5217\u8868\n        </Button>\n      </Space>\n\n      <LoadingEmptyError\n        state={getState()}\n        loadingText=\"\u6B63\u5728\u52A0\u8F7D\u5DE5\u5355\u5217\u8868...\"\n        empty={{\n          title: \"\u6682\u65E0\u5DE5\u5355\",\n          description: \"\u5F53\u524D\u6CA1\u6709\u5DE5\u5355\u6570\u636E\uFF0C\u70B9\u51FB\u4E0B\u65B9\u6309\u94AE\u521B\u5EFA\u7B2C\u4E00\u4E2A\u5DE5\u5355\",\n          actionText: \"\u521B\u5EFA\u5DE5\u5355\",\n          onAction: () => console.log(\"\u521B\u5EFA\u5DE5\u5355\"),\n          showAction: true,\n        }}\n        error={{\n          title: \"\u52A0\u8F7D\u5931\u8D25\",\n          description: error || \"\u5DE5\u5355\u5217\u8868\u52A0\u8F7D\u5931\u8D25\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5\",\n          actionText: \"\u91CD\u8BD5\",\n          onAction: fetchTickets,\n          showRetry: true,\n          showAction: true,\n        }}\n      >\n        {tickets.length > 0 && (\n          <div className=\"space-y-2\">\n            {tickets.map((ticket) => (\n              <div key={ticket.id} className=\"p-3 border rounded\">\n                {ticket.title}\n              </div>\n            ))}\n          </div>\n        )}\n      </LoadingEmptyError>\n    </Card>\n  );\n};\n\n// \u793A\u4F8B3: \u6A21\u5757\u5316\u793A\u4F8B\nexport const ModuleExamples = () => {\n  return (\n    <div className=\"space-y-6\">\n      <Card title=\"\u4E0D\u540C\u6A21\u5757\u7684\u7A7A\u72B6\u6001\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <LoadingEmptyError\n            state=\"empty\"\n            empty={{\n              title: \"\u6682\u65E0\u4E8B\u4EF6\",\n              description: \"\u5F53\u524D\u6CA1\u6709\u4E8B\u4EF6\u6570\u636E\",\n              actionText: \"\u521B\u5EFA\u4E8B\u4EF6\",\n              onAction: () => console.log(\"\u521B\u5EFA\u4E8B\u4EF6\"),\n              showAction: true,\n            }}\n            minHeight={150}\n          />\n          \n          <LoadingEmptyError\n            state=\"empty\"\n            empty={{\n              title: \"\u6682\u65E0\u95EE\u9898\",\n              description: \"\u5F53\u524D\u6CA1\u6709\u95EE\u9898\u6570\u636E\",\n              actionText: \"\u521B\u5EFA\u95EE\u9898\",\n              onAction: () => console.log(\"\u521B\u5EFA\u95EE\u9898\"),\n              showAction: true,\n            }}\n            minHeight={150}\n          />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\n// \u4E3B\u793A\u4F8B\u7EC4\u4EF6\nexport const LoadingEmptyErrorExamples = () => {\n  return (\n    <div className=\"p-6 space-y-6\">\n      <h1 className=\"text-2xl font-bold mb-6\">LoadingEmptyError \u7EC4\u4EF6\u793A\u4F8B</h1>\n      <BasicExample />\n      <TicketListExample />\n      <ModuleExamples />\n    </div>\n  );\n};\n\nexport default LoadingEmptyErrorExamples;\n"],
      names: ["BasicExample", "LoadingEmptyErrorExamples", "ModuleExamples", "TicketListExample", "state", "setState", "useState", "simulateLoading", "simulateEmpty", "simulateError", "simulateSuccess", "Card", "title", "className", "Space", "Button", "onClick", "LoadingEmptyError", "loadingText", "empty", "description", "actionText", "onAction", "console", "log", "showAction", "error", "showRetry", "div", "h3", "p", "loading", "setLoading", "tickets", "setTickets", "setError", "fetchTickets", "setTimeout", "random", "Math", "id", "getState", "length", "map", "ticket", "minHeight", "h1"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "aa08fa7651946063bb6e583d52522a4c9f5e9161"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19wf13nxne = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19wf13nxne();
cov_19wf13nxne().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_19wf13nxne().f[0]++;
  cov_19wf13nxne().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_19wf13nxne().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_19wf13nxne().s[3]++;
_export(exports, {
  BasicExample: function () {
    /* istanbul ignore next */
    cov_19wf13nxne().f[1]++;
    cov_19wf13nxne().s[4]++;
    return BasicExample;
  },
  LoadingEmptyErrorExamples: function () {
    /* istanbul ignore next */
    cov_19wf13nxne().f[2]++;
    cov_19wf13nxne().s[5]++;
    return LoadingEmptyErrorExamples;
  },
  ModuleExamples: function () {
    /* istanbul ignore next */
    cov_19wf13nxne().f[3]++;
    cov_19wf13nxne().s[6]++;
    return ModuleExamples;
  },
  TicketListExample: function () {
    /* istanbul ignore next */
    cov_19wf13nxne().f[4]++;
    cov_19wf13nxne().s[7]++;
    return TicketListExample;
  },
  default: function () {
    /* istanbul ignore next */
    cov_19wf13nxne().f[5]++;
    cov_19wf13nxne().s[8]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_19wf13nxne().s[9]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_19wf13nxne().s[10]++, _interop_require_wildcard(require("react")));
const _antd =
/* istanbul ignore next */
(cov_19wf13nxne().s[11]++, require("antd"));
const _LoadingEmptyError =
/* istanbul ignore next */
(/*#__PURE__*/cov_19wf13nxne().s[12]++, _interop_require_default(require("./LoadingEmptyError")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_19wf13nxne().f[6]++;
  cov_19wf13nxne().s[13]++;
  return /* istanbul ignore next */(cov_19wf13nxne().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_19wf13nxne().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_19wf13nxne().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_19wf13nxne().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_19wf13nxne().f[7]++;
  cov_19wf13nxne().s[14]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_19wf13nxne().b[2][0]++;
    cov_19wf13nxne().s[15]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_19wf13nxne().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_19wf13nxne().s[16]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_19wf13nxne().s[17]++, new WeakMap());
  /* istanbul ignore next */
  cov_19wf13nxne().s[18]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_19wf13nxne().f[8]++;
    cov_19wf13nxne().s[19]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_19wf13nxne().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_19wf13nxne().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_19wf13nxne().f[9]++;
  cov_19wf13nxne().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_19wf13nxne().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_19wf13nxne().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_19wf13nxne().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_19wf13nxne().b[4][0]++;
    cov_19wf13nxne().s[21]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_19wf13nxne().b[4][1]++;
  }
  cov_19wf13nxne().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_19wf13nxne().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_19wf13nxne().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_19wf13nxne().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_19wf13nxne().b[6][0]++;
    cov_19wf13nxne().s[23]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_19wf13nxne().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_19wf13nxne().s[24]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_19wf13nxne().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_19wf13nxne().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_19wf13nxne().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_19wf13nxne().b[8][0]++;
    cov_19wf13nxne().s[26]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_19wf13nxne().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_19wf13nxne().s[27]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_19wf13nxne().s[28]++,
  /* istanbul ignore next */
  (cov_19wf13nxne().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_19wf13nxne().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_19wf13nxne().s[29]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_19wf13nxne().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_19wf13nxne().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_19wf13nxne().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_19wf13nxne().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_19wf13nxne().s[31]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_19wf13nxne().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_19wf13nxne().b[13][1]++, null));
      /* istanbul ignore next */
      cov_19wf13nxne().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_19wf13nxne().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_19wf13nxne().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_19wf13nxne().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_19wf13nxne().b[14][0]++;
        cov_19wf13nxne().s[33]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_19wf13nxne().b[14][1]++;
        cov_19wf13nxne().s[34]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_19wf13nxne().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_19wf13nxne().s[35]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_19wf13nxne().s[36]++;
  if (cache) {
    /* istanbul ignore next */
    cov_19wf13nxne().b[16][0]++;
    cov_19wf13nxne().s[37]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_19wf13nxne().b[16][1]++;
  }
  cov_19wf13nxne().s[38]++;
  return newObj;
}
/* istanbul ignore next */
cov_19wf13nxne().s[39]++;
const BasicExample = () => {
  /* istanbul ignore next */
  cov_19wf13nxne().f[10]++;
  const [state, setState] =
  /* istanbul ignore next */
  (cov_19wf13nxne().s[40]++, (0, _react.useState)("loading"));
  /* istanbul ignore next */
  cov_19wf13nxne().s[41]++;
  const simulateLoading = () => {
    /* istanbul ignore next */
    cov_19wf13nxne().f[11]++;
    cov_19wf13nxne().s[42]++;
    return setState("loading");
  };
  /* istanbul ignore next */
  cov_19wf13nxne().s[43]++;
  const simulateEmpty = () => {
    /* istanbul ignore next */
    cov_19wf13nxne().f[12]++;
    cov_19wf13nxne().s[44]++;
    return setState("empty");
  };
  /* istanbul ignore next */
  cov_19wf13nxne().s[45]++;
  const simulateError = () => {
    /* istanbul ignore next */
    cov_19wf13nxne().f[13]++;
    cov_19wf13nxne().s[46]++;
    return setState("error");
  };
  /* istanbul ignore next */
  cov_19wf13nxne().s[47]++;
  const simulateSuccess = () => {
    /* istanbul ignore next */
    cov_19wf13nxne().f[14]++;
    cov_19wf13nxne().s[48]++;
    return setState("success");
  };
  /* istanbul ignore next */
  cov_19wf13nxne().s[49]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Card, {
    title: "基础用法示例",
    className: "mb-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Space, {
      className: "mb-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Button, {
        onClick: simulateLoading,
        children: "加载状态"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Button, {
        onClick: simulateEmpty,
        children: "空状态"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Button, {
        onClick: simulateError,
        children: "错误状态"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Button, {
        onClick: simulateSuccess,
        children: "成功状态"
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingEmptyError.default, {
      state: state,
      loadingText: "正在加载数据...",
      empty: {
        title: "暂无数据",
        description: "当前没有相关数据，您可以创建新的记录",
        actionText: "创建记录",
        onAction: () => {
          /* istanbul ignore next */
          cov_19wf13nxne().f[15]++;
          cov_19wf13nxne().s[50]++;
          return console.log("创建记录");
        },
        showAction: true
      },
      error: {
        title: "加载失败",
        description: "数据加载过程中发生错误，请稍后重试",
        actionText: "重试",
        onAction: () => {
          /* istanbul ignore next */
          cov_19wf13nxne().f[16]++;
          cov_19wf13nxne().s[51]++;
          return console.log("重试");
        },
        showRetry: true,
        showAction: true
      },
      children:
      /* istanbul ignore next */
      (cov_19wf13nxne().b[17][0]++, state === "success") &&
      /* istanbul ignore next */
      (cov_19wf13nxne().b[17][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "p-4 text-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-semibold text-green-600",
          children: "数据加载成功！"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-gray-600",
          children: "这里显示实际的数据内容"
        })]
      }))
    })]
  });
};
/* istanbul ignore next */
cov_19wf13nxne().s[52]++;
const TicketListExample = () => {
  /* istanbul ignore next */
  cov_19wf13nxne().f[17]++;
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_19wf13nxne().s[53]++, (0, _react.useState)(false));
  const [tickets, setTickets] =
  /* istanbul ignore next */
  (cov_19wf13nxne().s[54]++, (0, _react.useState)([]));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_19wf13nxne().s[55]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_19wf13nxne().s[56]++;
  const fetchTickets = async () => {
    /* istanbul ignore next */
    cov_19wf13nxne().f[18]++;
    cov_19wf13nxne().s[57]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_19wf13nxne().s[58]++;
    setError(null);
    // 模拟API调用
    /* istanbul ignore next */
    cov_19wf13nxne().s[59]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_19wf13nxne().f[19]++;
      const random =
      /* istanbul ignore next */
      (cov_19wf13nxne().s[60]++, Math.random());
      /* istanbul ignore next */
      cov_19wf13nxne().s[61]++;
      if (random < 0.3) {
        /* istanbul ignore next */
        cov_19wf13nxne().b[18][0]++;
        cov_19wf13nxne().s[62]++;
        setError("网络错误");
        /* istanbul ignore next */
        cov_19wf13nxne().s[63]++;
        setTickets([]);
      } else {
        /* istanbul ignore next */
        cov_19wf13nxne().b[18][1]++;
        cov_19wf13nxne().s[64]++;
        if (random < 0.6) {
          /* istanbul ignore next */
          cov_19wf13nxne().b[19][0]++;
          cov_19wf13nxne().s[65]++;
          setTickets([]);
        } else {
          /* istanbul ignore next */
          cov_19wf13nxne().b[19][1]++;
          cov_19wf13nxne().s[66]++;
          setTickets([{
            id: 1,
            title: "示例工单"
          }]);
        }
      }
      /* istanbul ignore next */
      cov_19wf13nxne().s[67]++;
      setLoading(false);
    }, 2000);
  };
  /* istanbul ignore next */
  cov_19wf13nxne().s[68]++;
  const getState = () => {
    /* istanbul ignore next */
    cov_19wf13nxne().f[20]++;
    cov_19wf13nxne().s[69]++;
    if (loading) {
      /* istanbul ignore next */
      cov_19wf13nxne().b[20][0]++;
      cov_19wf13nxne().s[70]++;
      return "loading";
    } else
    /* istanbul ignore next */
    {
      cov_19wf13nxne().b[20][1]++;
    }
    cov_19wf13nxne().s[71]++;
    if (error) {
      /* istanbul ignore next */
      cov_19wf13nxne().b[21][0]++;
      cov_19wf13nxne().s[72]++;
      return "error";
    } else
    /* istanbul ignore next */
    {
      cov_19wf13nxne().b[21][1]++;
    }
    cov_19wf13nxne().s[73]++;
    if (tickets.length === 0) {
      /* istanbul ignore next */
      cov_19wf13nxne().b[22][0]++;
      cov_19wf13nxne().s[74]++;
      return "empty";
    } else
    /* istanbul ignore next */
    {
      cov_19wf13nxne().b[22][1]++;
    }
    cov_19wf13nxne().s[75]++;
    return "success";
  };
  /* istanbul ignore next */
  cov_19wf13nxne().s[76]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_antd.Card, {
    title: "工单列表示例",
    className: "mb-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Space, {
      className: "mb-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Button, {
        onClick: fetchTickets,
        loading: loading,
        children: "获取工单列表"
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingEmptyError.default, {
      state: getState(),
      loadingText: "正在加载工单列表...",
      empty: {
        title: "暂无工单",
        description: "当前没有工单数据，点击下方按钮创建第一个工单",
        actionText: "创建工单",
        onAction: () => {
          /* istanbul ignore next */
          cov_19wf13nxne().f[21]++;
          cov_19wf13nxne().s[77]++;
          return console.log("创建工单");
        },
        showAction: true
      },
      error: {
        title: "加载失败",
        description:
        /* istanbul ignore next */
        (cov_19wf13nxne().b[23][0]++, error) ||
        /* istanbul ignore next */
        (cov_19wf13nxne().b[23][1]++, "工单列表加载失败，请稍后重试"),
        actionText: "重试",
        onAction: fetchTickets,
        showRetry: true,
        showAction: true
      },
      children:
      /* istanbul ignore next */
      (cov_19wf13nxne().b[24][0]++, tickets.length > 0) &&
      /* istanbul ignore next */
      (cov_19wf13nxne().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "space-y-2",
        children: tickets.map(ticket => {
          /* istanbul ignore next */
          cov_19wf13nxne().f[22]++;
          cov_19wf13nxne().s[78]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "p-3 border rounded",
            children: ticket.title
          }, ticket.id);
        })
      }))
    })]
  });
};
/* istanbul ignore next */
cov_19wf13nxne().s[79]++;
const ModuleExamples = () => {
  /* istanbul ignore next */
  cov_19wf13nxne().f[23]++;
  cov_19wf13nxne().s[80]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "space-y-6",
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_antd.Card, {
      title: "不同模块的空状态",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid grid-cols-1 md:grid-cols-2 gap-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingEmptyError.default, {
          state: "empty",
          empty: {
            title: "暂无事件",
            description: "当前没有事件数据",
            actionText: "创建事件",
            onAction: () => {
              /* istanbul ignore next */
              cov_19wf13nxne().f[24]++;
              cov_19wf13nxne().s[81]++;
              return console.log("创建事件");
            },
            showAction: true
          },
          minHeight: 150
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingEmptyError.default, {
          state: "empty",
          empty: {
            title: "暂无问题",
            description: "当前没有问题数据",
            actionText: "创建问题",
            onAction: () => {
              /* istanbul ignore next */
              cov_19wf13nxne().f[25]++;
              cov_19wf13nxne().s[82]++;
              return console.log("创建问题");
            },
            showAction: true
          },
          minHeight: 150
        })]
      })
    })
  });
};
/* istanbul ignore next */
cov_19wf13nxne().s[83]++;
const LoadingEmptyErrorExamples = () => {
  /* istanbul ignore next */
  cov_19wf13nxne().f[26]++;
  cov_19wf13nxne().s[84]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "p-6 space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
      className: "text-2xl font-bold mb-6",
      children: "LoadingEmptyError 组件示例"
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(BasicExample, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(TicketListExample, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(ModuleExamples, {})]
  });
};
const _default =
/* istanbul ignore next */
(cov_19wf13nxne().s[85]++, LoadingEmptyErrorExamples);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCYXNpY0V4YW1wbGUiLCJjb3ZfMTl3ZjEzbnhuZSIsImYiLCJzIiwiTG9hZGluZ0VtcHR5RXJyb3JFeGFtcGxlcyIsIk1vZHVsZUV4YW1wbGVzIiwiVGlja2V0TGlzdEV4YW1wbGUiLCJkZWZhdWx0IiwiX2RlZmF1bHQiLCJzdGF0ZSIsInNldFN0YXRlIiwiX3JlYWN0IiwidXNlU3RhdGUiLCJzaW11bGF0ZUxvYWRpbmciLCJzaW11bGF0ZUVtcHR5Iiwic2ltdWxhdGVFcnJvciIsInNpbXVsYXRlU3VjY2VzcyIsIl9qc3hydW50aW1lIiwianN4cyIsIl9hbnRkIiwiQ2FyZCIsInRpdGxlIiwiY2xhc3NOYW1lIiwiU3BhY2UiLCJqc3giLCJCdXR0b24iLCJvbkNsaWNrIiwiX0xvYWRpbmdFbXB0eUVycm9yIiwibG9hZGluZ1RleHQiLCJlbXB0eSIsImRlc2NyaXB0aW9uIiwiYWN0aW9uVGV4dCIsIm9uQWN0aW9uIiwiY29uc29sZSIsImxvZyIsInNob3dBY3Rpb24iLCJlcnJvciIsInNob3dSZXRyeSIsImIiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsInRpY2tldHMiLCJzZXRUaWNrZXRzIiwic2V0RXJyb3IiLCJmZXRjaFRpY2tldHMiLCJzZXRUaW1lb3V0IiwicmFuZG9tIiwiTWF0aCIsImlkIiwiZ2V0U3RhdGUiLCJsZW5ndGgiLCJtYXAiLCJ0aWNrZXQiLCJtaW5IZWlnaHQiXSwic291cmNlcyI6WyIvVXNlcnMvaGVpZHNvZnQvRG93bmxvYWRzL3Jlc2VhcmNoL2l0c20vaXRzbS1wcm90b3R5cGUvc3JjL2FwcC9jb21wb25lbnRzL3VpL0xvYWRpbmdFbXB0eUVycm9yLmV4YW1wbGUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQnV0dG9uLCBDYXJkLCBTcGFjZSB9IGZyb20gXCJhbnRkXCI7XG5pbXBvcnQgTG9hZGluZ0VtcHR5RXJyb3IgZnJvbSBcIi4vTG9hZGluZ0VtcHR5RXJyb3JcIjtcblxuLy8g56S65L6LMTog5Z+656GA55So5rOVXG5leHBvcnQgY29uc3QgQmFzaWNFeGFtcGxlID0gKCkgPT4ge1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlPFwibG9hZGluZ1wiIHwgXCJlbXB0eVwiIHwgXCJlcnJvclwiIHwgXCJzdWNjZXNzXCI+KFxuICAgIFwibG9hZGluZ1wiXG4gICk7XG5cbiAgY29uc3Qgc2ltdWxhdGVMb2FkaW5nID0gKCkgPT4gc2V0U3RhdGUoXCJsb2FkaW5nXCIpO1xuICBjb25zdCBzaW11bGF0ZUVtcHR5ID0gKCkgPT4gc2V0U3RhdGUoXCJlbXB0eVwiKTtcbiAgY29uc3Qgc2ltdWxhdGVFcnJvciA9ICgpID0+IHNldFN0YXRlKFwiZXJyb3JcIik7XG4gIGNvbnN0IHNpbXVsYXRlU3VjY2VzcyA9ICgpID0+IHNldFN0YXRlKFwic3VjY2Vzc1wiKTtcblxuICByZXR1cm4gKFxuICAgIDxDYXJkIHRpdGxlPVwi5Z+656GA55So5rOV56S65L6LXCIgY2xhc3NOYW1lPVwibWItNlwiPlxuICAgICAgPFNwYWNlIGNsYXNzTmFtZT1cIm1iLTRcIj5cbiAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXtzaW11bGF0ZUxvYWRpbmd9PuWKoOi9veeKtuaAgTwvQnV0dG9uPlxuICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9e3NpbXVsYXRlRW1wdHl9PuepuueKtuaAgTwvQnV0dG9uPlxuICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9e3NpbXVsYXRlRXJyb3J9PumUmeivr+eKtuaAgTwvQnV0dG9uPlxuICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9e3NpbXVsYXRlU3VjY2Vzc30+5oiQ5Yqf54q25oCBPC9CdXR0b24+XG4gICAgICA8L1NwYWNlPlxuXG4gICAgICA8TG9hZGluZ0VtcHR5RXJyb3JcbiAgICAgICAgc3RhdGU9e3N0YXRlfVxuICAgICAgICBsb2FkaW5nVGV4dD1cIuato+WcqOWKoOi9veaVsOaNri4uLlwiXG4gICAgICAgIGVtcHR5PXt7XG4gICAgICAgICAgdGl0bGU6IFwi5pqC5peg5pWw5o2uXCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwi5b2T5YmN5rKh5pyJ55u45YWz5pWw5o2u77yM5oKo5Y+v5Lul5Yib5bu65paw55qE6K6w5b2VXCIsXG4gICAgICAgICAgYWN0aW9uVGV4dDogXCLliJvlu7rorrDlvZVcIixcbiAgICAgICAgICBvbkFjdGlvbjogKCkgPT4gY29uc29sZS5sb2coXCLliJvlu7rorrDlvZVcIiksXG4gICAgICAgICAgc2hvd0FjdGlvbjogdHJ1ZSxcbiAgICAgICAgfX1cbiAgICAgICAgZXJyb3I9e3tcbiAgICAgICAgICB0aXRsZTogXCLliqDovb3lpLHotKVcIixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCLmlbDmja7liqDovb3ov4fnqIvkuK3lj5HnlJ/plJnor6/vvIzor7fnqI3lkI7ph43or5VcIixcbiAgICAgICAgICBhY3Rpb25UZXh0OiBcIumHjeivlVwiLFxuICAgICAgICAgIG9uQWN0aW9uOiAoKSA9PiBjb25zb2xlLmxvZyhcIumHjeivlVwiKSxcbiAgICAgICAgICBzaG93UmV0cnk6IHRydWUsXG4gICAgICAgICAgc2hvd0FjdGlvbjogdHJ1ZSxcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAge3N0YXRlID09PSBcInN1Y2Nlc3NcIiAmJiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwLTQgdGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgdGV4dC1ncmVlbi02MDBcIj7mlbDmja7liqDovb3miJDlip/vvIE8L2gzPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTYwMFwiPui/memHjOaYvuekuuWunumZheeahOaVsOaNruWGheWuuTwvcD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvTG9hZGluZ0VtcHR5RXJyb3I+XG4gICAgPC9DYXJkPlxuICApO1xufTtcblxuLy8g56S65L6LMjog5bel5Y2V5YiX6KGo56S65L6LXG5pbnRlcmZhY2UgVGlja2V0IHtcbiAgaWQ6IG51bWJlcjtcbiAgdGl0bGU6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IFRpY2tldExpc3RFeGFtcGxlID0gKCkgPT4ge1xuICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFt0aWNrZXRzLCBzZXRUaWNrZXRzXSA9IHVzZVN0YXRlPFRpY2tldFtdPihbXSk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG5cbiAgY29uc3QgZmV0Y2hUaWNrZXRzID0gYXN5bmMgKCkgPT4ge1xuICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgc2V0RXJyb3IobnVsbCk7XG4gICAgXG4gICAgLy8g5qih5oufQVBJ6LCD55SoXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb25zdCByYW5kb20gPSBNYXRoLnJhbmRvbSgpO1xuICAgICAgaWYgKHJhbmRvbSA8IDAuMykge1xuICAgICAgICBzZXRFcnJvcihcIue9kee7nOmUmeivr1wiKTtcbiAgICAgICAgc2V0VGlja2V0cyhbXSk7XG4gICAgICB9IGVsc2UgaWYgKHJhbmRvbSA8IDAuNikge1xuICAgICAgICBzZXRUaWNrZXRzKFtdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldFRpY2tldHMoW3sgaWQ6IDEsIHRpdGxlOiBcIuekuuS+i+W3peWNlVwiIH1dKTtcbiAgICAgIH1cbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH0sIDIwMDApO1xuICB9O1xuXG4gIGNvbnN0IGdldFN0YXRlID0gKCkgPT4ge1xuICAgIGlmIChsb2FkaW5nKSByZXR1cm4gXCJsb2FkaW5nXCI7XG4gICAgaWYgKGVycm9yKSByZXR1cm4gXCJlcnJvclwiO1xuICAgIGlmICh0aWNrZXRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIFwiZW1wdHlcIjtcbiAgICByZXR1cm4gXCJzdWNjZXNzXCI7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8Q2FyZCB0aXRsZT1cIuW3peWNleWIl+ihqOekuuS+i1wiIGNsYXNzTmFtZT1cIm1iLTZcIj5cbiAgICAgIDxTcGFjZSBjbGFzc05hbWU9XCJtYi00XCI+XG4gICAgICAgIDxCdXR0b24gb25DbGljaz17ZmV0Y2hUaWNrZXRzfSBsb2FkaW5nPXtsb2FkaW5nfT5cbiAgICAgICAgICDojrflj5blt6XljZXliJfooahcbiAgICAgICAgPC9CdXR0b24+XG4gICAgICA8L1NwYWNlPlxuXG4gICAgICA8TG9hZGluZ0VtcHR5RXJyb3JcbiAgICAgICAgc3RhdGU9e2dldFN0YXRlKCl9XG4gICAgICAgIGxvYWRpbmdUZXh0PVwi5q2j5Zyo5Yqg6L295bel5Y2V5YiX6KGoLi4uXCJcbiAgICAgICAgZW1wdHk9e3tcbiAgICAgICAgICB0aXRsZTogXCLmmoLml6Dlt6XljZVcIixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCLlvZPliY3msqHmnInlt6XljZXmlbDmja7vvIzngrnlh7vkuIvmlrnmjInpkq7liJvlu7rnrKzkuIDkuKrlt6XljZVcIixcbiAgICAgICAgICBhY3Rpb25UZXh0OiBcIuWIm+W7uuW3peWNlVwiLFxuICAgICAgICAgIG9uQWN0aW9uOiAoKSA9PiBjb25zb2xlLmxvZyhcIuWIm+W7uuW3peWNlVwiKSxcbiAgICAgICAgICBzaG93QWN0aW9uOiB0cnVlLFxuICAgICAgICB9fVxuICAgICAgICBlcnJvcj17e1xuICAgICAgICAgIHRpdGxlOiBcIuWKoOi9veWksei0pVwiLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBlcnJvciB8fCBcIuW3peWNleWIl+ihqOWKoOi9veWksei0pe+8jOivt+eojeWQjumHjeivlVwiLFxuICAgICAgICAgIGFjdGlvblRleHQ6IFwi6YeN6K+VXCIsXG4gICAgICAgICAgb25BY3Rpb246IGZldGNoVGlja2V0cyxcbiAgICAgICAgICBzaG93UmV0cnk6IHRydWUsXG4gICAgICAgICAgc2hvd0FjdGlvbjogdHJ1ZSxcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAge3RpY2tldHMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTJcIj5cbiAgICAgICAgICAgIHt0aWNrZXRzLm1hcCgodGlja2V0KSA9PiAoXG4gICAgICAgICAgICAgIDxkaXYga2V5PXt0aWNrZXQuaWR9IGNsYXNzTmFtZT1cInAtMyBib3JkZXIgcm91bmRlZFwiPlxuICAgICAgICAgICAgICAgIHt0aWNrZXQudGl0bGV9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICA8L0xvYWRpbmdFbXB0eUVycm9yPlxuICAgIDwvQ2FyZD5cbiAgKTtcbn07XG5cbi8vIOekuuS+izM6IOaooeWdl+WMluekuuS+i1xuZXhwb3J0IGNvbnN0IE1vZHVsZUV4YW1wbGVzID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS02XCI+XG4gICAgICA8Q2FyZCB0aXRsZT1cIuS4jeWQjOaooeWdl+eahOepuueKtuaAgVwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTIgZ2FwLTRcIj5cbiAgICAgICAgICA8TG9hZGluZ0VtcHR5RXJyb3JcbiAgICAgICAgICAgIHN0YXRlPVwiZW1wdHlcIlxuICAgICAgICAgICAgZW1wdHk9e3tcbiAgICAgICAgICAgICAgdGl0bGU6IFwi5pqC5peg5LqL5Lu2XCIsXG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIuW9k+WJjeayoeacieS6i+S7tuaVsOaNrlwiLFxuICAgICAgICAgICAgICBhY3Rpb25UZXh0OiBcIuWIm+W7uuS6i+S7tlwiLFxuICAgICAgICAgICAgICBvbkFjdGlvbjogKCkgPT4gY29uc29sZS5sb2coXCLliJvlu7rkuovku7ZcIiksXG4gICAgICAgICAgICAgIHNob3dBY3Rpb246IHRydWUsXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgbWluSGVpZ2h0PXsxNTB9XG4gICAgICAgICAgLz5cbiAgICAgICAgICBcbiAgICAgICAgICA8TG9hZGluZ0VtcHR5RXJyb3JcbiAgICAgICAgICAgIHN0YXRlPVwiZW1wdHlcIlxuICAgICAgICAgICAgZW1wdHk9e3tcbiAgICAgICAgICAgICAgdGl0bGU6IFwi5pqC5peg6Zeu6aKYXCIsXG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIuW9k+WJjeayoeaciemXrumimOaVsOaNrlwiLFxuICAgICAgICAgICAgICBhY3Rpb25UZXh0OiBcIuWIm+W7uumXrumimFwiLFxuICAgICAgICAgICAgICBvbkFjdGlvbjogKCkgPT4gY29uc29sZS5sb2coXCLliJvlu7rpl67pophcIiksXG4gICAgICAgICAgICAgIHNob3dBY3Rpb246IHRydWUsXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgbWluSGVpZ2h0PXsxNTB9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L0NhcmQ+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG4vLyDkuLvnpLrkvovnu4Tku7ZcbmV4cG9ydCBjb25zdCBMb2FkaW5nRW1wdHlFcnJvckV4YW1wbGVzID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwicC02IHNwYWNlLXktNlwiPlxuICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtYm9sZCBtYi02XCI+TG9hZGluZ0VtcHR5RXJyb3Ig57uE5Lu256S65L6LPC9oMT5cbiAgICAgIDxCYXNpY0V4YW1wbGUgLz5cbiAgICAgIDxUaWNrZXRMaXN0RXhhbXBsZSAvPlxuICAgICAgPE1vZHVsZUV4YW1wbGVzIC8+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBMb2FkaW5nRW1wdHlFcnJvckV4YW1wbGVzO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQUthQSxZQUFZLFdBQUFBLENBQUE7SUFBQTtJQUFBQyxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO1dBQVpILFlBQUE7O0VBbUtBSSx5QkFBeUIsV0FBQUEsQ0FBQTtJQUFBO0lB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