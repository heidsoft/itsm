{"version":3,"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/jest.setup.js"],"sourcesContent":["import '@testing-library/jest-dom';\n\n// Mock Next.js router\njest.mock('next/navigation', () => ({\n  useRouter() {\n    return {\n      push: jest.fn(),\n      replace: jest.fn(),\n      prefetch: jest.fn(),\n      back: jest.fn(),\n      forward: jest.fn(),\n      refresh: jest.fn(),\n    };\n  },\n  useSearchParams() {\n    return new URLSearchParams();\n  },\n  usePathname() {\n    return '/';\n  },\n}));\n\n// Mock window.matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n});\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = class IntersectionObserver {\n  constructor() {}\n  observe() {\n    return null;\n  }\n  disconnect() {\n    return null;\n  }\n  unobserve() {\n    return null;\n  }\n};\n\n// Mock ResizeObserver\nglobal.ResizeObserver = class ResizeObserver {\n  constructor() {}\n  observe() {\n    return null;\n  }\n  disconnect() {\n    return null;\n  }\n  unobserve() {\n    return null;\n  }\n};\n\n// Suppress console warnings in tests\nconst originalError = console.error;\nbeforeAll(() => {\n  console.error = (...args) => {\n    if (\n      typeof args[0] === 'string' &&\n      args[0].includes('Warning: ReactDOM.render is no longer supported')\n    ) {\n      return;\n    }\n    originalError.call(console, ...args);\n  };\n});\n\nafterAll(() => {\n  console.error = originalError;\n});"],"names":["jest","mock","useRouter","push","fn","replace","prefetch","back","forward","refresh","useSearchParams","URLSearchParams","usePathname","Object","defineProperty","window","writable","value","mockImplementation","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","global","IntersectionObserver","constructor","observe","disconnect","unobserve","ResizeObserver","originalError","console","error","beforeAll","args","includes","call","afterAll"],"mappings":";AAEA,sBAAsB;AACtBA,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCC;YACE,OAAO;gBACLC,MAAMH,KAAKI,EAAE;gBACbC,SAASL,KAAKI,EAAE;gBAChBE,UAAUN,KAAKI,EAAE;gBACjBG,MAAMP,KAAKI,EAAE;gBACbI,SAASR,KAAKI,EAAE;gBAChBK,SAAST,KAAKI,EAAE;YAClB;QACF;QACAM;YACE,OAAO,IAAIC;QACb;QACAC;YACE,OAAO;QACT;IACF,CAAA;;;;QApBO;AAsBP,yBAAyB;AACzBC,OAAOC,cAAc,CAACC,QAAQ,cAAc;IAC1CC,UAAU;IACVC,OAAOjB,KAAKI,EAAE,GAAGc,kBAAkB,CAACC,CAAAA,QAAU,CAAA;YAC5CC,SAAS;YACTC,OAAOF;YACPG,UAAU;YACVC,aAAavB,KAAKI,EAAE;YACpBoB,gBAAgBxB,KAAKI,EAAE;YACvBqB,kBAAkBzB,KAAKI,EAAE;YACzBsB,qBAAqB1B,KAAKI,EAAE;YAC5BuB,eAAe3B,KAAKI,EAAE;QACxB,CAAA;AACF;AAEA,4BAA4B;AAC5BwB,OAAOC,oBAAoB,GAAG,MAAMA;IAClCC,aAAc,CAAC;IACfC,UAAU;QACR,OAAO;IACT;IACAC,aAAa;QACX,OAAO;IACT;IACAC,YAAY;QACV,OAAO;IACT;AACF;AAEA,sBAAsB;AACtBL,OAAOM,cAAc,GAAG,MAAMA;IAC5BJ,aAAc,CAAC;IACfC,UAAU;QACR,OAAO;IACT;IACAC,aAAa;QACX,OAAO;IACT;IACAC,YAAY;QACV,OAAO;IACT;AACF;AAEA,qCAAqC;AACrC,MAAME,gBAAgBC,QAAQC,KAAK;AACnCC,UAAU;IACRF,QAAQC,KAAK,GAAG,CAAC,GAAGE;QAClB,IACE,OAAOA,IAAI,CAAC,EAAE,KAAK,YACnBA,IAAI,CAAC,EAAE,CAACC,QAAQ,CAAC,oDACjB;YACA;QACF;QACAL,cAAcM,IAAI,CAACL,YAAYG;IACjC;AACF;AAEAG,SAAS;IACPN,QAAQC,KAAK,GAAGF;AAClB"}