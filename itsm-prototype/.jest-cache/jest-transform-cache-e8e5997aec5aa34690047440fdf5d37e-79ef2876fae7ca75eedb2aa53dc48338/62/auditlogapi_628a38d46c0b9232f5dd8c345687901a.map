{"version":3,"names":["cov_2kcftbr9dz","actualCoverage","s","listAuditLogs","params","f","query","URLSearchParams","page","b","set","String","page_size","user_id","undefined","resource","action","method","status_code","path","request_id","from","to","endpoint","toString","_httpclient","httpClient","get"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/auditlog-api.ts"],"sourcesContent":["import { httpClient } from './http-client';\n\n// 审计日志项类型（与后端 DTO 对齐）\nexport interface AuditLog {\n  id: number;\n  created_at: string; // ISO 时间字符串\n  tenant_id: number;\n  user_id: number;\n  request_id: string;\n  ip: string;\n  resource: string;\n  action: string;\n  path: string;\n  method: string;\n  status_code: number;\n  request_body: string;\n}\n\n// 查询参数（对应后端 ListAuditLogsRequest）\nexport interface ListAuditLogsParams {\n  page?: number;\n  page_size?: number;\n  user_id?: number;\n  resource?: string;\n  action?: string;\n  method?: string;\n  status_code?: number;\n  path?: string;\n  request_id?: string;\n  from?: string; // RFC3339\n  to?: string;   // RFC3339\n}\n\n// 响应结构（对应后端 ListAuditLogsResponse）\nexport interface ListAuditLogsResponse {\n  logs: AuditLog[];\n  total: number;\n  page: number;\n  page_size: number;\n}\n\n// 查询审计日志（自动携带 Authorization、X-Tenant-ID / X-Tenant-Code）\nexport async function listAuditLogs(params: ListAuditLogsParams): Promise<ListAuditLogsResponse> {\n  const query = new URLSearchParams();\n  if (params.page) query.set('page', String(params.page));\n  if (params.page_size) query.set('page_size', String(params.page_size));\n  if (params.user_id !== undefined) query.set('user_id', String(params.user_id));\n  if (params.resource) query.set('resource', params.resource);\n  if (params.action) query.set('action', params.action);\n  if (params.method) query.set('method', params.method);\n  if (params.status_code !== undefined) query.set('status_code', String(params.status_code));\n  if (params.path) query.set('path', params.path);\n  if (params.request_id) query.set('request_id', params.request_id);\n  if (params.from) query.set('from', params.from);\n  if (params.to) query.set('to', params.to);\n\n  const endpoint = `/api/v1/audit-logs${query.toString() ? `?${query.toString()}` : ''}`;\n  return await httpClient.get<ListAuditLogsResponse>(endpoint);\n}"],"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","ignoreList":[]}