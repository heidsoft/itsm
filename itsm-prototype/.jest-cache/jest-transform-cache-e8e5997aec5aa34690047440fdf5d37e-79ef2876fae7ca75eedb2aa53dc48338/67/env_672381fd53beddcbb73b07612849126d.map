{"version":3,"names":["default","cov_17mhd1zefm","f","s","_default","devTools","env","errorHandler","getEnvironment","logger","performance","window","b","process","NODE_ENV","isDevelopment","isProduction","isTest","features","debugMode","performanceMonitoring","errorReporting","consoleLogs","api","baseUrl","NEXT_PUBLIC_API_BASE_URL","timeout","parseInt","NEXT_PUBLIC_API_TIMEOUT","retryCount","NEXT_PUBLIC_API_RETRY_COUNT","app","name","version","NEXT_PUBLIC_APP_VERSION","buildTime","NEXT_PUBLIC_BUILD_TIME","debug","args","console","log","info","warn","error","label","data","security","event","start","time","end","timeEnd","measure","fn","Date","now","result","duration","measureAsync","handleApiError","context","errorMessage","Error","message","String","errorContext","success","handleValidationError","errors","handleNetworkError","isNetworkError","includes","type","onlyInDev","fallback","debugInfo","component","mark","startMark","endMark"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/env.ts"],"sourcesContent":["// 环境配置工具\n\n// 环境类型\nexport type Environment = 'development' | 'production' | 'test';\n\n// 获取当前环境\nexport const getEnvironment = (): Environment => {\n  if (typeof window !== 'undefined') {\n    // 客户端环境\n    return (process.env.NODE_ENV as Environment) || 'development';\n  }\n  // 服务端环境\n  return (process.env.NODE_ENV as Environment) || 'development';\n};\n\n// 环境配置\nexport const env = {\n  isDevelopment: getEnvironment() === 'development',\n  isProduction: getEnvironment() === 'production',\n  isTest: getEnvironment() === 'test',\n  \n  // 功能开关\n  features: {\n    debugMode: getEnvironment() === 'development',\n    performanceMonitoring: getEnvironment() === 'production',\n    errorReporting: getEnvironment() === 'production',\n    consoleLogs: getEnvironment() === 'development',\n  },\n  \n  // API配置\n  api: {\n    baseUrl: process.env.NEXT_PUBLIC_API_BASE_URL || 'http://localhost:8080',\n    timeout: parseInt(process.env.NEXT_PUBLIC_API_TIMEOUT || '10000'),\n    retryCount: parseInt(process.env.NEXT_PUBLIC_API_RETRY_COUNT || '3'),\n  },\n  \n  // 应用配置\n  app: {\n    name: 'ITSM Platform',\n    version: process.env.NEXT_PUBLIC_APP_VERSION || '1.0.0',\n    buildTime: process.env.NEXT_PUBLIC_BUILD_TIME || '',\n  },\n};\n\n// 日志工具\nexport const logger = {\n  // 开发环境日志\n  debug: (...args: unknown[]) => {\n    if (env.features.consoleLogs) {\n      console.log('[DEBUG]', ...args);\n    }\n  },\n  \n  // 信息日志\n  info: (...args: unknown[]) => {\n    if (env.features.consoleLogs) {\n      console.info('[INFO]', ...args);\n    }\n  },\n  \n  // 警告日志\n  warn: (...args: unknown[]) => {\n    if (env.features.consoleLogs) {\n      console.warn('[WARN]', ...args);\n    }\n  },\n  \n  // 错误日志（生产环境也会输出）\n  error: (...args: unknown[]) => {\n    console.error('[ERROR]', ...args);\n    \n    // 生产环境错误上报\n    if (env.features.errorReporting) {\n      // 这里可以集成错误上报服务\n      // reportError(args);\n    }\n  },\n  \n  // 性能日志\n  performance: (label: string, data: Record<string, unknown>) => {\n    if (env.features.performanceMonitoring) {\n      console.log(`[PERFORMANCE] ${label}:`, data);\n    }\n  },\n  \n  // 安全日志\n  security: (event: string, data: Record<string, unknown>) => {\n    if (env.features.consoleLogs) {\n      console.log('[SECURITY]', event, data);\n    }\n    \n    // 生产环境安全事件上报\n    if (env.features.errorReporting) {\n      // reportSecurityEvent(event, data);\n    }\n  },\n};\n\n// 性能监控工具\nexport const performance = {\n  // 开始计时\n  start: (label: string) => {\n    if (env.features.performanceMonitoring) {\n      console.time(`[PERF] ${label}`);\n      return label;\n    }\n    return null;\n  },\n  \n  // 结束计时\n  end: (label: string) => {\n    if (env.features.performanceMonitoring) {\n      console.timeEnd(`[PERF] ${label}`);\n    }\n  },\n  \n  // 测量函数执行时间\n  measure: <T>(label: string, fn: () => T): T => {\n    if (env.features.performanceMonitoring) {\n      const start = Date.now();\n      const result = fn();\n      const end = Date.now();\n      logger.performance(label, { duration: `${end - start}ms` });\n      return result;\n    }\n    return fn();\n  },\n  \n  // 异步函数性能测量\n  measureAsync: async <T>(label: string, fn: () => Promise<T>): Promise<T> => {\n    if (env.features.performanceMonitoring) {\n      const start = Date.now();\n      const result = await fn();\n      const end = Date.now();\n      logger.performance(label, { duration: `${end - start}ms` });\n      return result;\n    }\n    return fn();\n  },\n};\n\n// 错误处理工具\nexport const errorHandler = {\n  // 处理API错误\n  handleApiError: (error: unknown, context?: string) => {\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    const errorContext = context ? `[${context}]` : '';\n    \n    logger.error(`${errorContext} API Error:`, errorMessage);\n    \n    // 生产环境错误上报\n    if (env.features.errorReporting) {\n      // reportApiError(error, context);\n    }\n    \n    return {\n      success: false,\n      error: errorMessage,\n      context,\n    };\n  },\n  \n  // 处理表单验证错误\n  handleValidationError: (errors: Record<string, string[]>) => {\n    logger.warn('Form validation errors:', errors);\n    \n    return {\n      success: false,\n      errors,\n      message: '表单验证失败',\n    };\n  },\n  \n  // 处理网络错误\n  handleNetworkError: (error: unknown) => {\n    const isNetworkError = error instanceof Error && \n      (error.message.includes('Network Error') || \n       error.message.includes('Failed to fetch'));\n    \n    if (isNetworkError) {\n      logger.error('Network error detected:', error);\n      \n      // 生产环境网络错误上报\n      if (env.features.errorReporting) {\n        // reportNetworkError(error);\n      }\n      \n      return {\n        success: false,\n        error: '网络连接失败，请检查网络设置',\n        type: 'network',\n      };\n    }\n    \n    return {\n      success: false,\n      error: '未知错误',\n      type: 'unknown',\n    };\n  },\n};\n\n// 开发工具\nexport const devTools = {\n  // 只在开发环境执行的函数\n  onlyInDev: <T>(fn: () => T, fallback?: T): T | undefined => {\n    if (env.isDevelopment) {\n      return fn();\n    }\n    return fallback;\n  },\n  \n  // 开发环境调试信息\n  debugInfo: (component: string, data: unknown) => {\n    if (env.isDevelopment) {\n      logger.debug(`[${component}]`, data);\n    }\n  },\n  \n  // 开发环境性能标记\n  mark: (name: string) => {\n    if (env.isDevelopment && typeof window !== 'undefined' && window.performance) {\n      window.performance.mark(name);\n    }\n  },\n  \n  // 开发环境性能测量\n  measure: (name: string, startMark: string, endMark: string) => {\n    if (env.isDevelopment && typeof window !== 'undefined' && window.performance) {\n      try {\n        const measure = window.performance.measure(name, startMark, endMark);\n        logger.debug(`Performance measure [${name}]:`, measure.duration);\n      } catch (error) {\n        logger.warn(`Failed to measure performance [${name}]:`, error);\n      }\n    }\n  },\n};\n\n// 导出默认配置\nexport default env;\n"],"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","ignoreList":[]}