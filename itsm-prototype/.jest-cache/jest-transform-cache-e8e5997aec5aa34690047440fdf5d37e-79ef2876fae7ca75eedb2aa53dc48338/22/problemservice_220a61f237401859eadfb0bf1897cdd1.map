{"version":3,"names":["ProblemPriority","cov_2a7ow5iqf","f","s","ProblemStatus","default","_default","problemService","ProblemService","listProblems","params","b","_httpclient","httpClient","get","baseUrl","getProblem","id","createProblem","data","post","updateProblem","put","deleteProblem","delete","getProblemStats","getStatusColor","status","getPriorityColor","priority","getStatusLabel","getPriorityLabel","getStatusText","getPriorityText"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/services/problem-service.ts"],"sourcesContent":["import { httpClient } from '../http-client';\n\n// 问题状态枚举\nexport enum ProblemStatus {\n  OPEN = 'open',\n  IN_PROGRESS = 'in_progress',\n  RESOLVED = 'resolved',\n  CLOSED = 'closed'\n}\n\n// 问题优先级枚举\nexport enum ProblemPriority {\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n  CRITICAL = 'critical'\n}\n\n// 问题接口定义\nexport interface Problem {\n  id: number;\n  title: string;\n  description: string;\n  status: ProblemStatus;\n  priority: ProblemPriority;\n  category: string;\n  root_cause: string;\n  impact: string;\n  assignee_id?: number;\n  assignee?: {\n    id: number;\n    name: string;\n    username: string;\n  };\n  created_by: number;\n  created_at: string;\n  updated_at: string;\n  tenant_id: number;\n}\n\n// 创建问题请求\nexport interface CreateProblemRequest {\n  title: string;\n  description: string;\n  priority: ProblemPriority;\n  category: string;\n  root_cause: string;\n  impact: string;\n  assignee_id?: number;\n}\n\n// 更新问题请求\nexport interface UpdateProblemRequest {\n  title?: string;\n  description?: string;\n  status?: ProblemStatus;\n  priority?: ProblemPriority;\n  category?: string;\n  root_cause?: string;\n  impact?: string;\n  assignee_id?: number;\n}\n\n// 问题列表查询参数\nexport interface ListProblemsParams {\n  page?: number;\n  page_size?: number;\n  status?: ProblemStatus;\n  priority?: ProblemPriority;\n  category?: string;\n  keyword?: string;\n  date_from?: string;\n  date_to?: string;\n  sort_by?: string;\n  sort_order?: 'asc' | 'desc';\n}\n\n// 问题列表响应\nexport interface ListProblemsResponse {\n  problems: Problem[];\n  total: number;\n  page: number;\n  page_size: number;\n}\n\n// 问题统计响应\nexport interface ProblemStatsResponse {\n  total: number;\n  open: number;\n  in_progress: number;\n  resolved: number;\n  closed: number;\n  high_priority: number;\n}\n\n// 问题管理API服务类\nclass ProblemService {\n  private readonly baseUrl = '/api/v1/problems';\n\n  // 获取问题列表\n  async listProblems(params: ListProblemsParams = {}): Promise<ListProblemsResponse> {\n    return httpClient.get<ListProblemsResponse>(this.baseUrl, params);\n  }\n\n  // 获取问题详情\n  async getProblem(id: number): Promise<Problem> {\n    return httpClient.get<Problem>(`${this.baseUrl}/${id}`);\n  }\n\n  // 创建问题\n  async createProblem(data: CreateProblemRequest): Promise<{ message: string; problem_id: number }> {\n    return httpClient.post<{ message: string; problem_id: number }>(this.baseUrl, data);\n  }\n\n  // 更新问题\n  async updateProblem(id: number, data: UpdateProblemRequest): Promise<{ message: string; problem_id: number }> {\n    return httpClient.put<{ message: string; problem_id: number }>(`${this.baseUrl}/${id}`, data);\n  }\n\n  // 删除问题\n  async deleteProblem(id: number): Promise<{ message: string; problem_id: number }> {\n    return httpClient.delete<{ message: string; problem_id: number }>(`${this.baseUrl}/${id}`);\n  }\n\n  // 获取问题统计\n  async getProblemStats(): Promise<ProblemStatsResponse> {\n    return httpClient.get<ProblemStatsResponse>(`${this.baseUrl}/stats`);\n  }\n\n  // 获取状态标签颜色\n  getStatusColor(status: ProblemStatus): string {\n    switch (status) {\n      case ProblemStatus.OPEN:\n        return 'processing';\n      case ProblemStatus.IN_PROGRESS:\n        return 'processing';\n      case ProblemStatus.RESOLVED:\n        return 'success';\n      case ProblemStatus.CLOSED:\n        return 'default';\n      default:\n        return 'default';\n    }\n  }\n\n  // 获取优先级标签颜色\n  getPriorityColor(priority: ProblemPriority): string {\n    switch (priority) {\n      case ProblemPriority.LOW:\n        return 'green';\n      case ProblemPriority.MEDIUM:\n        return 'orange';\n      case ProblemPriority.HIGH:\n        return 'red';\n      case ProblemPriority.CRITICAL:\n        return 'red';\n      default:\n        return 'default';\n    }\n  }\n\n  // 获取状态中文名称\n  getStatusLabel(status: ProblemStatus): string {\n    switch (status) {\n      case ProblemStatus.OPEN:\n        return '待处理';\n      case ProblemStatus.IN_PROGRESS:\n        return '处理中';\n      case ProblemStatus.RESOLVED:\n        return '已解决';\n      case ProblemStatus.CLOSED:\n        return '已关闭';\n      default:\n        return status;\n    }\n  }\n\n  // 获取优先级中文名称\n  getPriorityLabel(priority: ProblemPriority): string {\n    switch (priority) {\n      case ProblemPriority.LOW:\n        return '低';\n      case ProblemPriority.MEDIUM:\n        return '中';\n      case ProblemPriority.HIGH:\n        return '高';\n      case ProblemPriority.CRITICAL:\n        return '紧急';\n      default:\n        return priority;\n    }\n  }\n\n  getStatusText(status: ProblemStatus): string {\n    switch (status) {\n      case ProblemStatus.OPEN:\n        return 'Open';\n      case ProblemStatus.IN_PROGRESS:\n        return 'In Progress';\n      case ProblemStatus.RESOLVED:\n        return 'Resolved';\n      case ProblemStatus.CLOSED:\n        return 'Closed';\n      default:\n        return 'Unknown';\n    }\n  }\n\n  getPriorityText(priority: ProblemPriority): string {\n    switch (priority) {\n      case ProblemPriority.LOW:\n        return 'Low';\n      case ProblemPriority.MEDIUM:\n        return 'Medium';\n      case ProblemPriority.HIGH:\n        return 'High';\n      case ProblemPriority.CRITICAL:\n        return 'Critical';\n      default:\n        return 'Unknown';\n    }\n  }\n}\n\nexport const problemService = new ProblemService();\nexport default ProblemService;\n"],"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","ignoreList":[]}