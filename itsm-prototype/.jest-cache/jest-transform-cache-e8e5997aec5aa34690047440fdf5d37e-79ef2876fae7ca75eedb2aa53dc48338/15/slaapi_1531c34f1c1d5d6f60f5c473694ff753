77a8cac65318b63312f77eebcbb9e563
"use strict";

/* istanbul ignore next */
function cov_10z4gbil8i() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/sla-api.ts";
  var hash = "a355bd2713b677807f7ff961a7b8c6814a9b91c0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/sla-api.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 74
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 73
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 72
        }
      },
      "10": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 78
        }
      },
      "11": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 75
        }
      },
      "12": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 73
        }
      },
      "13": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      },
      "14": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 80
        }
      },
      "15": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 83
        }
      },
      "16": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 60
        }
      },
      "17": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 70
        }
      },
      "18": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 61
        }
      },
      "19": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 63
        }
      },
      "20": {
        start: {
          line: 76,
          column: 17
        },
        end: {
          line: 76,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 13
          }
        },
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 14
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 43
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 43
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 38
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 47
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 41
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 42
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 54
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 46
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 48
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 52
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 51
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 56
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 60
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 39
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 64
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 32
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 68
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 40
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 72
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/sla-api.ts"],
      sourcesContent: ["import { httpClient } from './http-client';\n\n// SLA\u5B9A\u4E49\u63A5\u53E3\nexport interface SLADefinition {\n  id: number;\n  name: string;\n  description: string;\n  service_type: string;\n  priority: string;\n  response_time_minutes: number;\n  resolution_time_minutes: number;\n  availability_target: number;\n  is_active: boolean;\n  tenant_id: number;\n  created_at: string;\n  updated_at: string;\n}\n\n// SLA\u8FDD\u89C4\u63A5\u53E3\nexport interface SLAViolation {\n  id: number;\n  ticket_id: number;\n  sla_def_id: number;\n  violation_type: string;\n  expected_time: string;\n  actual_time: string;\n  delay_minutes: number;\n  status: string;\n  tenant_id: number;\n  created_at: string;\n  updated_at: string;\n}\n\n// SLA\u5408\u89C4\u62A5\u544A\u63A5\u53E3\nexport interface SLAComplianceReport {\n  total_tickets: number;\n  met_sla: number;\n  violated_sla: number;\n  compliance_rate: number;\n  avg_response_time: number;\n  avg_resolution_time: number;\n  report_period: {\n    start_date: string;\n    end_date: string;\n  };\n}\n\n// \u521B\u5EFASLA\u5B9A\u4E49\u8BF7\u6C42\nexport interface CreateSLADefinitionRequest {\n  name: string;\n  description: string;\n  service_type: string;\n  priority: string;\n  response_time_minutes: number;\n  resolution_time_minutes: number;\n  availability_target: number;\n}\n\nexport class SLAApi {\n  // \u83B7\u53D6SLA\u5B9A\u4E49\u5217\u8868\n  static async getSLADefinitions(params?: {\n    page?: number;\n    page_size?: number;\n  }): Promise<{\n    items: SLADefinition[];\n    total: number;\n    page: number;\n    page_size: number;\n  }> {\n    return httpClient.get('/api/sla/definitions', params);\n  }\n\n  // \u521B\u5EFASLA\u5B9A\u4E49\n  static async createSLADefinition(data: CreateSLADefinitionRequest): Promise<SLADefinition> {\n    return httpClient.post<SLADefinition>('/api/sla/definitions', data);\n  }\n\n  // \u83B7\u53D6SLA\u5B9A\u4E49\u8BE6\u60C5\n  static async getSLADefinition(id: number): Promise<SLADefinition> {\n    return httpClient.get<SLADefinition>(`/api/sla/definitions/${id}`);\n  }\n\n  // \u66F4\u65B0SLA\u5B9A\u4E49\n  static async updateSLADefinition(id: number, data: Partial<CreateSLADefinitionRequest>): Promise<SLADefinition> {\n    return httpClient.put<SLADefinition>(`/api/sla/definitions/${id}`, data);\n  }\n\n  // \u5220\u9664SLA\u5B9A\u4E49\n  static async deleteSLADefinition(id: number): Promise<void> {\n    return httpClient.delete(`/api/sla/definitions/${id}`);\n  }\n\n  // \u83B7\u53D6SLA\u8FDD\u89C4\u5217\u8868\n  static async getSLAViolations(params?: {\n    page?: number;\n    page_size?: number;\n    status?: string;\n  }): Promise<{\n    items: SLAViolation[];\n    total: number;\n    page: number;\n    page_size: number;\n  }> {\n    return httpClient.get('/api/sla/violations', params);\n  }\n\n  // \u66F4\u65B0SLA\u8FDD\u89C4\u72B6\u6001\n  static async updateSLAViolationStatus(id: number, status: string): Promise<void> {\n    return httpClient.put(`/api/sla/violations/${id}/status`, { status });\n  }\n\n  // \u83B7\u53D6SLA\u5408\u89C4\u62A5\u544A\n  static async getSLAComplianceReport(params: {\n    start_date: string;\n    end_date: string;\n  }): Promise<SLAComplianceReport> {\n    return httpClient.get('/api/sla/compliance-report', params);\n  }\n\n  // \u68C0\u67E5\u5DE5\u5355SLA\u8FDD\u89C4\n  static async checkTicketSLAViolation(ticketId: number): Promise<void> {\n    return httpClient.post(`/api/sla/check-violation/${ticketId}`);\n  }\n\n  // \u83B7\u53D6SLA\u7EDF\u8BA1\u4FE1\u606F\n  static async getSLAStats(): Promise<{\n    total_definitions: number;\n    active_definitions: number;\n    total_violations: number;\n    open_violations: number;\n    overall_compliance_rate: number;\n  }> {\n    return httpClient.get('/api/sla/stats');\n  }\n\n  // \u83B7\u53D6SLA\u6027\u80FD\u6307\u6807\n  static async getSLAMetrics(params?: {\n    period?: 'day' | 'week' | 'month' | 'quarter';\n    service_type?: string;\n    priority?: string;\n  }): Promise<{\n    response_time_avg: number;\n    resolution_time_avg: number;\n    compliance_rate: number;\n    violation_count: number;\n    trend_data: Array<{\n      date: string;\n      compliance_rate: number;\n      avg_response_time: number;\n      avg_resolution_time: number;\n    }>;\n  }> {\n    return httpClient.get('/api/sla/metrics', params);\n  }\n\n  // \u83B7\u53D6SLA\u9884\u8B66\n  static async getSLAAlerts(): Promise<Array<{\n    ticket_id: number;\n    ticket_title: string;\n    priority: string;\n    sla_definition: string;\n    time_remaining: number;\n    alert_level: 'warning' | 'critical';\n    created_at: string;\n  }>> {\n    return httpClient.get('/api/sla/alerts');\n  }\n\n  // \u89E6\u53D1SLA\u76D1\u63A7\u68C0\u67E5\n  static async triggerSLAMonitoring(): Promise<{\n    checked_tickets: number;\n    violations_found: number;\n    alerts_sent: number;\n  }> {\n    return httpClient.post('/api/sla/monitor');\n  }\n}\n\nexport default SLAApi;"],
      names: ["SLAApi", "getSLADefinitions", "params", "httpClient", "get", "createSLADefinition", "data", "post", "getSLADefinition", "id", "updateSLADefinition", "put", "deleteSLADefinition", "delete", "getSLAViolations", "updateSLAViolationStatus", "status", "getSLAComplianceReport", "checkTicketSLAViolation", "ticketId", "getSLAStats", "getSLAMetrics", "getSLAAlerts", "triggerSLAMonitoring"],
      mappings: ";;;;;;;;;;;IA0DaA,MAAM;eAANA;;IAwHb,OAAsB;eAAtB;;;4BAlL2B;AA0DpB,MAAMA;IACX,YAAY;IACZ,aAAaC,kBAAkBC,MAG9B,EAKE;QACD,OAAOC,sBAAU,CAACC,GAAG,CAAC,wBAAwBF;IAChD;IAEA,UAAU;IACV,aAAaG,oBAAoBC,IAAgC,EAA0B;QACzF,OAAOH,sBAAU,CAACI,IAAI,CAAgB,wBAAwBD;IAChE;IAEA,YAAY;IACZ,aAAaE,iBAAiBC,EAAU,EAA0B;QAChE,OAAON,sBAAU,CAACC,GAAG,CAAgB,CAAC,qBAAqB,EAAEK,IAAI;IACnE;IAEA,UAAU;IACV,aAAaC,oBAAoBD,EAAU,EAAEH,IAAyC,EAA0B;QAC9G,OAAOH,sBAAU,CAACQ,GAAG,CAAgB,CAAC,qBAAqB,EAAEF,IAAI,EAAEH;IACrE;IAEA,UAAU;IACV,aAAaM,oBAAoBH,EAAU,EAAiB;QAC1D,OAAON,sBAAU,CAACU,MAAM,CAAC,CAAC,qBAAqB,EAAEJ,IAAI;IACvD;IAEA,YAAY;IACZ,aAAaK,iBAAiBZ,MAI7B,EAKE;QACD,OAAOC,sBAAU,CAACC,GAAG,CAAC,uBAAuBF;IAC/C;IAEA,YAAY;IACZ,aAAaa,yBAAyBN,EAAU,EAAEO,MAAc,EAAiB;QAC/E,OAAOb,sBAAU,CAACQ,GAAG,CAAC,CAAC,oBAAoB,EAAEF,GAAG,OAAO,CAAC,EAAE;YAAEO;QAAO;IACrE;IAEA,YAAY;IACZ,aAAaC,uBAAuBf,MAGnC,EAAgC;QAC/B,OAAOC,sBAAU,CAACC,GAAG,CAAC,8BAA8BF;IACtD;IAEA,YAAY;IACZ,aAAagB,wBAAwBC,QAAgB,EAAiB;QACpE,OAAOhB,sBAAU,CAACI,IAAI,CAAC,CAAC,yBAAyB,EAAEY,UAAU;IAC/D;IAEA,YAAY;IACZ,aAAaC,cAMV;QACD,OAAOjB,sBAAU,CAACC,GAAG,CAAC;IACxB;IAEA,YAAY;IACZ,aAAaiB,cAAcnB,MAI1B,EAWE;QACD,OAAOC,sBAAU,CAACC,GAAG,CAAC,oBAAoBF;IAC5C;IAEA,UAAU;IACV,aAAaoB,eAQT;QACF,OAAOnB,sBAAU,CAACC,GAAG,CAAC;IACxB;IAEA,YAAY;IACZ,aAAamB,uBAIV;QACD,OAAOpB,sBAAU,CAACI,IAAI,CAAC;IACzB;AACF;MAEA,WAAeP"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a355bd2713b677807f7ff961a7b8c6814a9b91c0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10z4gbil8i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10z4gbil8i();
cov_10z4gbil8i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_10z4gbil8i().f[0]++;
  cov_10z4gbil8i().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_10z4gbil8i().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_10z4gbil8i().s[3]++;
_export(exports, {
  SLAApi: function () {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[1]++;
    cov_10z4gbil8i().s[4]++;
    return SLAApi;
  },
  default: function () {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[2]++;
    cov_10z4gbil8i().s[5]++;
    return _default;
  }
});
const _httpclient =
/* istanbul ignore next */
(cov_10z4gbil8i().s[6]++, require("./http-client"));
class SLAApi {
  // 获取SLA定义列表
  static async getSLADefinitions(params) {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[3]++;
    cov_10z4gbil8i().s[7]++;
    return _httpclient.httpClient.get('/api/sla/definitions', params);
  }
  // 创建SLA定义
  static async createSLADefinition(data) {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[4]++;
    cov_10z4gbil8i().s[8]++;
    return _httpclient.httpClient.post('/api/sla/definitions', data);
  }
  // 获取SLA定义详情
  static async getSLADefinition(id) {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[5]++;
    cov_10z4gbil8i().s[9]++;
    return _httpclient.httpClient.get(`/api/sla/definitions/${id}`);
  }
  // 更新SLA定义
  static async updateSLADefinition(id, data) {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[6]++;
    cov_10z4gbil8i().s[10]++;
    return _httpclient.httpClient.put(`/api/sla/definitions/${id}`, data);
  }
  // 删除SLA定义
  static async deleteSLADefinition(id) {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[7]++;
    cov_10z4gbil8i().s[11]++;
    return _httpclient.httpClient.delete(`/api/sla/definitions/${id}`);
  }
  // 获取SLA违规列表
  static async getSLAViolations(params) {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[8]++;
    cov_10z4gbil8i().s[12]++;
    return _httpclient.httpClient.get('/api/sla/violations', params);
  }
  // 更新SLA违规状态
  static async updateSLAViolationStatus(id, status) {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[9]++;
    cov_10z4gbil8i().s[13]++;
    return _httpclient.httpClient.put(`/api/sla/violations/${id}/status`, {
      status
    });
  }
  // 获取SLA合规报告
  static async getSLAComplianceReport(params) {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[10]++;
    cov_10z4gbil8i().s[14]++;
    return _httpclient.httpClient.get('/api/sla/compliance-report', params);
  }
  // 检查工单SLA违规
  static async checkTicketSLAViolation(ticketId) {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[11]++;
    cov_10z4gbil8i().s[15]++;
    return _httpclient.httpClient.post(`/api/sla/check-violation/${ticketId}`);
  }
  // 获取SLA统计信息
  static async getSLAStats() {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[12]++;
    cov_10z4gbil8i().s[16]++;
    return _httpclient.httpClient.get('/api/sla/stats');
  }
  // 获取SLA性能指标
  static async getSLAMetrics(params) {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[13]++;
    cov_10z4gbil8i().s[17]++;
    return _httpclient.httpClient.get('/api/sla/metrics', params);
  }
  // 获取SLA预警
  static async getSLAAlerts() {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[14]++;
    cov_10z4gbil8i().s[18]++;
    return _httpclient.httpClient.get('/api/sla/alerts');
  }
  // 触发SLA监控检查
  static async triggerSLAMonitoring() {
    /* istanbul ignore next */
    cov_10z4gbil8i().f[15]++;
    cov_10z4gbil8i().s[19]++;
    return _httpclient.httpClient.post('/api/sla/monitor');
  }
}
const _default =
/* istanbul ignore next */
(cov_10z4gbil8i().s[20]++, SLAApi);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,