0cab2a91569022cf2e27cceb786f08a8
// 验证结果接口
"use strict";

/* istanbul ignore next */
function cov_9grmjg03r() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/utils/validation.ts";
  var hash = "ee96503d9053c48b4d0d6d91c4dcc090888639ad";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/utils/validation.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 25
        }
      },
      "10": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 159
        }
      },
      "11": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "12": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "13": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 46,
          column: 14
        }
      },
      "14": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 105
        }
      },
      "15": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "16": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 53,
          column: 14
        }
      },
      "17": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "18": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 59,
          column: 14
        }
      },
      "19": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "20": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "21": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 70,
          column: 14
        }
      },
      "22": {
        start: {
          line: 72,
          column: 28
        },
        end: {
          line: 72,
          column: 41
        }
      },
      "23": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 73,
          column: 47
        }
      },
      "24": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 77,
          column: 10
        }
      },
      "25": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "26": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 84,
          column: 14
        }
      },
      "27": {
        start: {
          line: 86,
          column: 25
        },
        end: {
          line: 86,
          column: 38
        }
      },
      "28": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "29": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 91,
          column: 14
        }
      },
      "30": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "31": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 97,
          column: 14
        }
      },
      "32": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "33": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 103,
          column: 14
        }
      },
      "34": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "35": {
        start: {
          line: 111,
          column: 27
        },
        end: {
          line: 111,
          column: 55
        }
      },
      "36": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 66
        }
      },
      "37": {
        start: {
          line: 116,
          column: 27
        },
        end: {
          line: 116,
          column: 42
        }
      },
      "38": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 66
        }
      },
      "39": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "40": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 14
        }
      },
      "41": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "42": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 35
        }
      },
      "43": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 130,
          column: 14
        }
      },
      "44": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 135,
          column: 14
        }
      },
      "45": {
        start: {
          line: 140,
          column: 28
        },
        end: {
          line: 140,
          column: 114
        }
      },
      "46": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 68
        }
      },
      "47": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 25
        }
      },
      "48": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 29
        }
      },
      "49": {
        start: {
          line: 151,
          column: 22
        },
        end: {
          line: 151,
          column: 51
        }
      },
      "50": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "51": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 155,
          column: 14
        }
      },
      "52": {
        start: {
          line: 157,
          column: 23
        },
        end: {
          line: 157,
          column: 25
        }
      },
      "53": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "54": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "55": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 51
        }
      },
      "56": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 166,
          column: 17
        }
      },
      "57": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 48
        }
      },
      "58": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 165,
          column: 60
        }
      },
      "59": {
        start: {
          line: 165,
          column: 54
        },
        end: {
          line: 165,
          column: 60
        }
      },
      "60": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "61": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 25
        }
      },
      "62": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 179,
          column: 13
        }
      },
      "63": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 89
        }
      },
      "64": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 178,
          column: 17
        }
      },
      "65": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 48
        }
      },
      "66": {
        start: {
          line: 177,
          column: 20
        },
        end: {
          line: 177,
          column: 60
        }
      },
      "67": {
        start: {
          line: 177,
          column: 54
        },
        end: {
          line: 177,
          column: 60
        }
      },
      "68": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 187,
          column: 13
        }
      },
      "69": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 64
        }
      },
      "70": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 186,
          column: 17
        }
      },
      "71": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 184,
          column: 48
        }
      },
      "72": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 185,
          column: 60
        }
      },
      "73": {
        start: {
          line: 185,
          column: 54
        },
        end: {
          line: 185,
          column: 60
        }
      },
      "74": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "75": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 68
        }
      },
      "76": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 194,
          column: 17
        }
      },
      "77": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 48
        }
      },
      "78": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 193,
          column: 60
        }
      },
      "79": {
        start: {
          line: 193,
          column: 54
        },
        end: {
          line: 193,
          column: 60
        }
      },
      "80": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 203,
          column: 13
        }
      },
      "81": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 44
        }
      },
      "82": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 202,
          column: 17
        }
      },
      "83": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 200,
          column: 48
        }
      },
      "84": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 201,
          column: 60
        }
      },
      "85": {
        start: {
          line: 201,
          column: 54
        },
        end: {
          line: 201,
          column: 60
        }
      },
      "86": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "87": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 44
        }
      },
      "88": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 42
        }
      },
      "89": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 214,
          column: 10
        }
      },
      "90": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 25
        }
      },
      "91": {
        start: {
          line: 219,
          column: 26
        },
        end: {
          line: 219,
          column: 28
        }
      },
      "92": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "93": {
        start: {
          line: 221,
          column: 27
        },
        end: {
          line: 221,
          column: 73
        }
      },
      "94": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "95": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 49
        }
      },
      "96": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 229,
          column: 10
        }
      },
      "97": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 44
        }
      },
      "98": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 10
        }
      },
      "99": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "100": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 42
        }
      },
      "101": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 29
        }
      },
      "102": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "103": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 54
        }
      },
      "104": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 51
        }
      },
      "105": {
        start: {
          line: 257,
          column: 24
        },
        end: {
          line: 322,
          column: 1
        }
      },
      "106": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 47
        }
      },
      "107": {
        start: {
          line: 330,
          column: 26
        },
        end: {
          line: 330,
          column: 52
        }
      },
      "108": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "109": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 334,
          column: 14
        }
      },
      "110": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "111": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 57
        }
      },
      "112": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 354,
          column: 11
        }
      },
      "113": {
        start: {
          line: 342,
          column: 31
        },
        end: {
          line: 342,
          column: 58
        }
      },
      "114": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 353,
          column: 27
        }
      },
      "115": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 352,
          column: 17
        }
      },
      "116": {
        start: {
          line: 345,
          column: 35
        },
        end: {
          line: 345,
          column: 66
        }
      },
      "117": {
        start: {
          line: 346,
          column: 20
        },
        end: {
          line: 346,
          column: 36
        }
      },
      "118": {
        start: {
          line: 348,
          column: 20
        },
        end: {
          line: 351,
          column: 23
        }
      },
      "119": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 360,
          column: 11
        }
      },
      "120": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 32
        }
      },
      "121": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 33
        }
      },
      "122": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 29
        }
      },
      "123": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 33
        }
      },
      "124": {
        start: {
          line: 368,
          column: 24
        },
        end: {
          line: 416,
          column: 1
        }
      },
      "125": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 376,
          column: 13
        }
      },
      "126": {
        start: {
          line: 373,
          column: 16
        },
        end: {
          line: 375,
          column: 18
        }
      },
      "127": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 67
        }
      },
      "128": {
        start: {
          line: 378,
          column: 41
        },
        end: {
          line: 378,
          column: 65
        }
      },
      "129": {
        start: {
          line: 380,
          column: 29
        },
        end: {
          line: 384,
          column: 43
        }
      },
      "130": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 388,
          column: 14
        }
      },
      "131": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 399,
          column: 13
        }
      },
      "132": {
        start: {
          line: 396,
          column: 16
        },
        end: {
          line: 398,
          column: 18
        }
      },
      "133": {
        start: {
          line: 401,
          column: 33
        },
        end: {
          line: 401,
          column: 55
        }
      },
      "134": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 404,
          column: 13
        }
      },
      "135": {
        start: {
          line: 403,
          column: 16
        },
        end: {
          line: 403,
          column: 36
        }
      },
      "136": {
        start: {
          line: 406,
          column: 12
        },
        end: {
          line: 406,
          column: 67
        }
      },
      "137": {
        start: {
          line: 406,
          column: 41
        },
        end: {
          line: 406,
          column: 65
        }
      },
      "138": {
        start: {
          line: 408,
          column: 29
        },
        end: {
          line: 408,
          column: 53
        }
      },
      "139": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 412,
          column: 14
        }
      },
      "140": {
        start: {
          line: 417,
          column: 24
        },
        end: {
          line: 456,
          column: 1
        }
      },
      "141": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 425,
          column: 11
        }
      },
      "142": {
        start: {
          line: 429,
          column: 26
        },
        end: {
          line: 433,
          column: 10
        }
      },
      "143": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 434,
          column: 54
        }
      },
      "144": {
        start: {
          line: 438,
          column: 26
        },
        end: {
          line: 438,
          column: 28
        }
      },
      "145": {
        start: {
          line: 439,
          column: 22
        },
        end: {
          line: 439,
          column: 26
        }
      },
      "146": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 450,
          column: 9
        }
      },
      "147": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 449,
          column: 13
        }
      },
      "148": {
        start: {
          line: 442,
          column: 16
        },
        end: {
          line: 442,
          column: 32
        }
      },
      "149": {
        start: {
          line: 443,
          column: 16
        },
        end: {
          line: 445,
          column: 17
        }
      },
      "150": {
        start: {
          line: 444,
          column: 20
        },
        end: {
          line: 444,
          column: 51
        }
      },
      "151": {
        start: {
          line: 446,
          column: 16
        },
        end: {
          line: 448,
          column: 17
        }
      },
      "152": {
        start: {
          line: 447,
          column: 20
        },
        end: {
          line: 447,
          column: 53
        }
      },
      "153": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 454,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 25
          }
        },
        loc: {
          start: {
            line: 13,
            column: 35
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 22
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 19,
            column: 20
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 22
          }
        },
        loc: {
          start: {
            line: 22,
            column: 32
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 21
          },
          end: {
            line: 25,
            column: 22
          }
        },
        loc: {
          start: {
            line: 25,
            column: 32
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 16
          }
        },
        loc: {
          start: {
            line: 28,
            column: 26
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 34
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 43
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 42
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 42
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 66
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 34
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 80
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        loc: {
          start: {
            line: 110,
            column: 24
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 110
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 24
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 115
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 22
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 120
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 25
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 139
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 23
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 145
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 36
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 150
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 217,
            column: 5
          }
        },
        loc: {
          start: {
            line: 217,
            column: 23
          },
          end: {
            line: 230,
            column: 5
          }
        },
        line: 217
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 30
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 232
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 19
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 236
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 27
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 242
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        loc: {
          start: {
            line: 250,
            column: 25
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 250
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 44
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 325
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        },
        loc: {
          start: {
            line: 329,
            column: 47
          },
          end: {
            line: 355,
            column: 5
          }
        },
        line: 329
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 341,
            column: 27
          },
          end: {
            line: 341,
            column: 28
          }
        },
        loc: {
          start: {
            line: 341,
            column: 38
          },
          end: {
            line: 354,
            column: 9
          }
        },
        line: 341
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 343,
            column: 56
          },
          end: {
            line: 343,
            column: 57
          }
        },
        loc: {
          start: {
            line: 343,
            column: 66
          },
          end: {
            line: 353,
            column: 13
          }
        },
        line: 343
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        loc: {
          start: {
            line: 357,
            column: 14
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 357
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 358,
            column: 51
          },
          end: {
            line: 358,
            column: 52
          }
        },
        loc: {
          start: {
            line: 358,
            column: 60
          },
          end: {
            line: 360,
            column: 9
          }
        },
        line: 358
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        loc: {
          start: {
            line: 363,
            column: 17
          },
          end: {
            line: 366,
            column: 5
          }
        },
        line: 363
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 371,
            column: 18
          },
          end: {
            line: 371,
            column: 19
          }
        },
        loc: {
          start: {
            line: 371,
            column: 33
          },
          end: {
            line: 389,
            column: 9
          }
        },
        line: 371
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 378,
            column: 30
          },
          end: {
            line: 378,
            column: 31
          }
        },
        loc: {
          start: {
            line: 378,
            column: 41
          },
          end: {
            line: 378,
            column: 65
          }
        },
        line: 378
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 394,
            column: 18
          },
          end: {
            line: 394,
            column: 19
          }
        },
        loc: {
          start: {
            line: 394,
            column: 33
          },
          end: {
            line: 413,
            column: 9
          }
        },
        line: 394
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 406,
            column: 30
          },
          end: {
            line: 406,
            column: 31
          }
        },
        loc: {
          start: {
            line: 406,
            column: 41
          },
          end: {
            line: 406,
            column: 65
          }
        },
        line: 406
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 419,
            column: 25
          },
          end: {
            line: 419,
            column: 26
          }
        },
        loc: {
          start: {
            line: 419,
            column: 35
          },
          end: {
            line: 426,
            column: 5
          }
        },
        line: 419
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 428,
            column: 19
          },
          end: {
            line: 428,
            column: 20
          }
        },
        loc: {
          start: {
            line: 428,
            column: 35
          },
          end: {
            line: 435,
            column: 5
          }
        },
        line: 428
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 437,
            column: 28
          },
          end: {
            line: 437,
            column: 29
          }
        },
        loc: {
          start: {
            line: 437,
            column: 42
          },
          end: {
            line: 455,
            column: 5
          }
        },
        line: 437
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 159
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 38
          }
        }, {
          start: {
            line: 35,
            column: 42
          },
          end: {
            line: 35,
            column: 61
          }
        }, {
          start: {
            line: 35,
            column: 65
          },
          end: {
            line: 35,
            column: 90
          }
        }, {
          start: {
            line: 35,
            column: 94
          },
          end: {
            line: 35,
            column: 113
          }
        }, {
          start: {
            line: 35,
            column: 117
          },
          end: {
            line: 35,
            column: 137
          }
        }, {
          start: {
            line: 35,
            column: 141
          },
          end: {
            line: 35,
            column: 159
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 21
          },
          end: {
            line: 38,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 38,
            column: 40
          }
        }, {
          start: {
            line: 38,
            column: 43
          },
          end: {
            line: 38,
            column: 52
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 26
          }
        }, {
          start: {
            line: 43,
            column: 30
          },
          end: {
            line: 43,
            column: 49
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 51
          },
          end: {
            line: 48,
            column: 63
          }
        }, {
          start: {
            line: 48,
            column: 66
          },
          end: {
            line: 48,
            column: 105
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 66
          },
          end: {
            line: 48,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 89
          },
          end: {
            line: 48,
            column: 101
          }
        }, {
          start: {
            line: 48,
            column: 104
          },
          end: {
            line: 48,
            column: 105
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "7": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 29
          }
        }, {
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 45
          }
        }],
        line: 49
      },
      "8": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "9": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 29
          }
        }, {
          start: {
            line: 55,
            column: 33
          },
          end: {
            line: 55,
            column: 45
          }
        }],
        line: 55
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 26
          }
        }, {
          start: {
            line: 67,
            column: 30
          },
          end: {
            line: 67,
            column: 49
          }
        }, {
          start: {
            line: 67,
            column: 53
          },
          end: {
            line: 67,
            column: 65
          }
        }],
        line: 67
      },
      "12": {
        loc: {
          start: {
            line: 76,
            column: 21
          },
          end: {
            line: 76,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 76,
            column: 40
          }
        }, {
          start: {
            line: 76,
            column: 43
          },
          end: {
            line: 76,
            column: 61
          }
        }],
        line: 76
      },
      "13": {
        loc: {
          start: {
            line: 76,
            column: 43
          },
          end: {
            line: 76,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 43
          },
          end: {
            line: 76,
            column: 50
          }
        }, {
          start: {
            line: 76,
            column: 54
          },
          end: {
            line: 76,
            column: 61
          }
        }],
        line: 76
      },
      "14": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "15": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 81,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 81,
            column: 26
          }
        }, {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 81,
            column: 49
          }
        }, {
          start: {
            line: 81,
            column: 53
          },
          end: {
            line: 81,
            column: 65
          }
        }],
        line: 81
      },
      "16": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "17": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "18": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 93,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 93,
            column: 29
          }
        }, {
          start: {
            line: 93,
            column: 33
          },
          end: {
            line: 93,
            column: 47
          }
        }],
        line: 93
      },
      "19": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "20": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 99,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 99,
            column: 29
          }
        }, {
          start: {
            line: 99,
            column: 33
          },
          end: {
            line: 99,
            column: 47
          }
        }],
        line: 99
      },
      "21": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "22": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 121,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 121,
            column: 26
          }
        }, {
          start: {
            line: 121,
            column: 30
          },
          end: {
            line: 121,
            column: 49
          }
        }, {
          start: {
            line: 121,
            column: 53
          },
          end: {
            line: 121,
            column: 65
          }
        }],
        line: 121
      },
      "23": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "24": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "25": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "26": {
        loc: {
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 35
          }
        }, {
          start: {
            line: 163,
            column: 39
          },
          end: {
            line: 163,
            column: 53
          }
        }],
        line: 163
      },
      "27": {
        loc: {
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 165,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 165,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "28": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 171,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 171,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "29": {
        loc: {
          start: {
            line: 169,
            column: 16
          },
          end: {
            line: 169,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 17
          },
          end: {
            line: 169,
            column: 31
          }
        }, {
          start: {
            line: 169,
            column: 35
          },
          end: {
            line: 169,
            column: 54
          }
        }, {
          start: {
            line: 169,
            column: 58
          },
          end: {
            line: 169,
            column: 70
          }
        }, {
          start: {
            line: 169,
            column: 75
          },
          end: {
            line: 169,
            column: 89
          }
        }],
        line: 169
      },
      "30": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "31": {
        loc: {
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 173,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 173,
            column: 44
          }
        }, {
          start: {
            line: 173,
            column: 48
          },
          end: {
            line: 173,
            column: 76
          }
        }],
        line: 173
      },
      "32": {
        loc: {
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 178,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 178,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "33": {
        loc: {
          start: {
            line: 175,
            column: 20
          },
          end: {
            line: 175,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 20
          },
          end: {
            line: 175,
            column: 35
          }
        }, {
          start: {
            line: 175,
            column: 39
          },
          end: {
            line: 175,
            column: 53
          }
        }],
        line: 175
      },
      "34": {
        loc: {
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 177,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 177,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "35": {
        loc: {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "36": {
        loc: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 186,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 186,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "37": {
        loc: {
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 183,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 183,
            column: 35
          }
        }, {
          start: {
            line: 183,
            column: 39
          },
          end: {
            line: 183,
            column: 53
          }
        }],
        line: 183
      },
      "38": {
        loc: {
          start: {
            line: 185,
            column: 20
          },
          end: {
            line: 185,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 20
          },
          end: {
            line: 185,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "39": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "40": {
        loc: {
          start: {
            line: 189,
            column: 16
          },
          end: {
            line: 189,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 16
          },
          end: {
            line: 189,
            column: 38
          }
        }, {
          start: {
            line: 189,
            column: 42
          },
          end: {
            line: 189,
            column: 64
          }
        }],
        line: 189
      },
      "41": {
        loc: {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 194,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 194,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "42": {
        loc: {
          start: {
            line: 191,
            column: 20
          },
          end: {
            line: 191,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 20
          },
          end: {
            line: 191,
            column: 35
          }
        }, {
          start: {
            line: 191,
            column: 39
          },
          end: {
            line: 191,
            column: 53
          }
        }],
        line: 191
      },
      "43": {
        loc: {
          start: {
            line: 193,
            column: 20
          },
          end: {
            line: 193,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 20
          },
          end: {
            line: 193,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "44": {
        loc: {
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "45": {
        loc: {
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 202,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 202,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "46": {
        loc: {
          start: {
            line: 199,
            column: 20
          },
          end: {
            line: 199,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 20
          },
          end: {
            line: 199,
            column: 35
          }
        }, {
          start: {
            line: 199,
            column: 39
          },
          end: {
            line: 199,
            column: 53
          }
        }],
        line: 199
      },
      "47": {
        loc: {
          start: {
            line: 201,
            column: 20
          },
          end: {
            line: 201,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 20
          },
          end: {
            line: 201,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "48": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: 208,
            column: 15
          },
          end: {
            line: 210,
            column: 9
          }
        }],
        line: 206
      },
      "49": {
        loc: {
          start: {
            line: 213,
            column: 20
          },
          end: {
            line: 213,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 40
          },
          end: {
            line: 213,
            column: 46
          }
        }, {
          start: {
            line: 213,
            column: 49
          },
          end: {
            line: 213,
            column: 58
          }
        }],
        line: 213
      },
      "50": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "51": {
        loc: {
          start: {
            line: 222,
            column: 16
          },
          end: {
            line: 222,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 16
          },
          end: {
            line: 222,
            column: 31
          }
        }, {
          start: {
            line: 222,
            column: 35
          },
          end: {
            line: 222,
            column: 48
          }
        }],
        line: 222
      },
      "52": {
        loc: {
          start: {
            line: 228,
            column: 20
          },
          end: {
            line: 228,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 43
          },
          end: {
            line: 228,
            column: 52
          }
        }, {
          start: {
            line: 228,
            column: 55
          },
          end: {
            line: 228,
            column: 64
          }
        }],
        line: 228
      },
      "53": {
        loc: {
          start: {
            line: 233,
            column: 15
          },
          end: {
            line: 233,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 15
          },
          end: {
            line: 233,
            column: 37
          }
        }, {
          start: {
            line: 233,
            column: 41
          },
          end: {
            line: 233,
            column: 43
          }
        }],
        line: 233
      },
      "54": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: 245,
            column: 15
          },
          end: {
            line: 247,
            column: 9
          }
        }],
        line: 243
      },
      "55": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "56": {
        loc: {
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "57": {
        loc: {
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "58": {
        loc: {
          start: {
            line: 342,
            column: 31
          },
          end: {
            line: 342,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 31
          },
          end: {
            line: 342,
            column: 51
          }
        }, {
          start: {
            line: 342,
            column: 55
          },
          end: {
            line: 342,
            column: 58
          }
        }],
        line: 342
      },
      "59": {
        loc: {
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 376,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 376,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "60": {
        loc: {
          start: {
            line: 372,
            column: 16
          },
          end: {
            line: 372,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 16
          },
          end: {
            line: 372,
            column: 22
          }
        }, {
          start: {
            line: 372,
            column: 26
          },
          end: {
            line: 372,
            column: 51
          }
        }],
        line: 372
      },
      "61": {
        loc: {
          start: {
            line: 387,
            column: 25
          },
          end: {
            line: 387,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 387,
            column: 36
          },
          end: {
            line: 387,
            column: 45
          }
        }, {
          start: {
            line: 387,
            column: 48
          },
          end: {
            line: 387,
            column: 56
          }
        }],
        line: 387
      },
      "62": {
        loc: {
          start: {
            line: 395,
            column: 12
          },
          end: {
            line: 399,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 395,
            column: 12
          },
          end: {
            line: 399,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 395
      },
      "63": {
        loc: {
          start: {
            line: 395,
            column: 16
          },
          end: {
            line: 395,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 395,
            column: 16
          },
          end: {
            line: 395,
            column: 22
          }
        }, {
          start: {
            line: 395,
            column: 26
          },
          end: {
            line: 395,
            column: 51
          }
        }],
        line: 395
      },
      "64": {
        loc: {
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 404,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 404,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 402
      },
      "65": {
        loc: {
          start: {
            line: 411,
            column: 25
          },
          end: {
            line: 411,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 411,
            column: 36
          },
          end: {
            line: 411,
            column: 45
          }
        }, {
          start: {
            line: 411,
            column: 48
          },
          end: {
            line: 411,
            column: 56
          }
        }],
        line: 411
      },
      "66": {
        loc: {
          start: {
            line: 441,
            column: 12
          },
          end: {
            line: 449,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 12
          },
          end: {
            line: 449,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "67": {
        loc: {
          start: {
            line: 443,
            column: 16
          },
          end: {
            line: 445,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 443,
            column: 16
          },
          end: {
            line: 445,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 443
      },
      "68": {
        loc: {
          start: {
            line: 446,
            column: 16
          },
          end: {
            line: 448,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 446,
            column: 16
          },
          end: {
            line: 448,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 446
      },
      "69": {
        loc: {
          start: {
            line: 453,
            column: 20
          },
          end: {
            line: 453,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 453,
            column: 43
          },
          end: {
            line: 453,
            column: 52
          }
        }, {
          start: {
            line: 453,
            column: 55
          },
          end: {
            line: 453,
            column: 64
          }
        }],
        line: 453
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/lib/utils/validation.ts"],
      sourcesContent: ["// \u9A8C\u8BC1\u7ED3\u679C\u63A5\u53E3\nexport interface ValidationResult {\n  isValid: boolean;\n  message?: string;\n  errors?: string[];\n}\n\n// \u9A8C\u8BC1\u89C4\u5219\u63A5\u53E3\nexport interface ValidationRule {\n  required?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  pattern?: RegExp;\n  min?: number;\n  max?: number;\n  custom?: (value: unknown) => ValidationResult;\n}\n\n// \u5B57\u6BB5\u9A8C\u8BC1\u914D\u7F6E\nexport interface FieldValidation {\n  [fieldName: string]: ValidationRule[];\n}\n\n// \u8868\u5355\u9A8C\u8BC1\u914D\u7F6E\nexport interface FormValidationConfig {\n  fields: FieldValidation;\n  validateOnChange?: boolean;\n  validateOnBlur?: boolean;\n  stopOnFirstError?: boolean;\n}\n\n// \u9A8C\u8BC1\u5668\u7C7B\nexport class Validator {\n  // \u5FC5\u586B\u9A8C\u8BC1\n  static required(value: unknown): ValidationResult {\n    const isEmpty = value === null || \n                   value === undefined || \n                   (typeof value === 'string' && value.trim() === '') ||\n                   (Array.isArray(value) && value.length === 0);\n    \n    return {\n      isValid: !isEmpty,\n      message: isEmpty ? '\u6B64\u5B57\u6BB5\u4E3A\u5FC5\u586B\u9879' : undefined\n    };\n  }\n\n  // \u957F\u5EA6\u9A8C\u8BC1\n  static validateLength(value: unknown, min?: number, max?: number): ValidationResult {\n    if (value === null || value === undefined) {\n      return { isValid: true };\n    }\n\n    const length = typeof value === 'string' ? value.length : \n                  Array.isArray(value) ? value.length : 0;\n\n    if (min !== undefined && length < min) {\n      return {\n        isValid: false,\n        message: `\u957F\u5EA6\u4E0D\u80FD\u5C11\u4E8E${min}\u4E2A\u5B57\u7B26`\n      };\n    }\n\n    if (max !== undefined && length > max) {\n      return {\n        isValid: false,\n        message: `\u957F\u5EA6\u4E0D\u80FD\u8D85\u8FC7${max}\u4E2A\u5B57\u7B26`\n      };\n    }\n\n    return { isValid: true };\n  }\n\n  // \u6B63\u5219\u8868\u8FBE\u5F0F\u9A8C\u8BC1\n  static pattern(value: unknown, regex: RegExp, message?: string): ValidationResult {\n    if (value === null || value === undefined || value === '') {\n      return { isValid: true };\n    }\n\n    const stringValue = String(value);\n    const isValid = regex.test(stringValue);\n\n    return {\n      isValid,\n      message: isValid ? undefined : (message || '\u683C\u5F0F\u4E0D\u6B63\u786E')\n    };\n  }\n\n  // \u6570\u503C\u8303\u56F4\u9A8C\u8BC1\n  static range(value: unknown, min?: number, max?: number): ValidationResult {\n    if (value === null || value === undefined || value === '') {\n      return { isValid: true };\n    }\n\n    const numValue = Number(value);\n    if (isNaN(numValue)) {\n      return {\n        isValid: false,\n        message: '\u5FC5\u987B\u662F\u6709\u6548\u6570\u5B57'\n      };\n    }\n\n    if (min !== undefined && numValue < min) {\n      return {\n        isValid: false,\n        message: `\u6570\u503C\u4E0D\u80FD\u5C0F\u4E8E${min}`\n      };\n    }\n\n    if (max !== undefined && numValue > max) {\n      return {\n        isValid: false,\n        message: `\u6570\u503C\u4E0D\u80FD\u5927\u4E8E${max}`\n      };\n    }\n\n    return { isValid: true };\n  }\n\n  // \u90AE\u7BB1\u9A8C\u8BC1\n  static email(value: unknown): ValidationResult {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return Validator.pattern(value, emailRegex, '\u8BF7\u8F93\u5165\u6709\u6548\u7684\u90AE\u7BB1\u5730\u5740');\n  }\n\n  // \u624B\u673A\u53F7\u9A8C\u8BC1\n  static phone(value: unknown): ValidationResult {\n    const phoneRegex = /^1[3-9]\\d{9}$/;\n    return Validator.pattern(value, phoneRegex, '\u8BF7\u8F93\u5165\u6709\u6548\u7684\u624B\u673A\u53F7\u7801');\n  }\n\n  // URL\u9A8C\u8BC1\n  static url(value: unknown): ValidationResult {\n    if (value === null || value === undefined || value === '') {\n      return { isValid: true };\n    }\n\n    try {\n      new URL(String(value));\n      return { isValid: true };\n    } catch {\n      return {\n        isValid: false,\n        message: '\u8BF7\u8F93\u5165\u6709\u6548\u7684URL\u5730\u5740'\n      };\n    }\n  }\n\n  // \u8EAB\u4EFD\u8BC1\u9A8C\u8BC1\n  static idCard(value: unknown): ValidationResult {\n    const idCardRegex = /^[1-9]\\d{5}(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;\n    return Validator.pattern(value, idCardRegex, '\u8BF7\u8F93\u5165\u6709\u6548\u7684\u8EAB\u4EFD\u8BC1\u53F7\u7801');\n  }\n}\n\n// \u8868\u5355\u9A8C\u8BC1\u5668\u7C7B\nexport class FormValidator {\n  private config: FormValidationConfig;\n  private errors: Record<string, string[]> = {};\n\n  constructor(config: FormValidationConfig) {\n    this.config = config;\n  }\n\n  // \u9A8C\u8BC1\u5355\u4E2A\u5B57\u6BB5\n  validateField(fieldName: string, value: unknown): ValidationResult {\n    const rules = this.config.fields[fieldName];\n    if (!rules) {\n      return { isValid: true };\n    }\n\n    const errors: string[] = [];\n\n    for (const rule of rules) {\n      let result: ValidationResult;\n\n      // \u5FC5\u586B\u9A8C\u8BC1\n      if (rule.required) {\n        result = Validator.required(value);\n        if (!result.isValid && result.message) {\n          errors.push(result.message);\n          if (this.config.stopOnFirstError) break;\n        }\n      }\n\n      // \u5982\u679C\u503C\u4E3A\u7A7A\u4E14\u4E0D\u662F\u5FC5\u586B\uFF0C\u8DF3\u8FC7\u5176\u4ED6\u9A8C\u8BC1\n      if ((value === null || value === undefined || value === '') && !rule.required) {\n        continue;\n      }\n\n      // \u957F\u5EA6\u9A8C\u8BC1\n       if (rule.minLength !== undefined || rule.maxLength !== undefined) {\n         result = Validator.validateLength(value, rule.minLength, rule.maxLength);\n         if (!result.isValid && result.message) {\n           errors.push(result.message);\n           if (this.config.stopOnFirstError) break;\n         }\n       }\n\n      // \u6B63\u5219\u9A8C\u8BC1\n      if (rule.pattern) {\n        result = Validator.pattern(value, rule.pattern);\n        if (!result.isValid && result.message) {\n          errors.push(result.message);\n          if (this.config.stopOnFirstError) break;\n        }\n      }\n\n      // \u6570\u503C\u8303\u56F4\u9A8C\u8BC1\n      if (rule.min !== undefined || rule.max !== undefined) {\n        result = Validator.range(value, rule.min, rule.max);\n        if (!result.isValid && result.message) {\n          errors.push(result.message);\n          if (this.config.stopOnFirstError) break;\n        }\n      }\n\n      // \u81EA\u5B9A\u4E49\u9A8C\u8BC1\n      if (rule.custom) {\n        result = rule.custom(value);\n        if (!result.isValid && result.message) {\n          errors.push(result.message);\n          if (this.config.stopOnFirstError) break;\n        }\n      }\n    }\n\n    // \u66F4\u65B0\u9519\u8BEF\u72B6\u6001\n    if (errors.length > 0) {\n      this.errors[fieldName] = errors;\n    } else {\n      delete this.errors[fieldName];\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors: errors.length > 0 ? errors : undefined\n    };\n  }\n\n  // \u9A8C\u8BC1\u6574\u4E2A\u8868\u5355\n  validateForm(data: Record<string, unknown>): ValidationResult {\n    this.errors = {};\n    const allErrors: string[] = [];\n\n    for (const fieldName in this.config.fields) {\n      const result = this.validateField(fieldName, data[fieldName]);\n      if (!result.isValid && result.errors) {\n        allErrors.push(...result.errors);\n      }\n    }\n\n    return {\n      isValid: allErrors.length === 0,\n      errors: allErrors.length > 0 ? allErrors : undefined\n    };\n  }\n\n  // \u83B7\u53D6\u5B57\u6BB5\u9519\u8BEF\n  getFieldErrors(fieldName: string): string[] {\n    return this.errors[fieldName] || [];\n  }\n\n  // \u83B7\u53D6\u6240\u6709\u9519\u8BEF\n  getAllErrors(): Record<string, string[]> {\n    return { ...this.errors };\n  }\n\n  // \u6E05\u9664\u9519\u8BEF\n  clearErrors(fieldName?: string): void {\n    if (fieldName) {\n      delete this.errors[fieldName];\n    } else {\n      this.errors = {};\n    }\n  }\n\n  // \u68C0\u67E5\u662F\u5426\u6709\u9519\u8BEF\n  hasErrors(fieldName?: string): boolean {\n    if (fieldName) {\n      return this.errors[fieldName]?.length > 0;\n    }\n    return Object.keys(this.errors).length > 0;\n  }\n}\n\n// \u9884\u5B9A\u4E49\u9A8C\u8BC1\u89C4\u5219\nexport const ValidationRules = {\n  // \u7528\u6237\u540D\u89C4\u5219\n  username: [\n    { required: true },\n    { minLength: 3, maxLength: 20 },\n    { pattern: /^[a-zA-Z0-9_]+$/ }\n  ],\n\n  // \u5BC6\u7801\u89C4\u5219\n  password: [\n    { required: true },\n    { minLength: 8, maxLength: 50 },\n    { pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/ }\n  ],\n\n  // \u90AE\u7BB1\u89C4\u5219\n  email: [\n    { required: true },\n    { custom: Validator.email }\n  ],\n\n  // \u624B\u673A\u53F7\u89C4\u5219\n  phone: [\n    { required: true },\n    { custom: Validator.phone }\n  ],\n\n  // \u5DE5\u5355\u6807\u9898\u89C4\u5219\n  ticketTitle: [\n    { required: true },\n    { minLength: 5, maxLength: 100 }\n  ],\n\n  // \u5DE5\u5355\u63CF\u8FF0\u89C4\u5219\n  ticketDescription: [\n    { required: true },\n    { minLength: 10, maxLength: 2000 }\n  ]\n};\n\n// \u5F02\u6B65\u9A8C\u8BC1\u5668\u63A5\u53E3\nexport interface AsyncValidator {\n  validate: (value: unknown) => Promise<ValidationResult>;\n  debounceMs?: number;\n}\n\n// \u5F02\u6B65\u9A8C\u8BC1\u5668\u7C7B\nexport class AsyncFormValidator {\n  private validators: Record<string, AsyncValidator> = {};\n  private debounceTimers: Record<string, NodeJS.Timeout> = {};\n\n  // \u6CE8\u518C\u5F02\u6B65\u9A8C\u8BC1\u5668\n  registerValidator(fieldName: string, validator: AsyncValidator): void {\n    this.validators[fieldName] = validator;\n  }\n\n  // \u5F02\u6B65\u9A8C\u8BC1\u5B57\u6BB5\n  async validateFieldAsync(fieldName: string, value: unknown): Promise<ValidationResult> {\n    const validator = this.validators[fieldName];\n    if (!validator) {\n      return { isValid: true };\n    }\n\n    // \u6E05\u9664\u4E4B\u524D\u7684\u5B9A\u65F6\u5668\n    if (this.debounceTimers[fieldName]) {\n      clearTimeout(this.debounceTimers[fieldName]);\n    }\n\n    // \u9632\u6296\u5904\u7406\n    return new Promise((resolve) => {\n      const debounceMs = validator.debounceMs || 300;\n      \n      this.debounceTimers[fieldName] = setTimeout(async () => {\n        try {\n          const result = await validator.validate(value);\n          resolve(result);\n        } catch {\n           resolve({\n             isValid: false,\n             message: '\u9A8C\u8BC1\u8FC7\u7A0B\u4E2D\u53D1\u751F\u9519\u8BEF'\n           });\n         }\n      }, debounceMs);\n    });\n  }\n\n  // \u6E05\u7406\u5B9A\u65F6\u5668\n  cleanup(): void {\n    Object.values(this.debounceTimers).forEach(timer => {\n      clearTimeout(timer);\n    });\n    this.debounceTimers = {};\n  }\n}\n\n// \u5E38\u7528\u5F02\u6B65\u9A8C\u8BC1\u5668\nexport const AsyncValidators = {\n  // \u7528\u6237\u540D\u552F\u4E00\u6027\u9A8C\u8BC1\n  uniqueUsername: {\n    validate: async (value: unknown): Promise<ValidationResult> => {\n      if (!value || typeof value !== 'string') {\n        return { isValid: true };\n      }\n\n      // \u6A21\u62DFAPI\u8C03\u7528\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // \u8FD9\u91CC\u5E94\u8BE5\u8C03\u7528\u5B9E\u9645\u7684API\n      const isUnique = !['admin', 'root', 'test'].includes(value.toLowerCase());\n      \n      return {\n        isValid: isUnique,\n        message: isUnique ? undefined : '\u7528\u6237\u540D\u5DF2\u5B58\u5728'\n      };\n    },\n    debounceMs: 500\n  },\n\n  // \u90AE\u7BB1\u552F\u4E00\u6027\u9A8C\u8BC1\n  uniqueEmail: {\n    validate: async (value: unknown): Promise<ValidationResult> => {\n      if (!value || typeof value !== 'string') {\n        return { isValid: true };\n      }\n\n      // \u5148\u8FDB\u884C\u683C\u5F0F\u9A8C\u8BC1\n      const formatResult = Validator.email(value);\n      if (!formatResult.isValid) {\n        return formatResult;\n      }\n\n      // \u6A21\u62DFAPI\u8C03\u7528\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // \u8FD9\u91CC\u5E94\u8BE5\u8C03\u7528\u5B9E\u9645\u7684API\n      const isUnique = !value.includes('test@');\n      \n      return {\n        isValid: isUnique,\n        message: isUnique ? undefined : '\u90AE\u7BB1\u5DF2\u88AB\u6CE8\u518C'\n      };\n    },\n    debounceMs: 500\n  }\n};\n\n// \u9A8C\u8BC1\u5DE5\u5177\u51FD\u6570\nexport const ValidationUtils = {\n  // \u521B\u5EFA\u8868\u5355\u9A8C\u8BC1\u5668\n  createFormValidator: (fields: FieldValidation): FormValidator => {\n    return new FormValidator({\n      fields,\n      validateOnChange: true,\n      validateOnBlur: true,\n      stopOnFirstError: false\n    });\n  },\n\n  // \u9A8C\u8BC1\u5355\u4E2A\u503C\n  validateValue: (value: unknown, rules: ValidationRule[]): ValidationResult => {\n    const validator = new FormValidator({\n      fields: { temp: rules }\n    });\n    return validator.validateField('temp', value);\n  },\n\n  // \u5408\u5E76\u9A8C\u8BC1\u7ED3\u679C\n  mergeValidationResults: (...results: ValidationResult[]): ValidationResult => {\n    const allErrors: string[] = [];\n    let isValid = true;\n\n    for (const result of results) {\n      if (!result.isValid) {\n        isValid = false;\n        if (result.message) {\n          allErrors.push(result.message);\n        }\n        if (result.errors) {\n          allErrors.push(...result.errors);\n        }\n      }\n    }\n\n    return {\n      isValid,\n      errors: allErrors.length > 0 ? allErrors : undefined\n    };\n  }\n};"],
      names: ["AsyncFormValidator", "AsyncValidators", "FormValidator", "ValidationRules", "ValidationUtils", "Validator", "required", "value", "isEmpty", "undefined", "trim", "Array", "isArray", "length", "isValid", "message", "validateLength", "min", "max", "pattern", "regex", "stringValue", "String", "test", "range", "numValue", "Number", "isNaN", "email", "emailRegex", "phone", "phoneRegex", "url", "URL", "idCard", "idCardRegex", "constructor", "config", "errors", "validateField", "fieldName", "rules", "fields", "rule", "result", "push", "stopOnFirstError", "minLength", "maxLength", "custom", "validateForm", "data", "allErrors", "getFieldErrors", "getAllErrors", "clearErrors", "hasErrors", "Object", "keys", "username", "password", "ticketTitle", "ticketDescription", "registerValidator", "validator", "validators", "validateFieldAsync", "debounceTimers", "clearTimeout", "Promise", "resolve", "debounceMs", "setTimeout", "validate", "cleanup", "values", "forEach", "timer", "uniqueUsername", "isUnique", "includes", "toLowerCase", "uniqueEmail", "formatResult", "createFormValidator", "validateOnChange", "validateOnBlur", "validateValue", "temp", "mergeValidationResults", "results"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ee96503d9053c48b4d0d6d91c4dcc090888639ad"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9grmjg03r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9grmjg03r();
cov_9grmjg03r().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_9grmjg03r().f[0]++;
  cov_9grmjg03r().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_9grmjg03r().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_9grmjg03r().s[3]++;
_export(exports, {
  AsyncFormValidator: function () {
    /* istanbul ignore next */
    cov_9grmjg03r().f[1]++;
    cov_9grmjg03r().s[4]++;
    return AsyncFormValidator;
  },
  AsyncValidators: function () {
    /* istanbul ignore next */
    cov_9grmjg03r().f[2]++;
    cov_9grmjg03r().s[5]++;
    return AsyncValidators;
  },
  FormValidator: function () {
    /* istanbul ignore next */
    cov_9grmjg03r().f[3]++;
    cov_9grmjg03r().s[6]++;
    return FormValidator;
  },
  ValidationRules: function () {
    /* istanbul ignore next */
    cov_9grmjg03r().f[4]++;
    cov_9grmjg03r().s[7]++;
    return ValidationRules;
  },
  ValidationUtils: function () {
    /* istanbul ignore next */
    cov_9grmjg03r().f[5]++;
    cov_9grmjg03r().s[8]++;
    return ValidationUtils;
  },
  Validator: function () {
    /* istanbul ignore next */
    cov_9grmjg03r().f[6]++;
    cov_9grmjg03r().s[9]++;
    return Validator;
  }
});
class Validator {
  // 必填验证
  static required(value) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[7]++;
    const isEmpty =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[10]++,
    /* istanbul ignore next */
    (cov_9grmjg03r().b[0][0]++, value === null) ||
    /* istanbul ignore next */
    (cov_9grmjg03r().b[0][1]++, value === undefined) ||
    /* istanbul ignore next */
    (cov_9grmjg03r().b[0][2]++, typeof value === 'string') &&
    /* istanbul ignore next */
    (cov_9grmjg03r().b[0][3]++, value.trim() === '') ||
    /* istanbul ignore next */
    (cov_9grmjg03r().b[0][4]++, Array.isArray(value)) &&
    /* istanbul ignore next */
    (cov_9grmjg03r().b[0][5]++, value.length === 0));
    /* istanbul ignore next */
    cov_9grmjg03r().s[11]++;
    return {
      isValid: !isEmpty,
      message: isEmpty ?
      /* istanbul ignore next */
      (cov_9grmjg03r().b[1][0]++, '此字段为必填项') :
      /* istanbul ignore next */
      (cov_9grmjg03r().b[1][1]++, undefined)
    };
  }
  // 长度验证
  static validateLength(value, min, max) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[8]++;
    cov_9grmjg03r().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_9grmjg03r().b[3][0]++, value === null) ||
    /* istanbul ignore next */
    (cov_9grmjg03r().b[3][1]++, value === undefined)) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[2][0]++;
      cov_9grmjg03r().s[13]++;
      return {
        isValid: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[2][1]++;
    }
    const length =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[14]++, typeof value === 'string' ?
    /* istanbul ignore next */
    (cov_9grmjg03r().b[4][0]++, value.length) :
    /* istanbul ignore next */
    (cov_9grmjg03r().b[4][1]++, Array.isArray(value) ?
    /* istanbul ignore next */
    (cov_9grmjg03r().b[5][0]++, value.length) :
    /* istanbul ignore next */
    (cov_9grmjg03r().b[5][1]++, 0)));
    /* istanbul ignore next */
    cov_9grmjg03r().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_9grmjg03r().b[7][0]++, min !== undefined) &&
    /* istanbul ignore next */
    (cov_9grmjg03r().b[7][1]++, length < min)) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[6][0]++;
      cov_9grmjg03r().s[16]++;
      return {
        isValid: false,
        message: `长度不能少于${min}个字符`
      };
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[6][1]++;
    }
    cov_9grmjg03r().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_9grmjg03r().b[9][0]++, max !== undefined) &&
    /* istanbul ignore next */
    (cov_9grmjg03r().b[9][1]++, length > max)) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[8][0]++;
      cov_9grmjg03r().s[18]++;
      return {
        isValid: false,
        message: `长度不能超过${max}个字符`
      };
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[8][1]++;
    }
    cov_9grmjg03r().s[19]++;
    return {
      isValid: true
    };
  }
  // 正则表达式验证
  static pattern(value, regex, message) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[9]++;
    cov_9grmjg03r().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_9grmjg03r().b[11][0]++, value === null) ||
    /* istanbul ignore next */
    (cov_9grmjg03r().b[11][1]++, value === undefined) ||
    /* istanbul ignore next */
    (cov_9grmjg03r().b[11][2]++, value === '')) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[10][0]++;
      cov_9grmjg03r().s[21]++;
      return {
        isValid: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[10][1]++;
    }
    const stringValue =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[22]++, String(value));
    const isValid =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[23]++, regex.test(stringValue));
    /* istanbul ignore next */
    cov_9grmjg03r().s[24]++;
    return {
      isValid,
      message: isValid ?
      /* istanbul ignore next */
      (cov_9grmjg03r().b[12][0]++, undefined) :
      /* istanbul ignore next */
      (cov_9grmjg03r().b[12][1]++,
      /* istanbul ignore next */
      (cov_9grmjg03r().b[13][0]++, message) ||
      /* istanbul ignore next */
      (cov_9grmjg03r().b[13][1]++, '格式不正确'))
    };
  }
  // 数值范围验证
  static range(value, min, max) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[10]++;
    cov_9grmjg03r().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_9grmjg03r().b[15][0]++, value === null) ||
    /* istanbul ignore next */
    (cov_9grmjg03r().b[15][1]++, value === undefined) ||
    /* istanbul ignore next */
    (cov_9grmjg03r().b[15][2]++, value === '')) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[14][0]++;
      cov_9grmjg03r().s[26]++;
      return {
        isValid: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[14][1]++;
    }
    const numValue =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[27]++, Number(value));
    /* istanbul ignore next */
    cov_9grmjg03r().s[28]++;
    if (isNaN(numValue)) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[16][0]++;
      cov_9grmjg03r().s[29]++;
      return {
        isValid: false,
        message: '必须是有效数字'
      };
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[16][1]++;
    }
    cov_9grmjg03r().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_9grmjg03r().b[18][0]++, min !== undefined) &&
    /* istanbul ignore next */
    (cov_9grmjg03r().b[18][1]++, numValue < min)) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[17][0]++;
      cov_9grmjg03r().s[31]++;
      return {
        isValid: false,
        message: `数值不能小于${min}`
      };
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[17][1]++;
    }
    cov_9grmjg03r().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_9grmjg03r().b[20][0]++, max !== undefined) &&
    /* istanbul ignore next */
    (cov_9grmjg03r().b[20][1]++, numValue > max)) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[19][0]++;
      cov_9grmjg03r().s[33]++;
      return {
        isValid: false,
        message: `数值不能大于${max}`
      };
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[19][1]++;
    }
    cov_9grmjg03r().s[34]++;
    return {
      isValid: true
    };
  }
  // 邮箱验证
  static email(value) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[11]++;
    const emailRegex =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[35]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
    /* istanbul ignore next */
    cov_9grmjg03r().s[36]++;
    return Validator.pattern(value, emailRegex, '请输入有效的邮箱地址');
  }
  // 手机号验证
  static phone(value) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[12]++;
    const phoneRegex =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[37]++, /^1[3-9]\d{9}$/);
    /* istanbul ignore next */
    cov_9grmjg03r().s[38]++;
    return Validator.pattern(value, phoneRegex, '请输入有效的手机号码');
  }
  // URL验证
  static url(value) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[13]++;
    cov_9grmjg03r().s[39]++;
    if (
    /* istanbul ignore next */
    (cov_9grmjg03r().b[22][0]++, value === null) ||
    /* istanbul ignore next */
    (cov_9grmjg03r().b[22][1]++, value === undefined) ||
    /* istanbul ignore next */
    (cov_9grmjg03r().b[22][2]++, value === '')) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[21][0]++;
      cov_9grmjg03r().s[40]++;
      return {
        isValid: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[21][1]++;
    }
    cov_9grmjg03r().s[41]++;
    try {
      /* istanbul ignore next */
      cov_9grmjg03r().s[42]++;
      new URL(String(value));
      /* istanbul ignore next */
      cov_9grmjg03r().s[43]++;
      return {
        isValid: true
      };
    } catch {
      /* istanbul ignore next */
      cov_9grmjg03r().s[44]++;
      return {
        isValid: false,
        message: '请输入有效的URL地址'
      };
    }
  }
  // 身份证验证
  static idCard(value) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[14]++;
    const idCardRegex =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[45]++, /^[1-9]\d{5}(18|19|20)\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/);
    /* istanbul ignore next */
    cov_9grmjg03r().s[46]++;
    return Validator.pattern(value, idCardRegex, '请输入有效的身份证号码');
  }
}
class FormValidator {
  constructor(config) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[15]++;
    cov_9grmjg03r().s[47]++;
    this.errors = {};
    /* istanbul ignore next */
    cov_9grmjg03r().s[48]++;
    this.config = config;
  }
  // 验证单个字段
  validateField(fieldName, value) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[16]++;
    const rules =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[49]++, this.config.fields[fieldName]);
    /* istanbul ignore next */
    cov_9grmjg03r().s[50]++;
    if (!rules) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[23][0]++;
      cov_9grmjg03r().s[51]++;
      return {
        isValid: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[23][1]++;
    }
    const errors =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[52]++, []);
    /* istanbul ignore next */
    cov_9grmjg03r().s[53]++;
    for (const rule of rules) {
      let result;
      // 必填验证
      /* istanbul ignore next */
      cov_9grmjg03r().s[54]++;
      if (rule.required) {
        /* istanbul ignore next */
        cov_9grmjg03r().b[24][0]++;
        cov_9grmjg03r().s[55]++;
        result = Validator.required(value);
        /* istanbul ignore next */
        cov_9grmjg03r().s[56]++;
        if (
        /* istanbul ignore next */
        (cov_9grmjg03r().b[26][0]++, !result.isValid) &&
        /* istanbul ignore next */
        (cov_9grmjg03r().b[26][1]++, result.message)) {
          /* istanbul ignore next */
          cov_9grmjg03r().b[25][0]++;
          cov_9grmjg03r().s[57]++;
          errors.push(result.message);
          /* istanbul ignore next */
          cov_9grmjg03r().s[58]++;
          if (this.config.stopOnFirstError) {
            /* istanbul ignore next */
            cov_9grmjg03r().b[27][0]++;
            cov_9grmjg03r().s[59]++;
            break;
          } else
          /* istanbul ignore next */
          {
            cov_9grmjg03r().b[27][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_9grmjg03r().b[25][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_9grmjg03r().b[24][1]++;
      }
      // 如果值为空且不是必填，跳过其他验证
      cov_9grmjg03r().s[60]++;
      if ((
      /* istanbul ignore next */
      (cov_9grmjg03r().b[29][0]++, value === null) ||
      /* istanbul ignore next */
      (cov_9grmjg03r().b[29][1]++, value === undefined) ||
      /* istanbul ignore next */
      (cov_9grmjg03r().b[29][2]++, value === '')) &&
      /* istanbul ignore next */
      (cov_9grmjg03r().b[29][3]++, !rule.required)) {
        /* istanbul ignore next */
        cov_9grmjg03r().b[28][0]++;
        cov_9grmjg03r().s[61]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_9grmjg03r().b[28][1]++;
      }
      // 长度验证
      cov_9grmjg03r().s[62]++;
      if (
      /* istanbul ignore next */
      (cov_9grmjg03r().b[31][0]++, rule.minLength !== undefined) ||
      /* istanbul ignore next */
      (cov_9grmjg03r().b[31][1]++, rule.maxLength !== undefined)) {
        /* istanbul ignore next */
        cov_9grmjg03r().b[30][0]++;
        cov_9grmjg03r().s[63]++;
        result = Validator.validateLength(value, rule.minLength, rule.maxLength);
        /* istanbul ignore next */
        cov_9grmjg03r().s[64]++;
        if (
        /* istanbul ignore next */
        (cov_9grmjg03r().b[33][0]++, !result.isValid) &&
        /* istanbul ignore next */
        (cov_9grmjg03r().b[33][1]++, result.message)) {
          /* istanbul ignore next */
          cov_9grmjg03r().b[32][0]++;
          cov_9grmjg03r().s[65]++;
          errors.push(result.message);
          /* istanbul ignore next */
          cov_9grmjg03r().s[66]++;
          if (this.config.stopOnFirstError) {
            /* istanbul ignore next */
            cov_9grmjg03r().b[34][0]++;
            cov_9grmjg03r().s[67]++;
            break;
          } else
          /* istanbul ignore next */
          {
            cov_9grmjg03r().b[34][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_9grmjg03r().b[32][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_9grmjg03r().b[30][1]++;
      }
      // 正则验证
      cov_9grmjg03r().s[68]++;
      if (rule.pattern) {
        /* istanbul ignore next */
        cov_9grmjg03r().b[35][0]++;
        cov_9grmjg03r().s[69]++;
        result = Validator.pattern(value, rule.pattern);
        /* istanbul ignore next */
        cov_9grmjg03r().s[70]++;
        if (
        /* istanbul ignore next */
        (cov_9grmjg03r().b[37][0]++, !result.isValid) &&
        /* istanbul ignore next */
        (cov_9grmjg03r().b[37][1]++, result.message)) {
          /* istanbul ignore next */
          cov_9grmjg03r().b[36][0]++;
          cov_9grmjg03r().s[71]++;
          errors.push(result.message);
          /* istanbul ignore next */
          cov_9grmjg03r().s[72]++;
          if (this.config.stopOnFirstError) {
            /* istanbul ignore next */
            cov_9grmjg03r().b[38][0]++;
            cov_9grmjg03r().s[73]++;
            break;
          } else
          /* istanbul ignore next */
          {
            cov_9grmjg03r().b[38][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_9grmjg03r().b[36][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_9grmjg03r().b[35][1]++;
      }
      // 数值范围验证
      cov_9grmjg03r().s[74]++;
      if (
      /* istanbul ignore next */
      (cov_9grmjg03r().b[40][0]++, rule.min !== undefined) ||
      /* istanbul ignore next */
      (cov_9grmjg03r().b[40][1]++, rule.max !== undefined)) {
        /* istanbul ignore next */
        cov_9grmjg03r().b[39][0]++;
        cov_9grmjg03r().s[75]++;
        result = Validator.range(value, rule.min, rule.max);
        /* istanbul ignore next */
        cov_9grmjg03r().s[76]++;
        if (
        /* istanbul ignore next */
        (cov_9grmjg03r().b[42][0]++, !result.isValid) &&
        /* istanbul ignore next */
        (cov_9grmjg03r().b[42][1]++, result.message)) {
          /* istanbul ignore next */
          cov_9grmjg03r().b[41][0]++;
          cov_9grmjg03r().s[77]++;
          errors.push(result.message);
          /* istanbul ignore next */
          cov_9grmjg03r().s[78]++;
          if (this.config.stopOnFirstError) {
            /* istanbul ignore next */
            cov_9grmjg03r().b[43][0]++;
            cov_9grmjg03r().s[79]++;
            break;
          } else
          /* istanbul ignore next */
          {
            cov_9grmjg03r().b[43][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_9grmjg03r().b[41][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_9grmjg03r().b[39][1]++;
      }
      // 自定义验证
      cov_9grmjg03r().s[80]++;
      if (rule.custom) {
        /* istanbul ignore next */
        cov_9grmjg03r().b[44][0]++;
        cov_9grmjg03r().s[81]++;
        result = rule.custom(value);
        /* istanbul ignore next */
        cov_9grmjg03r().s[82]++;
        if (
        /* istanbul ignore next */
        (cov_9grmjg03r().b[46][0]++, !result.isValid) &&
        /* istanbul ignore next */
        (cov_9grmjg03r().b[46][1]++, result.message)) {
          /* istanbul ignore next */
          cov_9grmjg03r().b[45][0]++;
          cov_9grmjg03r().s[83]++;
          errors.push(result.message);
          /* istanbul ignore next */
          cov_9grmjg03r().s[84]++;
          if (this.config.stopOnFirstError) {
            /* istanbul ignore next */
            cov_9grmjg03r().b[47][0]++;
            cov_9grmjg03r().s[85]++;
            break;
          } else
          /* istanbul ignore next */
          {
            cov_9grmjg03r().b[47][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_9grmjg03r().b[45][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_9grmjg03r().b[44][1]++;
      }
    }
    // 更新错误状态
    /* istanbul ignore next */
    cov_9grmjg03r().s[86]++;
    if (errors.length > 0) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[48][0]++;
      cov_9grmjg03r().s[87]++;
      this.errors[fieldName] = errors;
    } else {
      /* istanbul ignore next */
      cov_9grmjg03r().b[48][1]++;
      cov_9grmjg03r().s[88]++;
      delete this.errors[fieldName];
    }
    /* istanbul ignore next */
    cov_9grmjg03r().s[89]++;
    return {
      isValid: errors.length === 0,
      errors: errors.length > 0 ?
      /* istanbul ignore next */
      (cov_9grmjg03r().b[49][0]++, errors) :
      /* istanbul ignore next */
      (cov_9grmjg03r().b[49][1]++, undefined)
    };
  }
  // 验证整个表单
  validateForm(data) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[17]++;
    cov_9grmjg03r().s[90]++;
    this.errors = {};
    const allErrors =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[91]++, []);
    /* istanbul ignore next */
    cov_9grmjg03r().s[92]++;
    for (const fieldName in this.config.fields) {
      const result =
      /* istanbul ignore next */
      (cov_9grmjg03r().s[93]++, this.validateField(fieldName, data[fieldName]));
      /* istanbul ignore next */
      cov_9grmjg03r().s[94]++;
      if (
      /* istanbul ignore next */
      (cov_9grmjg03r().b[51][0]++, !result.isValid) &&
      /* istanbul ignore next */
      (cov_9grmjg03r().b[51][1]++, result.errors)) {
        /* istanbul ignore next */
        cov_9grmjg03r().b[50][0]++;
        cov_9grmjg03r().s[95]++;
        allErrors.push(...result.errors);
      } else
      /* istanbul ignore next */
      {
        cov_9grmjg03r().b[50][1]++;
      }
    }
    /* istanbul ignore next */
    cov_9grmjg03r().s[96]++;
    return {
      isValid: allErrors.length === 0,
      errors: allErrors.length > 0 ?
      /* istanbul ignore next */
      (cov_9grmjg03r().b[52][0]++, allErrors) :
      /* istanbul ignore next */
      (cov_9grmjg03r().b[52][1]++, undefined)
    };
  }
  // 获取字段错误
  getFieldErrors(fieldName) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[18]++;
    cov_9grmjg03r().s[97]++;
    return /* istanbul ignore next */(cov_9grmjg03r().b[53][0]++, this.errors[fieldName]) ||
    /* istanbul ignore next */
    (cov_9grmjg03r().b[53][1]++, []);
  }
  // 获取所有错误
  getAllErrors() {
    /* istanbul ignore next */
    cov_9grmjg03r().f[19]++;
    cov_9grmjg03r().s[98]++;
    return {
      ...this.errors
    };
  }
  // 清除错误
  clearErrors(fieldName) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[20]++;
    cov_9grmjg03r().s[99]++;
    if (fieldName) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[54][0]++;
      cov_9grmjg03r().s[100]++;
      delete this.errors[fieldName];
    } else {
      /* istanbul ignore next */
      cov_9grmjg03r().b[54][1]++;
      cov_9grmjg03r().s[101]++;
      this.errors = {};
    }
  }
  // 检查是否有错误
  hasErrors(fieldName) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[21]++;
    cov_9grmjg03r().s[102]++;
    if (fieldName) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[55][0]++;
      cov_9grmjg03r().s[103]++;
      return this.errors[fieldName]?.length > 0;
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[55][1]++;
    }
    cov_9grmjg03r().s[104]++;
    return Object.keys(this.errors).length > 0;
  }
}
const ValidationRules =
/* istanbul ignore next */
(cov_9grmjg03r().s[105]++, {
  // 用户名规则
  username: [{
    required: true
  }, {
    minLength: 3,
    maxLength: 20
  }, {
    pattern: /^[a-zA-Z0-9_]+$/
  }],
  // 密码规则
  password: [{
    required: true
  }, {
    minLength: 8,
    maxLength: 50
  }, {
    pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/
  }],
  // 邮箱规则
  email: [{
    required: true
  }, {
    custom: Validator.email
  }],
  // 手机号规则
  phone: [{
    required: true
  }, {
    custom: Validator.phone
  }],
  // 工单标题规则
  ticketTitle: [{
    required: true
  }, {
    minLength: 5,
    maxLength: 100
  }],
  // 工单描述规则
  ticketDescription: [{
    required: true
  }, {
    minLength: 10,
    maxLength: 2000
  }]
});
class AsyncFormValidator {
  // 注册异步验证器
  registerValidator(fieldName, validator) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[22]++;
    cov_9grmjg03r().s[106]++;
    this.validators[fieldName] = validator;
  }
  // 异步验证字段
  async validateFieldAsync(fieldName, value) {
    /* istanbul ignore next */
    cov_9grmjg03r().f[23]++;
    const validator =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[107]++, this.validators[fieldName]);
    /* istanbul ignore next */
    cov_9grmjg03r().s[108]++;
    if (!validator) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[56][0]++;
      cov_9grmjg03r().s[109]++;
      return {
        isValid: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[56][1]++;
    }
    // 清除之前的定时器
    cov_9grmjg03r().s[110]++;
    if (this.debounceTimers[fieldName]) {
      /* istanbul ignore next */
      cov_9grmjg03r().b[57][0]++;
      cov_9grmjg03r().s[111]++;
      clearTimeout(this.debounceTimers[fieldName]);
    } else
    /* istanbul ignore next */
    {
      cov_9grmjg03r().b[57][1]++;
    }
    // 防抖处理
    cov_9grmjg03r().s[112]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_9grmjg03r().f[24]++;
      const debounceMs =
      /* istanbul ignore next */
      (cov_9grmjg03r().s[113]++,
      /* istanbul ignore next */
      (cov_9grmjg03r().b[58][0]++, validator.debounceMs) ||
      /* istanbul ignore next */
      (cov_9grmjg03r().b[58][1]++, 300));
      /* istanbul ignore next */
      cov_9grmjg03r().s[114]++;
      this.debounceTimers[fieldName] = setTimeout(async () => {
        /* istanbul ignore next */
        cov_9grmjg03r().f[25]++;
        cov_9grmjg03r().s[115]++;
        try {
          const result =
          /* istanbul ignore next */
          (cov_9grmjg03r().s[116]++, await validator.validate(value));
          /* istanbul ignore next */
          cov_9grmjg03r().s[117]++;
          resolve(result);
        } catch {
          /* istanbul ignore next */
          cov_9grmjg03r().s[118]++;
          resolve({
            isValid: false,
            message: '验证过程中发生错误'
          });
        }
      }, debounceMs);
    });
  }
  // 清理定时器
  cleanup() {
    /* istanbul ignore next */
    cov_9grmjg03r().f[26]++;
    cov_9grmjg03r().s[119]++;
    Object.values(this.debounceTimers).forEach(timer => {
      /* istanbul ignore next */
      cov_9grmjg03r().f[27]++;
      cov_9grmjg03r().s[120]++;
      clearTimeout(timer);
    });
    /* istanbul ignore next */
    cov_9grmjg03r().s[121]++;
    this.debounceTimers = {};
  }
  constructor() {
    /* istanbul ignore next */
    cov_9grmjg03r().f[28]++;
    cov_9grmjg03r().s[122]++;
    this.validators = {};
    /* istanbul ignore next */
    cov_9grmjg03r().s[123]++;
    this.debounceTimers = {};
  }
}
const AsyncValidators =
/* istanbul ignore next */
(cov_9grmjg03r().s[124]++, {
  // 用户名唯一性验证
  uniqueUsername: {
    validate: async value => {
      /* istanbul ignore next */
      cov_9grmjg03r().f[29]++;
      cov_9grmjg03r().s[125]++;
      if (
      /* istanbul ignore next */
      (cov_9grmjg03r().b[60][0]++, !value) ||
      /* istanbul ignore next */
      (cov_9grmjg03r().b[60][1]++, typeof value !== 'string')) {
        /* istanbul ignore next */
        cov_9grmjg03r().b[59][0]++;
        cov_9grmjg03r().s[126]++;
        return {
          isValid: true
        };
      } else
      /* istanbul ignore next */
      {
        cov_9grmjg03r().b[59][1]++;
      }
      // 模拟API调用
      cov_9grmjg03r().s[127]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_9grmjg03r().f[30]++;
        cov_9grmjg03r().s[128]++;
        return setTimeout(resolve, 500);
      });
      // 这里应该调用实际的API
      const isUnique =
      /* istanbul ignore next */
      (cov_9grmjg03r().s[129]++, !['admin', 'root', 'test'].includes(value.toLowerCase()));
      /* istanbul ignore next */
      cov_9grmjg03r().s[130]++;
      return {
        isValid: isUnique,
        message: isUnique ?
        /* istanbul ignore next */
        (cov_9grmjg03r().b[61][0]++, undefined) :
        /* istanbul ignore next */
        (cov_9grmjg03r().b[61][1]++, '用户名已存在')
      };
    },
    debounceMs: 500
  },
  // 邮箱唯一性验证
  uniqueEmail: {
    validate: async value => {
      /* istanbul ignore next */
      cov_9grmjg03r().f[31]++;
      cov_9grmjg03r().s[131]++;
      if (
      /* istanbul ignore next */
      (cov_9grmjg03r().b[63][0]++, !value) ||
      /* istanbul ignore next */
      (cov_9grmjg03r().b[63][1]++, typeof value !== 'string')) {
        /* istanbul ignore next */
        cov_9grmjg03r().b[62][0]++;
        cov_9grmjg03r().s[132]++;
        return {
          isValid: true
        };
      } else
      /* istanbul ignore next */
      {
        cov_9grmjg03r().b[62][1]++;
      }
      // 先进行格式验证
      const formatResult =
      /* istanbul ignore next */
      (cov_9grmjg03r().s[133]++, Validator.email(value));
      /* istanbul ignore next */
      cov_9grmjg03r().s[134]++;
      if (!formatResult.isValid) {
        /* istanbul ignore next */
        cov_9grmjg03r().b[64][0]++;
        cov_9grmjg03r().s[135]++;
        return formatResult;
      } else
      /* istanbul ignore next */
      {
        cov_9grmjg03r().b[64][1]++;
      }
      // 模拟API调用
      cov_9grmjg03r().s[136]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_9grmjg03r().f[32]++;
        cov_9grmjg03r().s[137]++;
        return setTimeout(resolve, 500);
      });
      // 这里应该调用实际的API
      const isUnique =
      /* istanbul ignore next */
      (cov_9grmjg03r().s[138]++, !value.includes('test@'));
      /* istanbul ignore next */
      cov_9grmjg03r().s[139]++;
      return {
        isValid: isUnique,
        message: isUnique ?
        /* istanbul ignore next */
        (cov_9grmjg03r().b[65][0]++, undefined) :
        /* istanbul ignore next */
        (cov_9grmjg03r().b[65][1]++, '邮箱已被注册')
      };
    },
    debounceMs: 500
  }
});
const ValidationUtils =
/* istanbul ignore next */
(cov_9grmjg03r().s[140]++, {
  // 创建表单验证器
  createFormValidator: fields => {
    /* istanbul ignore next */
    cov_9grmjg03r().f[33]++;
    cov_9grmjg03r().s[141]++;
    return new FormValidator({
      fields,
      validateOnChange: true,
      validateOnBlur: true,
      stopOnFirstError: false
    });
  },
  // 验证单个值
  validateValue: (value, rules) => {
    /* istanbul ignore next */
    cov_9grmjg03r().f[34]++;
    const validator =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[142]++, new FormValidator({
      fields: {
        temp: rules
      }
    }));
    /* istanbul ignore next */
    cov_9grmjg03r().s[143]++;
    return validator.validateField('temp', value);
  },
  // 合并验证结果
  mergeValidationResults: (...results) => {
    /* istanbul ignore next */
    cov_9grmjg03r().f[35]++;
    const allErrors =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[144]++, []);
    let isValid =
    /* istanbul ignore next */
    (cov_9grmjg03r().s[145]++, true);
    /* istanbul ignore next */
    cov_9grmjg03r().s[146]++;
    for (const result of results) {
      /* istanbul ignore next */
      cov_9grmjg03r().s[147]++;
      if (!result.isValid) {
        /* istanbul ignore next */
        cov_9grmjg03r().b[66][0]++;
        cov_9grmjg03r().s[148]++;
        isValid = false;
        /* istanbul ignore next */
        cov_9grmjg03r().s[149]++;
        if (result.message) {
          /* istanbul ignore next */
          cov_9grmjg03r().b[67][0]++;
          cov_9grmjg03r().s[150]++;
          allErrors.push(result.message);
        } else
        /* istanbul ignore next */
        {
          cov_9grmjg03r().b[67][1]++;
        }
        cov_9grmjg03r().s[151]++;
        if (result.errors) {
          /* istanbul ignore next */
          cov_9grmjg03r().b[68][0]++;
          cov_9grmjg03r().s[152]++;
          allErrors.push(...result.errors);
        } else
        /* istanbul ignore next */
        {
          cov_9grmjg03r().b[68][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_9grmjg03r().b[66][1]++;
      }
    }
    /* istanbul ignore next */
    cov_9grmjg03r().s[153]++;
    return {
      isValid,
      errors: allErrors.length > 0 ?
      /* istanbul ignore next */
      (cov_9grmjg03r().b[69][0]++, allErrors) :
      /* istanbul ignore next */
      (cov_9grmjg03r().b[69][1]++, undefined)
    };
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,