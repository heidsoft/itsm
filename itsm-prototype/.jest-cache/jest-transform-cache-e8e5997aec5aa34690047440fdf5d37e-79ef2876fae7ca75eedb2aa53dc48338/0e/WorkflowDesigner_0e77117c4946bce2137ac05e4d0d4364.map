{"version":3,"names":["WorkflowDesigner","Title","Text","cov_1mc0efwqq5","s","_antd","Typography","Option","Select","workflow","onSave","onCancel","f","message","App","useApp","elements","setElements","_react","useState","connections","setConnections","selectedElement","setSelectedElement","zoom","setZoom","history","setHistory","historyIndex","setHistoryIndex","propertiesVisible","setPropertiesVisible","activeTab","setActiveTab","canvasRef","useRef","useEffect","b","defaultElements","id","type","name","x","y","width","height","properties","eventType","assignee","candidateUsers","candidateGroups","formKey","defaultConnections","source","target","saveToHistory","loadWorkflow","workflowData","parsedElements","parsedConnections","error","newElements","newConnections","newHistory","timestamp","Date","now","prev","updated","slice","length","addElement","newElement","getDefaultName","getDefaultWidth","getDefaultHeight","getDefaultProperties","names","startEvent","userTask","serviceTask","scriptTask","endEvent","exclusiveGateway","parallelGateway","inclusiveGateway","widths","heights","class","script","updateElement","updates","map","el","deleteElement","filter","conn","addConnection","newConnection","getElementIcon","icons","_jsxruntime","jsx","_lucidereact","CheckCircle","className","User","Settings","Code","AlertCircle","GitBranch","GitMerge","GitCommit","FileText","getElementColor","colors","handleCanvasClick","e","current","handleElementClick","element","handleSave","bpmnXML","generateBPMNXML","metadata","version","lastModified","toISOString","totalElements","totalConnections","xml","generateElementXML","join","connection","generateConnectionXML","handleUndo","prevState","handleRedo","nextState","jsxs","Space","Tooltip","title","Button","icon","Save","onClick","Eye","Divider","Undo","disabled","Redo","ZoomIn","Math","min","ZoomOut","max","Fullscreen","round","Badge","count","showZero","size","level","Tabs","activeKey","onChange","tabBarStyle","margin","padding","items","key","label","children","ref","style","transform","transformOrigin","left","top","backgroundColor","stopPropagation","find","startX","startY","endX","endY","x1","y1","x2","y2","stroke","strokeWidth","markerEnd","markerWidth","markerHeight","refX","refY","orient","points","fill","Form","layout","Item","Input","value","Fragment","placeholder","danger","Trash2","Copy","Download"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/WorkflowDesigner.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Card,\n  Button,\n  Space,\n  Tooltip,\n  Modal,\n  Form,\n  Input,\n  Select,\n  Tabs,\n  Divider,\n  Row,\n  Col,\n  Typography,\n  Alert,\n  Badge,\n  App,\n} from \"antd\";\nimport {\n  Save,\n  Play,\n  Settings,\n  Eye,\n  Code,\n  Download,\n  Upload,\n  Undo,\n  Redo,\n  ZoomIn,\n  ZoomOut,\n  Fullscreen,\n  Plus,\n  Trash2,\n  Copy,\n  Move,\n  Link,\n  Unlink,\n  CheckCircle,\n  AlertCircle,\n  Clock,\n  User,\n  Users,\n  Shield,\n  FileText,\n  Send,\n  GitBranch,\n  GitCommit,\n  GitMerge,\n} from \"lucide-react\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\ninterface WorkflowDesignerProps {\n  workflow?: any;\n  onSave: (data: any) => void;\n  onCancel: () => void;\n}\n\ninterface BPMNElement {\n  id: string;\n  type: string;\n  name: string;\n  x: number;\n  y: number;\n  width?: number;\n  height?: number;\n  properties?: Record<string, any>;\n}\n\ninterface BPMNConnection {\n  id: string;\n  source: string;\n  target: string;\n  type: string;\n  properties?: Record<string, any>;\n}\n\nexport const WorkflowDesigner: React.FC<WorkflowDesignerProps> = ({\n  workflow,\n  onSave,\n  onCancel,\n}) => {\n  const { message } = App.useApp();\n  const [elements, setElements] = useState<BPMNElement[]>([]);\n  const [connections, setConnections] = useState<BPMNConnection[]>([]);\n  const [selectedElement, setSelectedElement] = useState<BPMNElement | null>(\n    null\n  );\n  const [zoom, setZoom] = useState(1);\n  const [history, setHistory] = useState<any[]>([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [propertiesVisible, setPropertiesVisible] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"design\");\n\n  const canvasRef = useRef<HTMLDivElement>(null);\n\n  // 初始化默认工作流\n  useEffect(() => {\n    if (!workflow) {\n      // 创建默认的简单工作流\n      const defaultElements: BPMNElement[] = [\n        {\n          id: \"start_1\",\n          type: \"startEvent\",\n          name: \"开始\",\n          x: 100,\n          y: 200,\n          width: 60,\n          height: 60,\n          properties: {\n            eventType: \"start\",\n            name: \"开始\",\n          },\n        },\n        {\n          id: \"user_task_1\",\n          type: \"userTask\",\n          name: \"用户任务\",\n          x: 300,\n          y: 200,\n          width: 120,\n          height: 80,\n          properties: {\n            assignee: \"\",\n            candidateUsers: \"\",\n            candidateGroups: \"\",\n            formKey: \"\",\n            name: \"用户任务\",\n          },\n        },\n        {\n          id: \"end_1\",\n          type: \"endEvent\",\n          name: \"结束\",\n          x: 500,\n          y: 200,\n          width: 60,\n          height: 60,\n          properties: {\n            eventType: \"end\",\n            name: \"结束\",\n          },\n        },\n      ];\n\n      const defaultConnections: BPMNConnection[] = [\n        {\n          id: \"flow_1\",\n          source: \"start_1\",\n          target: \"user_task_1\",\n          type: \"sequenceFlow\",\n          properties: {\n            name: \"流程\",\n          },\n        },\n        {\n          id: \"flow_2\",\n          source: \"user_task_1\",\n          target: \"end_1\",\n          type: \"sequenceFlow\",\n          properties: {\n            name: \"流程\",\n          },\n        },\n      ];\n\n      setElements(defaultElements);\n      setConnections(defaultConnections);\n      saveToHistory(defaultElements, defaultConnections);\n    } else {\n      // 加载现有工作流\n      loadWorkflow(workflow);\n    }\n  }, [workflow]);\n\n  const loadWorkflow = (workflowData: any) => {\n    try {\n      // 这里应该解析BPMN XML\n      // 暂时使用模拟数据\n      const parsedElements: BPMNElement[] = [\n        {\n          id: \"start_1\",\n          type: \"startEvent\",\n          name: \"开始\",\n          x: 100,\n          y: 200,\n          width: 60,\n          height: 60,\n          properties: {\n            eventType: \"start\",\n            name: \"开始\",\n          },\n        },\n      ];\n\n      const parsedConnections: BPMNConnection[] = [];\n\n      setElements(parsedElements);\n      setConnections(parsedConnections);\n      saveToHistory(parsedElements, parsedConnections);\n    } catch (error) {\n      message.error(\"加载工作流失败\");\n    }\n  };\n\n  const saveToHistory = (\n    newElements: BPMNElement[],\n    newConnections: BPMNConnection[]\n  ) => {\n    const newHistory = {\n      elements: [...newElements],\n      connections: [...newConnections],\n      timestamp: Date.now(),\n    };\n\n    setHistory((prev) => {\n      const updated = [...prev.slice(0, historyIndex + 1), newHistory];\n      if (updated.length > 50) {\n        return updated.slice(-50);\n      }\n      return updated;\n    });\n    setHistoryIndex((prev) => prev + 1);\n  };\n\n  const addElement = (type: string, x: number, y: number) => {\n    const newElement: BPMNElement = {\n      id: `${type}_${Date.now()}`,\n      type,\n      name: getDefaultName(type),\n      x,\n      y,\n      width: getDefaultWidth(type),\n      height: getDefaultHeight(type),\n      properties: getDefaultProperties(type),\n    };\n\n    const newElements = [...elements, newElement];\n    setElements(newElements);\n    saveToHistory(newElements, connections);\n  };\n\n  const getDefaultName = (type: string) => {\n    const names: Record<string, string> = {\n      startEvent: \"开始\",\n      userTask: \"用户任务\",\n      serviceTask: \"服务任务\",\n      scriptTask: \"脚本任务\",\n      endEvent: \"结束\",\n      exclusiveGateway: \"排他网关\",\n      parallelGateway: \"并行网关\",\n      inclusiveGateway: \"包容网关\",\n    };\n    return names[type] || \"新元素\";\n  };\n\n  const getDefaultWidth = (type: string) => {\n    const widths: Record<string, number> = {\n      startEvent: 60,\n      endEvent: 60,\n      userTask: 120,\n      serviceTask: 120,\n      scriptTask: 120,\n      exclusiveGateway: 50,\n      parallelGateway: 50,\n      inclusiveGateway: 50,\n    };\n    return widths[type] || 100;\n  };\n\n  const getDefaultHeight = (type: string) => {\n    const heights: Record<string, number> = {\n      startEvent: 60,\n      endEvent: 60,\n      userTask: 80,\n      serviceTask: 80,\n      scriptTask: 80,\n      exclusiveGateway: 50,\n      parallelGateway: 50,\n      inclusiveGateway: 50,\n    };\n    return heights[type] || 60;\n  };\n\n  const getDefaultProperties = (type: string) => {\n    const properties: Record<string, any> = {\n      startEvent: { eventType: \"start\", name: \"开始\" },\n      userTask: {\n        assignee: \"\",\n        candidateUsers: \"\",\n        candidateGroups: \"\",\n        formKey: \"\",\n        name: \"用户任务\",\n      },\n      serviceTask: {\n        class: \"\",\n        name: \"服务任务\",\n      },\n      scriptTask: {\n        script: \"\",\n        name: \"脚本任务\",\n      },\n      endEvent: { eventType: \"end\", name: \"结束\" },\n      exclusiveGateway: { name: \"排他网关\" },\n      parallelGateway: { name: \"并行网关\" },\n      inclusiveGateway: { name: \"包容网关\" },\n    };\n    return properties[type] || { name: \"新元素\" };\n  };\n\n  const updateElement = (id: string, updates: Partial<BPMNElement>) => {\n    const newElements = elements.map((el) =>\n      el.id === id ? { ...el, ...updates } : el\n    );\n    setElements(newElements);\n    saveToHistory(newElements, connections);\n  };\n\n  const deleteElement = (id: string) => {\n    const newElements = elements.filter((el) => el.id !== id);\n    const newConnections = connections.filter(\n      (conn) => conn.source !== id && conn.target !== id\n    );\n    setElements(newElements);\n    setConnections(newConnections);\n    setSelectedElement(null);\n    saveToHistory(newElements, newConnections);\n  };\n\n  const addConnection = (source: string, target: string) => {\n    const newConnection: BPMNConnection = {\n      id: `flow_${Date.now()}`,\n      source,\n      target,\n      type: \"sequenceFlow\",\n      properties: { name: \"流程\" },\n    };\n\n    const newConnections = [...connections, newConnection];\n    setConnections(newConnections);\n    saveToHistory(elements, newConnections);\n  };\n\n  const getElementIcon = (type: string) => {\n    const icons: Record<string, React.ReactNode> = {\n      startEvent: <CheckCircle className=\"w-4 h-4\" />,\n      userTask: <User className=\"w-4 h-4\" />,\n      serviceTask: <Settings className=\"w-4 h-4\" />,\n      scriptTask: <Code className=\"w-4 h-4\" />,\n      endEvent: <AlertCircle className=\"w-4 h-4\" />,\n      exclusiveGateway: <GitBranch className=\"w-4 h-4\" />,\n      parallelGateway: <GitMerge className=\"w-4 h-4\" />,\n      inclusiveGateway: <GitCommit className=\"w-4 h-4\" />,\n    };\n    return icons[type] || <FileText className=\"w-4 h-4\" />;\n  };\n\n  const getElementColor = (type: string) => {\n    const colors: Record<string, string> = {\n      startEvent: \"#52c41a\",\n      userTask: \"#1890ff\",\n      serviceTask: \"#722ed1\",\n      scriptTask: \"#fa8c16\",\n      endEvent: \"#f5222d\",\n      exclusiveGateway: \"#faad14\",\n      parallelGateway: \"#13c2c2\",\n      inclusiveGateway: \"#eb2f96\",\n    };\n    return colors[type] || \"#666\";\n  };\n\n  const handleCanvasClick = (e: React.MouseEvent) => {\n    if (e.target === canvasRef.current) {\n      setSelectedElement(null);\n    }\n  };\n\n  const handleElementClick = (element: BPMNElement) => {\n    setSelectedElement(element);\n  };\n\n  const handleSave = () => {\n    const workflowData = {\n      elements,\n      connections,\n      bpmnXML: generateBPMNXML(),\n      metadata: {\n        version: \"1.0.0\",\n        lastModified: new Date().toISOString(),\n        totalElements: elements.length,\n        totalConnections: connections.length,\n      },\n    };\n\n    onSave(workflowData);\n  };\n\n  const generateBPMNXML = () => {\n    // 生成BPMN 2.0 XML\n    const xml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"\n                  xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\"\n                  xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\"\n                  xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\"\n                  id=\"Definitions_1\"\n                  targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn:process id=\"Process_1\" isExecutable=\"true\">\n    ${elements.map((element) => generateElementXML(element)).join(\"\\n    \")}\n    ${connections\n      .map((connection) => generateConnectionXML(connection))\n      .join(\"\\n    \")}\n  </bpmn:process>\n</bpmn:definitions>`;\n\n    return xml;\n  };\n\n  const generateElementXML = (element: BPMNElement) => {\n    switch (element.type) {\n      case \"startEvent\":\n        return `<bpmn:startEvent id=\"${element.id}\" name=\"${element.name}\" />`;\n      case \"userTask\":\n        return `<bpmn:userTask id=\"${element.id}\" name=\"${element.name}\" />`;\n      case \"serviceTask\":\n        return `<bpmn:serviceTask id=\"${element.id}\" name=\"${element.name}\" />`;\n      case \"endEvent\":\n        return `<bpmn:endEvent id=\"${element.id}\" name=\"${element.name}\" />`;\n      case \"exclusiveGateway\":\n        return `<bpmn:exclusiveGateway id=\"${element.id}\" name=\"${element.name}\" />`;\n      case \"parallelGateway\":\n        return `<bpmn:parallelGateway id=\"${element.id}\" name=\"${element.name}\" />`;\n      default:\n        return `<bpmn:task id=\"${element.id}\" name=\"${element.name}\" />`;\n    }\n  };\n\n  const generateConnectionXML = (connection: BPMNConnection) => {\n    return `<bpmn:sequenceFlow id=\"${connection.id}\" sourceRef=\"${connection.source}\" targetRef=\"${connection.target}\" />`;\n  };\n\n  const handleUndo = () => {\n    if (historyIndex > 0) {\n      const prevState = history[historyIndex - 1];\n      setElements(prevState.elements);\n      setConnections(prevState.connections);\n      setHistoryIndex(historyIndex - 1);\n    }\n  };\n\n  const handleRedo = () => {\n    if (historyIndex < history.length - 1) {\n      const nextState = history[historyIndex + 1];\n      setElements(nextState.elements);\n      setConnections(nextState.connections);\n      setHistoryIndex(historyIndex + 1);\n    }\n  };\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* 工具栏 */}\n      <div className=\"border-b border-gray-200 p-4 bg-white\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <Space>\n              <Tooltip title=\"保存\">\n                <Button\n                  type=\"primary\"\n                  icon={<Save className=\"w-4 h-4\" />}\n                  onClick={handleSave}\n                >\n                  保存\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"预览\">\n                <Button icon={<Eye className=\"w-4 h-4\" />}>预览</Button>\n              </Tooltip>\n              <Tooltip title=\"验证\">\n                <Button icon={<CheckCircle className=\"w-4 h-4\" />}>验证</Button>\n              </Tooltip>\n            </Space>\n\n            <Divider type=\"vertical\" />\n\n            <Space>\n              <Tooltip title=\"撤销\">\n                <Button\n                  icon={<Undo className=\"w-4 h-4\" />}\n                  disabled={historyIndex <= 0}\n                  onClick={handleUndo}\n                />\n              </Tooltip>\n              <Tooltip title=\"重做\">\n                <Button\n                  icon={<Redo className=\"w-4 h-4\" />}\n                  disabled={historyIndex >= history.length - 1}\n                  onClick={handleRedo}\n                />\n              </Tooltip>\n            </Space>\n\n            <Divider type=\"vertical\" />\n\n            <Space>\n              <Tooltip title=\"放大\">\n                <Button\n                  icon={<ZoomIn className=\"w-4 h-4\" />}\n                  onClick={() => setZoom((prev) => Math.min(prev + 0.1, 2))}\n                />\n              </Tooltip>\n              <Tooltip title=\"缩小\">\n                <Button\n                  icon={<ZoomOut className=\"w-4 h-4\" />}\n                  onClick={() => setZoom((prev) => Math.max(prev - 0.1, 0.5))}\n                />\n              </Tooltip>\n              <Tooltip title=\"适应画布\">\n                <Button icon={<Fullscreen className=\"w-4 h-4\" />} />\n              </Tooltip>\n            </Space>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <Text className=\"text-sm text-gray-500\">\n              缩放: {Math.round(zoom * 100)}%\n            </Text>\n            <Badge count={elements.length} showZero>\n              <Button size=\"small\">元素</Button>\n            </Badge>\n            <Badge count={connections.length} showZero>\n              <Button size=\"small\">连接</Button>\n            </Badge>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex-1 flex\">\n        {/* 左侧工具栏 */}\n        <div className=\"w-64 border-r border-gray-200 bg-gray-50 p-4\">\n          <Title level={5} className=\"mb-4\">\n            元素库\n          </Title>\n\n          <div className=\"space-y-2\">\n            <div className=\"text-sm font-medium text-gray-700 mb-2\">事件</div>\n            <div className=\"grid grid-cols-2 gap-2\">\n              <Tooltip title=\"开始事件\">\n                <Button\n                  size=\"small\"\n                  className=\"h-16 flex flex-col items-center justify-center\"\n                  onClick={() => addElement(\"startEvent\", 100, 100)}\n                >\n                  <CheckCircle className=\"w-5 h-5 text-green-500 mb-1\" />\n                  <span className=\"text-xs\">开始</span>\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"结束事件\">\n                <Button\n                  size=\"small\"\n                  className=\"h-16 flex flex-col items-center justify-center\"\n                  onClick={() => addElement(\"endEvent\", 100, 100)}\n                >\n                  <AlertCircle className=\"w-5 h-5 text-red-500 mb-1\" />\n                  <span className=\"text-xs\">结束</span>\n                </Button>\n              </Tooltip>\n            </div>\n\n            <div className=\"text-sm font-medium text-gray-700 mb-2 mt-4\">\n              任务\n            </div>\n            <div className=\"grid grid-cols-2 gap-2\">\n              <Tooltip title=\"用户任务\">\n                <Button\n                  size=\"small\"\n                  className=\"h-16 flex flex-col items-center justify-center\"\n                  onClick={() => addElement(\"userTask\", 100, 100)}\n                >\n                  <User className=\"w-5 h-5 text-blue-500 mb-1\" />\n                  <span className=\"text-xs\">用户任务</span>\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"服务任务\">\n                <Button\n                  size=\"small\"\n                  className=\"h-16 flex flex-col items-center justify-center\"\n                  onClick={() => addElement(\"serviceTask\", 100, 100)}\n                >\n                  <Settings className=\"w-5 h-5 text-purple-500 mb-1\" />\n                  <span className=\"text-xs\">服务任务</span>\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"脚本任务\">\n                <Button\n                  size=\"small\"\n                  className=\"h-16 flex flex-col items-center justify-center\"\n                  onClick={() => addElement(\"scriptTask\", 100, 100)}\n                >\n                  <Code className=\"w-5 h-5 text-orange-500 mb-1\" />\n                  <span className=\"text-xs\">脚本任务</span>\n                </Button>\n              </Tooltip>\n            </div>\n\n            <div className=\"text-sm font-medium text-gray-700 mb-2 mt-4\">\n              网关\n            </div>\n            <div className=\"grid grid-cols-2 gap-2\">\n              <Tooltip title=\"排他网关\">\n                <Button\n                  size=\"small\"\n                  className=\"h-16 flex flex-col items-center justify-center\"\n                  onClick={() => addElement(\"exclusiveGateway\", 100, 100)}\n                >\n                  <GitBranch className=\"w-5 h-5 text-yellow-500 mb-1\" />\n                  <span className=\"text-xs\">排他网关</span>\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"并行网关\">\n                <Button\n                  size=\"small\"\n                  className=\"h-16 flex flex-col items-center justify-center\"\n                  onClick={() => addElement(\"parallelGateway\", 100, 100)}\n                >\n                  <GitMerge className=\"w-5 h-5 text-cyan-500 mb-1\" />\n                  <span className=\"text-xs\">并行网关</span>\n                </Button>\n              </Tooltip>\n            </div>\n          </div>\n        </div>\n\n        {/* 主画布区域 */}\n        <div className=\"flex-1 flex flex-col\">\n          <Tabs\n            activeKey={activeTab}\n            onChange={setActiveTab}\n            className=\"flex-1 flex flex-col\"\n            tabBarStyle={{ margin: 0, padding: \"0 16px\" }}\n            items={[\n              {\n                key: \"design\",\n                label: \"设计器\",\n                children: (\n                  <div\n                    ref={canvasRef}\n                    className=\"flex-1 bg-gray-100 relative overflow-auto\"\n                    style={{\n                      transform: `scale(${zoom})`,\n                      transformOrigin: \"top left\",\n                    }}\n                    onClick={handleCanvasClick}\n                  >\n                    {/* 网格背景 */}\n                    <div className=\"absolute inset-0 bg-grid-pattern opacity-20\" />\n\n                    {/* 元素 */}\n                    {elements.map((element) => (\n                      <div\n                        key={element.id}\n                        className={`absolute border-2 rounded cursor-move ${\n                          selectedElement?.id === element.id\n                            ? \"border-blue-500 shadow-lg\"\n                            : \"border-gray-300 hover:border-gray-400\"\n                        }`}\n                        style={{\n                          left: element.x,\n                          top: element.y,\n                          width: element.width,\n                          height: element.height,\n                          backgroundColor: getElementColor(element.type),\n                        }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleElementClick(element);\n                        }}\n                      >\n                        <div className=\"flex items-center justify-center h-full text-white text-xs font-medium\">\n                          {getElementIcon(element.type)}\n                          <span className=\"ml-1\">{element.name}</span>\n                        </div>\n                      </div>\n                    ))}\n\n                    {/* 连接线 */}\n                    {connections.map((connection) => {\n                      const source = elements.find(\n                        (el) => el.id === connection.source\n                      );\n                      const target = elements.find(\n                        (el) => el.id === connection.target\n                      );\n\n                      if (!source || !target) return null;\n\n                      const startX = source.x + (source.width || 0) / 2;\n                      const startY = source.y + (source.height || 0) / 2;\n                      const endX = target.x + (target.width || 0) / 2;\n                      const endY = target.y + (target.height || 0) / 2;\n\n                      return (\n                        <svg\n                          key={connection.id}\n                          className=\"absolute pointer-events-none\"\n                          style={{\n                            left: 0,\n                            top: 0,\n                            width: \"100%\",\n                            height: \"100%\",\n                          }}\n                        >\n                          <line\n                            x1={startX}\n                            y1={startY}\n                            x2={endX}\n                            y2={endY}\n                            stroke=\"#666\"\n                            strokeWidth=\"2\"\n                            markerEnd=\"url(#arrowhead)\"\n                          />\n                          <defs>\n                            <marker\n                              id=\"arrowhead\"\n                              markerWidth=\"10\"\n                              markerHeight=\"7\"\n                              refX=\"9\"\n                              refY=\"3.5\"\n                              orient=\"auto\"\n                            >\n                              <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#666\" />\n                            </marker>\n                          </defs>\n                        </svg>\n                      );\n                    })}\n                  </div>\n                ),\n              },\n              {\n                key: \"properties\",\n                label: \"属性\",\n                children: (\n                  <div className=\"p-4\">\n                    {selectedElement ? (\n                      <div>\n                        <Title level={5}>元素属性</Title>\n                        <Form layout=\"vertical\">\n                          <Form.Item label=\"名称\">\n                            <Input\n                              value={selectedElement.name}\n                              onChange={(e) =>\n                                updateElement(selectedElement.id, {\n                                  name: e.target.value,\n                                })\n                              }\n                            />\n                          </Form.Item>\n\n                          {selectedElement.type === \"userTask\" && (\n                            <>\n                              <Form.Item label=\"处理人\">\n                                <Input\n                                  value={\n                                    selectedElement.properties?.assignee || \"\"\n                                  }\n                                  onChange={(e) =>\n                                    updateElement(selectedElement.id, {\n                                      properties: {\n                                        ...selectedElement.properties,\n                                        assignee: e.target.value,\n                                      },\n                                    })\n                                  }\n                                  placeholder=\"输入用户ID或用户名\"\n                                />\n                              </Form.Item>\n                              <Form.Item label=\"候选用户\">\n                                <Input\n                                  value={\n                                    selectedElement.properties\n                                      ?.candidateUsers || \"\"\n                                  }\n                                  onChange={(e) =>\n                                    updateElement(selectedElement.id, {\n                                      properties: {\n                                        ...selectedElement.properties,\n                                        candidateUsers: e.target.value,\n                                      },\n                                    })\n                                  }\n                                  placeholder=\"多个用户用逗号分隔\"\n                                />\n                              </Form.Item>\n                              <Form.Item label=\"候选组\">\n                                <Input\n                                  value={\n                                    selectedElement.properties\n                                      ?.candidateGroups || \"\"\n                                  }\n                                  onChange={(e) =>\n                                    updateElement(selectedElement.id, {\n                                      properties: {\n                                        ...selectedElement.properties,\n                                        candidateGroups: e.target.value,\n                                      },\n                                    })\n                                  }\n                                  placeholder=\"多个组用逗号分隔\"\n                                />\n                              </Form.Item>\n                            </>\n                          )}\n\n                          {selectedElement.type === \"serviceTask\" && (\n                            <Form.Item label=\"服务类\">\n                              <Input\n                                value={selectedElement.properties?.class || \"\"}\n                                onChange={(e) =>\n                                  updateElement(selectedElement.id, {\n                                    properties: {\n                                      ...selectedElement.properties,\n                                      class: e.target.value,\n                                    },\n                                  })\n                                }\n                                placeholder=\"输入服务类名\"\n                              />\n                            </Form.Item>\n                          )}\n\n                          <Form.Item>\n                            <Space>\n                              <Button\n                                type=\"primary\"\n                                danger\n                                icon={<Trash2 className=\"w-4 h-4\" />}\n                                onClick={() =>\n                                  deleteElement(selectedElement.id)\n                                }\n                              >\n                                删除元素\n                              </Button>\n                            </Space>\n                          </Form.Item>\n                        </Form>\n                      </div>\n                    ) : (\n                      <div className=\"text-center text-gray-500 py-8\">\n                        <FileText className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n                        <p>选择一个元素来编辑其属性</p>\n                      </div>\n                    )}\n                  </div>\n                ),\n              },\n              {\n                key: \"code\",\n                label: \"代码\",\n                children: (\n                  <div className=\"p-4\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <Title level={5}>BPMN XML</Title>\n                      <Space>\n                        <Button icon={<Copy className=\"w-4 h-4\" />}>\n                          复制\n                        </Button>\n                        <Button icon={<Download className=\"w-4 h-4\" />}>\n                          导出\n                        </Button>\n                      </Space>\n                    </div>\n                    <pre className=\"bg-gray-100 p-4 rounded text-sm overflow-auto max-h-96\">\n                      {generateBPMNXML()}\n                    </pre>\n                  </div>\n                ),\n              },\n            ]}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"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","ignoreList":[]}