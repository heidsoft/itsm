f0faca3f1c69e3dd74948885f17e2c80
"use strict";

/* istanbul ignore next */
function cov_1rf5uorpvp() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/ui/VirtualList.tsx";
  var hash = "f6fa5b6a9d5d41f66a54b2a75de4de3f36aceee9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/ui/VirtualList.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 27
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "6": {
        start: {
          line: 14,
          column: 39
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "7": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "8": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "9": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "11": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 19
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "15": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 53
        }
      },
      "16": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "18": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 37,
          column: 32
        },
        end: {
          line: 37,
          column: 88
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "21": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "22": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 95
        }
      },
      "23": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "24": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 57
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "26": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "27": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 31
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 18
        }
      },
      "30": {
        start: {
          line: 55,
          column: 38
        },
        end: {
          line: 55,
          column: 61
        }
      },
      "31": {
        start: {
          line: 56,
          column: 29
        },
        end: {
          line: 56,
          column: 53
        }
      },
      "32": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 57,
          column: 49
        }
      },
      "33": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 58,
          column: 64
        }
      },
      "34": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 59,
          column: 81
        }
      },
      "35": {
        start: {
          line: 60,
          column: 21
        },
        end: {
          line: 60,
          column: 89
        }
      },
      "36": {
        start: {
          line: 61,
          column: 25
        },
        end: {
          line: 76,
          column: 6
        }
      },
      "37": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "38": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "39": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 30
        }
      },
      "40": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "41": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 22
        }
      },
      "42": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "43": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 48
        }
      },
      "44": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 103,
          column: 7
        }
      },
      "45": {
        start: {
          line: 92,
          column: 81
        },
        end: {
          line: 101,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 47
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 17,
            column: 40
          }
        },
        loc: {
          start: {
            line: 17,
            column: 61
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 34
          }
        },
        loc: {
          start: {
            line: 21,
            column: 53
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "VirtualList",
        decl: {
          start: {
            line: 54,
            column: 9
          },
          end: {
            line: 54,
            column: 20
          }
        },
        loc: {
          start: {
            line: 54,
            column: 103
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 61,
            column: 45
          },
          end: {
            line: 61,
            column: 46
          }
        },
        loc: {
          start: {
            line: 61,
            column: 49
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 61
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 77,
            column: 25
          },
          end: {
            line: 77,
            column: 26
          }
        },
        loc: {
          start: {
            line: 77,
            column: 30
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 77
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 92,
            column: 39
          },
          end: {
            line: 92,
            column: 40
          }
        },
        loc: {
          start: {
            line: 92,
            column: 81
          },
          end: {
            line: 101,
            column: 25
          }
        },
        line: 92
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 48
          },
          end: {
            line: 18,
            column: 65
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 20
          }
        }, {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 22,
            column: 27
          }
        }, {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 22,
            column: 45
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 47
          }
        }, {
          start: {
            line: 25,
            column: 51
          },
          end: {
            line: 25,
            column: 76
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 13
          }
        }, {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 31
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 53
          }
        }, {
          start: {
            line: 37,
            column: 57
          },
          end: {
            line: 37,
            column: 88
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "10": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 29
          }
        }, {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 39,
            column: 79
          }
        }],
        line: 39
      },
      "11": {
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 40,
            column: 88
          }
        }, {
          start: {
            line: 40,
            column: 91
          },
          end: {
            line: 40,
            column: 95
          }
        }],
        line: 40
      },
      "12": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 45,
            column: 13
          }
        }],
        line: 41
      },
      "13": {
        loc: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 33
          }
        }, {
          start: {
            line: 41,
            column: 37
          },
          end: {
            line: 41,
            column: 45
          }
        }],
        line: 41
      },
      "14": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "15": {
        loc: {
          start: {
            line: 54,
            column: 71
          },
          end: {
            line: 54,
            column: 83
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 82
          },
          end: {
            line: 54,
            column: 83
          }
        }],
        line: 54
      },
      "16": {
        loc: {
          start: {
            line: 54,
            column: 85
          },
          end: {
            line: 54,
            column: 99
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 97
          },
          end: {
            line: 54,
            column: 99
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/components/ui/VirtualList.tsx"],
      sourcesContent: ["import React, { useState, useEffect, useRef, useMemo } from \"react\";\n\ninterface VirtualListProps<T> {\n  items: T[];\n  itemHeight: number;\n  containerHeight: number;\n  renderItem: (item: T, index: number) => React.ReactNode;\n  overscan?: number;\n  className?: string;\n}\n\nexport function VirtualList<T>({\n  items,\n  itemHeight,\n  containerHeight,\n  renderItem,\n  overscan = 5,\n  className = \"\",\n}: VirtualListProps<T>) {\n  const [scrollTop, setScrollTop] = useState(0);\n  const scrollElementRef = useRef<HTMLDivElement>(null);\n\n  const totalHeight = items.length * itemHeight;\n  const visibleCount = Math.ceil(containerHeight / itemHeight);\n  const startIndex = Math.max(0, Math.floor(scrollTop / itemHeight) - overscan);\n  const endIndex = Math.min(\n    items.length - 1,\n    startIndex + visibleCount + overscan * 2\n  );\n\n  const visibleItems = useMemo(() => {\n    const result = [];\n    for (let i = startIndex; i <= endIndex; i++) {\n      result.push({\n        index: i,\n        item: items[i],\n        offsetY: i * itemHeight,\n      });\n    }\n    return result;\n  }, [items, startIndex, endIndex, itemHeight]);\n\n  const handleScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    setScrollTop(e.currentTarget.scrollTop);\n  };\n\n  return (\n    <div\n      ref={scrollElementRef}\n      className={`overflow-auto ${className}`}\n      style={{ height: containerHeight }}\n      onScroll={handleScroll}\n    >\n      <div style={{ height: totalHeight, position: \"relative\" }}>\n        {visibleItems.map(({ index, item, offsetY }) => (\n          <div\n            key={index}\n            style={{\n              position: \"absolute\",\n              top: offsetY,\n              left: 0,\n              right: 0,\n              height: itemHeight,\n            }}\n          >\n            {renderItem(item, index)}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],
      names: ["VirtualList", "items", "itemHeight", "containerHeight", "renderItem", "overscan", "className", "scrollTop", "setScrollTop", "useState", "scrollElementRef", "useRef", "totalHeight", "length", "visibleCount", "Math", "ceil", "startIndex", "max", "floor", "endIndex", "min", "visibleItems", "useMemo", "result", "i", "push", "index", "item", "offsetY", "handleScroll", "e", "currentTarget", "div", "ref", "style", "height", "onScroll", "position", "map", "top", "left", "right"],
      mappings: ";;;;+BAWgBA;;;eAAAA;;;;+DAX4C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWrD,SAASA,YAAe,EAC7BC,KAAK,EACLC,UAAU,EACVC,eAAe,EACfC,UAAU,EACVC,WAAW,CAAC,EACZC,YAAY,EAAE,EACM;IACpB,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAC3C,MAAMC,mBAAmBC,IAAAA,aAAM,EAAiB;IAEhD,MAAMC,cAAcX,MAAMY,MAAM,GAAGX;IACnC,MAAMY,eAAeC,KAAKC,IAAI,CAACb,kBAAkBD;IACjD,MAAMe,aAAaF,KAAKG,GAAG,CAAC,GAAGH,KAAKI,KAAK,CAACZ,YAAYL,cAAcG;IACpE,MAAMe,WAAWL,KAAKM,GAAG,CACvBpB,MAAMY,MAAM,GAAG,GACfI,aAAaH,eAAeT,WAAW;IAGzC,MAAMiB,eAAeC,IAAAA,cAAO,EAAC;QAC3B,MAAMC,SAAS,EAAE;QACjB,IAAK,IAAIC,IAAIR,YAAYQ,KAAKL,UAAUK,IAAK;YAC3CD,OAAOE,IAAI,CAAC;gBACVC,OAAOF;gBACPG,MAAM3B,KAAK,CAACwB,EAAE;gBACdI,SAASJ,IAAIvB;YACf;QACF;QACA,OAAOsB;IACT,GAAG;QAACvB;QAAOgB;QAAYG;QAAUlB;KAAW;IAE5C,MAAM4B,eAAe,CAACC;QACpBvB,aAAauB,EAAEC,aAAa,CAACzB,SAAS;IACxC;IAEA,qBACE,qBAAC0B;QACCC,KAAKxB;QACLJ,WAAW,CAAC,cAAc,EAAEA,WAAW;QACvC6B,OAAO;YAAEC,QAAQjC;QAAgB;QACjCkC,UAAUP;kBAEV,cAAA,qBAACG;YAAIE,OAAO;gBAAEC,QAAQxB;gBAAa0B,UAAU;YAAW;sBACrDhB,aAAaiB,GAAG,CAAC,CAAC,EAAEZ,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAE,iBACzC,qBAACI;oBAECE,OAAO;wBACLG,UAAU;wBACVE,KAAKX;wBACLY,MAAM;wBACNC,OAAO;wBACPN,QAAQlC;oBACV;8BAECE,WAAWwB,MAAMD;mBATbA;;;AAejB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f6fa5b6a9d5d41f66a54b2a75de4de3f36aceee9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rf5uorpvp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rf5uorpvp();
cov_1rf5uorpvp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1rf5uorpvp().s[1]++;
Object.defineProperty(exports, "VirtualList", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1rf5uorpvp().f[0]++;
    cov_1rf5uorpvp().s[2]++;
    return VirtualList;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1rf5uorpvp().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1rf5uorpvp().s[4]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1rf5uorpvp().f[1]++;
  cov_1rf5uorpvp().s[5]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1rf5uorpvp().b[0][0]++;
    cov_1rf5uorpvp().s[6]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1rf5uorpvp().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().s[7]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().s[8]++, new WeakMap());
  /* istanbul ignore next */
  cov_1rf5uorpvp().s[9]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1rf5uorpvp().f[2]++;
    cov_1rf5uorpvp().s[10]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1rf5uorpvp().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1rf5uorpvp().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1rf5uorpvp().f[3]++;
  cov_1rf5uorpvp().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_1rf5uorpvp().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1rf5uorpvp().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1rf5uorpvp().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1rf5uorpvp().b[2][0]++;
    cov_1rf5uorpvp().s[12]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1rf5uorpvp().b[2][1]++;
  }
  cov_1rf5uorpvp().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_1rf5uorpvp().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1rf5uorpvp().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1rf5uorpvp().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1rf5uorpvp().b[4][0]++;
    cov_1rf5uorpvp().s[14]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1rf5uorpvp().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().s[15]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1rf5uorpvp().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_1rf5uorpvp().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1rf5uorpvp().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1rf5uorpvp().b[6][0]++;
    cov_1rf5uorpvp().s[17]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1rf5uorpvp().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().s[18]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().s[19]++,
  /* istanbul ignore next */
  (cov_1rf5uorpvp().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1rf5uorpvp().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1rf5uorpvp().s[20]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1rf5uorpvp().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_1rf5uorpvp().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1rf5uorpvp().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1rf5uorpvp().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1rf5uorpvp().s[22]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1rf5uorpvp().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1rf5uorpvp().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1rf5uorpvp().s[23]++;
      if (
      /* istanbul ignore next */
      (cov_1rf5uorpvp().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1rf5uorpvp().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1rf5uorpvp().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1rf5uorpvp().b[12][0]++;
        cov_1rf5uorpvp().s[24]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1rf5uorpvp().b[12][1]++;
        cov_1rf5uorpvp().s[25]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1rf5uorpvp().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1rf5uorpvp().s[26]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1rf5uorpvp().s[27]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1rf5uorpvp().b[14][0]++;
    cov_1rf5uorpvp().s[28]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1rf5uorpvp().b[14][1]++;
  }
  cov_1rf5uorpvp().s[29]++;
  return newObj;
}
function VirtualList({
  items,
  itemHeight,
  containerHeight,
  renderItem,
  overscan =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().b[15][0]++, 5),
  className =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().b[16][0]++, "")
}) {
  /* istanbul ignore next */
  cov_1rf5uorpvp().f[4]++;
  const [scrollTop, setScrollTop] =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().s[30]++, (0, _react.useState)(0));
  const scrollElementRef =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().s[31]++, (0, _react.useRef)(null));
  const totalHeight =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().s[32]++, items.length * itemHeight);
  const visibleCount =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().s[33]++, Math.ceil(containerHeight / itemHeight));
  const startIndex =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().s[34]++, Math.max(0, Math.floor(scrollTop / itemHeight) - overscan));
  const endIndex =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().s[35]++, Math.min(items.length - 1, startIndex + visibleCount + overscan * 2));
  const visibleItems =
  /* istanbul ignore next */
  (cov_1rf5uorpvp().s[36]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1rf5uorpvp().f[5]++;
    const result =
    /* istanbul ignore next */
    (cov_1rf5uorpvp().s[37]++, []);
    /* istanbul ignore next */
    cov_1rf5uorpvp().s[38]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1rf5uorpvp().s[39]++, startIndex); i <= endIndex; i++) {
      /* istanbul ignore next */
      cov_1rf5uorpvp().s[40]++;
      result.push({
        index: i,
        item: items[i],
        offsetY: i * itemHeight
      });
    }
    /* istanbul ignore next */
    cov_1rf5uorpvp().s[41]++;
    return result;
  }, [items, startIndex, endIndex, itemHeight]));
  /* istanbul ignore next */
  cov_1rf5uorpvp().s[42]++;
  const handleScroll = e => {
    /* istanbul ignore next */
    cov_1rf5uorpvp().f[6]++;
    cov_1rf5uorpvp().s[43]++;
    setScrollTop(e.currentTarget.scrollTop);
  };
  /* istanbul ignore next */
  cov_1rf5uorpvp().s[44]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    ref: scrollElementRef,
    className: `overflow-auto ${className}`,
    style: {
      height: containerHeight
    },
    onScroll: handleScroll,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      style: {
        height: totalHeight,
        position: "relative"
      },
      children: visibleItems.map(({
        index,
        item,
        offsetY
      }) => {
        /* istanbul ignore next */
        cov_1rf5uorpvp().f[7]++;
        cov_1rf5uorpvp().s[45]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          style: {
            position: "absolute",
            top: offsetY,
            left: 0,
            right: 0,
            height: itemHeight
          },
          children: renderItem(item, index)
        }, index);
      })
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,