e2b22cd0b03b01bf52bd158f9540caa4
"use strict";

/* istanbul ignore next */
function cov_2daupivxxd() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/services/change-service.ts";
  var hash = "4f1e1cd29cd02f20f8b80f59f51ab6bd7b60a4bf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/services/change-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 29
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 43
        }
      },
      "4": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 50
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 77
        }
      },
      "6": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 77
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 89
        }
      },
      "8": {
        start: {
          line: 17,
          column: 29
        },
        end: {
          line: 17,
          column: 89
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 98
        }
      },
      "10": {
        start: {
          line: 18,
          column: 53
        },
        end: {
          line: 18,
          column: 98
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 72
        }
      },
      "12": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 72
        }
      },
      "13": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 27,
          column: 10
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "15": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 64
        }
      },
      "16": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 44
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 27
        }
      },
      "18": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "19": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "20": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 64
        }
      },
      "21": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 44
        }
      },
      "22": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 27
        }
      },
      "23": {
        start: {
          line: 52,
          column: 25
        },
        end: {
          line: 60,
          column: 10
        }
      },
      "24": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "25": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 62
        }
      },
      "26": {
        start: {
          line: 64,
          column: 23
        },
        end: {
          line: 64,
          column: 44
        }
      },
      "27": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 27
        }
      },
      "28": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 77,
          column: 10
        }
      },
      "29": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "30": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 62
        }
      },
      "31": {
        start: {
          line: 81,
          column: 23
        },
        end: {
          line: 81,
          column: 44
        }
      },
      "32": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 27
        }
      },
      "33": {
        start: {
          line: 86,
          column: 25
        },
        end: {
          line: 93,
          column: 10
        }
      },
      "34": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "35": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 62
        }
      },
      "36": {
        start: {
          line: 100,
          column: 25
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "37": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "38": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 64
        }
      },
      "39": {
        start: {
          line: 111,
          column: 23
        },
        end: {
          line: 111,
          column: 44
        }
      },
      "40": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 27
        }
      },
      "41": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "42": {
        start: {
          line: 117,
          column: 29
        },
        end: {
          line: 122,
          column: 14
        }
      },
      "43": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 31
        }
      },
      "44": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 25
        }
      },
      "45": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "46": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 55
        }
      },
      "47": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 18
        }
      },
      "48": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "49": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 60
        }
      },
      "50": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 18
        }
      },
      "51": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 60
        }
      },
      "52": {
        start: {
          line: 144,
          column: 22
        },
        end: {
          line: 144,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 29
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 33
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 68
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 27
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 85
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 99
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 24
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 115
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        loc: {
          start: {
            line: 128,
            column: 15
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 128
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 20
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 134
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 17
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 140
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 16,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 16,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 17,
            column: 89
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 17,
            column: 89
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 98
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 98
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 25
          }
        }, {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 18,
            column: 51
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "10": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "11": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "12": {
        loc: {
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 130,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 130,
            column: 48
          }
        }, {
          start: {
            line: 130,
            column: 52
          },
          end: {
            line: 130,
            column: 54
          }
        }],
        line: 130
      },
      "13": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "14": {
        loc: {
          start: {
            line: 136,
            column: 19
          },
          end: {
            line: 136,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 19
          },
          end: {
            line: 136,
            column: 53
          }
        }, {
          start: {
            line: 136,
            column: 57
          },
          end: {
            line: 136,
            column: 59
          }
        }],
        line: 136
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/services/change-service.ts"],
      sourcesContent: ["import { API_BASE_URL } from '../api-config';\n\nexport interface Change {\n  id: number;\n  title: string;\n  description: string;\n  justification: string;\n  type: 'normal' | 'standard' | 'emergency';\n  status: 'draft' | 'pending' | 'approved' | 'rejected' | 'implementing' | 'completed' | 'cancelled';\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  impactScope: 'low' | 'medium' | 'high';\n  riskLevel: 'low' | 'medium' | 'high';\n  assigneeId?: number;\n  assigneeName?: string;\n  createdBy: number;\n  createdByName: string;\n  tenantId: number;\n  plannedStartDate?: string;\n  plannedEndDate?: string;\n  actualStartDate?: string;\n  actualEndDate?: string;\n  implementationPlan: string;\n  rollbackPlan: string;\n  affectedCIs?: string[];\n  relatedTickets?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface CreateChangeRequest {\n  title: string;\n  description: string;\n  justification: string;\n  type: 'normal' | 'standard' | 'emergency';\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  impactScope: 'low' | 'medium' | 'high';\n  riskLevel: 'low' | 'medium' | 'high';\n  plannedStartDate?: string;\n  plannedEndDate?: string;\n  implementationPlan: string;\n  rollbackPlan: string;\n  affectedCIs?: string[];\n  relatedTickets?: string[];\n}\n\nexport interface UpdateChangeRequest extends Partial<CreateChangeRequest> {\n  status?: 'draft' | 'pending' | 'approved' | 'rejected' | 'implementing' | 'completed' | 'cancelled';\n  assigneeId?: number;\n  actualStartDate?: string;\n  actualEndDate?: string;\n}\n\nexport interface ChangeListResponse {\n  changes: Change[];\n  total: number;\n  page: number;\n  pageSize: number;\n  totalPages: number;\n}\n\nexport interface ChangeStats {\n  total: number;\n  draft: number;\n  pending: number;\n  approved: number;\n  implementing: number;\n  completed: number;\n  cancelled: number;\n}\n\nclass ChangeService {\n  private baseUrl = `${API_BASE_URL}/changes`;\n\n  // \u83B7\u53D6\u53D8\u66F4\u5217\u8868\n  async getChanges(params: {\n    page?: number;\n    pageSize?: number;\n    status?: string;\n    search?: string;\n  }): Promise<ChangeListResponse> {\n    const searchParams = new URLSearchParams();\n    if (params.page) searchParams.append('page', params.page.toString());\n    if (params.pageSize) searchParams.append('pageSize', params.pageSize.toString());\n    if (params.status && params.status !== '\u5168\u90E8') searchParams.append('status', params.status);\n    if (params.search) searchParams.append('search', params.search);\n\n    const response = await fetch(`${this.baseUrl}?${searchParams}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`,\n        'X-Tenant-Code': this.getTenantCode(),\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`\u83B7\u53D6\u53D8\u66F4\u5217\u8868\u5931\u8D25: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // \u83B7\u53D6\u53D8\u66F4\u8BE6\u60C5\n  async getChange(id: number): Promise<Change> {\n    const response = await fetch(`${this.baseUrl}/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`,\n        'X-Tenant-Code': this.getTenantCode(),\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`\u83B7\u53D6\u53D8\u66F4\u8BE6\u60C5\u5931\u8D25: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // \u521B\u5EFA\u53D8\u66F4\n  async createChange(data: CreateChangeRequest): Promise<Change> {\n    const response = await fetch(this.baseUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`,\n        'X-Tenant-Code': this.getTenantCode(),\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      throw new Error(`\u521B\u5EFA\u53D8\u66F4\u5931\u8D25: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // \u66F4\u65B0\u53D8\u66F4\n  async updateChange(id: number, data: UpdateChangeRequest): Promise<Change> {\n    const response = await fetch(`${this.baseUrl}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`,\n        'X-Tenant-Code': this.getTenantCode(),\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      throw new Error(`\u66F4\u65B0\u53D8\u66F4\u5931\u8D25: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // \u5220\u9664\u53D8\u66F4\n  async deleteChange(id: number): Promise<void> {\n    const response = await fetch(`${this.baseUrl}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`,\n        'X-Tenant-Code': this.getTenantCode(),\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`\u5220\u9664\u53D8\u66F4\u5931\u8D25: ${response.statusText}`);\n    }\n  }\n\n  // \u83B7\u53D6\u53D8\u66F4\u7EDF\u8BA1\n  async getChangeStats(): Promise<ChangeStats> {\n    const response = await fetch(`${this.baseUrl}/stats`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`,\n        'X-Tenant-Code': this.getTenantCode(),\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`\u83B7\u53D6\u53D8\u66F4\u7EDF\u8BA1\u5931\u8D25: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // \u5065\u5EB7\u68C0\u67E5\n  async healthCheck(): Promise<boolean> {\n    try {\n      const response = await fetch(`${apiConfig.baseUrl}/healthz`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return response.ok;\n    } catch {\n      return false;\n    }\n  }\n\n  private getToken(): string {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('token') || '';\n    }\n    return '';\n  }\n\n  private getTenantCode(): string {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('tenantCode') || '';\n    }\n    return '';\n  }\n}\n\nexport const changeService = new ChangeService();\n"],
      names: ["changeService", "ChangeService", "getChanges", "params", "searchParams", "URLSearchParams", "page", "append", "toString", "pageSize", "status", "search", "response", "fetch", "baseUrl", "method", "headers", "getToken", "getTenantCode", "ok", "Error", "statusText", "result", "json", "data", "getChange", "id", "createChange", "body", "JSON", "stringify", "updateChange", "deleteChange", "getChangeStats", "healthCheck", "apiConfig", "window", "localStorage", "getItem", "API_BASE_URL"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4f1e1cd29cd02f20f8b80f59f51ab6bd7b60a4bf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2daupivxxd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2daupivxxd();
cov_2daupivxxd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2daupivxxd().s[1]++;
Object.defineProperty(exports, "changeService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2daupivxxd().f[0]++;
    cov_2daupivxxd().s[2]++;
    return changeService;
  }
});
const _apiconfig =
/* istanbul ignore next */
(cov_2daupivxxd().s[3]++, require("../api-config"));
class ChangeService {
  // 获取变更列表
  async getChanges(params) {
    /* istanbul ignore next */
    cov_2daupivxxd().f[1]++;
    const searchParams =
    /* istanbul ignore next */
    (cov_2daupivxxd().s[4]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_2daupivxxd().s[5]++;
    if (params.page) {
      /* istanbul ignore next */
      cov_2daupivxxd().b[0][0]++;
      cov_2daupivxxd().s[6]++;
      searchParams.append('page', params.page.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2daupivxxd().b[0][1]++;
    }
    cov_2daupivxxd().s[7]++;
    if (params.pageSize) {
      /* istanbul ignore next */
      cov_2daupivxxd().b[1][0]++;
      cov_2daupivxxd().s[8]++;
      searchParams.append('pageSize', params.pageSize.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2daupivxxd().b[1][1]++;
    }
    cov_2daupivxxd().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_2daupivxxd().b[3][0]++, params.status) &&
    /* istanbul ignore next */
    (cov_2daupivxxd().b[3][1]++, params.status !== '全部')) {
      /* istanbul ignore next */
      cov_2daupivxxd().b[2][0]++;
      cov_2daupivxxd().s[10]++;
      searchParams.append('status', params.status);
    } else
    /* istanbul ignore next */
    {
      cov_2daupivxxd().b[2][1]++;
    }
    cov_2daupivxxd().s[11]++;
    if (params.search) {
      /* istanbul ignore next */
      cov_2daupivxxd().b[4][0]++;
      cov_2daupivxxd().s[12]++;
      searchParams.append('search', params.search);
    } else
    /* istanbul ignore next */
    {
      cov_2daupivxxd().b[4][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_2daupivxxd().s[13]++, await fetch(`${this.baseUrl}?${searchParams}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getToken()}`,
        'X-Tenant-Code': this.getTenantCode()
      }
    }));
    /* istanbul ignore next */
    cov_2daupivxxd().s[14]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2daupivxxd().b[5][0]++;
      cov_2daupivxxd().s[15]++;
      throw new Error(`获取变更列表失败: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2daupivxxd().b[5][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_2daupivxxd().s[16]++, await response.json());
    /* istanbul ignore next */
    cov_2daupivxxd().s[17]++;
    return result.data;
  }
  // 获取变更详情
  async getChange(id) {
    /* istanbul ignore next */
    cov_2daupivxxd().f[2]++;
    const response =
    /* istanbul ignore next */
    (cov_2daupivxxd().s[18]++, await fetch(`${this.baseUrl}/${id}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getToken()}`,
        'X-Tenant-Code': this.getTenantCode()
      }
    }));
    /* istanbul ignore next */
    cov_2daupivxxd().s[19]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2daupivxxd().b[6][0]++;
      cov_2daupivxxd().s[20]++;
      throw new Error(`获取变更详情失败: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2daupivxxd().b[6][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_2daupivxxd().s[21]++, await response.json());
    /* istanbul ignore next */
    cov_2daupivxxd().s[22]++;
    return result.data;
  }
  // 创建变更
  async createChange(data) {
    /* istanbul ignore next */
    cov_2daupivxxd().f[3]++;
    const response =
    /* istanbul ignore next */
    (cov_2daupivxxd().s[23]++, await fetch(this.baseUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getToken()}`,
        'X-Tenant-Code': this.getTenantCode()
      },
      body: JSON.stringify(data)
    }));
    /* istanbul ignore next */
    cov_2daupivxxd().s[24]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2daupivxxd().b[7][0]++;
      cov_2daupivxxd().s[25]++;
      throw new Error(`创建变更失败: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2daupivxxd().b[7][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_2daupivxxd().s[26]++, await response.json());
    /* istanbul ignore next */
    cov_2daupivxxd().s[27]++;
    return result.data;
  }
  // 更新变更
  async updateChange(id, data) {
    /* istanbul ignore next */
    cov_2daupivxxd().f[4]++;
    const response =
    /* istanbul ignore next */
    (cov_2daupivxxd().s[28]++, await fetch(`${this.baseUrl}/${id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getToken()}`,
        'X-Tenant-Code': this.getTenantCode()
      },
      body: JSON.stringify(data)
    }));
    /* istanbul ignore next */
    cov_2daupivxxd().s[29]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2daupivxxd().b[8][0]++;
      cov_2daupivxxd().s[30]++;
      throw new Error(`更新变更失败: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2daupivxxd().b[8][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_2daupivxxd().s[31]++, await response.json());
    /* istanbul ignore next */
    cov_2daupivxxd().s[32]++;
    return result.data;
  }
  // 删除变更
  async deleteChange(id) {
    /* istanbul ignore next */
    cov_2daupivxxd().f[5]++;
    const response =
    /* istanbul ignore next */
    (cov_2daupivxxd().s[33]++, await fetch(`${this.baseUrl}/${id}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getToken()}`,
        'X-Tenant-Code': this.getTenantCode()
      }
    }));
    /* istanbul ignore next */
    cov_2daupivxxd().s[34]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2daupivxxd().b[9][0]++;
      cov_2daupivxxd().s[35]++;
      throw new Error(`删除变更失败: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2daupivxxd().b[9][1]++;
    }
  }
  // 获取变更统计
  async getChangeStats() {
    /* istanbul ignore next */
    cov_2daupivxxd().f[6]++;
    const response =
    /* istanbul ignore next */
    (cov_2daupivxxd().s[36]++, await fetch(`${this.baseUrl}/stats`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.getToken()}`,
        'X-Tenant-Code': this.getTenantCode()
      }
    }));
    /* istanbul ignore next */
    cov_2daupivxxd().s[37]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2daupivxxd().b[10][0]++;
      cov_2daupivxxd().s[38]++;
      throw new Error(`获取变更统计失败: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2daupivxxd().b[10][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_2daupivxxd().s[39]++, await response.json());
    /* istanbul ignore next */
    cov_2daupivxxd().s[40]++;
    return result.data;
  }
  // 健康检查
  async healthCheck() {
    /* istanbul ignore next */
    cov_2daupivxxd().f[7]++;
    cov_2daupivxxd().s[41]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2daupivxxd().s[42]++, await fetch(`${apiConfig.baseUrl}/healthz`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      /* istanbul ignore next */
      cov_2daupivxxd().s[43]++;
      return response.ok;
    } catch {
      /* istanbul ignore next */
      cov_2daupivxxd().s[44]++;
      return false;
    }
  }
  getToken() {
    /* istanbul ignore next */
    cov_2daupivxxd().f[8]++;
    cov_2daupivxxd().s[45]++;
    if (typeof window !== 'undefined') {
      /* istanbul ignore next */
      cov_2daupivxxd().b[11][0]++;
      cov_2daupivxxd().s[46]++;
      return /* istanbul ignore next */(cov_2daupivxxd().b[12][0]++, localStorage.getItem('token')) ||
      /* istanbul ignore next */
      (cov_2daupivxxd().b[12][1]++, '');
    } else
    /* istanbul ignore next */
    {
      cov_2daupivxxd().b[11][1]++;
    }
    cov_2daupivxxd().s[47]++;
    return '';
  }
  getTenantCode() {
    /* istanbul ignore next */
    cov_2daupivxxd().f[9]++;
    cov_2daupivxxd().s[48]++;
    if (typeof window !== 'undefined') {
      /* istanbul ignore next */
      cov_2daupivxxd().b[13][0]++;
      cov_2daupivxxd().s[49]++;
      return /* istanbul ignore next */(cov_2daupivxxd().b[14][0]++, localStorage.getItem('tenantCode')) ||
      /* istanbul ignore next */
      (cov_2daupivxxd().b[14][1]++, '');
    } else
    /* istanbul ignore next */
    {
      cov_2daupivxxd().b[13][1]++;
    }
    cov_2daupivxxd().s[50]++;
    return '';
  }
  constructor() {
    /* istanbul ignore next */
    cov_2daupivxxd().f[10]++;
    cov_2daupivxxd().s[51]++;
    this.baseUrl = `${_apiconfig.API_BASE_URL}/changes`;
  }
}
const changeService =
/* istanbul ignore next */
(cov_2daupivxxd().s[52]++, new ChangeService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,