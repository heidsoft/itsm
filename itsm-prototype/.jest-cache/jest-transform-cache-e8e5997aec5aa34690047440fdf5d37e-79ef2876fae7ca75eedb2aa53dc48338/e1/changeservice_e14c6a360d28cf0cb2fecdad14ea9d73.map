{"version":3,"names":["cov_2daupivxxd","actualCoverage","s","changeService","ChangeService","getChanges","params","f","searchParams","URLSearchParams","page","b","append","toString","pageSize","status","search","response","fetch","baseUrl","method","headers","getToken","getTenantCode","ok","Error","statusText","result","json","data","getChange","id","createChange","body","JSON","stringify","updateChange","deleteChange","getChangeStats","healthCheck","apiConfig","window","localStorage","getItem","_apiconfig","API_BASE_URL"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/services/change-service.ts"],"sourcesContent":["import { API_BASE_URL } from '../api-config';\n\nexport interface Change {\n  id: number;\n  title: string;\n  description: string;\n  justification: string;\n  type: 'normal' | 'standard' | 'emergency';\n  status: 'draft' | 'pending' | 'approved' | 'rejected' | 'implementing' | 'completed' | 'cancelled';\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  impactScope: 'low' | 'medium' | 'high';\n  riskLevel: 'low' | 'medium' | 'high';\n  assigneeId?: number;\n  assigneeName?: string;\n  createdBy: number;\n  createdByName: string;\n  tenantId: number;\n  plannedStartDate?: string;\n  plannedEndDate?: string;\n  actualStartDate?: string;\n  actualEndDate?: string;\n  implementationPlan: string;\n  rollbackPlan: string;\n  affectedCIs?: string[];\n  relatedTickets?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface CreateChangeRequest {\n  title: string;\n  description: string;\n  justification: string;\n  type: 'normal' | 'standard' | 'emergency';\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  impactScope: 'low' | 'medium' | 'high';\n  riskLevel: 'low' | 'medium' | 'high';\n  plannedStartDate?: string;\n  plannedEndDate?: string;\n  implementationPlan: string;\n  rollbackPlan: string;\n  affectedCIs?: string[];\n  relatedTickets?: string[];\n}\n\nexport interface UpdateChangeRequest extends Partial<CreateChangeRequest> {\n  status?: 'draft' | 'pending' | 'approved' | 'rejected' | 'implementing' | 'completed' | 'cancelled';\n  assigneeId?: number;\n  actualStartDate?: string;\n  actualEndDate?: string;\n}\n\nexport interface ChangeListResponse {\n  changes: Change[];\n  total: number;\n  page: number;\n  pageSize: number;\n  totalPages: number;\n}\n\nexport interface ChangeStats {\n  total: number;\n  draft: number;\n  pending: number;\n  approved: number;\n  implementing: number;\n  completed: number;\n  cancelled: number;\n}\n\nclass ChangeService {\n  private baseUrl = `${API_BASE_URL}/changes`;\n\n  // 获取变更列表\n  async getChanges(params: {\n    page?: number;\n    pageSize?: number;\n    status?: string;\n    search?: string;\n  }): Promise<ChangeListResponse> {\n    const searchParams = new URLSearchParams();\n    if (params.page) searchParams.append('page', params.page.toString());\n    if (params.pageSize) searchParams.append('pageSize', params.pageSize.toString());\n    if (params.status && params.status !== '全部') searchParams.append('status', params.status);\n    if (params.search) searchParams.append('search', params.search);\n\n    const response = await fetch(`${this.baseUrl}?${searchParams}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`,\n        'X-Tenant-Code': this.getTenantCode(),\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`获取变更列表失败: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // 获取变更详情\n  async getChange(id: number): Promise<Change> {\n    const response = await fetch(`${this.baseUrl}/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`,\n        'X-Tenant-Code': this.getTenantCode(),\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`获取变更详情失败: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // 创建变更\n  async createChange(data: CreateChangeRequest): Promise<Change> {\n    const response = await fetch(this.baseUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`,\n        'X-Tenant-Code': this.getTenantCode(),\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      throw new Error(`创建变更失败: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // 更新变更\n  async updateChange(id: number, data: UpdateChangeRequest): Promise<Change> {\n    const response = await fetch(`${this.baseUrl}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`,\n        'X-Tenant-Code': this.getTenantCode(),\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      throw new Error(`更新变更失败: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // 删除变更\n  async deleteChange(id: number): Promise<void> {\n    const response = await fetch(`${this.baseUrl}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`,\n        'X-Tenant-Code': this.getTenantCode(),\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`删除变更失败: ${response.statusText}`);\n    }\n  }\n\n  // 获取变更统计\n  async getChangeStats(): Promise<ChangeStats> {\n    const response = await fetch(`${this.baseUrl}/stats`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`,\n        'X-Tenant-Code': this.getTenantCode(),\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`获取变更统计失败: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    return result.data;\n  }\n\n  // 健康检查\n  async healthCheck(): Promise<boolean> {\n    try {\n      const response = await fetch(`${apiConfig.baseUrl}/healthz`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return response.ok;\n    } catch {\n      return false;\n    }\n  }\n\n  private getToken(): string {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('token') || '';\n    }\n    return '';\n  }\n\n  private getTenantCode(): string {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('tenantCode') || '';\n    }\n    return '';\n  }\n}\n\nexport const changeService = new ChangeService();\n"],"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","ignoreList":[]}