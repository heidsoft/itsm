50ee26bbf7172c222e4e5a96da65037a
'use client';
"use strict";

/* istanbul ignore next */
function cov_4b7uwrp8k() {
  var path = "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/reports/sla-performance/page.tsx";
  var hash = "dd56dfece64adfcdade2df091d64273c738544f2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/reports/sla-performance/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 36
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "7": {
        start: {
          line: 20,
          column: 13
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "8": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 92,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "SLAPerformanceReport",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 29
          }
        },
        loc: {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 37
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 18,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 14
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 32
          }
        }],
        line: 16
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/reports/sla-performance/page.tsx"],
      sourcesContent: ["'use client';\n\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  { name: 'Incident Resolution', breached: 5, met: 95 },\n  { name: 'Service Request Fulfillment', breached: 2, met: 98 },\n  { name: 'Uptime Guarantee', breached: 1, met: 99 },\n];\n\nexport default function SLAPerformanceReport() {\n  return (\n    <div className=\"p-10 bg-gray-50 min-h-full\">\n      <header className=\"mb-8\">\n        <h2 className=\"text-4xl font-bold text-gray-800\">SLA Performance Report</h2>\n        <p className=\"text-gray-500 mt-1\">This report shows the performance of Service Level Agreements (SLAs).</p>\n      </header>\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">SLA Status</h3>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"met\" stackId=\"a\" fill=\"#82ca9d\" />\n            <Bar dataKey=\"breached\" stackId=\"a\" fill=\"#ffc658\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n}"],
      names: ["SLAPerformanceReport", "data", "name", "breached", "met", "div", "className", "header", "h2", "p", "h3", "ResponsiveContainer", "width", "height", "BarChart", "CartesianGrid", "strokeDasharray", "XAxis", "dataKey", "YAxis", "Tooltip", "Legend", "Bar", "stackId", "fill"],
      mappings: "AAAA;;;;;+BAWA;;;eAAwBA;;;;8DATN;0BAC+E;;;;;;AAEjG,MAAMC,OAAO;IACX;QAAEC,MAAM;QAAuBC,UAAU;QAAGC,KAAK;IAAG;IACpD;QAAEF,MAAM;QAA+BC,UAAU;QAAGC,KAAK;IAAG;IAC5D;QAAEF,MAAM;QAAoBC,UAAU;QAAGC,KAAK;IAAG;CAClD;AAEc,SAASJ;IACtB,qBACE,sBAACK;QAAIC,WAAU;;0BACb,sBAACC;gBAAOD,WAAU;;kCAChB,qBAACE;wBAAGF,WAAU;kCAAmC;;kCACjD,qBAACG;wBAAEH,WAAU;kCAAqB;;;;0BAEpC,sBAACD;gBAAIC,WAAU;;kCACb,qBAACI;wBAAGJ,WAAU;kCAA2C;;kCACzD,qBAACK,6BAAmB;wBAACC,OAAM;wBAAOC,QAAQ;kCACxC,cAAA,sBAACC,kBAAQ;4BAACb,MAAMA;;8CACd,qBAACc,uBAAa;oCAACC,iBAAgB;;8CAC/B,qBAACC,eAAK;oCAACC,SAAQ;;8CACf,qBAACC,eAAK;8CACN,qBAACC,iBAAO;8CACR,qBAACC,gBAAM;8CACP,qBAACC,aAAG;oCAACJ,SAAQ;oCAAMK,SAAQ;oCAAIC,MAAK;;8CACpC,qBAACF,aAAG;oCAACJ,SAAQ;oCAAWK,SAAQ;oCAAIC,MAAK;;;;;;;;;AAMrD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dd56dfece64adfcdade2df091d64273c738544f2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4b7uwrp8k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4b7uwrp8k();
cov_4b7uwrp8k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_4b7uwrp8k().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_4b7uwrp8k().f[0]++;
    cov_4b7uwrp8k().s[2]++;
    return SLAPerformanceReport;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_4b7uwrp8k().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_4b7uwrp8k().s[4]++, _interop_require_default(require("react")));
const _recharts =
/* istanbul ignore next */
(cov_4b7uwrp8k().s[5]++, require("recharts"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_4b7uwrp8k().f[1]++;
  cov_4b7uwrp8k().s[6]++;
  return /* istanbul ignore next */(cov_4b7uwrp8k().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_4b7uwrp8k().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_4b7uwrp8k().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_4b7uwrp8k().b[0][1]++, {
    default: obj
  });
}
const data =
/* istanbul ignore next */
(cov_4b7uwrp8k().s[7]++, [{
  name: 'Incident Resolution',
  breached: 5,
  met: 95
}, {
  name: 'Service Request Fulfillment',
  breached: 2,
  met: 98
}, {
  name: 'Uptime Guarantee',
  breached: 1,
  met: 99
}]);
function SLAPerformanceReport() {
  /* istanbul ignore next */
  cov_4b7uwrp8k().f[2]++;
  cov_4b7uwrp8k().s[8]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "p-10 bg-gray-50 min-h-full",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("header", {
      className: "mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-4xl font-bold text-gray-800",
        children: "SLA Performance Report"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-gray-500 mt-1",
        children: "This report shows the performance of Service Level Agreements (SLAs)."
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-white p-6 rounded-lg shadow-md",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-xl font-semibold text-gray-800 mb-4",
        children: "SLA Status"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
        width: "100%",
        height: 300,
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.BarChart, {
          data: data,
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
            strokeDasharray: "3 3"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.XAxis, {
            dataKey: "name"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.YAxis, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Legend, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Bar, {
            dataKey: "met",
            stackId: "a",
            fill: "#82ca9d"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Bar, {
            dataKey: "breached",
            stackId: "a",
            fill: "#ffc658"
          })]
        })
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTTEFQZXJmb3JtYW5jZVJlcG9ydCIsImRhdGEiLCJjb3ZfNGI3dXdycDhrIiwicyIsIm5hbWUiLCJicmVhY2hlZCIsIm1ldCIsImYiLCJfanN4cnVudGltZSIsImpzeHMiLCJjbGFzc05hbWUiLCJqc3giLCJfcmVjaGFydHMiLCJSZXNwb25zaXZlQ29udGFpbmVyIiwid2lkdGgiLCJoZWlnaHQiLCJCYXJDaGFydCIsIkNhcnRlc2lhbkdyaWQiLCJzdHJva2VEYXNoYXJyYXkiLCJYQXhpcyIsImRhdGFLZXkiLCJZQXhpcyIsIlRvb2x0aXAiLCJMZWdlbmQiLCJCYXIiLCJzdGFja0lkIiwiZmlsbCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9oZWlkc29mdC9Eb3dubG9hZHMvcmVzZWFyY2gvaXRzbS9pdHNtLXByb3RvdHlwZS9zcmMvYXBwL3JlcG9ydHMvc2xhLXBlcmZvcm1hbmNlL3BhZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJhckNoYXJ0LCBCYXIsIFhBeGlzLCBZQXhpcywgQ2FydGVzaWFuR3JpZCwgVG9vbHRpcCwgTGVnZW5kLCBSZXNwb25zaXZlQ29udGFpbmVyIH0gZnJvbSAncmVjaGFydHMnO1xuXG5jb25zdCBkYXRhID0gW1xuICB7IG5hbWU6ICdJbmNpZGVudCBSZXNvbHV0aW9uJywgYnJlYWNoZWQ6IDUsIG1ldDogOTUgfSxcbiAgeyBuYW1lOiAnU2VydmljZSBSZXF1ZXN0IEZ1bGZpbGxtZW50JywgYnJlYWNoZWQ6IDIsIG1ldDogOTggfSxcbiAgeyBuYW1lOiAnVXB0aW1lIEd1YXJhbnRlZScsIGJyZWFjaGVkOiAxLCBtZXQ6IDk5IH0sXG5dO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTTEFQZXJmb3JtYW5jZVJlcG9ydCgpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInAtMTAgYmctZ3JheS01MCBtaW4taC1mdWxsXCI+XG4gICAgICA8aGVhZGVyIGNsYXNzTmFtZT1cIm1iLThcIj5cbiAgICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQtNHhsIGZvbnQtYm9sZCB0ZXh0LWdyYXktODAwXCI+U0xBIFBlcmZvcm1hbmNlIFJlcG9ydDwvaDI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtZ3JheS01MDAgbXQtMVwiPlRoaXMgcmVwb3J0IHNob3dzIHRoZSBwZXJmb3JtYW5jZSBvZiBTZXJ2aWNlIExldmVsIEFncmVlbWVudHMgKFNMQXMpLjwvcD5cbiAgICAgIDwvaGVhZGVyPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy13aGl0ZSBwLTYgcm91bmRlZC1sZyBzaGFkb3ctbWRcIj5cbiAgICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQteGwgZm9udC1zZW1pYm9sZCB0ZXh0LWdyYXktODAwIG1iLTRcIj5TTEEgU3RhdHVzPC9oMz5cbiAgICAgICAgPFJlc3BvbnNpdmVDb250YWluZXIgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PXszMDB9PlxuICAgICAgICAgIDxCYXJDaGFydCBkYXRhPXtkYXRhfT5cbiAgICAgICAgICAgIDxDYXJ0ZXNpYW5HcmlkIHN0cm9rZURhc2hhcnJheT1cIjMgM1wiIC8+XG4gICAgICAgICAgICA8WEF4aXMgZGF0YUtleT1cIm5hbWVcIiAvPlxuICAgICAgICAgICAgPFlBeGlzIC8+XG4gICAgICAgICAgICA8VG9vbHRpcCAvPlxuICAgICAgICAgICAgPExlZ2VuZCAvPlxuICAgICAgICAgICAgPEJhciBkYXRhS2V5PVwibWV0XCIgc3RhY2tJZD1cImFcIiBmaWxsPVwiIzgyY2E5ZFwiIC8+XG4gICAgICAgICAgICA8QmFyIGRhdGFLZXk9XCJicmVhY2hlZFwiIHN0YWNrSWQ9XCJhXCIgZmlsbD1cIiNmZmM2NThcIiAvPlxuICAgICAgICAgIDwvQmFyQ2hhcnQ+XG4gICAgICAgIDwvUmVzcG9uc2l2ZUNvbnRhaW5lcj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufSJd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