{"version":3,"names":["cov_58a1oofdf","actualCoverage","s","userPreferences","defaultPreferences","theme","language","timezone","dateFormat","pageSize","sidebarCollapsed","dashboardLayout","notifications","email","browser","mobile","types","tableSettings","UserPreferencesManager","constructor","f","listeners","preferences","loadPreferences","window","b","saved","localStorage","getItem","JSON","parse","savePreferences","setItem","stringify","notifyListeners","get","update","updates","updateTableSettings","tableId","settings","subscribe","listener","push","filter","l","forEach","reset"],"sources":["/Users/heidsoft/Downloads/research/itsm/itsm-prototype/src/app/lib/user-preferences.ts"],"sourcesContent":["interface UserPreferences {\n  theme: 'light' | 'dark' | 'auto';\n  language: 'zh-CN' | 'en-US';\n  timezone: string;\n  dateFormat: string;\n  pageSize: number;\n  sidebarCollapsed: boolean;\n  dashboardLayout: string[];\n  notifications: {\n    email: boolean;\n    browser: boolean;\n    mobile: boolean;\n    types: string[];\n  };\n  tableSettings: Record<string, {\n    columns: string[];\n    sortBy?: string;\n    sortOrder?: 'asc' | 'desc';\n  }>;\n}\n\nconst defaultPreferences: UserPreferences = {\n  theme: 'light',\n  language: 'zh-CN',\n  timezone: 'Asia/Shanghai',\n  dateFormat: 'YYYY-MM-DD HH:mm:ss',\n  pageSize: 20,\n  sidebarCollapsed: false,\n  dashboardLayout: ['kpi', 'charts', 'recent-tickets'],\n  notifications: {\n    email: true,\n    browser: true,\n    mobile: false,\n    types: ['ticket', 'approval', 'alert']\n  },\n  tableSettings: {}\n};\n\nclass UserPreferencesManager {\n  private preferences: UserPreferences;\n  private listeners: ((preferences: UserPreferences) => void)[] = [];\n\n  constructor() {\n    this.preferences = this.loadPreferences();\n  }\n\n  private loadPreferences(): UserPreferences {\n    if (typeof window === 'undefined') return defaultPreferences;\n    \n    try {\n      const saved = localStorage.getItem('user_preferences');\n      return saved ? { ...defaultPreferences, ...JSON.parse(saved) } : defaultPreferences;\n    } catch {\n      return defaultPreferences;\n    }\n  }\n\n  private savePreferences() {\n    if (typeof window === 'undefined') return;\n    localStorage.setItem('user_preferences', JSON.stringify(this.preferences));\n    this.notifyListeners();\n  }\n\n  get(): UserPreferences {\n    return { ...this.preferences };\n  }\n\n  update(updates: Partial<UserPreferences>) {\n    this.preferences = { ...this.preferences, ...updates };\n    this.savePreferences();\n  }\n\n  updateTableSettings(tableId: string, settings: UserPreferences['tableSettings'][string]) {\n    this.preferences.tableSettings[tableId] = settings;\n    this.savePreferences();\n  }\n\n  subscribe(listener: (preferences: UserPreferences) => void) {\n    this.listeners.push(listener);\n    return () => {\n      this.listeners = this.listeners.filter(l => l !== listener);\n    };\n  }\n\n  private notifyListeners() {\n    this.listeners.forEach(listener => listener(this.preferences));\n  }\n\n  reset() {\n    this.preferences = { ...defaultPreferences };\n    this.savePreferences();\n  }\n}\n\nexport const userPreferences = new UserPreferencesManager();"],"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","ignoreList":[]}