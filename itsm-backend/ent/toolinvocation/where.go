// Code generated by ent, DO NOT EDIT.

package toolinvocation

import (
	"itsm-backend/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldCreatedAt, v))
}

// ConversationID applies equality check predicate on the "conversation_id" field. It's identical to ConversationIDEQ.
func ConversationID(v int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldConversationID, v))
}

// ToolName applies equality check predicate on the "tool_name" field. It's identical to ToolNameEQ.
func ToolName(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldToolName, v))
}

// Arguments applies equality check predicate on the "arguments" field. It's identical to ArgumentsEQ.
func Arguments(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldArguments, v))
}

// Result applies equality check predicate on the "result" field. It's identical to ResultEQ.
func Result(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldResult, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldStatus, v))
}

// RequestID applies equality check predicate on the "request_id" field. It's identical to RequestIDEQ.
func RequestID(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldRequestID, v))
}

// NeedsApproval applies equality check predicate on the "needs_approval" field. It's identical to NeedsApprovalEQ.
func NeedsApproval(v bool) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldNeedsApproval, v))
}

// ApprovalState applies equality check predicate on the "approval_state" field. It's identical to ApprovalStateEQ.
func ApprovalState(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldApprovalState, v))
}

// ApprovalReason applies equality check predicate on the "approval_reason" field. It's identical to ApprovalReasonEQ.
func ApprovalReason(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldApprovalReason, v))
}

// ApprovedBy applies equality check predicate on the "approved_by" field. It's identical to ApprovedByEQ.
func ApprovedBy(v int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldApprovedBy, v))
}

// ApprovedAt applies equality check predicate on the "approved_at" field. It's identical to ApprovedAtEQ.
func ApprovedAt(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldApprovedAt, v))
}

// DryRun applies equality check predicate on the "dry_run" field. It's identical to DryRunEQ.
func DryRun(v bool) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldDryRun, v))
}

// Error applies equality check predicate on the "error" field. It's identical to ErrorEQ.
func Error(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldError, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLTE(FieldCreatedAt, v))
}

// ConversationIDEQ applies the EQ predicate on the "conversation_id" field.
func ConversationIDEQ(v int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldConversationID, v))
}

// ConversationIDNEQ applies the NEQ predicate on the "conversation_id" field.
func ConversationIDNEQ(v int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldConversationID, v))
}

// ConversationIDIn applies the In predicate on the "conversation_id" field.
func ConversationIDIn(vs ...int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldConversationID, vs...))
}

// ConversationIDNotIn applies the NotIn predicate on the "conversation_id" field.
func ConversationIDNotIn(vs ...int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldConversationID, vs...))
}

// ToolNameEQ applies the EQ predicate on the "tool_name" field.
func ToolNameEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldToolName, v))
}

// ToolNameNEQ applies the NEQ predicate on the "tool_name" field.
func ToolNameNEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldToolName, v))
}

// ToolNameIn applies the In predicate on the "tool_name" field.
func ToolNameIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldToolName, vs...))
}

// ToolNameNotIn applies the NotIn predicate on the "tool_name" field.
func ToolNameNotIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldToolName, vs...))
}

// ToolNameGT applies the GT predicate on the "tool_name" field.
func ToolNameGT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGT(FieldToolName, v))
}

// ToolNameGTE applies the GTE predicate on the "tool_name" field.
func ToolNameGTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGTE(FieldToolName, v))
}

// ToolNameLT applies the LT predicate on the "tool_name" field.
func ToolNameLT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLT(FieldToolName, v))
}

// ToolNameLTE applies the LTE predicate on the "tool_name" field.
func ToolNameLTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLTE(FieldToolName, v))
}

// ToolNameContains applies the Contains predicate on the "tool_name" field.
func ToolNameContains(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContains(FieldToolName, v))
}

// ToolNameHasPrefix applies the HasPrefix predicate on the "tool_name" field.
func ToolNameHasPrefix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasPrefix(FieldToolName, v))
}

// ToolNameHasSuffix applies the HasSuffix predicate on the "tool_name" field.
func ToolNameHasSuffix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasSuffix(FieldToolName, v))
}

// ToolNameEqualFold applies the EqualFold predicate on the "tool_name" field.
func ToolNameEqualFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEqualFold(FieldToolName, v))
}

// ToolNameContainsFold applies the ContainsFold predicate on the "tool_name" field.
func ToolNameContainsFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContainsFold(FieldToolName, v))
}

// ArgumentsEQ applies the EQ predicate on the "arguments" field.
func ArgumentsEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldArguments, v))
}

// ArgumentsNEQ applies the NEQ predicate on the "arguments" field.
func ArgumentsNEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldArguments, v))
}

// ArgumentsIn applies the In predicate on the "arguments" field.
func ArgumentsIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldArguments, vs...))
}

// ArgumentsNotIn applies the NotIn predicate on the "arguments" field.
func ArgumentsNotIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldArguments, vs...))
}

// ArgumentsGT applies the GT predicate on the "arguments" field.
func ArgumentsGT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGT(FieldArguments, v))
}

// ArgumentsGTE applies the GTE predicate on the "arguments" field.
func ArgumentsGTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGTE(FieldArguments, v))
}

// ArgumentsLT applies the LT predicate on the "arguments" field.
func ArgumentsLT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLT(FieldArguments, v))
}

// ArgumentsLTE applies the LTE predicate on the "arguments" field.
func ArgumentsLTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLTE(FieldArguments, v))
}

// ArgumentsContains applies the Contains predicate on the "arguments" field.
func ArgumentsContains(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContains(FieldArguments, v))
}

// ArgumentsHasPrefix applies the HasPrefix predicate on the "arguments" field.
func ArgumentsHasPrefix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasPrefix(FieldArguments, v))
}

// ArgumentsHasSuffix applies the HasSuffix predicate on the "arguments" field.
func ArgumentsHasSuffix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasSuffix(FieldArguments, v))
}

// ArgumentsEqualFold applies the EqualFold predicate on the "arguments" field.
func ArgumentsEqualFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEqualFold(FieldArguments, v))
}

// ArgumentsContainsFold applies the ContainsFold predicate on the "arguments" field.
func ArgumentsContainsFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContainsFold(FieldArguments, v))
}

// ResultEQ applies the EQ predicate on the "result" field.
func ResultEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldResult, v))
}

// ResultNEQ applies the NEQ predicate on the "result" field.
func ResultNEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldResult, v))
}

// ResultIn applies the In predicate on the "result" field.
func ResultIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldResult, vs...))
}

// ResultNotIn applies the NotIn predicate on the "result" field.
func ResultNotIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldResult, vs...))
}

// ResultGT applies the GT predicate on the "result" field.
func ResultGT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGT(FieldResult, v))
}

// ResultGTE applies the GTE predicate on the "result" field.
func ResultGTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGTE(FieldResult, v))
}

// ResultLT applies the LT predicate on the "result" field.
func ResultLT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLT(FieldResult, v))
}

// ResultLTE applies the LTE predicate on the "result" field.
func ResultLTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLTE(FieldResult, v))
}

// ResultContains applies the Contains predicate on the "result" field.
func ResultContains(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContains(FieldResult, v))
}

// ResultHasPrefix applies the HasPrefix predicate on the "result" field.
func ResultHasPrefix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasPrefix(FieldResult, v))
}

// ResultHasSuffix applies the HasSuffix predicate on the "result" field.
func ResultHasSuffix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasSuffix(FieldResult, v))
}

// ResultIsNil applies the IsNil predicate on the "result" field.
func ResultIsNil() predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIsNull(FieldResult))
}

// ResultNotNil applies the NotNil predicate on the "result" field.
func ResultNotNil() predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotNull(FieldResult))
}

// ResultEqualFold applies the EqualFold predicate on the "result" field.
func ResultEqualFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEqualFold(FieldResult, v))
}

// ResultContainsFold applies the ContainsFold predicate on the "result" field.
func ResultContainsFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContainsFold(FieldResult, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContainsFold(FieldStatus, v))
}

// RequestIDEQ applies the EQ predicate on the "request_id" field.
func RequestIDEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldRequestID, v))
}

// RequestIDNEQ applies the NEQ predicate on the "request_id" field.
func RequestIDNEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldRequestID, v))
}

// RequestIDIn applies the In predicate on the "request_id" field.
func RequestIDIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldRequestID, vs...))
}

// RequestIDNotIn applies the NotIn predicate on the "request_id" field.
func RequestIDNotIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldRequestID, vs...))
}

// RequestIDGT applies the GT predicate on the "request_id" field.
func RequestIDGT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGT(FieldRequestID, v))
}

// RequestIDGTE applies the GTE predicate on the "request_id" field.
func RequestIDGTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGTE(FieldRequestID, v))
}

// RequestIDLT applies the LT predicate on the "request_id" field.
func RequestIDLT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLT(FieldRequestID, v))
}

// RequestIDLTE applies the LTE predicate on the "request_id" field.
func RequestIDLTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLTE(FieldRequestID, v))
}

// RequestIDContains applies the Contains predicate on the "request_id" field.
func RequestIDContains(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContains(FieldRequestID, v))
}

// RequestIDHasPrefix applies the HasPrefix predicate on the "request_id" field.
func RequestIDHasPrefix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasPrefix(FieldRequestID, v))
}

// RequestIDHasSuffix applies the HasSuffix predicate on the "request_id" field.
func RequestIDHasSuffix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasSuffix(FieldRequestID, v))
}

// RequestIDIsNil applies the IsNil predicate on the "request_id" field.
func RequestIDIsNil() predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIsNull(FieldRequestID))
}

// RequestIDNotNil applies the NotNil predicate on the "request_id" field.
func RequestIDNotNil() predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotNull(FieldRequestID))
}

// RequestIDEqualFold applies the EqualFold predicate on the "request_id" field.
func RequestIDEqualFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEqualFold(FieldRequestID, v))
}

// RequestIDContainsFold applies the ContainsFold predicate on the "request_id" field.
func RequestIDContainsFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContainsFold(FieldRequestID, v))
}

// NeedsApprovalEQ applies the EQ predicate on the "needs_approval" field.
func NeedsApprovalEQ(v bool) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldNeedsApproval, v))
}

// NeedsApprovalNEQ applies the NEQ predicate on the "needs_approval" field.
func NeedsApprovalNEQ(v bool) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldNeedsApproval, v))
}

// ApprovalStateEQ applies the EQ predicate on the "approval_state" field.
func ApprovalStateEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldApprovalState, v))
}

// ApprovalStateNEQ applies the NEQ predicate on the "approval_state" field.
func ApprovalStateNEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldApprovalState, v))
}

// ApprovalStateIn applies the In predicate on the "approval_state" field.
func ApprovalStateIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldApprovalState, vs...))
}

// ApprovalStateNotIn applies the NotIn predicate on the "approval_state" field.
func ApprovalStateNotIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldApprovalState, vs...))
}

// ApprovalStateGT applies the GT predicate on the "approval_state" field.
func ApprovalStateGT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGT(FieldApprovalState, v))
}

// ApprovalStateGTE applies the GTE predicate on the "approval_state" field.
func ApprovalStateGTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGTE(FieldApprovalState, v))
}

// ApprovalStateLT applies the LT predicate on the "approval_state" field.
func ApprovalStateLT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLT(FieldApprovalState, v))
}

// ApprovalStateLTE applies the LTE predicate on the "approval_state" field.
func ApprovalStateLTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLTE(FieldApprovalState, v))
}

// ApprovalStateContains applies the Contains predicate on the "approval_state" field.
func ApprovalStateContains(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContains(FieldApprovalState, v))
}

// ApprovalStateHasPrefix applies the HasPrefix predicate on the "approval_state" field.
func ApprovalStateHasPrefix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasPrefix(FieldApprovalState, v))
}

// ApprovalStateHasSuffix applies the HasSuffix predicate on the "approval_state" field.
func ApprovalStateHasSuffix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasSuffix(FieldApprovalState, v))
}

// ApprovalStateEqualFold applies the EqualFold predicate on the "approval_state" field.
func ApprovalStateEqualFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEqualFold(FieldApprovalState, v))
}

// ApprovalStateContainsFold applies the ContainsFold predicate on the "approval_state" field.
func ApprovalStateContainsFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContainsFold(FieldApprovalState, v))
}

// ApprovalReasonEQ applies the EQ predicate on the "approval_reason" field.
func ApprovalReasonEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldApprovalReason, v))
}

// ApprovalReasonNEQ applies the NEQ predicate on the "approval_reason" field.
func ApprovalReasonNEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldApprovalReason, v))
}

// ApprovalReasonIn applies the In predicate on the "approval_reason" field.
func ApprovalReasonIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldApprovalReason, vs...))
}

// ApprovalReasonNotIn applies the NotIn predicate on the "approval_reason" field.
func ApprovalReasonNotIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldApprovalReason, vs...))
}

// ApprovalReasonGT applies the GT predicate on the "approval_reason" field.
func ApprovalReasonGT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGT(FieldApprovalReason, v))
}

// ApprovalReasonGTE applies the GTE predicate on the "approval_reason" field.
func ApprovalReasonGTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGTE(FieldApprovalReason, v))
}

// ApprovalReasonLT applies the LT predicate on the "approval_reason" field.
func ApprovalReasonLT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLT(FieldApprovalReason, v))
}

// ApprovalReasonLTE applies the LTE predicate on the "approval_reason" field.
func ApprovalReasonLTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLTE(FieldApprovalReason, v))
}

// ApprovalReasonContains applies the Contains predicate on the "approval_reason" field.
func ApprovalReasonContains(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContains(FieldApprovalReason, v))
}

// ApprovalReasonHasPrefix applies the HasPrefix predicate on the "approval_reason" field.
func ApprovalReasonHasPrefix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasPrefix(FieldApprovalReason, v))
}

// ApprovalReasonHasSuffix applies the HasSuffix predicate on the "approval_reason" field.
func ApprovalReasonHasSuffix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasSuffix(FieldApprovalReason, v))
}

// ApprovalReasonEqualFold applies the EqualFold predicate on the "approval_reason" field.
func ApprovalReasonEqualFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEqualFold(FieldApprovalReason, v))
}

// ApprovalReasonContainsFold applies the ContainsFold predicate on the "approval_reason" field.
func ApprovalReasonContainsFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContainsFold(FieldApprovalReason, v))
}

// ApprovedByEQ applies the EQ predicate on the "approved_by" field.
func ApprovedByEQ(v int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldApprovedBy, v))
}

// ApprovedByNEQ applies the NEQ predicate on the "approved_by" field.
func ApprovedByNEQ(v int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldApprovedBy, v))
}

// ApprovedByIn applies the In predicate on the "approved_by" field.
func ApprovedByIn(vs ...int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldApprovedBy, vs...))
}

// ApprovedByNotIn applies the NotIn predicate on the "approved_by" field.
func ApprovedByNotIn(vs ...int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldApprovedBy, vs...))
}

// ApprovedByGT applies the GT predicate on the "approved_by" field.
func ApprovedByGT(v int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGT(FieldApprovedBy, v))
}

// ApprovedByGTE applies the GTE predicate on the "approved_by" field.
func ApprovedByGTE(v int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGTE(FieldApprovedBy, v))
}

// ApprovedByLT applies the LT predicate on the "approved_by" field.
func ApprovedByLT(v int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLT(FieldApprovedBy, v))
}

// ApprovedByLTE applies the LTE predicate on the "approved_by" field.
func ApprovedByLTE(v int) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLTE(FieldApprovedBy, v))
}

// ApprovedByIsNil applies the IsNil predicate on the "approved_by" field.
func ApprovedByIsNil() predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIsNull(FieldApprovedBy))
}

// ApprovedByNotNil applies the NotNil predicate on the "approved_by" field.
func ApprovedByNotNil() predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotNull(FieldApprovedBy))
}

// ApprovedAtEQ applies the EQ predicate on the "approved_at" field.
func ApprovedAtEQ(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldApprovedAt, v))
}

// ApprovedAtNEQ applies the NEQ predicate on the "approved_at" field.
func ApprovedAtNEQ(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldApprovedAt, v))
}

// ApprovedAtIn applies the In predicate on the "approved_at" field.
func ApprovedAtIn(vs ...time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldApprovedAt, vs...))
}

// ApprovedAtNotIn applies the NotIn predicate on the "approved_at" field.
func ApprovedAtNotIn(vs ...time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldApprovedAt, vs...))
}

// ApprovedAtGT applies the GT predicate on the "approved_at" field.
func ApprovedAtGT(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGT(FieldApprovedAt, v))
}

// ApprovedAtGTE applies the GTE predicate on the "approved_at" field.
func ApprovedAtGTE(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGTE(FieldApprovedAt, v))
}

// ApprovedAtLT applies the LT predicate on the "approved_at" field.
func ApprovedAtLT(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLT(FieldApprovedAt, v))
}

// ApprovedAtLTE applies the LTE predicate on the "approved_at" field.
func ApprovedAtLTE(v time.Time) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLTE(FieldApprovedAt, v))
}

// ApprovedAtIsNil applies the IsNil predicate on the "approved_at" field.
func ApprovedAtIsNil() predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIsNull(FieldApprovedAt))
}

// ApprovedAtNotNil applies the NotNil predicate on the "approved_at" field.
func ApprovedAtNotNil() predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotNull(FieldApprovedAt))
}

// DryRunEQ applies the EQ predicate on the "dry_run" field.
func DryRunEQ(v bool) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldDryRun, v))
}

// DryRunNEQ applies the NEQ predicate on the "dry_run" field.
func DryRunNEQ(v bool) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldDryRun, v))
}

// ErrorEQ applies the EQ predicate on the "error" field.
func ErrorEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEQ(FieldError, v))
}

// ErrorNEQ applies the NEQ predicate on the "error" field.
func ErrorNEQ(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNEQ(FieldError, v))
}

// ErrorIn applies the In predicate on the "error" field.
func ErrorIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIn(FieldError, vs...))
}

// ErrorNotIn applies the NotIn predicate on the "error" field.
func ErrorNotIn(vs ...string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotIn(FieldError, vs...))
}

// ErrorGT applies the GT predicate on the "error" field.
func ErrorGT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGT(FieldError, v))
}

// ErrorGTE applies the GTE predicate on the "error" field.
func ErrorGTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldGTE(FieldError, v))
}

// ErrorLT applies the LT predicate on the "error" field.
func ErrorLT(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLT(FieldError, v))
}

// ErrorLTE applies the LTE predicate on the "error" field.
func ErrorLTE(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldLTE(FieldError, v))
}

// ErrorContains applies the Contains predicate on the "error" field.
func ErrorContains(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContains(FieldError, v))
}

// ErrorHasPrefix applies the HasPrefix predicate on the "error" field.
func ErrorHasPrefix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasPrefix(FieldError, v))
}

// ErrorHasSuffix applies the HasSuffix predicate on the "error" field.
func ErrorHasSuffix(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldHasSuffix(FieldError, v))
}

// ErrorIsNil applies the IsNil predicate on the "error" field.
func ErrorIsNil() predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldIsNull(FieldError))
}

// ErrorNotNil applies the NotNil predicate on the "error" field.
func ErrorNotNil() predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldNotNull(FieldError))
}

// ErrorEqualFold applies the EqualFold predicate on the "error" field.
func ErrorEqualFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldEqualFold(FieldError, v))
}

// ErrorContainsFold applies the ContainsFold predicate on the "error" field.
func ErrorContainsFold(v string) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.FieldContainsFold(FieldError, v))
}

// HasConversation applies the HasEdge predicate on the "conversation" edge.
func HasConversation() predicate.ToolInvocation {
	return predicate.ToolInvocation(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ConversationTable, ConversationColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasConversationWith applies the HasEdge predicate on the "conversation" edge with a given conditions (other predicates).
func HasConversationWith(preds ...predicate.Conversation) predicate.ToolInvocation {
	return predicate.ToolInvocation(func(s *sql.Selector) {
		step := newConversationStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ToolInvocation) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ToolInvocation) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ToolInvocation) predicate.ToolInvocation {
	return predicate.ToolInvocation(sql.NotPredicates(p))
}
