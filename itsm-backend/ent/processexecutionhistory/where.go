// Code generated by ent, DO NOT EDIT.

package processexecutionhistory

import (
	"itsm-backend/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldID, id))
}

// HistoryID applies equality check predicate on the "history_id" field. It's identical to HistoryIDEQ.
func HistoryID(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldHistoryID, v))
}

// ProcessInstanceID applies equality check predicate on the "process_instance_id" field. It's identical to ProcessInstanceIDEQ.
func ProcessInstanceID(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldProcessInstanceID, v))
}

// ProcessDefinitionKey applies equality check predicate on the "process_definition_key" field. It's identical to ProcessDefinitionKeyEQ.
func ProcessDefinitionKey(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldProcessDefinitionKey, v))
}

// ActivityID applies equality check predicate on the "activity_id" field. It's identical to ActivityIDEQ.
func ActivityID(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldActivityID, v))
}

// ActivityName applies equality check predicate on the "activity_name" field. It's identical to ActivityNameEQ.
func ActivityName(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldActivityName, v))
}

// ActivityType applies equality check predicate on the "activity_type" field. It's identical to ActivityTypeEQ.
func ActivityType(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldActivityType, v))
}

// EventType applies equality check predicate on the "event_type" field. It's identical to EventTypeEQ.
func EventType(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldEventType, v))
}

// EventDetail applies equality check predicate on the "event_detail" field. It's identical to EventDetailEQ.
func EventDetail(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldEventDetail, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldUserID, v))
}

// UserName applies equality check predicate on the "user_name" field. It's identical to UserNameEQ.
func UserName(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldUserName, v))
}

// Timestamp applies equality check predicate on the "timestamp" field. It's identical to TimestampEQ.
func Timestamp(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldTimestamp, v))
}

// Comment applies equality check predicate on the "comment" field. It's identical to CommentEQ.
func Comment(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldComment, v))
}

// ErrorMessage applies equality check predicate on the "error_message" field. It's identical to ErrorMessageEQ.
func ErrorMessage(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldErrorMessage, v))
}

// ErrorCode applies equality check predicate on the "error_code" field. It's identical to ErrorCodeEQ.
func ErrorCode(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldErrorCode, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldTenantID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// HistoryIDEQ applies the EQ predicate on the "history_id" field.
func HistoryIDEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldHistoryID, v))
}

// HistoryIDNEQ applies the NEQ predicate on the "history_id" field.
func HistoryIDNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldHistoryID, v))
}

// HistoryIDIn applies the In predicate on the "history_id" field.
func HistoryIDIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldHistoryID, vs...))
}

// HistoryIDNotIn applies the NotIn predicate on the "history_id" field.
func HistoryIDNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldHistoryID, vs...))
}

// HistoryIDGT applies the GT predicate on the "history_id" field.
func HistoryIDGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldHistoryID, v))
}

// HistoryIDGTE applies the GTE predicate on the "history_id" field.
func HistoryIDGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldHistoryID, v))
}

// HistoryIDLT applies the LT predicate on the "history_id" field.
func HistoryIDLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldHistoryID, v))
}

// HistoryIDLTE applies the LTE predicate on the "history_id" field.
func HistoryIDLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldHistoryID, v))
}

// HistoryIDContains applies the Contains predicate on the "history_id" field.
func HistoryIDContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldHistoryID, v))
}

// HistoryIDHasPrefix applies the HasPrefix predicate on the "history_id" field.
func HistoryIDHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldHistoryID, v))
}

// HistoryIDHasSuffix applies the HasSuffix predicate on the "history_id" field.
func HistoryIDHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldHistoryID, v))
}

// HistoryIDEqualFold applies the EqualFold predicate on the "history_id" field.
func HistoryIDEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldHistoryID, v))
}

// HistoryIDContainsFold applies the ContainsFold predicate on the "history_id" field.
func HistoryIDContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldHistoryID, v))
}

// ProcessInstanceIDEQ applies the EQ predicate on the "process_instance_id" field.
func ProcessInstanceIDEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDNEQ applies the NEQ predicate on the "process_instance_id" field.
func ProcessInstanceIDNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDIn applies the In predicate on the "process_instance_id" field.
func ProcessInstanceIDIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDNotIn applies the NotIn predicate on the "process_instance_id" field.
func ProcessInstanceIDNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDGT applies the GT predicate on the "process_instance_id" field.
func ProcessInstanceIDGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDGTE applies the GTE predicate on the "process_instance_id" field.
func ProcessInstanceIDGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLT applies the LT predicate on the "process_instance_id" field.
func ProcessInstanceIDLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLTE applies the LTE predicate on the "process_instance_id" field.
func ProcessInstanceIDLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDContains applies the Contains predicate on the "process_instance_id" field.
func ProcessInstanceIDContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldProcessInstanceID, v))
}

// ProcessInstanceIDHasPrefix applies the HasPrefix predicate on the "process_instance_id" field.
func ProcessInstanceIDHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldProcessInstanceID, v))
}

// ProcessInstanceIDHasSuffix applies the HasSuffix predicate on the "process_instance_id" field.
func ProcessInstanceIDHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldProcessInstanceID, v))
}

// ProcessInstanceIDEqualFold applies the EqualFold predicate on the "process_instance_id" field.
func ProcessInstanceIDEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldProcessInstanceID, v))
}

// ProcessInstanceIDContainsFold applies the ContainsFold predicate on the "process_instance_id" field.
func ProcessInstanceIDContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldProcessInstanceID, v))
}

// ProcessDefinitionKeyEQ applies the EQ predicate on the "process_definition_key" field.
func ProcessDefinitionKeyEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyNEQ applies the NEQ predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyIn applies the In predicate on the "process_definition_key" field.
func ProcessDefinitionKeyIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldProcessDefinitionKey, vs...))
}

// ProcessDefinitionKeyNotIn applies the NotIn predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldProcessDefinitionKey, vs...))
}

// ProcessDefinitionKeyGT applies the GT predicate on the "process_definition_key" field.
func ProcessDefinitionKeyGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyGTE applies the GTE predicate on the "process_definition_key" field.
func ProcessDefinitionKeyGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyLT applies the LT predicate on the "process_definition_key" field.
func ProcessDefinitionKeyLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyLTE applies the LTE predicate on the "process_definition_key" field.
func ProcessDefinitionKeyLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyContains applies the Contains predicate on the "process_definition_key" field.
func ProcessDefinitionKeyContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyHasPrefix applies the HasPrefix predicate on the "process_definition_key" field.
func ProcessDefinitionKeyHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyHasSuffix applies the HasSuffix predicate on the "process_definition_key" field.
func ProcessDefinitionKeyHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyEqualFold applies the EqualFold predicate on the "process_definition_key" field.
func ProcessDefinitionKeyEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyContainsFold applies the ContainsFold predicate on the "process_definition_key" field.
func ProcessDefinitionKeyContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldProcessDefinitionKey, v))
}

// ActivityIDEQ applies the EQ predicate on the "activity_id" field.
func ActivityIDEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldActivityID, v))
}

// ActivityIDNEQ applies the NEQ predicate on the "activity_id" field.
func ActivityIDNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldActivityID, v))
}

// ActivityIDIn applies the In predicate on the "activity_id" field.
func ActivityIDIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldActivityID, vs...))
}

// ActivityIDNotIn applies the NotIn predicate on the "activity_id" field.
func ActivityIDNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldActivityID, vs...))
}

// ActivityIDGT applies the GT predicate on the "activity_id" field.
func ActivityIDGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldActivityID, v))
}

// ActivityIDGTE applies the GTE predicate on the "activity_id" field.
func ActivityIDGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldActivityID, v))
}

// ActivityIDLT applies the LT predicate on the "activity_id" field.
func ActivityIDLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldActivityID, v))
}

// ActivityIDLTE applies the LTE predicate on the "activity_id" field.
func ActivityIDLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldActivityID, v))
}

// ActivityIDContains applies the Contains predicate on the "activity_id" field.
func ActivityIDContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldActivityID, v))
}

// ActivityIDHasPrefix applies the HasPrefix predicate on the "activity_id" field.
func ActivityIDHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldActivityID, v))
}

// ActivityIDHasSuffix applies the HasSuffix predicate on the "activity_id" field.
func ActivityIDHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldActivityID, v))
}

// ActivityIDIsNil applies the IsNil predicate on the "activity_id" field.
func ActivityIDIsNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIsNull(FieldActivityID))
}

// ActivityIDNotNil applies the NotNil predicate on the "activity_id" field.
func ActivityIDNotNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotNull(FieldActivityID))
}

// ActivityIDEqualFold applies the EqualFold predicate on the "activity_id" field.
func ActivityIDEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldActivityID, v))
}

// ActivityIDContainsFold applies the ContainsFold predicate on the "activity_id" field.
func ActivityIDContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldActivityID, v))
}

// ActivityNameEQ applies the EQ predicate on the "activity_name" field.
func ActivityNameEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldActivityName, v))
}

// ActivityNameNEQ applies the NEQ predicate on the "activity_name" field.
func ActivityNameNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldActivityName, v))
}

// ActivityNameIn applies the In predicate on the "activity_name" field.
func ActivityNameIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldActivityName, vs...))
}

// ActivityNameNotIn applies the NotIn predicate on the "activity_name" field.
func ActivityNameNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldActivityName, vs...))
}

// ActivityNameGT applies the GT predicate on the "activity_name" field.
func ActivityNameGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldActivityName, v))
}

// ActivityNameGTE applies the GTE predicate on the "activity_name" field.
func ActivityNameGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldActivityName, v))
}

// ActivityNameLT applies the LT predicate on the "activity_name" field.
func ActivityNameLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldActivityName, v))
}

// ActivityNameLTE applies the LTE predicate on the "activity_name" field.
func ActivityNameLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldActivityName, v))
}

// ActivityNameContains applies the Contains predicate on the "activity_name" field.
func ActivityNameContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldActivityName, v))
}

// ActivityNameHasPrefix applies the HasPrefix predicate on the "activity_name" field.
func ActivityNameHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldActivityName, v))
}

// ActivityNameHasSuffix applies the HasSuffix predicate on the "activity_name" field.
func ActivityNameHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldActivityName, v))
}

// ActivityNameIsNil applies the IsNil predicate on the "activity_name" field.
func ActivityNameIsNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIsNull(FieldActivityName))
}

// ActivityNameNotNil applies the NotNil predicate on the "activity_name" field.
func ActivityNameNotNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotNull(FieldActivityName))
}

// ActivityNameEqualFold applies the EqualFold predicate on the "activity_name" field.
func ActivityNameEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldActivityName, v))
}

// ActivityNameContainsFold applies the ContainsFold predicate on the "activity_name" field.
func ActivityNameContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldActivityName, v))
}

// ActivityTypeEQ applies the EQ predicate on the "activity_type" field.
func ActivityTypeEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldActivityType, v))
}

// ActivityTypeNEQ applies the NEQ predicate on the "activity_type" field.
func ActivityTypeNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldActivityType, v))
}

// ActivityTypeIn applies the In predicate on the "activity_type" field.
func ActivityTypeIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldActivityType, vs...))
}

// ActivityTypeNotIn applies the NotIn predicate on the "activity_type" field.
func ActivityTypeNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldActivityType, vs...))
}

// ActivityTypeGT applies the GT predicate on the "activity_type" field.
func ActivityTypeGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldActivityType, v))
}

// ActivityTypeGTE applies the GTE predicate on the "activity_type" field.
func ActivityTypeGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldActivityType, v))
}

// ActivityTypeLT applies the LT predicate on the "activity_type" field.
func ActivityTypeLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldActivityType, v))
}

// ActivityTypeLTE applies the LTE predicate on the "activity_type" field.
func ActivityTypeLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldActivityType, v))
}

// ActivityTypeContains applies the Contains predicate on the "activity_type" field.
func ActivityTypeContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldActivityType, v))
}

// ActivityTypeHasPrefix applies the HasPrefix predicate on the "activity_type" field.
func ActivityTypeHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldActivityType, v))
}

// ActivityTypeHasSuffix applies the HasSuffix predicate on the "activity_type" field.
func ActivityTypeHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldActivityType, v))
}

// ActivityTypeEqualFold applies the EqualFold predicate on the "activity_type" field.
func ActivityTypeEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldActivityType, v))
}

// ActivityTypeContainsFold applies the ContainsFold predicate on the "activity_type" field.
func ActivityTypeContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldActivityType, v))
}

// EventTypeEQ applies the EQ predicate on the "event_type" field.
func EventTypeEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldEventType, v))
}

// EventTypeNEQ applies the NEQ predicate on the "event_type" field.
func EventTypeNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldEventType, v))
}

// EventTypeIn applies the In predicate on the "event_type" field.
func EventTypeIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldEventType, vs...))
}

// EventTypeNotIn applies the NotIn predicate on the "event_type" field.
func EventTypeNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldEventType, vs...))
}

// EventTypeGT applies the GT predicate on the "event_type" field.
func EventTypeGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldEventType, v))
}

// EventTypeGTE applies the GTE predicate on the "event_type" field.
func EventTypeGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldEventType, v))
}

// EventTypeLT applies the LT predicate on the "event_type" field.
func EventTypeLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldEventType, v))
}

// EventTypeLTE applies the LTE predicate on the "event_type" field.
func EventTypeLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldEventType, v))
}

// EventTypeContains applies the Contains predicate on the "event_type" field.
func EventTypeContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldEventType, v))
}

// EventTypeHasPrefix applies the HasPrefix predicate on the "event_type" field.
func EventTypeHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldEventType, v))
}

// EventTypeHasSuffix applies the HasSuffix predicate on the "event_type" field.
func EventTypeHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldEventType, v))
}

// EventTypeEqualFold applies the EqualFold predicate on the "event_type" field.
func EventTypeEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldEventType, v))
}

// EventTypeContainsFold applies the ContainsFold predicate on the "event_type" field.
func EventTypeContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldEventType, v))
}

// EventDetailEQ applies the EQ predicate on the "event_detail" field.
func EventDetailEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldEventDetail, v))
}

// EventDetailNEQ applies the NEQ predicate on the "event_detail" field.
func EventDetailNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldEventDetail, v))
}

// EventDetailIn applies the In predicate on the "event_detail" field.
func EventDetailIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldEventDetail, vs...))
}

// EventDetailNotIn applies the NotIn predicate on the "event_detail" field.
func EventDetailNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldEventDetail, vs...))
}

// EventDetailGT applies the GT predicate on the "event_detail" field.
func EventDetailGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldEventDetail, v))
}

// EventDetailGTE applies the GTE predicate on the "event_detail" field.
func EventDetailGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldEventDetail, v))
}

// EventDetailLT applies the LT predicate on the "event_detail" field.
func EventDetailLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldEventDetail, v))
}

// EventDetailLTE applies the LTE predicate on the "event_detail" field.
func EventDetailLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldEventDetail, v))
}

// EventDetailContains applies the Contains predicate on the "event_detail" field.
func EventDetailContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldEventDetail, v))
}

// EventDetailHasPrefix applies the HasPrefix predicate on the "event_detail" field.
func EventDetailHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldEventDetail, v))
}

// EventDetailHasSuffix applies the HasSuffix predicate on the "event_detail" field.
func EventDetailHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldEventDetail, v))
}

// EventDetailIsNil applies the IsNil predicate on the "event_detail" field.
func EventDetailIsNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIsNull(FieldEventDetail))
}

// EventDetailNotNil applies the NotNil predicate on the "event_detail" field.
func EventDetailNotNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotNull(FieldEventDetail))
}

// EventDetailEqualFold applies the EqualFold predicate on the "event_detail" field.
func EventDetailEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldEventDetail, v))
}

// EventDetailContainsFold applies the ContainsFold predicate on the "event_detail" field.
func EventDetailContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldEventDetail, v))
}

// VariablesIsNil applies the IsNil predicate on the "variables" field.
func VariablesIsNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIsNull(FieldVariables))
}

// VariablesNotNil applies the NotNil predicate on the "variables" field.
func VariablesNotNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotNull(FieldVariables))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotNull(FieldUserID))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldUserID, v))
}

// UserNameEQ applies the EQ predicate on the "user_name" field.
func UserNameEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldUserName, v))
}

// UserNameNEQ applies the NEQ predicate on the "user_name" field.
func UserNameNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldUserName, v))
}

// UserNameIn applies the In predicate on the "user_name" field.
func UserNameIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldUserName, vs...))
}

// UserNameNotIn applies the NotIn predicate on the "user_name" field.
func UserNameNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldUserName, vs...))
}

// UserNameGT applies the GT predicate on the "user_name" field.
func UserNameGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldUserName, v))
}

// UserNameGTE applies the GTE predicate on the "user_name" field.
func UserNameGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldUserName, v))
}

// UserNameLT applies the LT predicate on the "user_name" field.
func UserNameLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldUserName, v))
}

// UserNameLTE applies the LTE predicate on the "user_name" field.
func UserNameLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldUserName, v))
}

// UserNameContains applies the Contains predicate on the "user_name" field.
func UserNameContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldUserName, v))
}

// UserNameHasPrefix applies the HasPrefix predicate on the "user_name" field.
func UserNameHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldUserName, v))
}

// UserNameHasSuffix applies the HasSuffix predicate on the "user_name" field.
func UserNameHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldUserName, v))
}

// UserNameIsNil applies the IsNil predicate on the "user_name" field.
func UserNameIsNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIsNull(FieldUserName))
}

// UserNameNotNil applies the NotNil predicate on the "user_name" field.
func UserNameNotNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotNull(FieldUserName))
}

// UserNameEqualFold applies the EqualFold predicate on the "user_name" field.
func UserNameEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldUserName, v))
}

// UserNameContainsFold applies the ContainsFold predicate on the "user_name" field.
func UserNameContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldUserName, v))
}

// TimestampEQ applies the EQ predicate on the "timestamp" field.
func TimestampEQ(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldTimestamp, v))
}

// TimestampNEQ applies the NEQ predicate on the "timestamp" field.
func TimestampNEQ(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldTimestamp, v))
}

// TimestampIn applies the In predicate on the "timestamp" field.
func TimestampIn(vs ...time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldTimestamp, vs...))
}

// TimestampNotIn applies the NotIn predicate on the "timestamp" field.
func TimestampNotIn(vs ...time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldTimestamp, vs...))
}

// TimestampGT applies the GT predicate on the "timestamp" field.
func TimestampGT(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldTimestamp, v))
}

// TimestampGTE applies the GTE predicate on the "timestamp" field.
func TimestampGTE(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldTimestamp, v))
}

// TimestampLT applies the LT predicate on the "timestamp" field.
func TimestampLT(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldTimestamp, v))
}

// TimestampLTE applies the LTE predicate on the "timestamp" field.
func TimestampLTE(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldTimestamp, v))
}

// CommentEQ applies the EQ predicate on the "comment" field.
func CommentEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldComment, v))
}

// CommentNEQ applies the NEQ predicate on the "comment" field.
func CommentNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldComment, v))
}

// CommentIn applies the In predicate on the "comment" field.
func CommentIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldComment, vs...))
}

// CommentNotIn applies the NotIn predicate on the "comment" field.
func CommentNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldComment, vs...))
}

// CommentGT applies the GT predicate on the "comment" field.
func CommentGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldComment, v))
}

// CommentGTE applies the GTE predicate on the "comment" field.
func CommentGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldComment, v))
}

// CommentLT applies the LT predicate on the "comment" field.
func CommentLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldComment, v))
}

// CommentLTE applies the LTE predicate on the "comment" field.
func CommentLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldComment, v))
}

// CommentContains applies the Contains predicate on the "comment" field.
func CommentContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldComment, v))
}

// CommentHasPrefix applies the HasPrefix predicate on the "comment" field.
func CommentHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldComment, v))
}

// CommentHasSuffix applies the HasSuffix predicate on the "comment" field.
func CommentHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldComment, v))
}

// CommentIsNil applies the IsNil predicate on the "comment" field.
func CommentIsNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIsNull(FieldComment))
}

// CommentNotNil applies the NotNil predicate on the "comment" field.
func CommentNotNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotNull(FieldComment))
}

// CommentEqualFold applies the EqualFold predicate on the "comment" field.
func CommentEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldComment, v))
}

// CommentContainsFold applies the ContainsFold predicate on the "comment" field.
func CommentContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldComment, v))
}

// ErrorMessageEQ applies the EQ predicate on the "error_message" field.
func ErrorMessageEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldErrorMessage, v))
}

// ErrorMessageNEQ applies the NEQ predicate on the "error_message" field.
func ErrorMessageNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldErrorMessage, v))
}

// ErrorMessageIn applies the In predicate on the "error_message" field.
func ErrorMessageIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldErrorMessage, vs...))
}

// ErrorMessageNotIn applies the NotIn predicate on the "error_message" field.
func ErrorMessageNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldErrorMessage, vs...))
}

// ErrorMessageGT applies the GT predicate on the "error_message" field.
func ErrorMessageGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldErrorMessage, v))
}

// ErrorMessageGTE applies the GTE predicate on the "error_message" field.
func ErrorMessageGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldErrorMessage, v))
}

// ErrorMessageLT applies the LT predicate on the "error_message" field.
func ErrorMessageLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldErrorMessage, v))
}

// ErrorMessageLTE applies the LTE predicate on the "error_message" field.
func ErrorMessageLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldErrorMessage, v))
}

// ErrorMessageContains applies the Contains predicate on the "error_message" field.
func ErrorMessageContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldErrorMessage, v))
}

// ErrorMessageHasPrefix applies the HasPrefix predicate on the "error_message" field.
func ErrorMessageHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldErrorMessage, v))
}

// ErrorMessageHasSuffix applies the HasSuffix predicate on the "error_message" field.
func ErrorMessageHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldErrorMessage, v))
}

// ErrorMessageIsNil applies the IsNil predicate on the "error_message" field.
func ErrorMessageIsNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIsNull(FieldErrorMessage))
}

// ErrorMessageNotNil applies the NotNil predicate on the "error_message" field.
func ErrorMessageNotNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotNull(FieldErrorMessage))
}

// ErrorMessageEqualFold applies the EqualFold predicate on the "error_message" field.
func ErrorMessageEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldErrorMessage, v))
}

// ErrorMessageContainsFold applies the ContainsFold predicate on the "error_message" field.
func ErrorMessageContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldErrorMessage, v))
}

// ErrorCodeEQ applies the EQ predicate on the "error_code" field.
func ErrorCodeEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldErrorCode, v))
}

// ErrorCodeNEQ applies the NEQ predicate on the "error_code" field.
func ErrorCodeNEQ(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldErrorCode, v))
}

// ErrorCodeIn applies the In predicate on the "error_code" field.
func ErrorCodeIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldErrorCode, vs...))
}

// ErrorCodeNotIn applies the NotIn predicate on the "error_code" field.
func ErrorCodeNotIn(vs ...string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldErrorCode, vs...))
}

// ErrorCodeGT applies the GT predicate on the "error_code" field.
func ErrorCodeGT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldErrorCode, v))
}

// ErrorCodeGTE applies the GTE predicate on the "error_code" field.
func ErrorCodeGTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldErrorCode, v))
}

// ErrorCodeLT applies the LT predicate on the "error_code" field.
func ErrorCodeLT(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldErrorCode, v))
}

// ErrorCodeLTE applies the LTE predicate on the "error_code" field.
func ErrorCodeLTE(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldErrorCode, v))
}

// ErrorCodeContains applies the Contains predicate on the "error_code" field.
func ErrorCodeContains(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContains(FieldErrorCode, v))
}

// ErrorCodeHasPrefix applies the HasPrefix predicate on the "error_code" field.
func ErrorCodeHasPrefix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasPrefix(FieldErrorCode, v))
}

// ErrorCodeHasSuffix applies the HasSuffix predicate on the "error_code" field.
func ErrorCodeHasSuffix(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldHasSuffix(FieldErrorCode, v))
}

// ErrorCodeIsNil applies the IsNil predicate on the "error_code" field.
func ErrorCodeIsNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIsNull(FieldErrorCode))
}

// ErrorCodeNotNil applies the NotNil predicate on the "error_code" field.
func ErrorCodeNotNil() predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotNull(FieldErrorCode))
}

// ErrorCodeEqualFold applies the EqualFold predicate on the "error_code" field.
func ErrorCodeEqualFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEqualFold(FieldErrorCode, v))
}

// ErrorCodeContainsFold applies the ContainsFold predicate on the "error_code" field.
func ErrorCodeContainsFold(v string) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldContainsFold(FieldErrorCode, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v int) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldTenantID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProcessExecutionHistory) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProcessExecutionHistory) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProcessExecutionHistory) predicate.ProcessExecutionHistory {
	return predicate.ProcessExecutionHistory(sql.NotPredicates(p))
}
