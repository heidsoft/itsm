// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuditLogsColumns holds the columns for the "audit_logs" table.
	AuditLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "request_id", Type: field.TypeString, Nullable: true},
		{Name: "ip", Type: field.TypeString, Default: ""},
		{Name: "resource", Type: field.TypeString, Default: ""},
		{Name: "action", Type: field.TypeString, Default: ""},
		{Name: "path", Type: field.TypeString},
		{Name: "method", Type: field.TypeString},
		{Name: "status_code", Type: field.TypeInt, Default: 0},
		{Name: "request_body", Type: field.TypeString, Nullable: true, Size: 2147483647},
	}
	// AuditLogsTable holds the schema information for the "audit_logs" table.
	AuditLogsTable = &schema.Table{
		Name:       "audit_logs",
		Columns:    AuditLogsColumns,
		PrimaryKey: []*schema.Column{AuditLogsColumns[0]},
	}
	// CiAttributeDefinitionsColumns holds the columns for the "ci_attribute_definitions" table.
	CiAttributeDefinitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "display_name", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "required", Type: field.TypeBool, Default: false},
		{Name: "unique", Type: field.TypeBool, Default: false},
		{Name: "default_value", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "validation_rules", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "ci_type_id", Type: field.TypeInt},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CiAttributeDefinitionsTable holds the schema information for the "ci_attribute_definitions" table.
	CiAttributeDefinitionsTable = &schema.Table{
		Name:       "ci_attribute_definitions",
		Columns:    CiAttributeDefinitionsColumns,
		PrimaryKey: []*schema.Column{CiAttributeDefinitionsColumns[0]},
	}
	// CiRelationshipsColumns holds the columns for the "ci_relationships" table.
	CiRelationshipsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "source_ci_id", Type: field.TypeInt},
		{Name: "target_ci_id", Type: field.TypeInt},
		{Name: "relationship_type_id", Type: field.TypeInt},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CiRelationshipsTable holds the schema information for the "ci_relationships" table.
	CiRelationshipsTable = &schema.Table{
		Name:       "ci_relationships",
		Columns:    CiRelationshipsColumns,
		PrimaryKey: []*schema.Column{CiRelationshipsColumns[0]},
	}
	// CiTypesColumns holds the columns for the "ci_types" table.
	CiTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "icon", Type: field.TypeString, Nullable: true},
		{Name: "color", Type: field.TypeString, Nullable: true},
		{Name: "attribute_schema", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CiTypesTable holds the schema information for the "ci_types" table.
	CiTypesTable = &schema.Table{
		Name:       "ci_types",
		Columns:    CiTypesColumns,
		PrimaryKey: []*schema.Column{CiTypesColumns[0]},
	}
	// ChangesColumns holds the columns for the "changes" table.
	ChangesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "justification", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "type", Type: field.TypeString, Default: "normal"},
		{Name: "status", Type: field.TypeString, Default: "draft"},
		{Name: "priority", Type: field.TypeString, Default: "medium"},
		{Name: "impact_scope", Type: field.TypeString, Default: "medium"},
		{Name: "risk_level", Type: field.TypeString, Default: "medium"},
		{Name: "assignee_id", Type: field.TypeInt, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "planned_start_date", Type: field.TypeTime, Nullable: true},
		{Name: "planned_end_date", Type: field.TypeTime, Nullable: true},
		{Name: "actual_start_date", Type: field.TypeTime, Nullable: true},
		{Name: "actual_end_date", Type: field.TypeTime, Nullable: true},
		{Name: "implementation_plan", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "rollback_plan", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "affected_cis", Type: field.TypeJSON, Nullable: true},
		{Name: "related_tickets", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ChangesTable holds the schema information for the "changes" table.
	ChangesTable = &schema.Table{
		Name:       "changes",
		Columns:    ChangesColumns,
		PrimaryKey: []*schema.Column{ChangesColumns[0]},
	}
	// ConfigurationItemsColumns holds the columns for the "configuration_items" table.
	ConfigurationItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "type", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "active"},
		{Name: "location", Type: field.TypeString, Nullable: true},
		{Name: "serial_number", Type: field.TypeString, Nullable: true},
		{Name: "model", Type: field.TypeString, Nullable: true},
		{Name: "vendor", Type: field.TypeString, Nullable: true},
		{Name: "ci_type_id", Type: field.TypeInt},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ConfigurationItemsTable holds the schema information for the "configuration_items" table.
	ConfigurationItemsTable = &schema.Table{
		Name:       "configuration_items",
		Columns:    ConfigurationItemsColumns,
		PrimaryKey: []*schema.Column{ConfigurationItemsColumns[0]},
	}
	// ConversationsColumns holds the columns for the "conversations" table.
	ConversationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "title", Type: field.TypeString, Default: ""},
	}
	// ConversationsTable holds the schema information for the "conversations" table.
	ConversationsTable = &schema.Table{
		Name:       "conversations",
		Columns:    ConversationsColumns,
		PrimaryKey: []*schema.Column{ConversationsColumns[0]},
	}
	// IncidentsColumns holds the columns for the "incidents" table.
	IncidentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "status", Type: field.TypeString, Default: "new"},
		{Name: "priority", Type: field.TypeString, Default: "medium"},
		{Name: "incident_number", Type: field.TypeString, Unique: true},
		{Name: "reporter_id", Type: field.TypeInt},
		{Name: "assignee_id", Type: field.TypeInt, Nullable: true},
		{Name: "configuration_item_id", Type: field.TypeInt, Nullable: true},
		{Name: "resolved_at", Type: field.TypeTime, Nullable: true},
		{Name: "closed_at", Type: field.TypeTime, Nullable: true},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// IncidentsTable holds the schema information for the "incidents" table.
	IncidentsTable = &schema.Table{
		Name:       "incidents",
		Columns:    IncidentsColumns,
		PrimaryKey: []*schema.Column{IncidentsColumns[0]},
	}
	// KnowledgeArticlesColumns holds the columns for the "knowledge_articles" table.
	KnowledgeArticlesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "category", Type: field.TypeString, Nullable: true},
		{Name: "tags", Type: field.TypeString, Nullable: true},
		{Name: "author_id", Type: field.TypeInt},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "is_published", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// KnowledgeArticlesTable holds the schema information for the "knowledge_articles" table.
	KnowledgeArticlesTable = &schema.Table{
		Name:       "knowledge_articles",
		Columns:    KnowledgeArticlesColumns,
		PrimaryKey: []*schema.Column{KnowledgeArticlesColumns[0]},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "role", Type: field.TypeString},
		{Name: "content", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "request_id", Type: field.TypeString, Nullable: true},
		{Name: "conversation_id", Type: field.TypeInt},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "messages_conversations_messages",
				Columns:    []*schema.Column{MessagesColumns[5]},
				RefColumns: []*schema.Column{ConversationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// NotificationsColumns holds the columns for the "notifications" table.
	NotificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "message", Type: field.TypeString, Size: 2147483647},
		{Name: "type", Type: field.TypeString, Default: "info"},
		{Name: "read", Type: field.TypeBool, Default: false},
		{Name: "action_url", Type: field.TypeString, Nullable: true},
		{Name: "action_text", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// NotificationsTable holds the schema information for the "notifications" table.
	NotificationsTable = &schema.Table{
		Name:       "notifications",
		Columns:    NotificationsColumns,
		PrimaryKey: []*schema.Column{NotificationsColumns[0]},
	}
	// ProblemsColumns holds the columns for the "problems" table.
	ProblemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "status", Type: field.TypeString, Default: "open"},
		{Name: "priority", Type: field.TypeString, Default: "medium"},
		{Name: "category", Type: field.TypeString, Nullable: true},
		{Name: "root_cause", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "impact", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "assignee_id", Type: field.TypeInt, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ProblemsTable holds the schema information for the "problems" table.
	ProblemsTable = &schema.Table{
		Name:       "problems",
		Columns:    ProblemsColumns,
		PrimaryKey: []*schema.Column{ProblemsColumns[0]},
	}
	// ProcessDefinitionsColumns holds the columns for the "process_definitions" table.
	ProcessDefinitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "key", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "version", Type: field.TypeString, Default: "1.0.0"},
		{Name: "category", Type: field.TypeString, Default: "default"},
		{Name: "bpmn_xml", Type: field.TypeJSON},
		{Name: "process_variables", Type: field.TypeJSON, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "is_latest", Type: field.TypeBool, Default: true},
		{Name: "deployment_id", Type: field.TypeInt},
		{Name: "deployment_name", Type: field.TypeString, Nullable: true},
		{Name: "deployed_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ProcessDefinitionsTable holds the schema information for the "process_definitions" table.
	ProcessDefinitionsTable = &schema.Table{
		Name:       "process_definitions",
		Columns:    ProcessDefinitionsColumns,
		PrimaryKey: []*schema.Column{ProcessDefinitionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "processdefinition_key_version",
				Unique:  true,
				Columns: []*schema.Column{ProcessDefinitionsColumns[1], ProcessDefinitionsColumns[4]},
			},
			{
				Name:    "processdefinition_tenant_id_key",
				Unique:  false,
				Columns: []*schema.Column{ProcessDefinitionsColumns[13], ProcessDefinitionsColumns[1]},
			},
			{
				Name:    "processdefinition_deployment_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessDefinitionsColumns[10]},
			},
			{
				Name:    "processdefinition_is_active",
				Unique:  false,
				Columns: []*schema.Column{ProcessDefinitionsColumns[8]},
			},
			{
				Name:    "processdefinition_is_latest",
				Unique:  false,
				Columns: []*schema.Column{ProcessDefinitionsColumns[9]},
			},
		},
	}
	// ProcessDeploymentsColumns holds the columns for the "process_deployments" table.
	ProcessDeploymentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "deployment_id", Type: field.TypeString, Unique: true},
		{Name: "deployment_name", Type: field.TypeString},
		{Name: "deployment_source", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "deployment_time", Type: field.TypeTime},
		{Name: "deployed_by", Type: field.TypeString, Nullable: true},
		{Name: "deployment_comment", Type: field.TypeString, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "deployment_category", Type: field.TypeString, Default: "default"},
		{Name: "deployment_metadata", Type: field.TypeJSON, Nullable: true},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ProcessDeploymentsTable holds the schema information for the "process_deployments" table.
	ProcessDeploymentsTable = &schema.Table{
		Name:       "process_deployments",
		Columns:    ProcessDeploymentsColumns,
		PrimaryKey: []*schema.Column{ProcessDeploymentsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "processdeployment_deployment_id",
				Unique:  true,
				Columns: []*schema.Column{ProcessDeploymentsColumns[1]},
			},
			{
				Name:    "processdeployment_deployment_name",
				Unique:  false,
				Columns: []*schema.Column{ProcessDeploymentsColumns[2]},
			},
			{
				Name:    "processdeployment_deployment_time",
				Unique:  false,
				Columns: []*schema.Column{ProcessDeploymentsColumns[4]},
			},
			{
				Name:    "processdeployment_deployed_by",
				Unique:  false,
				Columns: []*schema.Column{ProcessDeploymentsColumns[5]},
			},
			{
				Name:    "processdeployment_is_active",
				Unique:  false,
				Columns: []*schema.Column{ProcessDeploymentsColumns[7]},
			},
			{
				Name:    "processdeployment_deployment_category",
				Unique:  false,
				Columns: []*schema.Column{ProcessDeploymentsColumns[8]},
			},
			{
				Name:    "processdeployment_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessDeploymentsColumns[10]},
			},
			{
				Name:    "processdeployment_created_at",
				Unique:  false,
				Columns: []*schema.Column{ProcessDeploymentsColumns[11]},
			},
		},
	}
	// ProcessExecutionHistoriesColumns holds the columns for the "process_execution_histories" table.
	ProcessExecutionHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "history_id", Type: field.TypeString, Unique: true},
		{Name: "process_instance_id", Type: field.TypeString},
		{Name: "process_definition_key", Type: field.TypeString},
		{Name: "activity_id", Type: field.TypeString, Nullable: true},
		{Name: "activity_name", Type: field.TypeString, Nullable: true},
		{Name: "activity_type", Type: field.TypeString},
		{Name: "event_type", Type: field.TypeString},
		{Name: "event_detail", Type: field.TypeString, Nullable: true},
		{Name: "variables", Type: field.TypeJSON, Nullable: true},
		{Name: "user_id", Type: field.TypeString, Nullable: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "comment", Type: field.TypeString, Nullable: true},
		{Name: "error_message", Type: field.TypeString, Nullable: true},
		{Name: "error_code", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
	}
	// ProcessExecutionHistoriesTable holds the schema information for the "process_execution_histories" table.
	ProcessExecutionHistoriesTable = &schema.Table{
		Name:       "process_execution_histories",
		Columns:    ProcessExecutionHistoriesColumns,
		PrimaryKey: []*schema.Column{ProcessExecutionHistoriesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "processexecutionhistory_history_id",
				Unique:  true,
				Columns: []*schema.Column{ProcessExecutionHistoriesColumns[1]},
			},
			{
				Name:    "processexecutionhistory_process_instance_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessExecutionHistoriesColumns[2]},
			},
			{
				Name:    "processexecutionhistory_process_definition_key",
				Unique:  false,
				Columns: []*schema.Column{ProcessExecutionHistoriesColumns[3]},
			},
			{
				Name:    "processexecutionhistory_activity_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessExecutionHistoriesColumns[4]},
			},
			{
				Name:    "processexecutionhistory_activity_type",
				Unique:  false,
				Columns: []*schema.Column{ProcessExecutionHistoriesColumns[6]},
			},
			{
				Name:    "processexecutionhistory_event_type",
				Unique:  false,
				Columns: []*schema.Column{ProcessExecutionHistoriesColumns[7]},
			},
			{
				Name:    "processexecutionhistory_user_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessExecutionHistoriesColumns[10]},
			},
			{
				Name:    "processexecutionhistory_timestamp",
				Unique:  false,
				Columns: []*schema.Column{ProcessExecutionHistoriesColumns[12]},
			},
			{
				Name:    "processexecutionhistory_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessExecutionHistoriesColumns[16]},
			},
			{
				Name:    "processexecutionhistory_created_at",
				Unique:  false,
				Columns: []*schema.Column{ProcessExecutionHistoriesColumns[17]},
			},
		},
	}
	// ProcessInstancesColumns holds the columns for the "process_instances" table.
	ProcessInstancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "process_instance_id", Type: field.TypeString, Unique: true},
		{Name: "business_key", Type: field.TypeString, Nullable: true},
		{Name: "process_definition_key", Type: field.TypeString},
		{Name: "process_definition_id", Type: field.TypeString},
		{Name: "status", Type: field.TypeString, Default: "running"},
		{Name: "current_activity_id", Type: field.TypeString, Nullable: true},
		{Name: "current_activity_name", Type: field.TypeString, Nullable: true},
		{Name: "variables", Type: field.TypeJSON, Nullable: true},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime, Nullable: true},
		{Name: "suspended_time", Type: field.TypeTime, Nullable: true},
		{Name: "suspended_reason", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "initiator", Type: field.TypeString, Nullable: true},
		{Name: "parent_process_instance_id", Type: field.TypeString, Nullable: true},
		{Name: "root_process_instance_id", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ProcessInstancesTable holds the schema information for the "process_instances" table.
	ProcessInstancesTable = &schema.Table{
		Name:       "process_instances",
		Columns:    ProcessInstancesColumns,
		PrimaryKey: []*schema.Column{ProcessInstancesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "processinstance_process_instance_id",
				Unique:  true,
				Columns: []*schema.Column{ProcessInstancesColumns[1]},
			},
			{
				Name:    "processinstance_business_key",
				Unique:  false,
				Columns: []*schema.Column{ProcessInstancesColumns[2]},
			},
			{
				Name:    "processinstance_process_definition_key",
				Unique:  false,
				Columns: []*schema.Column{ProcessInstancesColumns[3]},
			},
			{
				Name:    "processinstance_process_definition_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessInstancesColumns[4]},
			},
			{
				Name:    "processinstance_status",
				Unique:  false,
				Columns: []*schema.Column{ProcessInstancesColumns[5]},
			},
			{
				Name:    "processinstance_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessInstancesColumns[13]},
			},
			{
				Name:    "processinstance_initiator",
				Unique:  false,
				Columns: []*schema.Column{ProcessInstancesColumns[14]},
			},
			{
				Name:    "processinstance_start_time",
				Unique:  false,
				Columns: []*schema.Column{ProcessInstancesColumns[9]},
			},
			{
				Name:    "processinstance_parent_process_instance_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessInstancesColumns[15]},
			},
			{
				Name:    "processinstance_root_process_instance_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessInstancesColumns[16]},
			},
		},
	}
	// ProcessTasksColumns holds the columns for the "process_tasks" table.
	ProcessTasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "task_id", Type: field.TypeString, Unique: true},
		{Name: "process_instance_id", Type: field.TypeString},
		{Name: "process_definition_key", Type: field.TypeString},
		{Name: "task_definition_key", Type: field.TypeString},
		{Name: "task_name", Type: field.TypeString},
		{Name: "task_type", Type: field.TypeString, Default: "user_task"},
		{Name: "assignee", Type: field.TypeString, Nullable: true},
		{Name: "candidate_users", Type: field.TypeString, Nullable: true},
		{Name: "candidate_groups", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "created"},
		{Name: "priority", Type: field.TypeString, Default: "normal"},
		{Name: "due_date", Type: field.TypeTime, Nullable: true},
		{Name: "created_time", Type: field.TypeTime},
		{Name: "assigned_time", Type: field.TypeTime, Nullable: true},
		{Name: "started_time", Type: field.TypeTime, Nullable: true},
		{Name: "completed_time", Type: field.TypeTime, Nullable: true},
		{Name: "form_key", Type: field.TypeString, Nullable: true},
		{Name: "task_variables", Type: field.TypeJSON, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "parent_task_id", Type: field.TypeString, Nullable: true},
		{Name: "root_task_id", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ProcessTasksTable holds the schema information for the "process_tasks" table.
	ProcessTasksTable = &schema.Table{
		Name:       "process_tasks",
		Columns:    ProcessTasksColumns,
		PrimaryKey: []*schema.Column{ProcessTasksColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "processtask_task_id",
				Unique:  true,
				Columns: []*schema.Column{ProcessTasksColumns[1]},
			},
			{
				Name:    "processtask_process_instance_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessTasksColumns[2]},
			},
			{
				Name:    "processtask_process_definition_key",
				Unique:  false,
				Columns: []*schema.Column{ProcessTasksColumns[3]},
			},
			{
				Name:    "processtask_task_definition_key",
				Unique:  false,
				Columns: []*schema.Column{ProcessTasksColumns[4]},
			},
			{
				Name:    "processtask_assignee",
				Unique:  false,
				Columns: []*schema.Column{ProcessTasksColumns[7]},
			},
			{
				Name:    "processtask_status",
				Unique:  false,
				Columns: []*schema.Column{ProcessTasksColumns[10]},
			},
			{
				Name:    "processtask_priority",
				Unique:  false,
				Columns: []*schema.Column{ProcessTasksColumns[11]},
			},
			{
				Name:    "processtask_due_date",
				Unique:  false,
				Columns: []*schema.Column{ProcessTasksColumns[12]},
			},
			{
				Name:    "processtask_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessTasksColumns[22]},
			},
			{
				Name:    "processtask_created_time",
				Unique:  false,
				Columns: []*schema.Column{ProcessTasksColumns[13]},
			},
			{
				Name:    "processtask_parent_task_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessTasksColumns[20]},
			},
			{
				Name:    "processtask_root_task_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessTasksColumns[21]},
			},
		},
	}
	// ProcessVariablesColumns holds the columns for the "process_variables" table.
	ProcessVariablesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "variable_id", Type: field.TypeString, Unique: true},
		{Name: "process_instance_id", Type: field.TypeString},
		{Name: "task_id", Type: field.TypeString, Nullable: true},
		{Name: "variable_name", Type: field.TypeString},
		{Name: "variable_type", Type: field.TypeString, Default: "string"},
		{Name: "variable_value", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "scope", Type: field.TypeString, Default: "process"},
		{Name: "is_transient", Type: field.TypeBool, Default: false},
		{Name: "serialization_format", Type: field.TypeString, Default: "json"},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ProcessVariablesTable holds the schema information for the "process_variables" table.
	ProcessVariablesTable = &schema.Table{
		Name:       "process_variables",
		Columns:    ProcessVariablesColumns,
		PrimaryKey: []*schema.Column{ProcessVariablesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "processvariable_variable_id",
				Unique:  true,
				Columns: []*schema.Column{ProcessVariablesColumns[1]},
			},
			{
				Name:    "processvariable_process_instance_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessVariablesColumns[2]},
			},
			{
				Name:    "processvariable_task_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessVariablesColumns[3]},
			},
			{
				Name:    "processvariable_variable_name",
				Unique:  false,
				Columns: []*schema.Column{ProcessVariablesColumns[4]},
			},
			{
				Name:    "processvariable_scope",
				Unique:  false,
				Columns: []*schema.Column{ProcessVariablesColumns[7]},
			},
			{
				Name:    "processvariable_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ProcessVariablesColumns[10]},
			},
			{
				Name:    "processvariable_created_at",
				Unique:  false,
				Columns: []*schema.Column{ProcessVariablesColumns[11]},
			},
		},
	}
	// PromptTemplatesColumns holds the columns for the "prompt_templates" table.
	PromptTemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "version", Type: field.TypeString, Default: "v1"},
		{Name: "template", Type: field.TypeString, Size: 2147483647},
		{Name: "description", Type: field.TypeString, Default: ""},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
	}
	// PromptTemplatesTable holds the schema information for the "prompt_templates" table.
	PromptTemplatesTable = &schema.Table{
		Name:       "prompt_templates",
		Columns:    PromptTemplatesColumns,
		PrimaryKey: []*schema.Column{PromptTemplatesColumns[0]},
	}
	// SLADefinitionsColumns holds the columns for the "sla_definitions" table.
	SLADefinitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// SLADefinitionsTable holds the schema information for the "sla_definitions" table.
	SLADefinitionsTable = &schema.Table{
		Name:       "sla_definitions",
		Columns:    SLADefinitionsColumns,
		PrimaryKey: []*schema.Column{SLADefinitionsColumns[0]},
	}
	// SLAViolationsColumns holds the columns for the "sla_violations" table.
	SLAViolationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "sla_definition_id", Type: field.TypeInt},
		{Name: "ticket_id", Type: field.TypeInt},
		{Name: "violation_type", Type: field.TypeString},
		{Name: "violation_time", Type: field.TypeTime},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// SLAViolationsTable holds the schema information for the "sla_violations" table.
	SLAViolationsTable = &schema.Table{
		Name:       "sla_violations",
		Columns:    SLAViolationsColumns,
		PrimaryKey: []*schema.Column{SLAViolationsColumns[0]},
	}
	// ServiceCatalogsColumns holds the columns for the "service_catalogs" table.
	ServiceCatalogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "category", Type: field.TypeString, Nullable: true},
		{Name: "price", Type: field.TypeFloat64, Nullable: true},
		{Name: "delivery_time", Type: field.TypeInt, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "active"},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ServiceCatalogsTable holds the schema information for the "service_catalogs" table.
	ServiceCatalogsTable = &schema.Table{
		Name:       "service_catalogs",
		Columns:    ServiceCatalogsColumns,
		PrimaryKey: []*schema.Column{ServiceCatalogsColumns[0]},
	}
	// ServiceRequestsColumns holds the columns for the "service_requests" table.
	ServiceRequestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "catalog_id", Type: field.TypeInt},
		{Name: "requester_id", Type: field.TypeInt},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "reason", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ServiceRequestsTable holds the schema information for the "service_requests" table.
	ServiceRequestsTable = &schema.Table{
		Name:       "service_requests",
		Columns:    ServiceRequestsColumns,
		PrimaryKey: []*schema.Column{ServiceRequestsColumns[0]},
	}
	// TenantsColumns holds the columns for the "tenants" table.
	TenantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "domain", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeString, Default: "standard"},
		{Name: "status", Type: field.TypeString, Default: "active"},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// TenantsTable holds the schema information for the "tenants" table.
	TenantsTable = &schema.Table{
		Name:       "tenants",
		Columns:    TenantsColumns,
		PrimaryKey: []*schema.Column{TenantsColumns[0]},
	}
	// TicketsColumns holds the columns for the "tickets" table.
	TicketsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "status", Type: field.TypeString, Default: "open"},
		{Name: "priority", Type: field.TypeString, Default: "medium"},
		{Name: "ticket_number", Type: field.TypeString, Unique: true},
		{Name: "requester_id", Type: field.TypeInt},
		{Name: "assignee_id", Type: field.TypeInt, Nullable: true},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "parent_ticket_id", Type: field.TypeInt, Nullable: true},
		{Name: "category_id", Type: field.TypeInt, Nullable: true},
		{Name: "ticket_tag_tickets", Type: field.TypeInt, Nullable: true},
		{Name: "template_id", Type: field.TypeInt, Nullable: true},
	}
	// TicketsTable holds the schema information for the "tickets" table.
	TicketsTable = &schema.Table{
		Name:       "tickets",
		Columns:    TicketsColumns,
		PrimaryKey: []*schema.Column{TicketsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tickets_tickets_related_tickets",
				Columns:    []*schema.Column{TicketsColumns[11]},
				RefColumns: []*schema.Column{TicketsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tickets_ticket_categories_tickets",
				Columns:    []*schema.Column{TicketsColumns[12]},
				RefColumns: []*schema.Column{TicketCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tickets_ticket_tags_tickets",
				Columns:    []*schema.Column{TicketsColumns[13]},
				RefColumns: []*schema.Column{TicketTagsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tickets_ticket_templates_tickets",
				Columns:    []*schema.Column{TicketsColumns[14]},
				RefColumns: []*schema.Column{TicketTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TicketCategoriesColumns holds the columns for the "ticket_categories" table.
	TicketCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "level", Type: field.TypeInt, Default: 1},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true},
	}
	// TicketCategoriesTable holds the schema information for the "ticket_categories" table.
	TicketCategoriesTable = &schema.Table{
		Name:       "ticket_categories",
		Columns:    TicketCategoriesColumns,
		PrimaryKey: []*schema.Column{TicketCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ticket_categories_ticket_categories_children",
				Columns:    []*schema.Column{TicketCategoriesColumns[10]},
				RefColumns: []*schema.Column{TicketCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TicketTagsColumns holds the columns for the "ticket_tags" table.
	TicketTagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "color", Type: field.TypeString, Default: "#1890ff"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "ticket_tags", Type: field.TypeInt, Nullable: true},
	}
	// TicketTagsTable holds the schema information for the "ticket_tags" table.
	TicketTagsTable = &schema.Table{
		Name:       "ticket_tags",
		Columns:    TicketTagsColumns,
		PrimaryKey: []*schema.Column{TicketTagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ticket_tags_tickets_tags",
				Columns:    []*schema.Column{TicketTagsColumns[8]},
				RefColumns: []*schema.Column{TicketsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TicketTemplatesColumns holds the columns for the "ticket_templates" table.
	TicketTemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "category", Type: field.TypeString},
		{Name: "priority", Type: field.TypeString, Default: "medium"},
		{Name: "form_fields", Type: field.TypeJSON, Nullable: true},
		{Name: "workflow_steps", Type: field.TypeJSON, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// TicketTemplatesTable holds the schema information for the "ticket_templates" table.
	TicketTemplatesTable = &schema.Table{
		Name:       "ticket_templates",
		Columns:    TicketTemplatesColumns,
		PrimaryKey: []*schema.Column{TicketTemplatesColumns[0]},
	}
	// ToolInvocationsColumns holds the columns for the "tool_invocations" table.
	ToolInvocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "tool_name", Type: field.TypeString},
		{Name: "arguments", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "result", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "status", Type: field.TypeString, Default: "success"},
		{Name: "request_id", Type: field.TypeString, Nullable: true},
		{Name: "needs_approval", Type: field.TypeBool, Default: false},
		{Name: "approval_state", Type: field.TypeString, Default: "none"},
		{Name: "approval_reason", Type: field.TypeString, Default: ""},
		{Name: "approved_by", Type: field.TypeInt, Nullable: true},
		{Name: "approved_at", Type: field.TypeTime, Nullable: true},
		{Name: "dry_run", Type: field.TypeBool, Default: false},
		{Name: "error", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "conversation_id", Type: field.TypeInt},
	}
	// ToolInvocationsTable holds the schema information for the "tool_invocations" table.
	ToolInvocationsTable = &schema.Table{
		Name:       "tool_invocations",
		Columns:    ToolInvocationsColumns,
		PrimaryKey: []*schema.Column{ToolInvocationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tool_invocations_conversations_tool_invocations",
				Columns:    []*schema.Column{ToolInvocationsColumns[14]},
				RefColumns: []*schema.Column{ConversationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "department", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "password_hash", Type: field.TypeString},
		{Name: "active", Type: field.TypeBool, Default: true},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// WorkflowsColumns holds the columns for the "workflows" table.
	WorkflowsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "type", Type: field.TypeString, Default: "ticket"},
		{Name: "definition", Type: field.TypeJSON},
		{Name: "version", Type: field.TypeString, Default: "1.0.0"},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// WorkflowsTable holds the schema information for the "workflows" table.
	WorkflowsTable = &schema.Table{
		Name:       "workflows",
		Columns:    WorkflowsColumns,
		PrimaryKey: []*schema.Column{WorkflowsColumns[0]},
	}
	// WorkflowInstancesColumns holds the columns for the "workflow_instances" table.
	WorkflowInstancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeString, Default: "running"},
		{Name: "current_step", Type: field.TypeString, Nullable: true},
		{Name: "context", Type: field.TypeJSON, Nullable: true},
		{Name: "entity_id", Type: field.TypeInt},
		{Name: "entity_type", Type: field.TypeString, Default: "ticket"},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "started_at", Type: field.TypeTime},
		{Name: "completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "ticket_workflow_instances", Type: field.TypeInt, Nullable: true},
		{Name: "workflow_id", Type: field.TypeInt},
	}
	// WorkflowInstancesTable holds the schema information for the "workflow_instances" table.
	WorkflowInstancesTable = &schema.Table{
		Name:       "workflow_instances",
		Columns:    WorkflowInstancesColumns,
		PrimaryKey: []*schema.Column{WorkflowInstancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workflow_instances_tickets_workflow_instances",
				Columns:    []*schema.Column{WorkflowInstancesColumns[11]},
				RefColumns: []*schema.Column{TicketsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "workflow_instances_workflows_workflow_instances",
				Columns:    []*schema.Column{WorkflowInstancesColumns[12]},
				RefColumns: []*schema.Column{WorkflowsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuditLogsTable,
		CiAttributeDefinitionsTable,
		CiRelationshipsTable,
		CiTypesTable,
		ChangesTable,
		ConfigurationItemsTable,
		ConversationsTable,
		IncidentsTable,
		KnowledgeArticlesTable,
		MessagesTable,
		NotificationsTable,
		ProblemsTable,
		ProcessDefinitionsTable,
		ProcessDeploymentsTable,
		ProcessExecutionHistoriesTable,
		ProcessInstancesTable,
		ProcessTasksTable,
		ProcessVariablesTable,
		PromptTemplatesTable,
		SLADefinitionsTable,
		SLAViolationsTable,
		ServiceCatalogsTable,
		ServiceRequestsTable,
		TenantsTable,
		TicketsTable,
		TicketCategoriesTable,
		TicketTagsTable,
		TicketTemplatesTable,
		ToolInvocationsTable,
		UsersTable,
		WorkflowsTable,
		WorkflowInstancesTable,
	}
)

func init() {
	MessagesTable.ForeignKeys[0].RefTable = ConversationsTable
	TicketsTable.ForeignKeys[0].RefTable = TicketsTable
	TicketsTable.ForeignKeys[1].RefTable = TicketCategoriesTable
	TicketsTable.ForeignKeys[2].RefTable = TicketTagsTable
	TicketsTable.ForeignKeys[3].RefTable = TicketTemplatesTable
	TicketCategoriesTable.ForeignKeys[0].RefTable = TicketCategoriesTable
	TicketTagsTable.ForeignKeys[0].RefTable = TicketsTable
	ToolInvocationsTable.ForeignKeys[0].RefTable = ConversationsTable
	WorkflowInstancesTable.ForeignKeys[0].RefTable = TicketsTable
	WorkflowInstancesTable.ForeignKeys[1].RefTable = WorkflowsTable
}
