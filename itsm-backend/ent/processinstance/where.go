// Code generated by ent, DO NOT EDIT.

package processinstance

import (
	"itsm-backend/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldID, id))
}

// ProcessInstanceID applies equality check predicate on the "process_instance_id" field. It's identical to ProcessInstanceIDEQ.
func ProcessInstanceID(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessInstanceID, v))
}

// BusinessKey applies equality check predicate on the "business_key" field. It's identical to BusinessKeyEQ.
func BusinessKey(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldBusinessKey, v))
}

// ProcessDefinitionKey applies equality check predicate on the "process_definition_key" field. It's identical to ProcessDefinitionKeyEQ.
func ProcessDefinitionKey(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionID applies equality check predicate on the "process_definition_id" field. It's identical to ProcessDefinitionIDEQ.
func ProcessDefinitionID(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessDefinitionID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldStatus, v))
}

// CurrentActivityID applies equality check predicate on the "current_activity_id" field. It's identical to CurrentActivityIDEQ.
func CurrentActivityID(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldCurrentActivityID, v))
}

// CurrentActivityName applies equality check predicate on the "current_activity_name" field. It's identical to CurrentActivityNameEQ.
func CurrentActivityName(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldCurrentActivityName, v))
}

// StartTime applies equality check predicate on the "start_time" field. It's identical to StartTimeEQ.
func StartTime(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldStartTime, v))
}

// EndTime applies equality check predicate on the "end_time" field. It's identical to EndTimeEQ.
func EndTime(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldEndTime, v))
}

// SuspendedTime applies equality check predicate on the "suspended_time" field. It's identical to SuspendedTimeEQ.
func SuspendedTime(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldSuspendedTime, v))
}

// SuspendedReason applies equality check predicate on the "suspended_reason" field. It's identical to SuspendedReasonEQ.
func SuspendedReason(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldSuspendedReason, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldTenantID, v))
}

// Initiator applies equality check predicate on the "initiator" field. It's identical to InitiatorEQ.
func Initiator(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldInitiator, v))
}

// ParentProcessInstanceID applies equality check predicate on the "parent_process_instance_id" field. It's identical to ParentProcessInstanceIDEQ.
func ParentProcessInstanceID(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldParentProcessInstanceID, v))
}

// RootProcessInstanceID applies equality check predicate on the "root_process_instance_id" field. It's identical to RootProcessInstanceIDEQ.
func RootProcessInstanceID(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldRootProcessInstanceID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldUpdatedAt, v))
}

// ProcessInstanceIDEQ applies the EQ predicate on the "process_instance_id" field.
func ProcessInstanceIDEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDNEQ applies the NEQ predicate on the "process_instance_id" field.
func ProcessInstanceIDNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDIn applies the In predicate on the "process_instance_id" field.
func ProcessInstanceIDIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDNotIn applies the NotIn predicate on the "process_instance_id" field.
func ProcessInstanceIDNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDGT applies the GT predicate on the "process_instance_id" field.
func ProcessInstanceIDGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDGTE applies the GTE predicate on the "process_instance_id" field.
func ProcessInstanceIDGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLT applies the LT predicate on the "process_instance_id" field.
func ProcessInstanceIDLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLTE applies the LTE predicate on the "process_instance_id" field.
func ProcessInstanceIDLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDContains applies the Contains predicate on the "process_instance_id" field.
func ProcessInstanceIDContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldProcessInstanceID, v))
}

// ProcessInstanceIDHasPrefix applies the HasPrefix predicate on the "process_instance_id" field.
func ProcessInstanceIDHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldProcessInstanceID, v))
}

// ProcessInstanceIDHasSuffix applies the HasSuffix predicate on the "process_instance_id" field.
func ProcessInstanceIDHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldProcessInstanceID, v))
}

// ProcessInstanceIDEqualFold applies the EqualFold predicate on the "process_instance_id" field.
func ProcessInstanceIDEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldProcessInstanceID, v))
}

// ProcessInstanceIDContainsFold applies the ContainsFold predicate on the "process_instance_id" field.
func ProcessInstanceIDContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldProcessInstanceID, v))
}

// BusinessKeyEQ applies the EQ predicate on the "business_key" field.
func BusinessKeyEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldBusinessKey, v))
}

// BusinessKeyNEQ applies the NEQ predicate on the "business_key" field.
func BusinessKeyNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldBusinessKey, v))
}

// BusinessKeyIn applies the In predicate on the "business_key" field.
func BusinessKeyIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldBusinessKey, vs...))
}

// BusinessKeyNotIn applies the NotIn predicate on the "business_key" field.
func BusinessKeyNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldBusinessKey, vs...))
}

// BusinessKeyGT applies the GT predicate on the "business_key" field.
func BusinessKeyGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldBusinessKey, v))
}

// BusinessKeyGTE applies the GTE predicate on the "business_key" field.
func BusinessKeyGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldBusinessKey, v))
}

// BusinessKeyLT applies the LT predicate on the "business_key" field.
func BusinessKeyLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldBusinessKey, v))
}

// BusinessKeyLTE applies the LTE predicate on the "business_key" field.
func BusinessKeyLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldBusinessKey, v))
}

// BusinessKeyContains applies the Contains predicate on the "business_key" field.
func BusinessKeyContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldBusinessKey, v))
}

// BusinessKeyHasPrefix applies the HasPrefix predicate on the "business_key" field.
func BusinessKeyHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldBusinessKey, v))
}

// BusinessKeyHasSuffix applies the HasSuffix predicate on the "business_key" field.
func BusinessKeyHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldBusinessKey, v))
}

// BusinessKeyIsNil applies the IsNil predicate on the "business_key" field.
func BusinessKeyIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldBusinessKey))
}

// BusinessKeyNotNil applies the NotNil predicate on the "business_key" field.
func BusinessKeyNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldBusinessKey))
}

// BusinessKeyEqualFold applies the EqualFold predicate on the "business_key" field.
func BusinessKeyEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldBusinessKey, v))
}

// BusinessKeyContainsFold applies the ContainsFold predicate on the "business_key" field.
func BusinessKeyContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldBusinessKey, v))
}

// ProcessDefinitionKeyEQ applies the EQ predicate on the "process_definition_key" field.
func ProcessDefinitionKeyEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyNEQ applies the NEQ predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyIn applies the In predicate on the "process_definition_key" field.
func ProcessDefinitionKeyIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldProcessDefinitionKey, vs...))
}

// ProcessDefinitionKeyNotIn applies the NotIn predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldProcessDefinitionKey, vs...))
}

// ProcessDefinitionKeyGT applies the GT predicate on the "process_definition_key" field.
func ProcessDefinitionKeyGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyGTE applies the GTE predicate on the "process_definition_key" field.
func ProcessDefinitionKeyGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyLT applies the LT predicate on the "process_definition_key" field.
func ProcessDefinitionKeyLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyLTE applies the LTE predicate on the "process_definition_key" field.
func ProcessDefinitionKeyLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyContains applies the Contains predicate on the "process_definition_key" field.
func ProcessDefinitionKeyContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyHasPrefix applies the HasPrefix predicate on the "process_definition_key" field.
func ProcessDefinitionKeyHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyHasSuffix applies the HasSuffix predicate on the "process_definition_key" field.
func ProcessDefinitionKeyHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyEqualFold applies the EqualFold predicate on the "process_definition_key" field.
func ProcessDefinitionKeyEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyContainsFold applies the ContainsFold predicate on the "process_definition_key" field.
func ProcessDefinitionKeyContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionIDEQ applies the EQ predicate on the "process_definition_id" field.
func ProcessDefinitionIDEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDNEQ applies the NEQ predicate on the "process_definition_id" field.
func ProcessDefinitionIDNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDIn applies the In predicate on the "process_definition_id" field.
func ProcessDefinitionIDIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldProcessDefinitionID, vs...))
}

// ProcessDefinitionIDNotIn applies the NotIn predicate on the "process_definition_id" field.
func ProcessDefinitionIDNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldProcessDefinitionID, vs...))
}

// ProcessDefinitionIDGT applies the GT predicate on the "process_definition_id" field.
func ProcessDefinitionIDGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDGTE applies the GTE predicate on the "process_definition_id" field.
func ProcessDefinitionIDGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDLT applies the LT predicate on the "process_definition_id" field.
func ProcessDefinitionIDLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDLTE applies the LTE predicate on the "process_definition_id" field.
func ProcessDefinitionIDLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDContains applies the Contains predicate on the "process_definition_id" field.
func ProcessDefinitionIDContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDHasPrefix applies the HasPrefix predicate on the "process_definition_id" field.
func ProcessDefinitionIDHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDHasSuffix applies the HasSuffix predicate on the "process_definition_id" field.
func ProcessDefinitionIDHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDEqualFold applies the EqualFold predicate on the "process_definition_id" field.
func ProcessDefinitionIDEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldProcessDefinitionID, v))
}

// ProcessDefinitionIDContainsFold applies the ContainsFold predicate on the "process_definition_id" field.
func ProcessDefinitionIDContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldProcessDefinitionID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldStatus, v))
}

// CurrentActivityIDEQ applies the EQ predicate on the "current_activity_id" field.
func CurrentActivityIDEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldCurrentActivityID, v))
}

// CurrentActivityIDNEQ applies the NEQ predicate on the "current_activity_id" field.
func CurrentActivityIDNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldCurrentActivityID, v))
}

// CurrentActivityIDIn applies the In predicate on the "current_activity_id" field.
func CurrentActivityIDIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldCurrentActivityID, vs...))
}

// CurrentActivityIDNotIn applies the NotIn predicate on the "current_activity_id" field.
func CurrentActivityIDNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldCurrentActivityID, vs...))
}

// CurrentActivityIDGT applies the GT predicate on the "current_activity_id" field.
func CurrentActivityIDGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldCurrentActivityID, v))
}

// CurrentActivityIDGTE applies the GTE predicate on the "current_activity_id" field.
func CurrentActivityIDGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldCurrentActivityID, v))
}

// CurrentActivityIDLT applies the LT predicate on the "current_activity_id" field.
func CurrentActivityIDLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldCurrentActivityID, v))
}

// CurrentActivityIDLTE applies the LTE predicate on the "current_activity_id" field.
func CurrentActivityIDLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldCurrentActivityID, v))
}

// CurrentActivityIDContains applies the Contains predicate on the "current_activity_id" field.
func CurrentActivityIDContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldCurrentActivityID, v))
}

// CurrentActivityIDHasPrefix applies the HasPrefix predicate on the "current_activity_id" field.
func CurrentActivityIDHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldCurrentActivityID, v))
}

// CurrentActivityIDHasSuffix applies the HasSuffix predicate on the "current_activity_id" field.
func CurrentActivityIDHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldCurrentActivityID, v))
}

// CurrentActivityIDIsNil applies the IsNil predicate on the "current_activity_id" field.
func CurrentActivityIDIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldCurrentActivityID))
}

// CurrentActivityIDNotNil applies the NotNil predicate on the "current_activity_id" field.
func CurrentActivityIDNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldCurrentActivityID))
}

// CurrentActivityIDEqualFold applies the EqualFold predicate on the "current_activity_id" field.
func CurrentActivityIDEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldCurrentActivityID, v))
}

// CurrentActivityIDContainsFold applies the ContainsFold predicate on the "current_activity_id" field.
func CurrentActivityIDContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldCurrentActivityID, v))
}

// CurrentActivityNameEQ applies the EQ predicate on the "current_activity_name" field.
func CurrentActivityNameEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldCurrentActivityName, v))
}

// CurrentActivityNameNEQ applies the NEQ predicate on the "current_activity_name" field.
func CurrentActivityNameNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldCurrentActivityName, v))
}

// CurrentActivityNameIn applies the In predicate on the "current_activity_name" field.
func CurrentActivityNameIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldCurrentActivityName, vs...))
}

// CurrentActivityNameNotIn applies the NotIn predicate on the "current_activity_name" field.
func CurrentActivityNameNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldCurrentActivityName, vs...))
}

// CurrentActivityNameGT applies the GT predicate on the "current_activity_name" field.
func CurrentActivityNameGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldCurrentActivityName, v))
}

// CurrentActivityNameGTE applies the GTE predicate on the "current_activity_name" field.
func CurrentActivityNameGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldCurrentActivityName, v))
}

// CurrentActivityNameLT applies the LT predicate on the "current_activity_name" field.
func CurrentActivityNameLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldCurrentActivityName, v))
}

// CurrentActivityNameLTE applies the LTE predicate on the "current_activity_name" field.
func CurrentActivityNameLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldCurrentActivityName, v))
}

// CurrentActivityNameContains applies the Contains predicate on the "current_activity_name" field.
func CurrentActivityNameContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldCurrentActivityName, v))
}

// CurrentActivityNameHasPrefix applies the HasPrefix predicate on the "current_activity_name" field.
func CurrentActivityNameHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldCurrentActivityName, v))
}

// CurrentActivityNameHasSuffix applies the HasSuffix predicate on the "current_activity_name" field.
func CurrentActivityNameHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldCurrentActivityName, v))
}

// CurrentActivityNameIsNil applies the IsNil predicate on the "current_activity_name" field.
func CurrentActivityNameIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldCurrentActivityName))
}

// CurrentActivityNameNotNil applies the NotNil predicate on the "current_activity_name" field.
func CurrentActivityNameNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldCurrentActivityName))
}

// CurrentActivityNameEqualFold applies the EqualFold predicate on the "current_activity_name" field.
func CurrentActivityNameEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldCurrentActivityName, v))
}

// CurrentActivityNameContainsFold applies the ContainsFold predicate on the "current_activity_name" field.
func CurrentActivityNameContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldCurrentActivityName, v))
}

// VariablesIsNil applies the IsNil predicate on the "variables" field.
func VariablesIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldVariables))
}

// VariablesNotNil applies the NotNil predicate on the "variables" field.
func VariablesNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldVariables))
}

// StartTimeEQ applies the EQ predicate on the "start_time" field.
func StartTimeEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldStartTime, v))
}

// StartTimeNEQ applies the NEQ predicate on the "start_time" field.
func StartTimeNEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldStartTime, v))
}

// StartTimeIn applies the In predicate on the "start_time" field.
func StartTimeIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldStartTime, vs...))
}

// StartTimeNotIn applies the NotIn predicate on the "start_time" field.
func StartTimeNotIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldStartTime, vs...))
}

// StartTimeGT applies the GT predicate on the "start_time" field.
func StartTimeGT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldStartTime, v))
}

// StartTimeGTE applies the GTE predicate on the "start_time" field.
func StartTimeGTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldStartTime, v))
}

// StartTimeLT applies the LT predicate on the "start_time" field.
func StartTimeLT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldStartTime, v))
}

// StartTimeLTE applies the LTE predicate on the "start_time" field.
func StartTimeLTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldStartTime, v))
}

// EndTimeEQ applies the EQ predicate on the "end_time" field.
func EndTimeEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldEndTime, v))
}

// EndTimeNEQ applies the NEQ predicate on the "end_time" field.
func EndTimeNEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldEndTime, v))
}

// EndTimeIn applies the In predicate on the "end_time" field.
func EndTimeIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldEndTime, vs...))
}

// EndTimeNotIn applies the NotIn predicate on the "end_time" field.
func EndTimeNotIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldEndTime, vs...))
}

// EndTimeGT applies the GT predicate on the "end_time" field.
func EndTimeGT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldEndTime, v))
}

// EndTimeGTE applies the GTE predicate on the "end_time" field.
func EndTimeGTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldEndTime, v))
}

// EndTimeLT applies the LT predicate on the "end_time" field.
func EndTimeLT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldEndTime, v))
}

// EndTimeLTE applies the LTE predicate on the "end_time" field.
func EndTimeLTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldEndTime, v))
}

// EndTimeIsNil applies the IsNil predicate on the "end_time" field.
func EndTimeIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldEndTime))
}

// EndTimeNotNil applies the NotNil predicate on the "end_time" field.
func EndTimeNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldEndTime))
}

// SuspendedTimeEQ applies the EQ predicate on the "suspended_time" field.
func SuspendedTimeEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldSuspendedTime, v))
}

// SuspendedTimeNEQ applies the NEQ predicate on the "suspended_time" field.
func SuspendedTimeNEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldSuspendedTime, v))
}

// SuspendedTimeIn applies the In predicate on the "suspended_time" field.
func SuspendedTimeIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldSuspendedTime, vs...))
}

// SuspendedTimeNotIn applies the NotIn predicate on the "suspended_time" field.
func SuspendedTimeNotIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldSuspendedTime, vs...))
}

// SuspendedTimeGT applies the GT predicate on the "suspended_time" field.
func SuspendedTimeGT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldSuspendedTime, v))
}

// SuspendedTimeGTE applies the GTE predicate on the "suspended_time" field.
func SuspendedTimeGTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldSuspendedTime, v))
}

// SuspendedTimeLT applies the LT predicate on the "suspended_time" field.
func SuspendedTimeLT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldSuspendedTime, v))
}

// SuspendedTimeLTE applies the LTE predicate on the "suspended_time" field.
func SuspendedTimeLTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldSuspendedTime, v))
}

// SuspendedTimeIsNil applies the IsNil predicate on the "suspended_time" field.
func SuspendedTimeIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldSuspendedTime))
}

// SuspendedTimeNotNil applies the NotNil predicate on the "suspended_time" field.
func SuspendedTimeNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldSuspendedTime))
}

// SuspendedReasonEQ applies the EQ predicate on the "suspended_reason" field.
func SuspendedReasonEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldSuspendedReason, v))
}

// SuspendedReasonNEQ applies the NEQ predicate on the "suspended_reason" field.
func SuspendedReasonNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldSuspendedReason, v))
}

// SuspendedReasonIn applies the In predicate on the "suspended_reason" field.
func SuspendedReasonIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldSuspendedReason, vs...))
}

// SuspendedReasonNotIn applies the NotIn predicate on the "suspended_reason" field.
func SuspendedReasonNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldSuspendedReason, vs...))
}

// SuspendedReasonGT applies the GT predicate on the "suspended_reason" field.
func SuspendedReasonGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldSuspendedReason, v))
}

// SuspendedReasonGTE applies the GTE predicate on the "suspended_reason" field.
func SuspendedReasonGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldSuspendedReason, v))
}

// SuspendedReasonLT applies the LT predicate on the "suspended_reason" field.
func SuspendedReasonLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldSuspendedReason, v))
}

// SuspendedReasonLTE applies the LTE predicate on the "suspended_reason" field.
func SuspendedReasonLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldSuspendedReason, v))
}

// SuspendedReasonContains applies the Contains predicate on the "suspended_reason" field.
func SuspendedReasonContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldSuspendedReason, v))
}

// SuspendedReasonHasPrefix applies the HasPrefix predicate on the "suspended_reason" field.
func SuspendedReasonHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldSuspendedReason, v))
}

// SuspendedReasonHasSuffix applies the HasSuffix predicate on the "suspended_reason" field.
func SuspendedReasonHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldSuspendedReason, v))
}

// SuspendedReasonIsNil applies the IsNil predicate on the "suspended_reason" field.
func SuspendedReasonIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldSuspendedReason))
}

// SuspendedReasonNotNil applies the NotNil predicate on the "suspended_reason" field.
func SuspendedReasonNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldSuspendedReason))
}

// SuspendedReasonEqualFold applies the EqualFold predicate on the "suspended_reason" field.
func SuspendedReasonEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldSuspendedReason, v))
}

// SuspendedReasonContainsFold applies the ContainsFold predicate on the "suspended_reason" field.
func SuspendedReasonContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldSuspendedReason, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v int) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldTenantID, v))
}

// InitiatorEQ applies the EQ predicate on the "initiator" field.
func InitiatorEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldInitiator, v))
}

// InitiatorNEQ applies the NEQ predicate on the "initiator" field.
func InitiatorNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldInitiator, v))
}

// InitiatorIn applies the In predicate on the "initiator" field.
func InitiatorIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldInitiator, vs...))
}

// InitiatorNotIn applies the NotIn predicate on the "initiator" field.
func InitiatorNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldInitiator, vs...))
}

// InitiatorGT applies the GT predicate on the "initiator" field.
func InitiatorGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldInitiator, v))
}

// InitiatorGTE applies the GTE predicate on the "initiator" field.
func InitiatorGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldInitiator, v))
}

// InitiatorLT applies the LT predicate on the "initiator" field.
func InitiatorLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldInitiator, v))
}

// InitiatorLTE applies the LTE predicate on the "initiator" field.
func InitiatorLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldInitiator, v))
}

// InitiatorContains applies the Contains predicate on the "initiator" field.
func InitiatorContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldInitiator, v))
}

// InitiatorHasPrefix applies the HasPrefix predicate on the "initiator" field.
func InitiatorHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldInitiator, v))
}

// InitiatorHasSuffix applies the HasSuffix predicate on the "initiator" field.
func InitiatorHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldInitiator, v))
}

// InitiatorIsNil applies the IsNil predicate on the "initiator" field.
func InitiatorIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldInitiator))
}

// InitiatorNotNil applies the NotNil predicate on the "initiator" field.
func InitiatorNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldInitiator))
}

// InitiatorEqualFold applies the EqualFold predicate on the "initiator" field.
func InitiatorEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldInitiator, v))
}

// InitiatorContainsFold applies the ContainsFold predicate on the "initiator" field.
func InitiatorContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldInitiator, v))
}

// ParentProcessInstanceIDEQ applies the EQ predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldParentProcessInstanceID, v))
}

// ParentProcessInstanceIDNEQ applies the NEQ predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldParentProcessInstanceID, v))
}

// ParentProcessInstanceIDIn applies the In predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldParentProcessInstanceID, vs...))
}

// ParentProcessInstanceIDNotIn applies the NotIn predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldParentProcessInstanceID, vs...))
}

// ParentProcessInstanceIDGT applies the GT predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldParentProcessInstanceID, v))
}

// ParentProcessInstanceIDGTE applies the GTE predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldParentProcessInstanceID, v))
}

// ParentProcessInstanceIDLT applies the LT predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldParentProcessInstanceID, v))
}

// ParentProcessInstanceIDLTE applies the LTE predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldParentProcessInstanceID, v))
}

// ParentProcessInstanceIDContains applies the Contains predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldParentProcessInstanceID, v))
}

// ParentProcessInstanceIDHasPrefix applies the HasPrefix predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldParentProcessInstanceID, v))
}

// ParentProcessInstanceIDHasSuffix applies the HasSuffix predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldParentProcessInstanceID, v))
}

// ParentProcessInstanceIDIsNil applies the IsNil predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldParentProcessInstanceID))
}

// ParentProcessInstanceIDNotNil applies the NotNil predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldParentProcessInstanceID))
}

// ParentProcessInstanceIDEqualFold applies the EqualFold predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldParentProcessInstanceID, v))
}

// ParentProcessInstanceIDContainsFold applies the ContainsFold predicate on the "parent_process_instance_id" field.
func ParentProcessInstanceIDContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldParentProcessInstanceID, v))
}

// RootProcessInstanceIDEQ applies the EQ predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDNEQ applies the NEQ predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDNEQ(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDIn applies the In predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldRootProcessInstanceID, vs...))
}

// RootProcessInstanceIDNotIn applies the NotIn predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDNotIn(vs ...string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldRootProcessInstanceID, vs...))
}

// RootProcessInstanceIDGT applies the GT predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDGT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDGTE applies the GTE predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDGTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDLT applies the LT predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDLT(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDLTE applies the LTE predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDLTE(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDContains applies the Contains predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDContains(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContains(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDHasPrefix applies the HasPrefix predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDHasPrefix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasPrefix(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDHasSuffix applies the HasSuffix predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDHasSuffix(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldHasSuffix(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDIsNil applies the IsNil predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDIsNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIsNull(FieldRootProcessInstanceID))
}

// RootProcessInstanceIDNotNil applies the NotNil predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDNotNil() predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotNull(FieldRootProcessInstanceID))
}

// RootProcessInstanceIDEqualFold applies the EqualFold predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDEqualFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEqualFold(FieldRootProcessInstanceID, v))
}

// RootProcessInstanceIDContainsFold applies the ContainsFold predicate on the "root_process_instance_id" field.
func RootProcessInstanceIDContainsFold(v string) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldContainsFold(FieldRootProcessInstanceID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProcessInstance) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProcessInstance) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProcessInstance) predicate.ProcessInstance {
	return predicate.ProcessInstance(sql.NotPredicates(p))
}
