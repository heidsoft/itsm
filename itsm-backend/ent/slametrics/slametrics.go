// Code generated by ent, DO NOT EDIT.

package slametrics

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the slametrics type in the database.
	Label = "sla_metrics"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldServiceType holds the string denoting the service_type field in the database.
	FieldServiceType = "service_type"
	// FieldPriority holds the string denoting the priority field in the database.
	FieldPriority = "priority"
	// FieldImpact holds the string denoting the impact field in the database.
	FieldImpact = "impact"
	// FieldTotalTickets holds the string denoting the total_tickets field in the database.
	FieldTotalTickets = "total_tickets"
	// FieldMetSLATickets holds the string denoting the met_sla_tickets field in the database.
	FieldMetSLATickets = "met_sla_tickets"
	// FieldViolatedSLATickets holds the string denoting the violated_sla_tickets field in the database.
	FieldViolatedSLATickets = "violated_sla_tickets"
	// FieldSLAComplianceRate holds the string denoting the sla_compliance_rate field in the database.
	FieldSLAComplianceRate = "sla_compliance_rate"
	// FieldAvgResponseTime holds the string denoting the avg_response_time field in the database.
	FieldAvgResponseTime = "avg_response_time"
	// FieldAvgResolutionTime holds the string denoting the avg_resolution_time field in the database.
	FieldAvgResolutionTime = "avg_resolution_time"
	// FieldPeriod holds the string denoting the period field in the database.
	FieldPeriod = "period"
	// FieldPeriodStart holds the string denoting the period_start field in the database.
	FieldPeriodStart = "period_start"
	// FieldPeriodEnd holds the string denoting the period_end field in the database.
	FieldPeriodEnd = "period_end"
	// FieldTenantID holds the string denoting the tenant_id field in the database.
	FieldTenantID = "tenant_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the slametrics in the database.
	Table = "sla_metrics"
)

// Columns holds all SQL columns for slametrics fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldServiceType,
	FieldPriority,
	FieldImpact,
	FieldTotalTickets,
	FieldMetSLATickets,
	FieldViolatedSLATickets,
	FieldSLAComplianceRate,
	FieldAvgResponseTime,
	FieldAvgResolutionTime,
	FieldPeriod,
	FieldPeriodStart,
	FieldPeriodEnd,
	FieldTenantID,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)

// OrderOption defines the ordering options for the SLAMetrics queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreateTime orders the results by the create_time field.
func ByCreateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreateTime, opts...).ToFunc()
}

// ByUpdateTime orders the results by the update_time field.
func ByUpdateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdateTime, opts...).ToFunc()
}

// ByServiceType orders the results by the service_type field.
func ByServiceType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldServiceType, opts...).ToFunc()
}

// ByPriority orders the results by the priority field.
func ByPriority(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPriority, opts...).ToFunc()
}

// ByImpact orders the results by the impact field.
func ByImpact(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldImpact, opts...).ToFunc()
}

// ByTotalTickets orders the results by the total_tickets field.
func ByTotalTickets(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTotalTickets, opts...).ToFunc()
}

// ByMetSLATickets orders the results by the met_sla_tickets field.
func ByMetSLATickets(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMetSLATickets, opts...).ToFunc()
}

// ByViolatedSLATickets orders the results by the violated_sla_tickets field.
func ByViolatedSLATickets(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldViolatedSLATickets, opts...).ToFunc()
}

// BySLAComplianceRate orders the results by the sla_compliance_rate field.
func BySLAComplianceRate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSLAComplianceRate, opts...).ToFunc()
}

// ByAvgResponseTime orders the results by the avg_response_time field.
func ByAvgResponseTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAvgResponseTime, opts...).ToFunc()
}

// ByAvgResolutionTime orders the results by the avg_resolution_time field.
func ByAvgResolutionTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAvgResolutionTime, opts...).ToFunc()
}

// ByPeriod orders the results by the period field.
func ByPeriod(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPeriod, opts...).ToFunc()
}

// ByPeriodStart orders the results by the period_start field.
func ByPeriodStart(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPeriodStart, opts...).ToFunc()
}

// ByPeriodEnd orders the results by the period_end field.
func ByPeriodEnd(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPeriodEnd, opts...).ToFunc()
}

// ByTenantID orders the results by the tenant_id field.
func ByTenantID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTenantID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
