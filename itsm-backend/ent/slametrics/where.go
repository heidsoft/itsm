// Code generated by ent, DO NOT EDIT.

package slametrics

import (
	"itsm-backend/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldUpdateTime, v))
}

// ServiceType applies equality check predicate on the "service_type" field. It's identical to ServiceTypeEQ.
func ServiceType(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldServiceType, v))
}

// Priority applies equality check predicate on the "priority" field. It's identical to PriorityEQ.
func Priority(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldPriority, v))
}

// Impact applies equality check predicate on the "impact" field. It's identical to ImpactEQ.
func Impact(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldImpact, v))
}

// TotalTickets applies equality check predicate on the "total_tickets" field. It's identical to TotalTicketsEQ.
func TotalTickets(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldTotalTickets, v))
}

// MetSLATickets applies equality check predicate on the "met_sla_tickets" field. It's identical to MetSLATicketsEQ.
func MetSLATickets(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldMetSLATickets, v))
}

// ViolatedSLATickets applies equality check predicate on the "violated_sla_tickets" field. It's identical to ViolatedSLATicketsEQ.
func ViolatedSLATickets(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldViolatedSLATickets, v))
}

// SLAComplianceRate applies equality check predicate on the "sla_compliance_rate" field. It's identical to SLAComplianceRateEQ.
func SLAComplianceRate(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldSLAComplianceRate, v))
}

// AvgResponseTime applies equality check predicate on the "avg_response_time" field. It's identical to AvgResponseTimeEQ.
func AvgResponseTime(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldAvgResponseTime, v))
}

// AvgResolutionTime applies equality check predicate on the "avg_resolution_time" field. It's identical to AvgResolutionTimeEQ.
func AvgResolutionTime(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldAvgResolutionTime, v))
}

// Period applies equality check predicate on the "period" field. It's identical to PeriodEQ.
func Period(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldPeriod, v))
}

// PeriodStart applies equality check predicate on the "period_start" field. It's identical to PeriodStartEQ.
func PeriodStart(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldPeriodStart, v))
}

// PeriodEnd applies equality check predicate on the "period_end" field. It's identical to PeriodEndEQ.
func PeriodEnd(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldPeriodEnd, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldTenantID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldUpdateTime, v))
}

// ServiceTypeEQ applies the EQ predicate on the "service_type" field.
func ServiceTypeEQ(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldServiceType, v))
}

// ServiceTypeNEQ applies the NEQ predicate on the "service_type" field.
func ServiceTypeNEQ(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldServiceType, v))
}

// ServiceTypeIn applies the In predicate on the "service_type" field.
func ServiceTypeIn(vs ...string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldServiceType, vs...))
}

// ServiceTypeNotIn applies the NotIn predicate on the "service_type" field.
func ServiceTypeNotIn(vs ...string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldServiceType, vs...))
}

// ServiceTypeGT applies the GT predicate on the "service_type" field.
func ServiceTypeGT(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldServiceType, v))
}

// ServiceTypeGTE applies the GTE predicate on the "service_type" field.
func ServiceTypeGTE(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldServiceType, v))
}

// ServiceTypeLT applies the LT predicate on the "service_type" field.
func ServiceTypeLT(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldServiceType, v))
}

// ServiceTypeLTE applies the LTE predicate on the "service_type" field.
func ServiceTypeLTE(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldServiceType, v))
}

// ServiceTypeContains applies the Contains predicate on the "service_type" field.
func ServiceTypeContains(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldContains(FieldServiceType, v))
}

// ServiceTypeHasPrefix applies the HasPrefix predicate on the "service_type" field.
func ServiceTypeHasPrefix(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldHasPrefix(FieldServiceType, v))
}

// ServiceTypeHasSuffix applies the HasSuffix predicate on the "service_type" field.
func ServiceTypeHasSuffix(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldHasSuffix(FieldServiceType, v))
}

// ServiceTypeEqualFold applies the EqualFold predicate on the "service_type" field.
func ServiceTypeEqualFold(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEqualFold(FieldServiceType, v))
}

// ServiceTypeContainsFold applies the ContainsFold predicate on the "service_type" field.
func ServiceTypeContainsFold(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldContainsFold(FieldServiceType, v))
}

// PriorityEQ applies the EQ predicate on the "priority" field.
func PriorityEQ(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldPriority, v))
}

// PriorityNEQ applies the NEQ predicate on the "priority" field.
func PriorityNEQ(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldPriority, v))
}

// PriorityIn applies the In predicate on the "priority" field.
func PriorityIn(vs ...string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldPriority, vs...))
}

// PriorityNotIn applies the NotIn predicate on the "priority" field.
func PriorityNotIn(vs ...string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldPriority, vs...))
}

// PriorityGT applies the GT predicate on the "priority" field.
func PriorityGT(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldPriority, v))
}

// PriorityGTE applies the GTE predicate on the "priority" field.
func PriorityGTE(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldPriority, v))
}

// PriorityLT applies the LT predicate on the "priority" field.
func PriorityLT(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldPriority, v))
}

// PriorityLTE applies the LTE predicate on the "priority" field.
func PriorityLTE(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldPriority, v))
}

// PriorityContains applies the Contains predicate on the "priority" field.
func PriorityContains(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldContains(FieldPriority, v))
}

// PriorityHasPrefix applies the HasPrefix predicate on the "priority" field.
func PriorityHasPrefix(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldHasPrefix(FieldPriority, v))
}

// PriorityHasSuffix applies the HasSuffix predicate on the "priority" field.
func PriorityHasSuffix(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldHasSuffix(FieldPriority, v))
}

// PriorityEqualFold applies the EqualFold predicate on the "priority" field.
func PriorityEqualFold(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEqualFold(FieldPriority, v))
}

// PriorityContainsFold applies the ContainsFold predicate on the "priority" field.
func PriorityContainsFold(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldContainsFold(FieldPriority, v))
}

// ImpactEQ applies the EQ predicate on the "impact" field.
func ImpactEQ(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldImpact, v))
}

// ImpactNEQ applies the NEQ predicate on the "impact" field.
func ImpactNEQ(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldImpact, v))
}

// ImpactIn applies the In predicate on the "impact" field.
func ImpactIn(vs ...string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldImpact, vs...))
}

// ImpactNotIn applies the NotIn predicate on the "impact" field.
func ImpactNotIn(vs ...string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldImpact, vs...))
}

// ImpactGT applies the GT predicate on the "impact" field.
func ImpactGT(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldImpact, v))
}

// ImpactGTE applies the GTE predicate on the "impact" field.
func ImpactGTE(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldImpact, v))
}

// ImpactLT applies the LT predicate on the "impact" field.
func ImpactLT(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldImpact, v))
}

// ImpactLTE applies the LTE predicate on the "impact" field.
func ImpactLTE(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldImpact, v))
}

// ImpactContains applies the Contains predicate on the "impact" field.
func ImpactContains(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldContains(FieldImpact, v))
}

// ImpactHasPrefix applies the HasPrefix predicate on the "impact" field.
func ImpactHasPrefix(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldHasPrefix(FieldImpact, v))
}

// ImpactHasSuffix applies the HasSuffix predicate on the "impact" field.
func ImpactHasSuffix(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldHasSuffix(FieldImpact, v))
}

// ImpactEqualFold applies the EqualFold predicate on the "impact" field.
func ImpactEqualFold(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEqualFold(FieldImpact, v))
}

// ImpactContainsFold applies the ContainsFold predicate on the "impact" field.
func ImpactContainsFold(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldContainsFold(FieldImpact, v))
}

// TotalTicketsEQ applies the EQ predicate on the "total_tickets" field.
func TotalTicketsEQ(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldTotalTickets, v))
}

// TotalTicketsNEQ applies the NEQ predicate on the "total_tickets" field.
func TotalTicketsNEQ(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldTotalTickets, v))
}

// TotalTicketsIn applies the In predicate on the "total_tickets" field.
func TotalTicketsIn(vs ...int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldTotalTickets, vs...))
}

// TotalTicketsNotIn applies the NotIn predicate on the "total_tickets" field.
func TotalTicketsNotIn(vs ...int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldTotalTickets, vs...))
}

// TotalTicketsGT applies the GT predicate on the "total_tickets" field.
func TotalTicketsGT(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldTotalTickets, v))
}

// TotalTicketsGTE applies the GTE predicate on the "total_tickets" field.
func TotalTicketsGTE(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldTotalTickets, v))
}

// TotalTicketsLT applies the LT predicate on the "total_tickets" field.
func TotalTicketsLT(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldTotalTickets, v))
}

// TotalTicketsLTE applies the LTE predicate on the "total_tickets" field.
func TotalTicketsLTE(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldTotalTickets, v))
}

// MetSLATicketsEQ applies the EQ predicate on the "met_sla_tickets" field.
func MetSLATicketsEQ(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldMetSLATickets, v))
}

// MetSLATicketsNEQ applies the NEQ predicate on the "met_sla_tickets" field.
func MetSLATicketsNEQ(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldMetSLATickets, v))
}

// MetSLATicketsIn applies the In predicate on the "met_sla_tickets" field.
func MetSLATicketsIn(vs ...int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldMetSLATickets, vs...))
}

// MetSLATicketsNotIn applies the NotIn predicate on the "met_sla_tickets" field.
func MetSLATicketsNotIn(vs ...int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldMetSLATickets, vs...))
}

// MetSLATicketsGT applies the GT predicate on the "met_sla_tickets" field.
func MetSLATicketsGT(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldMetSLATickets, v))
}

// MetSLATicketsGTE applies the GTE predicate on the "met_sla_tickets" field.
func MetSLATicketsGTE(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldMetSLATickets, v))
}

// MetSLATicketsLT applies the LT predicate on the "met_sla_tickets" field.
func MetSLATicketsLT(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldMetSLATickets, v))
}

// MetSLATicketsLTE applies the LTE predicate on the "met_sla_tickets" field.
func MetSLATicketsLTE(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldMetSLATickets, v))
}

// ViolatedSLATicketsEQ applies the EQ predicate on the "violated_sla_tickets" field.
func ViolatedSLATicketsEQ(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldViolatedSLATickets, v))
}

// ViolatedSLATicketsNEQ applies the NEQ predicate on the "violated_sla_tickets" field.
func ViolatedSLATicketsNEQ(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldViolatedSLATickets, v))
}

// ViolatedSLATicketsIn applies the In predicate on the "violated_sla_tickets" field.
func ViolatedSLATicketsIn(vs ...int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldViolatedSLATickets, vs...))
}

// ViolatedSLATicketsNotIn applies the NotIn predicate on the "violated_sla_tickets" field.
func ViolatedSLATicketsNotIn(vs ...int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldViolatedSLATickets, vs...))
}

// ViolatedSLATicketsGT applies the GT predicate on the "violated_sla_tickets" field.
func ViolatedSLATicketsGT(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldViolatedSLATickets, v))
}

// ViolatedSLATicketsGTE applies the GTE predicate on the "violated_sla_tickets" field.
func ViolatedSLATicketsGTE(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldViolatedSLATickets, v))
}

// ViolatedSLATicketsLT applies the LT predicate on the "violated_sla_tickets" field.
func ViolatedSLATicketsLT(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldViolatedSLATickets, v))
}

// ViolatedSLATicketsLTE applies the LTE predicate on the "violated_sla_tickets" field.
func ViolatedSLATicketsLTE(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldViolatedSLATickets, v))
}

// SLAComplianceRateEQ applies the EQ predicate on the "sla_compliance_rate" field.
func SLAComplianceRateEQ(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldSLAComplianceRate, v))
}

// SLAComplianceRateNEQ applies the NEQ predicate on the "sla_compliance_rate" field.
func SLAComplianceRateNEQ(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldSLAComplianceRate, v))
}

// SLAComplianceRateIn applies the In predicate on the "sla_compliance_rate" field.
func SLAComplianceRateIn(vs ...float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldSLAComplianceRate, vs...))
}

// SLAComplianceRateNotIn applies the NotIn predicate on the "sla_compliance_rate" field.
func SLAComplianceRateNotIn(vs ...float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldSLAComplianceRate, vs...))
}

// SLAComplianceRateGT applies the GT predicate on the "sla_compliance_rate" field.
func SLAComplianceRateGT(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldSLAComplianceRate, v))
}

// SLAComplianceRateGTE applies the GTE predicate on the "sla_compliance_rate" field.
func SLAComplianceRateGTE(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldSLAComplianceRate, v))
}

// SLAComplianceRateLT applies the LT predicate on the "sla_compliance_rate" field.
func SLAComplianceRateLT(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldSLAComplianceRate, v))
}

// SLAComplianceRateLTE applies the LTE predicate on the "sla_compliance_rate" field.
func SLAComplianceRateLTE(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldSLAComplianceRate, v))
}

// AvgResponseTimeEQ applies the EQ predicate on the "avg_response_time" field.
func AvgResponseTimeEQ(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldAvgResponseTime, v))
}

// AvgResponseTimeNEQ applies the NEQ predicate on the "avg_response_time" field.
func AvgResponseTimeNEQ(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldAvgResponseTime, v))
}

// AvgResponseTimeIn applies the In predicate on the "avg_response_time" field.
func AvgResponseTimeIn(vs ...float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldAvgResponseTime, vs...))
}

// AvgResponseTimeNotIn applies the NotIn predicate on the "avg_response_time" field.
func AvgResponseTimeNotIn(vs ...float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldAvgResponseTime, vs...))
}

// AvgResponseTimeGT applies the GT predicate on the "avg_response_time" field.
func AvgResponseTimeGT(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldAvgResponseTime, v))
}

// AvgResponseTimeGTE applies the GTE predicate on the "avg_response_time" field.
func AvgResponseTimeGTE(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldAvgResponseTime, v))
}

// AvgResponseTimeLT applies the LT predicate on the "avg_response_time" field.
func AvgResponseTimeLT(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldAvgResponseTime, v))
}

// AvgResponseTimeLTE applies the LTE predicate on the "avg_response_time" field.
func AvgResponseTimeLTE(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldAvgResponseTime, v))
}

// AvgResolutionTimeEQ applies the EQ predicate on the "avg_resolution_time" field.
func AvgResolutionTimeEQ(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldAvgResolutionTime, v))
}

// AvgResolutionTimeNEQ applies the NEQ predicate on the "avg_resolution_time" field.
func AvgResolutionTimeNEQ(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldAvgResolutionTime, v))
}

// AvgResolutionTimeIn applies the In predicate on the "avg_resolution_time" field.
func AvgResolutionTimeIn(vs ...float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldAvgResolutionTime, vs...))
}

// AvgResolutionTimeNotIn applies the NotIn predicate on the "avg_resolution_time" field.
func AvgResolutionTimeNotIn(vs ...float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldAvgResolutionTime, vs...))
}

// AvgResolutionTimeGT applies the GT predicate on the "avg_resolution_time" field.
func AvgResolutionTimeGT(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldAvgResolutionTime, v))
}

// AvgResolutionTimeGTE applies the GTE predicate on the "avg_resolution_time" field.
func AvgResolutionTimeGTE(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldAvgResolutionTime, v))
}

// AvgResolutionTimeLT applies the LT predicate on the "avg_resolution_time" field.
func AvgResolutionTimeLT(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldAvgResolutionTime, v))
}

// AvgResolutionTimeLTE applies the LTE predicate on the "avg_resolution_time" field.
func AvgResolutionTimeLTE(v float64) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldAvgResolutionTime, v))
}

// PeriodEQ applies the EQ predicate on the "period" field.
func PeriodEQ(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldPeriod, v))
}

// PeriodNEQ applies the NEQ predicate on the "period" field.
func PeriodNEQ(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldPeriod, v))
}

// PeriodIn applies the In predicate on the "period" field.
func PeriodIn(vs ...string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldPeriod, vs...))
}

// PeriodNotIn applies the NotIn predicate on the "period" field.
func PeriodNotIn(vs ...string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldPeriod, vs...))
}

// PeriodGT applies the GT predicate on the "period" field.
func PeriodGT(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldPeriod, v))
}

// PeriodGTE applies the GTE predicate on the "period" field.
func PeriodGTE(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldPeriod, v))
}

// PeriodLT applies the LT predicate on the "period" field.
func PeriodLT(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldPeriod, v))
}

// PeriodLTE applies the LTE predicate on the "period" field.
func PeriodLTE(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldPeriod, v))
}

// PeriodContains applies the Contains predicate on the "period" field.
func PeriodContains(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldContains(FieldPeriod, v))
}

// PeriodHasPrefix applies the HasPrefix predicate on the "period" field.
func PeriodHasPrefix(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldHasPrefix(FieldPeriod, v))
}

// PeriodHasSuffix applies the HasSuffix predicate on the "period" field.
func PeriodHasSuffix(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldHasSuffix(FieldPeriod, v))
}

// PeriodEqualFold applies the EqualFold predicate on the "period" field.
func PeriodEqualFold(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEqualFold(FieldPeriod, v))
}

// PeriodContainsFold applies the ContainsFold predicate on the "period" field.
func PeriodContainsFold(v string) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldContainsFold(FieldPeriod, v))
}

// PeriodStartEQ applies the EQ predicate on the "period_start" field.
func PeriodStartEQ(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldPeriodStart, v))
}

// PeriodStartNEQ applies the NEQ predicate on the "period_start" field.
func PeriodStartNEQ(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldPeriodStart, v))
}

// PeriodStartIn applies the In predicate on the "period_start" field.
func PeriodStartIn(vs ...time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldPeriodStart, vs...))
}

// PeriodStartNotIn applies the NotIn predicate on the "period_start" field.
func PeriodStartNotIn(vs ...time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldPeriodStart, vs...))
}

// PeriodStartGT applies the GT predicate on the "period_start" field.
func PeriodStartGT(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldPeriodStart, v))
}

// PeriodStartGTE applies the GTE predicate on the "period_start" field.
func PeriodStartGTE(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldPeriodStart, v))
}

// PeriodStartLT applies the LT predicate on the "period_start" field.
func PeriodStartLT(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldPeriodStart, v))
}

// PeriodStartLTE applies the LTE predicate on the "period_start" field.
func PeriodStartLTE(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldPeriodStart, v))
}

// PeriodEndEQ applies the EQ predicate on the "period_end" field.
func PeriodEndEQ(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldPeriodEnd, v))
}

// PeriodEndNEQ applies the NEQ predicate on the "period_end" field.
func PeriodEndNEQ(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldPeriodEnd, v))
}

// PeriodEndIn applies the In predicate on the "period_end" field.
func PeriodEndIn(vs ...time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldPeriodEnd, vs...))
}

// PeriodEndNotIn applies the NotIn predicate on the "period_end" field.
func PeriodEndNotIn(vs ...time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldPeriodEnd, vs...))
}

// PeriodEndGT applies the GT predicate on the "period_end" field.
func PeriodEndGT(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldPeriodEnd, v))
}

// PeriodEndGTE applies the GTE predicate on the "period_end" field.
func PeriodEndGTE(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldPeriodEnd, v))
}

// PeriodEndLT applies the LT predicate on the "period_end" field.
func PeriodEndLT(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldPeriodEnd, v))
}

// PeriodEndLTE applies the LTE predicate on the "period_end" field.
func PeriodEndLTE(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldPeriodEnd, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v int) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldTenantID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SLAMetrics) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SLAMetrics) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SLAMetrics) predicate.SLAMetrics {
	return predicate.SLAMetrics(sql.NotPredicates(p))
}
