// Code generated by ent, DO NOT EDIT.

package ent

import (
	"itsm-backend/ent/auditlog"
	"itsm-backend/ent/ciattributedefinition"
	"itsm-backend/ent/cirelationship"
	"itsm-backend/ent/citype"
	"itsm-backend/ent/configurationitem"
	"itsm-backend/ent/conversation"
	"itsm-backend/ent/incident"
	"itsm-backend/ent/knowledgearticle"
	"itsm-backend/ent/message"
	"itsm-backend/ent/notification"
	"itsm-backend/ent/prompttemplate"
	"itsm-backend/ent/schema"
	"itsm-backend/ent/servicecatalog"
	"itsm-backend/ent/servicerequest"
	"itsm-backend/ent/sladefinition"
	"itsm-backend/ent/slaviolation"
	"itsm-backend/ent/tenant"
	"itsm-backend/ent/ticket"
	"itsm-backend/ent/toolinvocation"
	"itsm-backend/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	auditlogFields := schema.AuditLog{}.Fields()
	_ = auditlogFields
	// auditlogDescCreatedAt is the schema descriptor for created_at field.
	auditlogDescCreatedAt := auditlogFields[0].Descriptor()
	// auditlog.DefaultCreatedAt holds the default value on creation for the created_at field.
	auditlog.DefaultCreatedAt = auditlogDescCreatedAt.Default.(func() time.Time)
	// auditlogDescIP is the schema descriptor for ip field.
	auditlogDescIP := auditlogFields[4].Descriptor()
	// auditlog.DefaultIP holds the default value on creation for the ip field.
	auditlog.DefaultIP = auditlogDescIP.Default.(string)
	// auditlogDescResource is the schema descriptor for resource field.
	auditlogDescResource := auditlogFields[5].Descriptor()
	// auditlog.DefaultResource holds the default value on creation for the resource field.
	auditlog.DefaultResource = auditlogDescResource.Default.(string)
	// auditlogDescAction is the schema descriptor for action field.
	auditlogDescAction := auditlogFields[6].Descriptor()
	// auditlog.DefaultAction holds the default value on creation for the action field.
	auditlog.DefaultAction = auditlogDescAction.Default.(string)
	// auditlogDescStatusCode is the schema descriptor for status_code field.
	auditlogDescStatusCode := auditlogFields[9].Descriptor()
	// auditlog.DefaultStatusCode holds the default value on creation for the status_code field.
	auditlog.DefaultStatusCode = auditlogDescStatusCode.Default.(int)
	ciattributedefinitionFields := schema.CIAttributeDefinition{}.Fields()
	_ = ciattributedefinitionFields
	// ciattributedefinitionDescName is the schema descriptor for name field.
	ciattributedefinitionDescName := ciattributedefinitionFields[0].Descriptor()
	// ciattributedefinition.NameValidator is a validator for the "name" field. It is called by the builders before save.
	ciattributedefinition.NameValidator = ciattributedefinitionDescName.Validators[0].(func(string) error)
	// ciattributedefinitionDescDisplayName is the schema descriptor for display_name field.
	ciattributedefinitionDescDisplayName := ciattributedefinitionFields[1].Descriptor()
	// ciattributedefinition.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	ciattributedefinition.DisplayNameValidator = ciattributedefinitionDescDisplayName.Validators[0].(func(string) error)
	// ciattributedefinitionDescType is the schema descriptor for type field.
	ciattributedefinitionDescType := ciattributedefinitionFields[2].Descriptor()
	// ciattributedefinition.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	ciattributedefinition.TypeValidator = ciattributedefinitionDescType.Validators[0].(func(string) error)
	// ciattributedefinitionDescRequired is the schema descriptor for required field.
	ciattributedefinitionDescRequired := ciattributedefinitionFields[3].Descriptor()
	// ciattributedefinition.DefaultRequired holds the default value on creation for the required field.
	ciattributedefinition.DefaultRequired = ciattributedefinitionDescRequired.Default.(bool)
	// ciattributedefinitionDescUnique is the schema descriptor for unique field.
	ciattributedefinitionDescUnique := ciattributedefinitionFields[4].Descriptor()
	// ciattributedefinition.DefaultUnique holds the default value on creation for the unique field.
	ciattributedefinition.DefaultUnique = ciattributedefinitionDescUnique.Default.(bool)
	// ciattributedefinitionDescCiTypeID is the schema descriptor for ci_type_id field.
	ciattributedefinitionDescCiTypeID := ciattributedefinitionFields[7].Descriptor()
	// ciattributedefinition.CiTypeIDValidator is a validator for the "ci_type_id" field. It is called by the builders before save.
	ciattributedefinition.CiTypeIDValidator = ciattributedefinitionDescCiTypeID.Validators[0].(func(int) error)
	// ciattributedefinitionDescTenantID is the schema descriptor for tenant_id field.
	ciattributedefinitionDescTenantID := ciattributedefinitionFields[8].Descriptor()
	// ciattributedefinition.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	ciattributedefinition.TenantIDValidator = ciattributedefinitionDescTenantID.Validators[0].(func(int) error)
	// ciattributedefinitionDescIsActive is the schema descriptor for is_active field.
	ciattributedefinitionDescIsActive := ciattributedefinitionFields[9].Descriptor()
	// ciattributedefinition.DefaultIsActive holds the default value on creation for the is_active field.
	ciattributedefinition.DefaultIsActive = ciattributedefinitionDescIsActive.Default.(bool)
	// ciattributedefinitionDescCreatedAt is the schema descriptor for created_at field.
	ciattributedefinitionDescCreatedAt := ciattributedefinitionFields[10].Descriptor()
	// ciattributedefinition.DefaultCreatedAt holds the default value on creation for the created_at field.
	ciattributedefinition.DefaultCreatedAt = ciattributedefinitionDescCreatedAt.Default.(func() time.Time)
	// ciattributedefinitionDescUpdatedAt is the schema descriptor for updated_at field.
	ciattributedefinitionDescUpdatedAt := ciattributedefinitionFields[11].Descriptor()
	// ciattributedefinition.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	ciattributedefinition.DefaultUpdatedAt = ciattributedefinitionDescUpdatedAt.Default.(func() time.Time)
	// ciattributedefinition.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	ciattributedefinition.UpdateDefaultUpdatedAt = ciattributedefinitionDescUpdatedAt.UpdateDefault.(func() time.Time)
	cirelationshipFields := schema.CIRelationship{}.Fields()
	_ = cirelationshipFields
	// cirelationshipDescSourceCiID is the schema descriptor for source_ci_id field.
	cirelationshipDescSourceCiID := cirelationshipFields[0].Descriptor()
	// cirelationship.SourceCiIDValidator is a validator for the "source_ci_id" field. It is called by the builders before save.
	cirelationship.SourceCiIDValidator = cirelationshipDescSourceCiID.Validators[0].(func(int) error)
	// cirelationshipDescTargetCiID is the schema descriptor for target_ci_id field.
	cirelationshipDescTargetCiID := cirelationshipFields[1].Descriptor()
	// cirelationship.TargetCiIDValidator is a validator for the "target_ci_id" field. It is called by the builders before save.
	cirelationship.TargetCiIDValidator = cirelationshipDescTargetCiID.Validators[0].(func(int) error)
	// cirelationshipDescRelationshipTypeID is the schema descriptor for relationship_type_id field.
	cirelationshipDescRelationshipTypeID := cirelationshipFields[2].Descriptor()
	// cirelationship.RelationshipTypeIDValidator is a validator for the "relationship_type_id" field. It is called by the builders before save.
	cirelationship.RelationshipTypeIDValidator = cirelationshipDescRelationshipTypeID.Validators[0].(func(int) error)
	// cirelationshipDescTenantID is the schema descriptor for tenant_id field.
	cirelationshipDescTenantID := cirelationshipFields[4].Descriptor()
	// cirelationship.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	cirelationship.TenantIDValidator = cirelationshipDescTenantID.Validators[0].(func(int) error)
	// cirelationshipDescCreatedAt is the schema descriptor for created_at field.
	cirelationshipDescCreatedAt := cirelationshipFields[5].Descriptor()
	// cirelationship.DefaultCreatedAt holds the default value on creation for the created_at field.
	cirelationship.DefaultCreatedAt = cirelationshipDescCreatedAt.Default.(func() time.Time)
	// cirelationshipDescUpdatedAt is the schema descriptor for updated_at field.
	cirelationshipDescUpdatedAt := cirelationshipFields[6].Descriptor()
	// cirelationship.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	cirelationship.DefaultUpdatedAt = cirelationshipDescUpdatedAt.Default.(func() time.Time)
	// cirelationship.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	cirelationship.UpdateDefaultUpdatedAt = cirelationshipDescUpdatedAt.UpdateDefault.(func() time.Time)
	citypeFields := schema.CIType{}.Fields()
	_ = citypeFields
	// citypeDescName is the schema descriptor for name field.
	citypeDescName := citypeFields[0].Descriptor()
	// citype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	citype.NameValidator = citypeDescName.Validators[0].(func(string) error)
	// citypeDescTenantID is the schema descriptor for tenant_id field.
	citypeDescTenantID := citypeFields[5].Descriptor()
	// citype.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	citype.TenantIDValidator = citypeDescTenantID.Validators[0].(func(int) error)
	// citypeDescIsActive is the schema descriptor for is_active field.
	citypeDescIsActive := citypeFields[6].Descriptor()
	// citype.DefaultIsActive holds the default value on creation for the is_active field.
	citype.DefaultIsActive = citypeDescIsActive.Default.(bool)
	// citypeDescCreatedAt is the schema descriptor for created_at field.
	citypeDescCreatedAt := citypeFields[7].Descriptor()
	// citype.DefaultCreatedAt holds the default value on creation for the created_at field.
	citype.DefaultCreatedAt = citypeDescCreatedAt.Default.(func() time.Time)
	// citypeDescUpdatedAt is the schema descriptor for updated_at field.
	citypeDescUpdatedAt := citypeFields[8].Descriptor()
	// citype.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	citype.DefaultUpdatedAt = citypeDescUpdatedAt.Default.(func() time.Time)
	// citype.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	citype.UpdateDefaultUpdatedAt = citypeDescUpdatedAt.UpdateDefault.(func() time.Time)
	configurationitemFields := schema.ConfigurationItem{}.Fields()
	_ = configurationitemFields
	// configurationitemDescName is the schema descriptor for name field.
	configurationitemDescName := configurationitemFields[0].Descriptor()
	// configurationitem.NameValidator is a validator for the "name" field. It is called by the builders before save.
	configurationitem.NameValidator = configurationitemDescName.Validators[0].(func(string) error)
	// configurationitemDescStatus is the schema descriptor for status field.
	configurationitemDescStatus := configurationitemFields[3].Descriptor()
	// configurationitem.DefaultStatus holds the default value on creation for the status field.
	configurationitem.DefaultStatus = configurationitemDescStatus.Default.(string)
	// configurationitemDescCiTypeID is the schema descriptor for ci_type_id field.
	configurationitemDescCiTypeID := configurationitemFields[8].Descriptor()
	// configurationitem.CiTypeIDValidator is a validator for the "ci_type_id" field. It is called by the builders before save.
	configurationitem.CiTypeIDValidator = configurationitemDescCiTypeID.Validators[0].(func(int) error)
	// configurationitemDescTenantID is the schema descriptor for tenant_id field.
	configurationitemDescTenantID := configurationitemFields[9].Descriptor()
	// configurationitem.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	configurationitem.TenantIDValidator = configurationitemDescTenantID.Validators[0].(func(int) error)
	// configurationitemDescCreatedAt is the schema descriptor for created_at field.
	configurationitemDescCreatedAt := configurationitemFields[10].Descriptor()
	// configurationitem.DefaultCreatedAt holds the default value on creation for the created_at field.
	configurationitem.DefaultCreatedAt = configurationitemDescCreatedAt.Default.(func() time.Time)
	// configurationitemDescUpdatedAt is the schema descriptor for updated_at field.
	configurationitemDescUpdatedAt := configurationitemFields[11].Descriptor()
	// configurationitem.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	configurationitem.DefaultUpdatedAt = configurationitemDescUpdatedAt.Default.(func() time.Time)
	// configurationitem.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	configurationitem.UpdateDefaultUpdatedAt = configurationitemDescUpdatedAt.UpdateDefault.(func() time.Time)
	conversationFields := schema.Conversation{}.Fields()
	_ = conversationFields
	// conversationDescCreatedAt is the schema descriptor for created_at field.
	conversationDescCreatedAt := conversationFields[0].Descriptor()
	// conversation.DefaultCreatedAt holds the default value on creation for the created_at field.
	conversation.DefaultCreatedAt = conversationDescCreatedAt.Default.(func() time.Time)
	// conversationDescTitle is the schema descriptor for title field.
	conversationDescTitle := conversationFields[3].Descriptor()
	// conversation.DefaultTitle holds the default value on creation for the title field.
	conversation.DefaultTitle = conversationDescTitle.Default.(string)
	incidentFields := schema.Incident{}.Fields()
	_ = incidentFields
	// incidentDescTitle is the schema descriptor for title field.
	incidentDescTitle := incidentFields[0].Descriptor()
	// incident.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	incident.TitleValidator = incidentDescTitle.Validators[0].(func(string) error)
	// incidentDescStatus is the schema descriptor for status field.
	incidentDescStatus := incidentFields[2].Descriptor()
	// incident.DefaultStatus holds the default value on creation for the status field.
	incident.DefaultStatus = incidentDescStatus.Default.(string)
	// incidentDescPriority is the schema descriptor for priority field.
	incidentDescPriority := incidentFields[3].Descriptor()
	// incident.DefaultPriority holds the default value on creation for the priority field.
	incident.DefaultPriority = incidentDescPriority.Default.(string)
	// incidentDescIncidentNumber is the schema descriptor for incident_number field.
	incidentDescIncidentNumber := incidentFields[4].Descriptor()
	// incident.IncidentNumberValidator is a validator for the "incident_number" field. It is called by the builders before save.
	incident.IncidentNumberValidator = incidentDescIncidentNumber.Validators[0].(func(string) error)
	// incidentDescReporterID is the schema descriptor for reporter_id field.
	incidentDescReporterID := incidentFields[5].Descriptor()
	// incident.ReporterIDValidator is a validator for the "reporter_id" field. It is called by the builders before save.
	incident.ReporterIDValidator = incidentDescReporterID.Validators[0].(func(int) error)
	// incidentDescTenantID is the schema descriptor for tenant_id field.
	incidentDescTenantID := incidentFields[10].Descriptor()
	// incident.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	incident.TenantIDValidator = incidentDescTenantID.Validators[0].(func(int) error)
	// incidentDescCreatedAt is the schema descriptor for created_at field.
	incidentDescCreatedAt := incidentFields[11].Descriptor()
	// incident.DefaultCreatedAt holds the default value on creation for the created_at field.
	incident.DefaultCreatedAt = incidentDescCreatedAt.Default.(func() time.Time)
	// incidentDescUpdatedAt is the schema descriptor for updated_at field.
	incidentDescUpdatedAt := incidentFields[12].Descriptor()
	// incident.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	incident.DefaultUpdatedAt = incidentDescUpdatedAt.Default.(func() time.Time)
	// incident.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	incident.UpdateDefaultUpdatedAt = incidentDescUpdatedAt.UpdateDefault.(func() time.Time)
	knowledgearticleFields := schema.KnowledgeArticle{}.Fields()
	_ = knowledgearticleFields
	// knowledgearticleDescTitle is the schema descriptor for title field.
	knowledgearticleDescTitle := knowledgearticleFields[0].Descriptor()
	// knowledgearticle.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	knowledgearticle.TitleValidator = knowledgearticleDescTitle.Validators[0].(func(string) error)
	// knowledgearticleDescAuthorID is the schema descriptor for author_id field.
	knowledgearticleDescAuthorID := knowledgearticleFields[4].Descriptor()
	// knowledgearticle.AuthorIDValidator is a validator for the "author_id" field. It is called by the builders before save.
	knowledgearticle.AuthorIDValidator = knowledgearticleDescAuthorID.Validators[0].(func(int) error)
	// knowledgearticleDescTenantID is the schema descriptor for tenant_id field.
	knowledgearticleDescTenantID := knowledgearticleFields[5].Descriptor()
	// knowledgearticle.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	knowledgearticle.TenantIDValidator = knowledgearticleDescTenantID.Validators[0].(func(int) error)
	// knowledgearticleDescIsPublished is the schema descriptor for is_published field.
	knowledgearticleDescIsPublished := knowledgearticleFields[6].Descriptor()
	// knowledgearticle.DefaultIsPublished holds the default value on creation for the is_published field.
	knowledgearticle.DefaultIsPublished = knowledgearticleDescIsPublished.Default.(bool)
	// knowledgearticleDescCreatedAt is the schema descriptor for created_at field.
	knowledgearticleDescCreatedAt := knowledgearticleFields[7].Descriptor()
	// knowledgearticle.DefaultCreatedAt holds the default value on creation for the created_at field.
	knowledgearticle.DefaultCreatedAt = knowledgearticleDescCreatedAt.Default.(func() time.Time)
	// knowledgearticleDescUpdatedAt is the schema descriptor for updated_at field.
	knowledgearticleDescUpdatedAt := knowledgearticleFields[8].Descriptor()
	// knowledgearticle.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	knowledgearticle.DefaultUpdatedAt = knowledgearticleDescUpdatedAt.Default.(func() time.Time)
	// knowledgearticle.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	knowledgearticle.UpdateDefaultUpdatedAt = knowledgearticleDescUpdatedAt.UpdateDefault.(func() time.Time)
	messageFields := schema.Message{}.Fields()
	_ = messageFields
	// messageDescCreatedAt is the schema descriptor for created_at field.
	messageDescCreatedAt := messageFields[0].Descriptor()
	// message.DefaultCreatedAt holds the default value on creation for the created_at field.
	message.DefaultCreatedAt = messageDescCreatedAt.Default.(func() time.Time)
	// messageDescContent is the schema descriptor for content field.
	messageDescContent := messageFields[3].Descriptor()
	// message.DefaultContent holds the default value on creation for the content field.
	message.DefaultContent = messageDescContent.Default.(string)
	notificationFields := schema.Notification{}.Fields()
	_ = notificationFields
	// notificationDescTitle is the schema descriptor for title field.
	notificationDescTitle := notificationFields[0].Descriptor()
	// notification.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	notification.TitleValidator = notificationDescTitle.Validators[0].(func(string) error)
	// notificationDescMessage is the schema descriptor for message field.
	notificationDescMessage := notificationFields[1].Descriptor()
	// notification.MessageValidator is a validator for the "message" field. It is called by the builders before save.
	notification.MessageValidator = notificationDescMessage.Validators[0].(func(string) error)
	// notificationDescType is the schema descriptor for type field.
	notificationDescType := notificationFields[2].Descriptor()
	// notification.DefaultType holds the default value on creation for the type field.
	notification.DefaultType = notificationDescType.Default.(string)
	// notificationDescRead is the schema descriptor for read field.
	notificationDescRead := notificationFields[3].Descriptor()
	// notification.DefaultRead holds the default value on creation for the read field.
	notification.DefaultRead = notificationDescRead.Default.(bool)
	// notificationDescUserID is the schema descriptor for user_id field.
	notificationDescUserID := notificationFields[6].Descriptor()
	// notification.UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	notification.UserIDValidator = notificationDescUserID.Validators[0].(func(int) error)
	// notificationDescTenantID is the schema descriptor for tenant_id field.
	notificationDescTenantID := notificationFields[7].Descriptor()
	// notification.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	notification.TenantIDValidator = notificationDescTenantID.Validators[0].(func(int) error)
	// notificationDescCreatedAt is the schema descriptor for created_at field.
	notificationDescCreatedAt := notificationFields[8].Descriptor()
	// notification.DefaultCreatedAt holds the default value on creation for the created_at field.
	notification.DefaultCreatedAt = notificationDescCreatedAt.Default.(func() time.Time)
	// notificationDescUpdatedAt is the schema descriptor for updated_at field.
	notificationDescUpdatedAt := notificationFields[9].Descriptor()
	// notification.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	notification.DefaultUpdatedAt = notificationDescUpdatedAt.Default.(func() time.Time)
	// notification.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	notification.UpdateDefaultUpdatedAt = notificationDescUpdatedAt.UpdateDefault.(func() time.Time)
	prompttemplateFields := schema.PromptTemplate{}.Fields()
	_ = prompttemplateFields
	// prompttemplateDescCreatedAt is the schema descriptor for created_at field.
	prompttemplateDescCreatedAt := prompttemplateFields[0].Descriptor()
	// prompttemplate.DefaultCreatedAt holds the default value on creation for the created_at field.
	prompttemplate.DefaultCreatedAt = prompttemplateDescCreatedAt.Default.(func() time.Time)
	// prompttemplateDescUpdatedAt is the schema descriptor for updated_at field.
	prompttemplateDescUpdatedAt := prompttemplateFields[1].Descriptor()
	// prompttemplate.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	prompttemplate.DefaultUpdatedAt = prompttemplateDescUpdatedAt.Default.(func() time.Time)
	// prompttemplate.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	prompttemplate.UpdateDefaultUpdatedAt = prompttemplateDescUpdatedAt.UpdateDefault.(func() time.Time)
	// prompttemplateDescVersion is the schema descriptor for version field.
	prompttemplateDescVersion := prompttemplateFields[3].Descriptor()
	// prompttemplate.DefaultVersion holds the default value on creation for the version field.
	prompttemplate.DefaultVersion = prompttemplateDescVersion.Default.(string)
	// prompttemplateDescDescription is the schema descriptor for description field.
	prompttemplateDescDescription := prompttemplateFields[5].Descriptor()
	// prompttemplate.DefaultDescription holds the default value on creation for the description field.
	prompttemplate.DefaultDescription = prompttemplateDescDescription.Default.(string)
	sladefinitionFields := schema.SLADefinition{}.Fields()
	_ = sladefinitionFields
	// sladefinitionDescName is the schema descriptor for name field.
	sladefinitionDescName := sladefinitionFields[0].Descriptor()
	// sladefinition.NameValidator is a validator for the "name" field. It is called by the builders before save.
	sladefinition.NameValidator = sladefinitionDescName.Validators[0].(func(string) error)
	// sladefinitionDescTenantID is the schema descriptor for tenant_id field.
	sladefinitionDescTenantID := sladefinitionFields[2].Descriptor()
	// sladefinition.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	sladefinition.TenantIDValidator = sladefinitionDescTenantID.Validators[0].(func(int) error)
	// sladefinitionDescCreatedAt is the schema descriptor for created_at field.
	sladefinitionDescCreatedAt := sladefinitionFields[3].Descriptor()
	// sladefinition.DefaultCreatedAt holds the default value on creation for the created_at field.
	sladefinition.DefaultCreatedAt = sladefinitionDescCreatedAt.Default.(func() time.Time)
	// sladefinitionDescUpdatedAt is the schema descriptor for updated_at field.
	sladefinitionDescUpdatedAt := sladefinitionFields[4].Descriptor()
	// sladefinition.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	sladefinition.DefaultUpdatedAt = sladefinitionDescUpdatedAt.Default.(func() time.Time)
	// sladefinition.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	sladefinition.UpdateDefaultUpdatedAt = sladefinitionDescUpdatedAt.UpdateDefault.(func() time.Time)
	slaviolationFields := schema.SLAViolation{}.Fields()
	_ = slaviolationFields
	// slaviolationDescSLADefinitionID is the schema descriptor for sla_definition_id field.
	slaviolationDescSLADefinitionID := slaviolationFields[0].Descriptor()
	// slaviolation.SLADefinitionIDValidator is a validator for the "sla_definition_id" field. It is called by the builders before save.
	slaviolation.SLADefinitionIDValidator = slaviolationDescSLADefinitionID.Validators[0].(func(int) error)
	// slaviolationDescTicketID is the schema descriptor for ticket_id field.
	slaviolationDescTicketID := slaviolationFields[1].Descriptor()
	// slaviolation.TicketIDValidator is a validator for the "ticket_id" field. It is called by the builders before save.
	slaviolation.TicketIDValidator = slaviolationDescTicketID.Validators[0].(func(int) error)
	// slaviolationDescViolationType is the schema descriptor for violation_type field.
	slaviolationDescViolationType := slaviolationFields[2].Descriptor()
	// slaviolation.ViolationTypeValidator is a validator for the "violation_type" field. It is called by the builders before save.
	slaviolation.ViolationTypeValidator = slaviolationDescViolationType.Validators[0].(func(string) error)
	// slaviolationDescViolationTime is the schema descriptor for violation_time field.
	slaviolationDescViolationTime := slaviolationFields[3].Descriptor()
	// slaviolation.DefaultViolationTime holds the default value on creation for the violation_time field.
	slaviolation.DefaultViolationTime = slaviolationDescViolationTime.Default.(func() time.Time)
	// slaviolationDescTenantID is the schema descriptor for tenant_id field.
	slaviolationDescTenantID := slaviolationFields[5].Descriptor()
	// slaviolation.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	slaviolation.TenantIDValidator = slaviolationDescTenantID.Validators[0].(func(int) error)
	// slaviolationDescCreatedAt is the schema descriptor for created_at field.
	slaviolationDescCreatedAt := slaviolationFields[6].Descriptor()
	// slaviolation.DefaultCreatedAt holds the default value on creation for the created_at field.
	slaviolation.DefaultCreatedAt = slaviolationDescCreatedAt.Default.(func() time.Time)
	// slaviolationDescUpdatedAt is the schema descriptor for updated_at field.
	slaviolationDescUpdatedAt := slaviolationFields[7].Descriptor()
	// slaviolation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	slaviolation.DefaultUpdatedAt = slaviolationDescUpdatedAt.Default.(func() time.Time)
	// slaviolation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	slaviolation.UpdateDefaultUpdatedAt = slaviolationDescUpdatedAt.UpdateDefault.(func() time.Time)
	servicecatalogFields := schema.ServiceCatalog{}.Fields()
	_ = servicecatalogFields
	// servicecatalogDescName is the schema descriptor for name field.
	servicecatalogDescName := servicecatalogFields[0].Descriptor()
	// servicecatalog.NameValidator is a validator for the "name" field. It is called by the builders before save.
	servicecatalog.NameValidator = servicecatalogDescName.Validators[0].(func(string) error)
	// servicecatalogDescStatus is the schema descriptor for status field.
	servicecatalogDescStatus := servicecatalogFields[5].Descriptor()
	// servicecatalog.DefaultStatus holds the default value on creation for the status field.
	servicecatalog.DefaultStatus = servicecatalogDescStatus.Default.(string)
	// servicecatalogDescTenantID is the schema descriptor for tenant_id field.
	servicecatalogDescTenantID := servicecatalogFields[6].Descriptor()
	// servicecatalog.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	servicecatalog.TenantIDValidator = servicecatalogDescTenantID.Validators[0].(func(int) error)
	// servicecatalogDescIsActive is the schema descriptor for is_active field.
	servicecatalogDescIsActive := servicecatalogFields[7].Descriptor()
	// servicecatalog.DefaultIsActive holds the default value on creation for the is_active field.
	servicecatalog.DefaultIsActive = servicecatalogDescIsActive.Default.(bool)
	// servicecatalogDescCreatedAt is the schema descriptor for created_at field.
	servicecatalogDescCreatedAt := servicecatalogFields[8].Descriptor()
	// servicecatalog.DefaultCreatedAt holds the default value on creation for the created_at field.
	servicecatalog.DefaultCreatedAt = servicecatalogDescCreatedAt.Default.(func() time.Time)
	// servicecatalogDescUpdatedAt is the schema descriptor for updated_at field.
	servicecatalogDescUpdatedAt := servicecatalogFields[9].Descriptor()
	// servicecatalog.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	servicecatalog.DefaultUpdatedAt = servicecatalogDescUpdatedAt.Default.(func() time.Time)
	// servicecatalog.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	servicecatalog.UpdateDefaultUpdatedAt = servicecatalogDescUpdatedAt.UpdateDefault.(func() time.Time)
	servicerequestFields := schema.ServiceRequest{}.Fields()
	_ = servicerequestFields
	// servicerequestDescCatalogID is the schema descriptor for catalog_id field.
	servicerequestDescCatalogID := servicerequestFields[0].Descriptor()
	// servicerequest.CatalogIDValidator is a validator for the "catalog_id" field. It is called by the builders before save.
	servicerequest.CatalogIDValidator = servicerequestDescCatalogID.Validators[0].(func(int) error)
	// servicerequestDescRequesterID is the schema descriptor for requester_id field.
	servicerequestDescRequesterID := servicerequestFields[1].Descriptor()
	// servicerequest.RequesterIDValidator is a validator for the "requester_id" field. It is called by the builders before save.
	servicerequest.RequesterIDValidator = servicerequestDescRequesterID.Validators[0].(func(int) error)
	// servicerequestDescStatus is the schema descriptor for status field.
	servicerequestDescStatus := servicerequestFields[2].Descriptor()
	// servicerequest.DefaultStatus holds the default value on creation for the status field.
	servicerequest.DefaultStatus = servicerequestDescStatus.Default.(string)
	// servicerequestDescCreatedAt is the schema descriptor for created_at field.
	servicerequestDescCreatedAt := servicerequestFields[4].Descriptor()
	// servicerequest.DefaultCreatedAt holds the default value on creation for the created_at field.
	servicerequest.DefaultCreatedAt = servicerequestDescCreatedAt.Default.(func() time.Time)
	// servicerequestDescUpdatedAt is the schema descriptor for updated_at field.
	servicerequestDescUpdatedAt := servicerequestFields[5].Descriptor()
	// servicerequest.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	servicerequest.DefaultUpdatedAt = servicerequestDescUpdatedAt.Default.(func() time.Time)
	// servicerequest.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	servicerequest.UpdateDefaultUpdatedAt = servicerequestDescUpdatedAt.UpdateDefault.(func() time.Time)
	tenantFields := schema.Tenant{}.Fields()
	_ = tenantFields
	// tenantDescName is the schema descriptor for name field.
	tenantDescName := tenantFields[0].Descriptor()
	// tenant.NameValidator is a validator for the "name" field. It is called by the builders before save.
	tenant.NameValidator = tenantDescName.Validators[0].(func(string) error)
	// tenantDescCode is the schema descriptor for code field.
	tenantDescCode := tenantFields[1].Descriptor()
	// tenant.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	tenant.CodeValidator = tenantDescCode.Validators[0].(func(string) error)
	// tenantDescType is the schema descriptor for type field.
	tenantDescType := tenantFields[3].Descriptor()
	// tenant.DefaultType holds the default value on creation for the type field.
	tenant.DefaultType = tenantDescType.Default.(string)
	// tenantDescStatus is the schema descriptor for status field.
	tenantDescStatus := tenantFields[4].Descriptor()
	// tenant.DefaultStatus holds the default value on creation for the status field.
	tenant.DefaultStatus = tenantDescStatus.Default.(string)
	// tenantDescCreatedAt is the schema descriptor for created_at field.
	tenantDescCreatedAt := tenantFields[6].Descriptor()
	// tenant.DefaultCreatedAt holds the default value on creation for the created_at field.
	tenant.DefaultCreatedAt = tenantDescCreatedAt.Default.(func() time.Time)
	// tenantDescUpdatedAt is the schema descriptor for updated_at field.
	tenantDescUpdatedAt := tenantFields[7].Descriptor()
	// tenant.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tenant.DefaultUpdatedAt = tenantDescUpdatedAt.Default.(func() time.Time)
	// tenant.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tenant.UpdateDefaultUpdatedAt = tenantDescUpdatedAt.UpdateDefault.(func() time.Time)
	ticketFields := schema.Ticket{}.Fields()
	_ = ticketFields
	// ticketDescTitle is the schema descriptor for title field.
	ticketDescTitle := ticketFields[0].Descriptor()
	// ticket.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	ticket.TitleValidator = ticketDescTitle.Validators[0].(func(string) error)
	// ticketDescStatus is the schema descriptor for status field.
	ticketDescStatus := ticketFields[2].Descriptor()
	// ticket.DefaultStatus holds the default value on creation for the status field.
	ticket.DefaultStatus = ticketDescStatus.Default.(string)
	// ticketDescPriority is the schema descriptor for priority field.
	ticketDescPriority := ticketFields[3].Descriptor()
	// ticket.DefaultPriority holds the default value on creation for the priority field.
	ticket.DefaultPriority = ticketDescPriority.Default.(string)
	// ticketDescTicketNumber is the schema descriptor for ticket_number field.
	ticketDescTicketNumber := ticketFields[4].Descriptor()
	// ticket.TicketNumberValidator is a validator for the "ticket_number" field. It is called by the builders before save.
	ticket.TicketNumberValidator = ticketDescTicketNumber.Validators[0].(func(string) error)
	// ticketDescRequesterID is the schema descriptor for requester_id field.
	ticketDescRequesterID := ticketFields[5].Descriptor()
	// ticket.RequesterIDValidator is a validator for the "requester_id" field. It is called by the builders before save.
	ticket.RequesterIDValidator = ticketDescRequesterID.Validators[0].(func(int) error)
	// ticketDescTenantID is the schema descriptor for tenant_id field.
	ticketDescTenantID := ticketFields[7].Descriptor()
	// ticket.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	ticket.TenantIDValidator = ticketDescTenantID.Validators[0].(func(int) error)
	// ticketDescCreatedAt is the schema descriptor for created_at field.
	ticketDescCreatedAt := ticketFields[8].Descriptor()
	// ticket.DefaultCreatedAt holds the default value on creation for the created_at field.
	ticket.DefaultCreatedAt = ticketDescCreatedAt.Default.(func() time.Time)
	// ticketDescUpdatedAt is the schema descriptor for updated_at field.
	ticketDescUpdatedAt := ticketFields[9].Descriptor()
	// ticket.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	ticket.DefaultUpdatedAt = ticketDescUpdatedAt.Default.(func() time.Time)
	// ticket.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	ticket.UpdateDefaultUpdatedAt = ticketDescUpdatedAt.UpdateDefault.(func() time.Time)
	toolinvocationFields := schema.ToolInvocation{}.Fields()
	_ = toolinvocationFields
	// toolinvocationDescCreatedAt is the schema descriptor for created_at field.
	toolinvocationDescCreatedAt := toolinvocationFields[0].Descriptor()
	// toolinvocation.DefaultCreatedAt holds the default value on creation for the created_at field.
	toolinvocation.DefaultCreatedAt = toolinvocationDescCreatedAt.Default.(func() time.Time)
	// toolinvocationDescArguments is the schema descriptor for arguments field.
	toolinvocationDescArguments := toolinvocationFields[3].Descriptor()
	// toolinvocation.DefaultArguments holds the default value on creation for the arguments field.
	toolinvocation.DefaultArguments = toolinvocationDescArguments.Default.(string)
	// toolinvocationDescStatus is the schema descriptor for status field.
	toolinvocationDescStatus := toolinvocationFields[5].Descriptor()
	// toolinvocation.DefaultStatus holds the default value on creation for the status field.
	toolinvocation.DefaultStatus = toolinvocationDescStatus.Default.(string)
	// toolinvocationDescNeedsApproval is the schema descriptor for needs_approval field.
	toolinvocationDescNeedsApproval := toolinvocationFields[7].Descriptor()
	// toolinvocation.DefaultNeedsApproval holds the default value on creation for the needs_approval field.
	toolinvocation.DefaultNeedsApproval = toolinvocationDescNeedsApproval.Default.(bool)
	// toolinvocationDescApprovalState is the schema descriptor for approval_state field.
	toolinvocationDescApprovalState := toolinvocationFields[8].Descriptor()
	// toolinvocation.DefaultApprovalState holds the default value on creation for the approval_state field.
	toolinvocation.DefaultApprovalState = toolinvocationDescApprovalState.Default.(string)
	// toolinvocationDescApprovalReason is the schema descriptor for approval_reason field.
	toolinvocationDescApprovalReason := toolinvocationFields[9].Descriptor()
	// toolinvocation.DefaultApprovalReason holds the default value on creation for the approval_reason field.
	toolinvocation.DefaultApprovalReason = toolinvocationDescApprovalReason.Default.(string)
	// toolinvocationDescDryRun is the schema descriptor for dry_run field.
	toolinvocationDescDryRun := toolinvocationFields[12].Descriptor()
	// toolinvocation.DefaultDryRun holds the default value on creation for the dry_run field.
	toolinvocation.DefaultDryRun = toolinvocationDescDryRun.Default.(bool)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[2].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[5].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = userDescPasswordHash.Validators[0].(func(string) error)
	// userDescActive is the schema descriptor for active field.
	userDescActive := userFields[6].Descriptor()
	// user.DefaultActive holds the default value on creation for the active field.
	user.DefaultActive = userDescActive.Default.(bool)
	// userDescTenantID is the schema descriptor for tenant_id field.
	userDescTenantID := userFields[7].Descriptor()
	// user.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	user.TenantIDValidator = userDescTenantID.Validators[0].(func(int) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[8].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[9].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}
