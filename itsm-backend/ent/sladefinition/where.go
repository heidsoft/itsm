// Code generated by ent, DO NOT EDIT.

package sladefinition

import (
	"itsm-backend/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldName, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldDescription, v))
}

// ServiceType applies equality check predicate on the "service_type" field. It's identical to ServiceTypeEQ.
func ServiceType(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldServiceType, v))
}

// Priority applies equality check predicate on the "priority" field. It's identical to PriorityEQ.
func Priority(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldPriority, v))
}

// ResponseTime applies equality check predicate on the "response_time" field. It's identical to ResponseTimeEQ.
func ResponseTime(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldResponseTime, v))
}

// ResolutionTime applies equality check predicate on the "resolution_time" field. It's identical to ResolutionTimeEQ.
func ResolutionTime(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldResolutionTime, v))
}

// IsActive applies equality check predicate on the "is_active" field. It's identical to IsActiveEQ.
func IsActive(v bool) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldIsActive, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldTenantID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldUpdatedAt, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldContainsFold(FieldName, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldContainsFold(FieldDescription, v))
}

// ServiceTypeEQ applies the EQ predicate on the "service_type" field.
func ServiceTypeEQ(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldServiceType, v))
}

// ServiceTypeNEQ applies the NEQ predicate on the "service_type" field.
func ServiceTypeNEQ(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNEQ(FieldServiceType, v))
}

// ServiceTypeIn applies the In predicate on the "service_type" field.
func ServiceTypeIn(vs ...string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIn(FieldServiceType, vs...))
}

// ServiceTypeNotIn applies the NotIn predicate on the "service_type" field.
func ServiceTypeNotIn(vs ...string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotIn(FieldServiceType, vs...))
}

// ServiceTypeGT applies the GT predicate on the "service_type" field.
func ServiceTypeGT(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGT(FieldServiceType, v))
}

// ServiceTypeGTE applies the GTE predicate on the "service_type" field.
func ServiceTypeGTE(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGTE(FieldServiceType, v))
}

// ServiceTypeLT applies the LT predicate on the "service_type" field.
func ServiceTypeLT(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLT(FieldServiceType, v))
}

// ServiceTypeLTE applies the LTE predicate on the "service_type" field.
func ServiceTypeLTE(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLTE(FieldServiceType, v))
}

// ServiceTypeContains applies the Contains predicate on the "service_type" field.
func ServiceTypeContains(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldContains(FieldServiceType, v))
}

// ServiceTypeHasPrefix applies the HasPrefix predicate on the "service_type" field.
func ServiceTypeHasPrefix(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldHasPrefix(FieldServiceType, v))
}

// ServiceTypeHasSuffix applies the HasSuffix predicate on the "service_type" field.
func ServiceTypeHasSuffix(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldHasSuffix(FieldServiceType, v))
}

// ServiceTypeIsNil applies the IsNil predicate on the "service_type" field.
func ServiceTypeIsNil() predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIsNull(FieldServiceType))
}

// ServiceTypeNotNil applies the NotNil predicate on the "service_type" field.
func ServiceTypeNotNil() predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotNull(FieldServiceType))
}

// ServiceTypeEqualFold applies the EqualFold predicate on the "service_type" field.
func ServiceTypeEqualFold(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEqualFold(FieldServiceType, v))
}

// ServiceTypeContainsFold applies the ContainsFold predicate on the "service_type" field.
func ServiceTypeContainsFold(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldContainsFold(FieldServiceType, v))
}

// PriorityEQ applies the EQ predicate on the "priority" field.
func PriorityEQ(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldPriority, v))
}

// PriorityNEQ applies the NEQ predicate on the "priority" field.
func PriorityNEQ(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNEQ(FieldPriority, v))
}

// PriorityIn applies the In predicate on the "priority" field.
func PriorityIn(vs ...string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIn(FieldPriority, vs...))
}

// PriorityNotIn applies the NotIn predicate on the "priority" field.
func PriorityNotIn(vs ...string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotIn(FieldPriority, vs...))
}

// PriorityGT applies the GT predicate on the "priority" field.
func PriorityGT(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGT(FieldPriority, v))
}

// PriorityGTE applies the GTE predicate on the "priority" field.
func PriorityGTE(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGTE(FieldPriority, v))
}

// PriorityLT applies the LT predicate on the "priority" field.
func PriorityLT(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLT(FieldPriority, v))
}

// PriorityLTE applies the LTE predicate on the "priority" field.
func PriorityLTE(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLTE(FieldPriority, v))
}

// PriorityContains applies the Contains predicate on the "priority" field.
func PriorityContains(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldContains(FieldPriority, v))
}

// PriorityHasPrefix applies the HasPrefix predicate on the "priority" field.
func PriorityHasPrefix(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldHasPrefix(FieldPriority, v))
}

// PriorityHasSuffix applies the HasSuffix predicate on the "priority" field.
func PriorityHasSuffix(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldHasSuffix(FieldPriority, v))
}

// PriorityIsNil applies the IsNil predicate on the "priority" field.
func PriorityIsNil() predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIsNull(FieldPriority))
}

// PriorityNotNil applies the NotNil predicate on the "priority" field.
func PriorityNotNil() predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotNull(FieldPriority))
}

// PriorityEqualFold applies the EqualFold predicate on the "priority" field.
func PriorityEqualFold(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEqualFold(FieldPriority, v))
}

// PriorityContainsFold applies the ContainsFold predicate on the "priority" field.
func PriorityContainsFold(v string) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldContainsFold(FieldPriority, v))
}

// ResponseTimeEQ applies the EQ predicate on the "response_time" field.
func ResponseTimeEQ(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldResponseTime, v))
}

// ResponseTimeNEQ applies the NEQ predicate on the "response_time" field.
func ResponseTimeNEQ(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNEQ(FieldResponseTime, v))
}

// ResponseTimeIn applies the In predicate on the "response_time" field.
func ResponseTimeIn(vs ...int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIn(FieldResponseTime, vs...))
}

// ResponseTimeNotIn applies the NotIn predicate on the "response_time" field.
func ResponseTimeNotIn(vs ...int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotIn(FieldResponseTime, vs...))
}

// ResponseTimeGT applies the GT predicate on the "response_time" field.
func ResponseTimeGT(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGT(FieldResponseTime, v))
}

// ResponseTimeGTE applies the GTE predicate on the "response_time" field.
func ResponseTimeGTE(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGTE(FieldResponseTime, v))
}

// ResponseTimeLT applies the LT predicate on the "response_time" field.
func ResponseTimeLT(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLT(FieldResponseTime, v))
}

// ResponseTimeLTE applies the LTE predicate on the "response_time" field.
func ResponseTimeLTE(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLTE(FieldResponseTime, v))
}

// ResolutionTimeEQ applies the EQ predicate on the "resolution_time" field.
func ResolutionTimeEQ(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldResolutionTime, v))
}

// ResolutionTimeNEQ applies the NEQ predicate on the "resolution_time" field.
func ResolutionTimeNEQ(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNEQ(FieldResolutionTime, v))
}

// ResolutionTimeIn applies the In predicate on the "resolution_time" field.
func ResolutionTimeIn(vs ...int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIn(FieldResolutionTime, vs...))
}

// ResolutionTimeNotIn applies the NotIn predicate on the "resolution_time" field.
func ResolutionTimeNotIn(vs ...int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotIn(FieldResolutionTime, vs...))
}

// ResolutionTimeGT applies the GT predicate on the "resolution_time" field.
func ResolutionTimeGT(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGT(FieldResolutionTime, v))
}

// ResolutionTimeGTE applies the GTE predicate on the "resolution_time" field.
func ResolutionTimeGTE(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGTE(FieldResolutionTime, v))
}

// ResolutionTimeLT applies the LT predicate on the "resolution_time" field.
func ResolutionTimeLT(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLT(FieldResolutionTime, v))
}

// ResolutionTimeLTE applies the LTE predicate on the "resolution_time" field.
func ResolutionTimeLTE(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLTE(FieldResolutionTime, v))
}

// BusinessHoursIsNil applies the IsNil predicate on the "business_hours" field.
func BusinessHoursIsNil() predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIsNull(FieldBusinessHours))
}

// BusinessHoursNotNil applies the NotNil predicate on the "business_hours" field.
func BusinessHoursNotNil() predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotNull(FieldBusinessHours))
}

// IsActiveEQ applies the EQ predicate on the "is_active" field.
func IsActiveEQ(v bool) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldIsActive, v))
}

// IsActiveNEQ applies the NEQ predicate on the "is_active" field.
func IsActiveNEQ(v bool) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNEQ(FieldIsActive, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v int) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLTE(FieldTenantID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.SLADefinition {
	return predicate.SLADefinition(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SLADefinition) predicate.SLADefinition {
	return predicate.SLADefinition(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SLADefinition) predicate.SLADefinition {
	return predicate.SLADefinition(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SLADefinition) predicate.SLADefinition {
	return predicate.SLADefinition(sql.NotPredicates(p))
}
