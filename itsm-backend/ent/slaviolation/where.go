// Code generated by ent, DO NOT EDIT.

package slaviolation

import (
	"itsm-backend/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLTE(FieldID, id))
}

// SLADefinitionID applies equality check predicate on the "sla_definition_id" field. It's identical to SLADefinitionIDEQ.
func SLADefinitionID(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldSLADefinitionID, v))
}

// TicketID applies equality check predicate on the "ticket_id" field. It's identical to TicketIDEQ.
func TicketID(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldTicketID, v))
}

// ViolationType applies equality check predicate on the "violation_type" field. It's identical to ViolationTypeEQ.
func ViolationType(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldViolationType, v))
}

// ViolationTime applies equality check predicate on the "violation_time" field. It's identical to ViolationTimeEQ.
func ViolationTime(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldViolationTime, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldDescription, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldTenantID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldUpdatedAt, v))
}

// SLADefinitionIDEQ applies the EQ predicate on the "sla_definition_id" field.
func SLADefinitionIDEQ(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldSLADefinitionID, v))
}

// SLADefinitionIDNEQ applies the NEQ predicate on the "sla_definition_id" field.
func SLADefinitionIDNEQ(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNEQ(FieldSLADefinitionID, v))
}

// SLADefinitionIDIn applies the In predicate on the "sla_definition_id" field.
func SLADefinitionIDIn(vs ...int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldIn(FieldSLADefinitionID, vs...))
}

// SLADefinitionIDNotIn applies the NotIn predicate on the "sla_definition_id" field.
func SLADefinitionIDNotIn(vs ...int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNotIn(FieldSLADefinitionID, vs...))
}

// SLADefinitionIDGT applies the GT predicate on the "sla_definition_id" field.
func SLADefinitionIDGT(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGT(FieldSLADefinitionID, v))
}

// SLADefinitionIDGTE applies the GTE predicate on the "sla_definition_id" field.
func SLADefinitionIDGTE(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGTE(FieldSLADefinitionID, v))
}

// SLADefinitionIDLT applies the LT predicate on the "sla_definition_id" field.
func SLADefinitionIDLT(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLT(FieldSLADefinitionID, v))
}

// SLADefinitionIDLTE applies the LTE predicate on the "sla_definition_id" field.
func SLADefinitionIDLTE(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLTE(FieldSLADefinitionID, v))
}

// TicketIDEQ applies the EQ predicate on the "ticket_id" field.
func TicketIDEQ(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldTicketID, v))
}

// TicketIDNEQ applies the NEQ predicate on the "ticket_id" field.
func TicketIDNEQ(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNEQ(FieldTicketID, v))
}

// TicketIDIn applies the In predicate on the "ticket_id" field.
func TicketIDIn(vs ...int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldIn(FieldTicketID, vs...))
}

// TicketIDNotIn applies the NotIn predicate on the "ticket_id" field.
func TicketIDNotIn(vs ...int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNotIn(FieldTicketID, vs...))
}

// TicketIDGT applies the GT predicate on the "ticket_id" field.
func TicketIDGT(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGT(FieldTicketID, v))
}

// TicketIDGTE applies the GTE predicate on the "ticket_id" field.
func TicketIDGTE(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGTE(FieldTicketID, v))
}

// TicketIDLT applies the LT predicate on the "ticket_id" field.
func TicketIDLT(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLT(FieldTicketID, v))
}

// TicketIDLTE applies the LTE predicate on the "ticket_id" field.
func TicketIDLTE(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLTE(FieldTicketID, v))
}

// ViolationTypeEQ applies the EQ predicate on the "violation_type" field.
func ViolationTypeEQ(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldViolationType, v))
}

// ViolationTypeNEQ applies the NEQ predicate on the "violation_type" field.
func ViolationTypeNEQ(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNEQ(FieldViolationType, v))
}

// ViolationTypeIn applies the In predicate on the "violation_type" field.
func ViolationTypeIn(vs ...string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldIn(FieldViolationType, vs...))
}

// ViolationTypeNotIn applies the NotIn predicate on the "violation_type" field.
func ViolationTypeNotIn(vs ...string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNotIn(FieldViolationType, vs...))
}

// ViolationTypeGT applies the GT predicate on the "violation_type" field.
func ViolationTypeGT(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGT(FieldViolationType, v))
}

// ViolationTypeGTE applies the GTE predicate on the "violation_type" field.
func ViolationTypeGTE(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGTE(FieldViolationType, v))
}

// ViolationTypeLT applies the LT predicate on the "violation_type" field.
func ViolationTypeLT(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLT(FieldViolationType, v))
}

// ViolationTypeLTE applies the LTE predicate on the "violation_type" field.
func ViolationTypeLTE(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLTE(FieldViolationType, v))
}

// ViolationTypeContains applies the Contains predicate on the "violation_type" field.
func ViolationTypeContains(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldContains(FieldViolationType, v))
}

// ViolationTypeHasPrefix applies the HasPrefix predicate on the "violation_type" field.
func ViolationTypeHasPrefix(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldHasPrefix(FieldViolationType, v))
}

// ViolationTypeHasSuffix applies the HasSuffix predicate on the "violation_type" field.
func ViolationTypeHasSuffix(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldHasSuffix(FieldViolationType, v))
}

// ViolationTypeEqualFold applies the EqualFold predicate on the "violation_type" field.
func ViolationTypeEqualFold(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEqualFold(FieldViolationType, v))
}

// ViolationTypeContainsFold applies the ContainsFold predicate on the "violation_type" field.
func ViolationTypeContainsFold(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldContainsFold(FieldViolationType, v))
}

// ViolationTimeEQ applies the EQ predicate on the "violation_time" field.
func ViolationTimeEQ(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldViolationTime, v))
}

// ViolationTimeNEQ applies the NEQ predicate on the "violation_time" field.
func ViolationTimeNEQ(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNEQ(FieldViolationTime, v))
}

// ViolationTimeIn applies the In predicate on the "violation_time" field.
func ViolationTimeIn(vs ...time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldIn(FieldViolationTime, vs...))
}

// ViolationTimeNotIn applies the NotIn predicate on the "violation_time" field.
func ViolationTimeNotIn(vs ...time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNotIn(FieldViolationTime, vs...))
}

// ViolationTimeGT applies the GT predicate on the "violation_time" field.
func ViolationTimeGT(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGT(FieldViolationTime, v))
}

// ViolationTimeGTE applies the GTE predicate on the "violation_time" field.
func ViolationTimeGTE(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGTE(FieldViolationTime, v))
}

// ViolationTimeLT applies the LT predicate on the "violation_time" field.
func ViolationTimeLT(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLT(FieldViolationTime, v))
}

// ViolationTimeLTE applies the LTE predicate on the "violation_time" field.
func ViolationTimeLTE(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLTE(FieldViolationTime, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldContainsFold(FieldDescription, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v int) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLTE(FieldTenantID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.SLAViolation {
	return predicate.SLAViolation(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SLAViolation) predicate.SLAViolation {
	return predicate.SLAViolation(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SLAViolation) predicate.SLAViolation {
	return predicate.SLAViolation(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SLAViolation) predicate.SLAViolation {
	return predicate.SLAViolation(sql.NotPredicates(p))
}
