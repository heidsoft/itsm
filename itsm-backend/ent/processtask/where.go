// Code generated by ent, DO NOT EDIT.

package processtask

import (
	"itsm-backend/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldID, id))
}

// TaskID applies equality check predicate on the "task_id" field. It's identical to TaskIDEQ.
func TaskID(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldTaskID, v))
}

// ProcessInstanceID applies equality check predicate on the "process_instance_id" field. It's identical to ProcessInstanceIDEQ.
func ProcessInstanceID(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldProcessInstanceID, v))
}

// ProcessDefinitionKey applies equality check predicate on the "process_definition_key" field. It's identical to ProcessDefinitionKeyEQ.
func ProcessDefinitionKey(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldProcessDefinitionKey, v))
}

// TaskDefinitionKey applies equality check predicate on the "task_definition_key" field. It's identical to TaskDefinitionKeyEQ.
func TaskDefinitionKey(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldTaskDefinitionKey, v))
}

// TaskName applies equality check predicate on the "task_name" field. It's identical to TaskNameEQ.
func TaskName(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldTaskName, v))
}

// TaskType applies equality check predicate on the "task_type" field. It's identical to TaskTypeEQ.
func TaskType(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldTaskType, v))
}

// Assignee applies equality check predicate on the "assignee" field. It's identical to AssigneeEQ.
func Assignee(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldAssignee, v))
}

// CandidateUsers applies equality check predicate on the "candidate_users" field. It's identical to CandidateUsersEQ.
func CandidateUsers(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldCandidateUsers, v))
}

// CandidateGroups applies equality check predicate on the "candidate_groups" field. It's identical to CandidateGroupsEQ.
func CandidateGroups(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldCandidateGroups, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldStatus, v))
}

// Priority applies equality check predicate on the "priority" field. It's identical to PriorityEQ.
func Priority(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldPriority, v))
}

// DueDate applies equality check predicate on the "due_date" field. It's identical to DueDateEQ.
func DueDate(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldDueDate, v))
}

// CreatedTime applies equality check predicate on the "created_time" field. It's identical to CreatedTimeEQ.
func CreatedTime(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldCreatedTime, v))
}

// AssignedTime applies equality check predicate on the "assigned_time" field. It's identical to AssignedTimeEQ.
func AssignedTime(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldAssignedTime, v))
}

// StartedTime applies equality check predicate on the "started_time" field. It's identical to StartedTimeEQ.
func StartedTime(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldStartedTime, v))
}

// CompletedTime applies equality check predicate on the "completed_time" field. It's identical to CompletedTimeEQ.
func CompletedTime(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldCompletedTime, v))
}

// FormKey applies equality check predicate on the "form_key" field. It's identical to FormKeyEQ.
func FormKey(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldFormKey, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldDescription, v))
}

// ParentTaskID applies equality check predicate on the "parent_task_id" field. It's identical to ParentTaskIDEQ.
func ParentTaskID(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldParentTaskID, v))
}

// RootTaskID applies equality check predicate on the "root_task_id" field. It's identical to RootTaskIDEQ.
func RootTaskID(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldRootTaskID, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldTenantID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldUpdatedAt, v))
}

// TaskIDEQ applies the EQ predicate on the "task_id" field.
func TaskIDEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldTaskID, v))
}

// TaskIDNEQ applies the NEQ predicate on the "task_id" field.
func TaskIDNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldTaskID, v))
}

// TaskIDIn applies the In predicate on the "task_id" field.
func TaskIDIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldTaskID, vs...))
}

// TaskIDNotIn applies the NotIn predicate on the "task_id" field.
func TaskIDNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldTaskID, vs...))
}

// TaskIDGT applies the GT predicate on the "task_id" field.
func TaskIDGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldTaskID, v))
}

// TaskIDGTE applies the GTE predicate on the "task_id" field.
func TaskIDGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldTaskID, v))
}

// TaskIDLT applies the LT predicate on the "task_id" field.
func TaskIDLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldTaskID, v))
}

// TaskIDLTE applies the LTE predicate on the "task_id" field.
func TaskIDLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldTaskID, v))
}

// TaskIDContains applies the Contains predicate on the "task_id" field.
func TaskIDContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldTaskID, v))
}

// TaskIDHasPrefix applies the HasPrefix predicate on the "task_id" field.
func TaskIDHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldTaskID, v))
}

// TaskIDHasSuffix applies the HasSuffix predicate on the "task_id" field.
func TaskIDHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldTaskID, v))
}

// TaskIDEqualFold applies the EqualFold predicate on the "task_id" field.
func TaskIDEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldTaskID, v))
}

// TaskIDContainsFold applies the ContainsFold predicate on the "task_id" field.
func TaskIDContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldTaskID, v))
}

// ProcessInstanceIDEQ applies the EQ predicate on the "process_instance_id" field.
func ProcessInstanceIDEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDNEQ applies the NEQ predicate on the "process_instance_id" field.
func ProcessInstanceIDNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDIn applies the In predicate on the "process_instance_id" field.
func ProcessInstanceIDIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDNotIn applies the NotIn predicate on the "process_instance_id" field.
func ProcessInstanceIDNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDGT applies the GT predicate on the "process_instance_id" field.
func ProcessInstanceIDGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDGTE applies the GTE predicate on the "process_instance_id" field.
func ProcessInstanceIDGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLT applies the LT predicate on the "process_instance_id" field.
func ProcessInstanceIDLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLTE applies the LTE predicate on the "process_instance_id" field.
func ProcessInstanceIDLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDContains applies the Contains predicate on the "process_instance_id" field.
func ProcessInstanceIDContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldProcessInstanceID, v))
}

// ProcessInstanceIDHasPrefix applies the HasPrefix predicate on the "process_instance_id" field.
func ProcessInstanceIDHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldProcessInstanceID, v))
}

// ProcessInstanceIDHasSuffix applies the HasSuffix predicate on the "process_instance_id" field.
func ProcessInstanceIDHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldProcessInstanceID, v))
}

// ProcessInstanceIDEqualFold applies the EqualFold predicate on the "process_instance_id" field.
func ProcessInstanceIDEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldProcessInstanceID, v))
}

// ProcessInstanceIDContainsFold applies the ContainsFold predicate on the "process_instance_id" field.
func ProcessInstanceIDContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldProcessInstanceID, v))
}

// ProcessDefinitionKeyEQ applies the EQ predicate on the "process_definition_key" field.
func ProcessDefinitionKeyEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyNEQ applies the NEQ predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyIn applies the In predicate on the "process_definition_key" field.
func ProcessDefinitionKeyIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldProcessDefinitionKey, vs...))
}

// ProcessDefinitionKeyNotIn applies the NotIn predicate on the "process_definition_key" field.
func ProcessDefinitionKeyNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldProcessDefinitionKey, vs...))
}

// ProcessDefinitionKeyGT applies the GT predicate on the "process_definition_key" field.
func ProcessDefinitionKeyGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyGTE applies the GTE predicate on the "process_definition_key" field.
func ProcessDefinitionKeyGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyLT applies the LT predicate on the "process_definition_key" field.
func ProcessDefinitionKeyLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyLTE applies the LTE predicate on the "process_definition_key" field.
func ProcessDefinitionKeyLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyContains applies the Contains predicate on the "process_definition_key" field.
func ProcessDefinitionKeyContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyHasPrefix applies the HasPrefix predicate on the "process_definition_key" field.
func ProcessDefinitionKeyHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyHasSuffix applies the HasSuffix predicate on the "process_definition_key" field.
func ProcessDefinitionKeyHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyEqualFold applies the EqualFold predicate on the "process_definition_key" field.
func ProcessDefinitionKeyEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldProcessDefinitionKey, v))
}

// ProcessDefinitionKeyContainsFold applies the ContainsFold predicate on the "process_definition_key" field.
func ProcessDefinitionKeyContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldProcessDefinitionKey, v))
}

// TaskDefinitionKeyEQ applies the EQ predicate on the "task_definition_key" field.
func TaskDefinitionKeyEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldTaskDefinitionKey, v))
}

// TaskDefinitionKeyNEQ applies the NEQ predicate on the "task_definition_key" field.
func TaskDefinitionKeyNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldTaskDefinitionKey, v))
}

// TaskDefinitionKeyIn applies the In predicate on the "task_definition_key" field.
func TaskDefinitionKeyIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldTaskDefinitionKey, vs...))
}

// TaskDefinitionKeyNotIn applies the NotIn predicate on the "task_definition_key" field.
func TaskDefinitionKeyNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldTaskDefinitionKey, vs...))
}

// TaskDefinitionKeyGT applies the GT predicate on the "task_definition_key" field.
func TaskDefinitionKeyGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldTaskDefinitionKey, v))
}

// TaskDefinitionKeyGTE applies the GTE predicate on the "task_definition_key" field.
func TaskDefinitionKeyGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldTaskDefinitionKey, v))
}

// TaskDefinitionKeyLT applies the LT predicate on the "task_definition_key" field.
func TaskDefinitionKeyLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldTaskDefinitionKey, v))
}

// TaskDefinitionKeyLTE applies the LTE predicate on the "task_definition_key" field.
func TaskDefinitionKeyLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldTaskDefinitionKey, v))
}

// TaskDefinitionKeyContains applies the Contains predicate on the "task_definition_key" field.
func TaskDefinitionKeyContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldTaskDefinitionKey, v))
}

// TaskDefinitionKeyHasPrefix applies the HasPrefix predicate on the "task_definition_key" field.
func TaskDefinitionKeyHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldTaskDefinitionKey, v))
}

// TaskDefinitionKeyHasSuffix applies the HasSuffix predicate on the "task_definition_key" field.
func TaskDefinitionKeyHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldTaskDefinitionKey, v))
}

// TaskDefinitionKeyEqualFold applies the EqualFold predicate on the "task_definition_key" field.
func TaskDefinitionKeyEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldTaskDefinitionKey, v))
}

// TaskDefinitionKeyContainsFold applies the ContainsFold predicate on the "task_definition_key" field.
func TaskDefinitionKeyContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldTaskDefinitionKey, v))
}

// TaskNameEQ applies the EQ predicate on the "task_name" field.
func TaskNameEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldTaskName, v))
}

// TaskNameNEQ applies the NEQ predicate on the "task_name" field.
func TaskNameNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldTaskName, v))
}

// TaskNameIn applies the In predicate on the "task_name" field.
func TaskNameIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldTaskName, vs...))
}

// TaskNameNotIn applies the NotIn predicate on the "task_name" field.
func TaskNameNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldTaskName, vs...))
}

// TaskNameGT applies the GT predicate on the "task_name" field.
func TaskNameGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldTaskName, v))
}

// TaskNameGTE applies the GTE predicate on the "task_name" field.
func TaskNameGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldTaskName, v))
}

// TaskNameLT applies the LT predicate on the "task_name" field.
func TaskNameLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldTaskName, v))
}

// TaskNameLTE applies the LTE predicate on the "task_name" field.
func TaskNameLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldTaskName, v))
}

// TaskNameContains applies the Contains predicate on the "task_name" field.
func TaskNameContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldTaskName, v))
}

// TaskNameHasPrefix applies the HasPrefix predicate on the "task_name" field.
func TaskNameHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldTaskName, v))
}

// TaskNameHasSuffix applies the HasSuffix predicate on the "task_name" field.
func TaskNameHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldTaskName, v))
}

// TaskNameEqualFold applies the EqualFold predicate on the "task_name" field.
func TaskNameEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldTaskName, v))
}

// TaskNameContainsFold applies the ContainsFold predicate on the "task_name" field.
func TaskNameContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldTaskName, v))
}

// TaskTypeEQ applies the EQ predicate on the "task_type" field.
func TaskTypeEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldTaskType, v))
}

// TaskTypeNEQ applies the NEQ predicate on the "task_type" field.
func TaskTypeNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldTaskType, v))
}

// TaskTypeIn applies the In predicate on the "task_type" field.
func TaskTypeIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldTaskType, vs...))
}

// TaskTypeNotIn applies the NotIn predicate on the "task_type" field.
func TaskTypeNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldTaskType, vs...))
}

// TaskTypeGT applies the GT predicate on the "task_type" field.
func TaskTypeGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldTaskType, v))
}

// TaskTypeGTE applies the GTE predicate on the "task_type" field.
func TaskTypeGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldTaskType, v))
}

// TaskTypeLT applies the LT predicate on the "task_type" field.
func TaskTypeLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldTaskType, v))
}

// TaskTypeLTE applies the LTE predicate on the "task_type" field.
func TaskTypeLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldTaskType, v))
}

// TaskTypeContains applies the Contains predicate on the "task_type" field.
func TaskTypeContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldTaskType, v))
}

// TaskTypeHasPrefix applies the HasPrefix predicate on the "task_type" field.
func TaskTypeHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldTaskType, v))
}

// TaskTypeHasSuffix applies the HasSuffix predicate on the "task_type" field.
func TaskTypeHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldTaskType, v))
}

// TaskTypeEqualFold applies the EqualFold predicate on the "task_type" field.
func TaskTypeEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldTaskType, v))
}

// TaskTypeContainsFold applies the ContainsFold predicate on the "task_type" field.
func TaskTypeContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldTaskType, v))
}

// AssigneeEQ applies the EQ predicate on the "assignee" field.
func AssigneeEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldAssignee, v))
}

// AssigneeNEQ applies the NEQ predicate on the "assignee" field.
func AssigneeNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldAssignee, v))
}

// AssigneeIn applies the In predicate on the "assignee" field.
func AssigneeIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldAssignee, vs...))
}

// AssigneeNotIn applies the NotIn predicate on the "assignee" field.
func AssigneeNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldAssignee, vs...))
}

// AssigneeGT applies the GT predicate on the "assignee" field.
func AssigneeGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldAssignee, v))
}

// AssigneeGTE applies the GTE predicate on the "assignee" field.
func AssigneeGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldAssignee, v))
}

// AssigneeLT applies the LT predicate on the "assignee" field.
func AssigneeLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldAssignee, v))
}

// AssigneeLTE applies the LTE predicate on the "assignee" field.
func AssigneeLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldAssignee, v))
}

// AssigneeContains applies the Contains predicate on the "assignee" field.
func AssigneeContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldAssignee, v))
}

// AssigneeHasPrefix applies the HasPrefix predicate on the "assignee" field.
func AssigneeHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldAssignee, v))
}

// AssigneeHasSuffix applies the HasSuffix predicate on the "assignee" field.
func AssigneeHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldAssignee, v))
}

// AssigneeIsNil applies the IsNil predicate on the "assignee" field.
func AssigneeIsNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIsNull(FieldAssignee))
}

// AssigneeNotNil applies the NotNil predicate on the "assignee" field.
func AssigneeNotNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotNull(FieldAssignee))
}

// AssigneeEqualFold applies the EqualFold predicate on the "assignee" field.
func AssigneeEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldAssignee, v))
}

// AssigneeContainsFold applies the ContainsFold predicate on the "assignee" field.
func AssigneeContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldAssignee, v))
}

// CandidateUsersEQ applies the EQ predicate on the "candidate_users" field.
func CandidateUsersEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldCandidateUsers, v))
}

// CandidateUsersNEQ applies the NEQ predicate on the "candidate_users" field.
func CandidateUsersNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldCandidateUsers, v))
}

// CandidateUsersIn applies the In predicate on the "candidate_users" field.
func CandidateUsersIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldCandidateUsers, vs...))
}

// CandidateUsersNotIn applies the NotIn predicate on the "candidate_users" field.
func CandidateUsersNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldCandidateUsers, vs...))
}

// CandidateUsersGT applies the GT predicate on the "candidate_users" field.
func CandidateUsersGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldCandidateUsers, v))
}

// CandidateUsersGTE applies the GTE predicate on the "candidate_users" field.
func CandidateUsersGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldCandidateUsers, v))
}

// CandidateUsersLT applies the LT predicate on the "candidate_users" field.
func CandidateUsersLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldCandidateUsers, v))
}

// CandidateUsersLTE applies the LTE predicate on the "candidate_users" field.
func CandidateUsersLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldCandidateUsers, v))
}

// CandidateUsersContains applies the Contains predicate on the "candidate_users" field.
func CandidateUsersContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldCandidateUsers, v))
}

// CandidateUsersHasPrefix applies the HasPrefix predicate on the "candidate_users" field.
func CandidateUsersHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldCandidateUsers, v))
}

// CandidateUsersHasSuffix applies the HasSuffix predicate on the "candidate_users" field.
func CandidateUsersHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldCandidateUsers, v))
}

// CandidateUsersIsNil applies the IsNil predicate on the "candidate_users" field.
func CandidateUsersIsNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIsNull(FieldCandidateUsers))
}

// CandidateUsersNotNil applies the NotNil predicate on the "candidate_users" field.
func CandidateUsersNotNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotNull(FieldCandidateUsers))
}

// CandidateUsersEqualFold applies the EqualFold predicate on the "candidate_users" field.
func CandidateUsersEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldCandidateUsers, v))
}

// CandidateUsersContainsFold applies the ContainsFold predicate on the "candidate_users" field.
func CandidateUsersContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldCandidateUsers, v))
}

// CandidateGroupsEQ applies the EQ predicate on the "candidate_groups" field.
func CandidateGroupsEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldCandidateGroups, v))
}

// CandidateGroupsNEQ applies the NEQ predicate on the "candidate_groups" field.
func CandidateGroupsNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldCandidateGroups, v))
}

// CandidateGroupsIn applies the In predicate on the "candidate_groups" field.
func CandidateGroupsIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldCandidateGroups, vs...))
}

// CandidateGroupsNotIn applies the NotIn predicate on the "candidate_groups" field.
func CandidateGroupsNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldCandidateGroups, vs...))
}

// CandidateGroupsGT applies the GT predicate on the "candidate_groups" field.
func CandidateGroupsGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldCandidateGroups, v))
}

// CandidateGroupsGTE applies the GTE predicate on the "candidate_groups" field.
func CandidateGroupsGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldCandidateGroups, v))
}

// CandidateGroupsLT applies the LT predicate on the "candidate_groups" field.
func CandidateGroupsLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldCandidateGroups, v))
}

// CandidateGroupsLTE applies the LTE predicate on the "candidate_groups" field.
func CandidateGroupsLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldCandidateGroups, v))
}

// CandidateGroupsContains applies the Contains predicate on the "candidate_groups" field.
func CandidateGroupsContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldCandidateGroups, v))
}

// CandidateGroupsHasPrefix applies the HasPrefix predicate on the "candidate_groups" field.
func CandidateGroupsHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldCandidateGroups, v))
}

// CandidateGroupsHasSuffix applies the HasSuffix predicate on the "candidate_groups" field.
func CandidateGroupsHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldCandidateGroups, v))
}

// CandidateGroupsIsNil applies the IsNil predicate on the "candidate_groups" field.
func CandidateGroupsIsNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIsNull(FieldCandidateGroups))
}

// CandidateGroupsNotNil applies the NotNil predicate on the "candidate_groups" field.
func CandidateGroupsNotNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotNull(FieldCandidateGroups))
}

// CandidateGroupsEqualFold applies the EqualFold predicate on the "candidate_groups" field.
func CandidateGroupsEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldCandidateGroups, v))
}

// CandidateGroupsContainsFold applies the ContainsFold predicate on the "candidate_groups" field.
func CandidateGroupsContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldCandidateGroups, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldStatus, v))
}

// PriorityEQ applies the EQ predicate on the "priority" field.
func PriorityEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldPriority, v))
}

// PriorityNEQ applies the NEQ predicate on the "priority" field.
func PriorityNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldPriority, v))
}

// PriorityIn applies the In predicate on the "priority" field.
func PriorityIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldPriority, vs...))
}

// PriorityNotIn applies the NotIn predicate on the "priority" field.
func PriorityNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldPriority, vs...))
}

// PriorityGT applies the GT predicate on the "priority" field.
func PriorityGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldPriority, v))
}

// PriorityGTE applies the GTE predicate on the "priority" field.
func PriorityGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldPriority, v))
}

// PriorityLT applies the LT predicate on the "priority" field.
func PriorityLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldPriority, v))
}

// PriorityLTE applies the LTE predicate on the "priority" field.
func PriorityLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldPriority, v))
}

// PriorityContains applies the Contains predicate on the "priority" field.
func PriorityContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldPriority, v))
}

// PriorityHasPrefix applies the HasPrefix predicate on the "priority" field.
func PriorityHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldPriority, v))
}

// PriorityHasSuffix applies the HasSuffix predicate on the "priority" field.
func PriorityHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldPriority, v))
}

// PriorityEqualFold applies the EqualFold predicate on the "priority" field.
func PriorityEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldPriority, v))
}

// PriorityContainsFold applies the ContainsFold predicate on the "priority" field.
func PriorityContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldPriority, v))
}

// DueDateEQ applies the EQ predicate on the "due_date" field.
func DueDateEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldDueDate, v))
}

// DueDateNEQ applies the NEQ predicate on the "due_date" field.
func DueDateNEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldDueDate, v))
}

// DueDateIn applies the In predicate on the "due_date" field.
func DueDateIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldDueDate, vs...))
}

// DueDateNotIn applies the NotIn predicate on the "due_date" field.
func DueDateNotIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldDueDate, vs...))
}

// DueDateGT applies the GT predicate on the "due_date" field.
func DueDateGT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldDueDate, v))
}

// DueDateGTE applies the GTE predicate on the "due_date" field.
func DueDateGTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldDueDate, v))
}

// DueDateLT applies the LT predicate on the "due_date" field.
func DueDateLT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldDueDate, v))
}

// DueDateLTE applies the LTE predicate on the "due_date" field.
func DueDateLTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldDueDate, v))
}

// DueDateIsNil applies the IsNil predicate on the "due_date" field.
func DueDateIsNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIsNull(FieldDueDate))
}

// DueDateNotNil applies the NotNil predicate on the "due_date" field.
func DueDateNotNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotNull(FieldDueDate))
}

// CreatedTimeEQ applies the EQ predicate on the "created_time" field.
func CreatedTimeEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldCreatedTime, v))
}

// CreatedTimeNEQ applies the NEQ predicate on the "created_time" field.
func CreatedTimeNEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldCreatedTime, v))
}

// CreatedTimeIn applies the In predicate on the "created_time" field.
func CreatedTimeIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldCreatedTime, vs...))
}

// CreatedTimeNotIn applies the NotIn predicate on the "created_time" field.
func CreatedTimeNotIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldCreatedTime, vs...))
}

// CreatedTimeGT applies the GT predicate on the "created_time" field.
func CreatedTimeGT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldCreatedTime, v))
}

// CreatedTimeGTE applies the GTE predicate on the "created_time" field.
func CreatedTimeGTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldCreatedTime, v))
}

// CreatedTimeLT applies the LT predicate on the "created_time" field.
func CreatedTimeLT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldCreatedTime, v))
}

// CreatedTimeLTE applies the LTE predicate on the "created_time" field.
func CreatedTimeLTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldCreatedTime, v))
}

// AssignedTimeEQ applies the EQ predicate on the "assigned_time" field.
func AssignedTimeEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldAssignedTime, v))
}

// AssignedTimeNEQ applies the NEQ predicate on the "assigned_time" field.
func AssignedTimeNEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldAssignedTime, v))
}

// AssignedTimeIn applies the In predicate on the "assigned_time" field.
func AssignedTimeIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldAssignedTime, vs...))
}

// AssignedTimeNotIn applies the NotIn predicate on the "assigned_time" field.
func AssignedTimeNotIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldAssignedTime, vs...))
}

// AssignedTimeGT applies the GT predicate on the "assigned_time" field.
func AssignedTimeGT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldAssignedTime, v))
}

// AssignedTimeGTE applies the GTE predicate on the "assigned_time" field.
func AssignedTimeGTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldAssignedTime, v))
}

// AssignedTimeLT applies the LT predicate on the "assigned_time" field.
func AssignedTimeLT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldAssignedTime, v))
}

// AssignedTimeLTE applies the LTE predicate on the "assigned_time" field.
func AssignedTimeLTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldAssignedTime, v))
}

// AssignedTimeIsNil applies the IsNil predicate on the "assigned_time" field.
func AssignedTimeIsNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIsNull(FieldAssignedTime))
}

// AssignedTimeNotNil applies the NotNil predicate on the "assigned_time" field.
func AssignedTimeNotNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotNull(FieldAssignedTime))
}

// StartedTimeEQ applies the EQ predicate on the "started_time" field.
func StartedTimeEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldStartedTime, v))
}

// StartedTimeNEQ applies the NEQ predicate on the "started_time" field.
func StartedTimeNEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldStartedTime, v))
}

// StartedTimeIn applies the In predicate on the "started_time" field.
func StartedTimeIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldStartedTime, vs...))
}

// StartedTimeNotIn applies the NotIn predicate on the "started_time" field.
func StartedTimeNotIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldStartedTime, vs...))
}

// StartedTimeGT applies the GT predicate on the "started_time" field.
func StartedTimeGT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldStartedTime, v))
}

// StartedTimeGTE applies the GTE predicate on the "started_time" field.
func StartedTimeGTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldStartedTime, v))
}

// StartedTimeLT applies the LT predicate on the "started_time" field.
func StartedTimeLT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldStartedTime, v))
}

// StartedTimeLTE applies the LTE predicate on the "started_time" field.
func StartedTimeLTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldStartedTime, v))
}

// StartedTimeIsNil applies the IsNil predicate on the "started_time" field.
func StartedTimeIsNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIsNull(FieldStartedTime))
}

// StartedTimeNotNil applies the NotNil predicate on the "started_time" field.
func StartedTimeNotNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotNull(FieldStartedTime))
}

// CompletedTimeEQ applies the EQ predicate on the "completed_time" field.
func CompletedTimeEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldCompletedTime, v))
}

// CompletedTimeNEQ applies the NEQ predicate on the "completed_time" field.
func CompletedTimeNEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldCompletedTime, v))
}

// CompletedTimeIn applies the In predicate on the "completed_time" field.
func CompletedTimeIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldCompletedTime, vs...))
}

// CompletedTimeNotIn applies the NotIn predicate on the "completed_time" field.
func CompletedTimeNotIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldCompletedTime, vs...))
}

// CompletedTimeGT applies the GT predicate on the "completed_time" field.
func CompletedTimeGT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldCompletedTime, v))
}

// CompletedTimeGTE applies the GTE predicate on the "completed_time" field.
func CompletedTimeGTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldCompletedTime, v))
}

// CompletedTimeLT applies the LT predicate on the "completed_time" field.
func CompletedTimeLT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldCompletedTime, v))
}

// CompletedTimeLTE applies the LTE predicate on the "completed_time" field.
func CompletedTimeLTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldCompletedTime, v))
}

// CompletedTimeIsNil applies the IsNil predicate on the "completed_time" field.
func CompletedTimeIsNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIsNull(FieldCompletedTime))
}

// CompletedTimeNotNil applies the NotNil predicate on the "completed_time" field.
func CompletedTimeNotNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotNull(FieldCompletedTime))
}

// FormKeyEQ applies the EQ predicate on the "form_key" field.
func FormKeyEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldFormKey, v))
}

// FormKeyNEQ applies the NEQ predicate on the "form_key" field.
func FormKeyNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldFormKey, v))
}

// FormKeyIn applies the In predicate on the "form_key" field.
func FormKeyIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldFormKey, vs...))
}

// FormKeyNotIn applies the NotIn predicate on the "form_key" field.
func FormKeyNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldFormKey, vs...))
}

// FormKeyGT applies the GT predicate on the "form_key" field.
func FormKeyGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldFormKey, v))
}

// FormKeyGTE applies the GTE predicate on the "form_key" field.
func FormKeyGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldFormKey, v))
}

// FormKeyLT applies the LT predicate on the "form_key" field.
func FormKeyLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldFormKey, v))
}

// FormKeyLTE applies the LTE predicate on the "form_key" field.
func FormKeyLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldFormKey, v))
}

// FormKeyContains applies the Contains predicate on the "form_key" field.
func FormKeyContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldFormKey, v))
}

// FormKeyHasPrefix applies the HasPrefix predicate on the "form_key" field.
func FormKeyHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldFormKey, v))
}

// FormKeyHasSuffix applies the HasSuffix predicate on the "form_key" field.
func FormKeyHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldFormKey, v))
}

// FormKeyIsNil applies the IsNil predicate on the "form_key" field.
func FormKeyIsNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIsNull(FieldFormKey))
}

// FormKeyNotNil applies the NotNil predicate on the "form_key" field.
func FormKeyNotNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotNull(FieldFormKey))
}

// FormKeyEqualFold applies the EqualFold predicate on the "form_key" field.
func FormKeyEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldFormKey, v))
}

// FormKeyContainsFold applies the ContainsFold predicate on the "form_key" field.
func FormKeyContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldFormKey, v))
}

// TaskVariablesIsNil applies the IsNil predicate on the "task_variables" field.
func TaskVariablesIsNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIsNull(FieldTaskVariables))
}

// TaskVariablesNotNil applies the NotNil predicate on the "task_variables" field.
func TaskVariablesNotNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotNull(FieldTaskVariables))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldDescription, v))
}

// ParentTaskIDEQ applies the EQ predicate on the "parent_task_id" field.
func ParentTaskIDEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldParentTaskID, v))
}

// ParentTaskIDNEQ applies the NEQ predicate on the "parent_task_id" field.
func ParentTaskIDNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldParentTaskID, v))
}

// ParentTaskIDIn applies the In predicate on the "parent_task_id" field.
func ParentTaskIDIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldParentTaskID, vs...))
}

// ParentTaskIDNotIn applies the NotIn predicate on the "parent_task_id" field.
func ParentTaskIDNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldParentTaskID, vs...))
}

// ParentTaskIDGT applies the GT predicate on the "parent_task_id" field.
func ParentTaskIDGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldParentTaskID, v))
}

// ParentTaskIDGTE applies the GTE predicate on the "parent_task_id" field.
func ParentTaskIDGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldParentTaskID, v))
}

// ParentTaskIDLT applies the LT predicate on the "parent_task_id" field.
func ParentTaskIDLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldParentTaskID, v))
}

// ParentTaskIDLTE applies the LTE predicate on the "parent_task_id" field.
func ParentTaskIDLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldParentTaskID, v))
}

// ParentTaskIDContains applies the Contains predicate on the "parent_task_id" field.
func ParentTaskIDContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldParentTaskID, v))
}

// ParentTaskIDHasPrefix applies the HasPrefix predicate on the "parent_task_id" field.
func ParentTaskIDHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldParentTaskID, v))
}

// ParentTaskIDHasSuffix applies the HasSuffix predicate on the "parent_task_id" field.
func ParentTaskIDHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldParentTaskID, v))
}

// ParentTaskIDIsNil applies the IsNil predicate on the "parent_task_id" field.
func ParentTaskIDIsNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIsNull(FieldParentTaskID))
}

// ParentTaskIDNotNil applies the NotNil predicate on the "parent_task_id" field.
func ParentTaskIDNotNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotNull(FieldParentTaskID))
}

// ParentTaskIDEqualFold applies the EqualFold predicate on the "parent_task_id" field.
func ParentTaskIDEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldParentTaskID, v))
}

// ParentTaskIDContainsFold applies the ContainsFold predicate on the "parent_task_id" field.
func ParentTaskIDContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldParentTaskID, v))
}

// RootTaskIDEQ applies the EQ predicate on the "root_task_id" field.
func RootTaskIDEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldRootTaskID, v))
}

// RootTaskIDNEQ applies the NEQ predicate on the "root_task_id" field.
func RootTaskIDNEQ(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldRootTaskID, v))
}

// RootTaskIDIn applies the In predicate on the "root_task_id" field.
func RootTaskIDIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldRootTaskID, vs...))
}

// RootTaskIDNotIn applies the NotIn predicate on the "root_task_id" field.
func RootTaskIDNotIn(vs ...string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldRootTaskID, vs...))
}

// RootTaskIDGT applies the GT predicate on the "root_task_id" field.
func RootTaskIDGT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldRootTaskID, v))
}

// RootTaskIDGTE applies the GTE predicate on the "root_task_id" field.
func RootTaskIDGTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldRootTaskID, v))
}

// RootTaskIDLT applies the LT predicate on the "root_task_id" field.
func RootTaskIDLT(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldRootTaskID, v))
}

// RootTaskIDLTE applies the LTE predicate on the "root_task_id" field.
func RootTaskIDLTE(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldRootTaskID, v))
}

// RootTaskIDContains applies the Contains predicate on the "root_task_id" field.
func RootTaskIDContains(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContains(FieldRootTaskID, v))
}

// RootTaskIDHasPrefix applies the HasPrefix predicate on the "root_task_id" field.
func RootTaskIDHasPrefix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasPrefix(FieldRootTaskID, v))
}

// RootTaskIDHasSuffix applies the HasSuffix predicate on the "root_task_id" field.
func RootTaskIDHasSuffix(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldHasSuffix(FieldRootTaskID, v))
}

// RootTaskIDIsNil applies the IsNil predicate on the "root_task_id" field.
func RootTaskIDIsNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIsNull(FieldRootTaskID))
}

// RootTaskIDNotNil applies the NotNil predicate on the "root_task_id" field.
func RootTaskIDNotNil() predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotNull(FieldRootTaskID))
}

// RootTaskIDEqualFold applies the EqualFold predicate on the "root_task_id" field.
func RootTaskIDEqualFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEqualFold(FieldRootTaskID, v))
}

// RootTaskIDContainsFold applies the ContainsFold predicate on the "root_task_id" field.
func RootTaskIDContainsFold(v string) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldContainsFold(FieldRootTaskID, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v int) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldTenantID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ProcessTask {
	return predicate.ProcessTask(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProcessTask) predicate.ProcessTask {
	return predicate.ProcessTask(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProcessTask) predicate.ProcessTask {
	return predicate.ProcessTask(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProcessTask) predicate.ProcessTask {
	return predicate.ProcessTask(sql.NotPredicates(p))
}
