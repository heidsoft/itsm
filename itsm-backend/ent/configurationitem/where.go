// Code generated by ent, DO NOT EDIT.

package configurationitem

import (
	"itsm-backend/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldName, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldDescription, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldType, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldStatus, v))
}

// Location applies equality check predicate on the "location" field. It's identical to LocationEQ.
func Location(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldLocation, v))
}

// SerialNumber applies equality check predicate on the "serial_number" field. It's identical to SerialNumberEQ.
func SerialNumber(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldSerialNumber, v))
}

// Model applies equality check predicate on the "model" field. It's identical to ModelEQ.
func Model(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldModel, v))
}

// Vendor applies equality check predicate on the "vendor" field. It's identical to VendorEQ.
func Vendor(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldVendor, v))
}

// CiTypeID applies equality check predicate on the "ci_type_id" field. It's identical to CiTypeIDEQ.
func CiTypeID(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldCiTypeID, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldTenantID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldUpdatedAt, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContainsFold(FieldName, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContainsFold(FieldDescription, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasSuffix(FieldType, v))
}

// TypeIsNil applies the IsNil predicate on the "type" field.
func TypeIsNil() predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIsNull(FieldType))
}

// TypeNotNil applies the NotNil predicate on the "type" field.
func TypeNotNil() predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotNull(FieldType))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContainsFold(FieldType, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContainsFold(FieldStatus, v))
}

// LocationEQ applies the EQ predicate on the "location" field.
func LocationEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldLocation, v))
}

// LocationNEQ applies the NEQ predicate on the "location" field.
func LocationNEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldLocation, v))
}

// LocationIn applies the In predicate on the "location" field.
func LocationIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldLocation, vs...))
}

// LocationNotIn applies the NotIn predicate on the "location" field.
func LocationNotIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldLocation, vs...))
}

// LocationGT applies the GT predicate on the "location" field.
func LocationGT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldLocation, v))
}

// LocationGTE applies the GTE predicate on the "location" field.
func LocationGTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldLocation, v))
}

// LocationLT applies the LT predicate on the "location" field.
func LocationLT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldLocation, v))
}

// LocationLTE applies the LTE predicate on the "location" field.
func LocationLTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldLocation, v))
}

// LocationContains applies the Contains predicate on the "location" field.
func LocationContains(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContains(FieldLocation, v))
}

// LocationHasPrefix applies the HasPrefix predicate on the "location" field.
func LocationHasPrefix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasPrefix(FieldLocation, v))
}

// LocationHasSuffix applies the HasSuffix predicate on the "location" field.
func LocationHasSuffix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasSuffix(FieldLocation, v))
}

// LocationIsNil applies the IsNil predicate on the "location" field.
func LocationIsNil() predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIsNull(FieldLocation))
}

// LocationNotNil applies the NotNil predicate on the "location" field.
func LocationNotNil() predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotNull(FieldLocation))
}

// LocationEqualFold applies the EqualFold predicate on the "location" field.
func LocationEqualFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEqualFold(FieldLocation, v))
}

// LocationContainsFold applies the ContainsFold predicate on the "location" field.
func LocationContainsFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContainsFold(FieldLocation, v))
}

// SerialNumberEQ applies the EQ predicate on the "serial_number" field.
func SerialNumberEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldSerialNumber, v))
}

// SerialNumberNEQ applies the NEQ predicate on the "serial_number" field.
func SerialNumberNEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldSerialNumber, v))
}

// SerialNumberIn applies the In predicate on the "serial_number" field.
func SerialNumberIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldSerialNumber, vs...))
}

// SerialNumberNotIn applies the NotIn predicate on the "serial_number" field.
func SerialNumberNotIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldSerialNumber, vs...))
}

// SerialNumberGT applies the GT predicate on the "serial_number" field.
func SerialNumberGT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldSerialNumber, v))
}

// SerialNumberGTE applies the GTE predicate on the "serial_number" field.
func SerialNumberGTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldSerialNumber, v))
}

// SerialNumberLT applies the LT predicate on the "serial_number" field.
func SerialNumberLT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldSerialNumber, v))
}

// SerialNumberLTE applies the LTE predicate on the "serial_number" field.
func SerialNumberLTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldSerialNumber, v))
}

// SerialNumberContains applies the Contains predicate on the "serial_number" field.
func SerialNumberContains(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContains(FieldSerialNumber, v))
}

// SerialNumberHasPrefix applies the HasPrefix predicate on the "serial_number" field.
func SerialNumberHasPrefix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasPrefix(FieldSerialNumber, v))
}

// SerialNumberHasSuffix applies the HasSuffix predicate on the "serial_number" field.
func SerialNumberHasSuffix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasSuffix(FieldSerialNumber, v))
}

// SerialNumberIsNil applies the IsNil predicate on the "serial_number" field.
func SerialNumberIsNil() predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIsNull(FieldSerialNumber))
}

// SerialNumberNotNil applies the NotNil predicate on the "serial_number" field.
func SerialNumberNotNil() predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotNull(FieldSerialNumber))
}

// SerialNumberEqualFold applies the EqualFold predicate on the "serial_number" field.
func SerialNumberEqualFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEqualFold(FieldSerialNumber, v))
}

// SerialNumberContainsFold applies the ContainsFold predicate on the "serial_number" field.
func SerialNumberContainsFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContainsFold(FieldSerialNumber, v))
}

// ModelEQ applies the EQ predicate on the "model" field.
func ModelEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldModel, v))
}

// ModelNEQ applies the NEQ predicate on the "model" field.
func ModelNEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldModel, v))
}

// ModelIn applies the In predicate on the "model" field.
func ModelIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldModel, vs...))
}

// ModelNotIn applies the NotIn predicate on the "model" field.
func ModelNotIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldModel, vs...))
}

// ModelGT applies the GT predicate on the "model" field.
func ModelGT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldModel, v))
}

// ModelGTE applies the GTE predicate on the "model" field.
func ModelGTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldModel, v))
}

// ModelLT applies the LT predicate on the "model" field.
func ModelLT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldModel, v))
}

// ModelLTE applies the LTE predicate on the "model" field.
func ModelLTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldModel, v))
}

// ModelContains applies the Contains predicate on the "model" field.
func ModelContains(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContains(FieldModel, v))
}

// ModelHasPrefix applies the HasPrefix predicate on the "model" field.
func ModelHasPrefix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasPrefix(FieldModel, v))
}

// ModelHasSuffix applies the HasSuffix predicate on the "model" field.
func ModelHasSuffix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasSuffix(FieldModel, v))
}

// ModelIsNil applies the IsNil predicate on the "model" field.
func ModelIsNil() predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIsNull(FieldModel))
}

// ModelNotNil applies the NotNil predicate on the "model" field.
func ModelNotNil() predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotNull(FieldModel))
}

// ModelEqualFold applies the EqualFold predicate on the "model" field.
func ModelEqualFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEqualFold(FieldModel, v))
}

// ModelContainsFold applies the ContainsFold predicate on the "model" field.
func ModelContainsFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContainsFold(FieldModel, v))
}

// VendorEQ applies the EQ predicate on the "vendor" field.
func VendorEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldVendor, v))
}

// VendorNEQ applies the NEQ predicate on the "vendor" field.
func VendorNEQ(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldVendor, v))
}

// VendorIn applies the In predicate on the "vendor" field.
func VendorIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldVendor, vs...))
}

// VendorNotIn applies the NotIn predicate on the "vendor" field.
func VendorNotIn(vs ...string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldVendor, vs...))
}

// VendorGT applies the GT predicate on the "vendor" field.
func VendorGT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldVendor, v))
}

// VendorGTE applies the GTE predicate on the "vendor" field.
func VendorGTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldVendor, v))
}

// VendorLT applies the LT predicate on the "vendor" field.
func VendorLT(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldVendor, v))
}

// VendorLTE applies the LTE predicate on the "vendor" field.
func VendorLTE(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldVendor, v))
}

// VendorContains applies the Contains predicate on the "vendor" field.
func VendorContains(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContains(FieldVendor, v))
}

// VendorHasPrefix applies the HasPrefix predicate on the "vendor" field.
func VendorHasPrefix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasPrefix(FieldVendor, v))
}

// VendorHasSuffix applies the HasSuffix predicate on the "vendor" field.
func VendorHasSuffix(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldHasSuffix(FieldVendor, v))
}

// VendorIsNil applies the IsNil predicate on the "vendor" field.
func VendorIsNil() predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIsNull(FieldVendor))
}

// VendorNotNil applies the NotNil predicate on the "vendor" field.
func VendorNotNil() predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotNull(FieldVendor))
}

// VendorEqualFold applies the EqualFold predicate on the "vendor" field.
func VendorEqualFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEqualFold(FieldVendor, v))
}

// VendorContainsFold applies the ContainsFold predicate on the "vendor" field.
func VendorContainsFold(v string) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldContainsFold(FieldVendor, v))
}

// CiTypeIDEQ applies the EQ predicate on the "ci_type_id" field.
func CiTypeIDEQ(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldCiTypeID, v))
}

// CiTypeIDNEQ applies the NEQ predicate on the "ci_type_id" field.
func CiTypeIDNEQ(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldCiTypeID, v))
}

// CiTypeIDIn applies the In predicate on the "ci_type_id" field.
func CiTypeIDIn(vs ...int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldCiTypeID, vs...))
}

// CiTypeIDNotIn applies the NotIn predicate on the "ci_type_id" field.
func CiTypeIDNotIn(vs ...int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldCiTypeID, vs...))
}

// CiTypeIDGT applies the GT predicate on the "ci_type_id" field.
func CiTypeIDGT(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldCiTypeID, v))
}

// CiTypeIDGTE applies the GTE predicate on the "ci_type_id" field.
func CiTypeIDGTE(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldCiTypeID, v))
}

// CiTypeIDLT applies the LT predicate on the "ci_type_id" field.
func CiTypeIDLT(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldCiTypeID, v))
}

// CiTypeIDLTE applies the LTE predicate on the "ci_type_id" field.
func CiTypeIDLTE(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldCiTypeID, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v int) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldTenantID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ConfigurationItem) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ConfigurationItem) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ConfigurationItem) predicate.ConfigurationItem {
	return predicate.ConfigurationItem(sql.NotPredicates(p))
}
