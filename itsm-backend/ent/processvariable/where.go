// Code generated by ent, DO NOT EDIT.

package processvariable

import (
	"itsm-backend/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldID, id))
}

// VariableID applies equality check predicate on the "variable_id" field. It's identical to VariableIDEQ.
func VariableID(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldVariableID, v))
}

// ProcessInstanceID applies equality check predicate on the "process_instance_id" field. It's identical to ProcessInstanceIDEQ.
func ProcessInstanceID(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldProcessInstanceID, v))
}

// TaskID applies equality check predicate on the "task_id" field. It's identical to TaskIDEQ.
func TaskID(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldTaskID, v))
}

// VariableName applies equality check predicate on the "variable_name" field. It's identical to VariableNameEQ.
func VariableName(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldVariableName, v))
}

// VariableType applies equality check predicate on the "variable_type" field. It's identical to VariableTypeEQ.
func VariableType(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldVariableType, v))
}

// VariableValue applies equality check predicate on the "variable_value" field. It's identical to VariableValueEQ.
func VariableValue(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldVariableValue, v))
}

// Scope applies equality check predicate on the "scope" field. It's identical to ScopeEQ.
func Scope(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldScope, v))
}

// IsTransient applies equality check predicate on the "is_transient" field. It's identical to IsTransientEQ.
func IsTransient(v bool) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldIsTransient, v))
}

// SerializationFormat applies equality check predicate on the "serialization_format" field. It's identical to SerializationFormatEQ.
func SerializationFormat(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldSerializationFormat, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldTenantID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldUpdatedAt, v))
}

// VariableIDEQ applies the EQ predicate on the "variable_id" field.
func VariableIDEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldVariableID, v))
}

// VariableIDNEQ applies the NEQ predicate on the "variable_id" field.
func VariableIDNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldVariableID, v))
}

// VariableIDIn applies the In predicate on the "variable_id" field.
func VariableIDIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldVariableID, vs...))
}

// VariableIDNotIn applies the NotIn predicate on the "variable_id" field.
func VariableIDNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldVariableID, vs...))
}

// VariableIDGT applies the GT predicate on the "variable_id" field.
func VariableIDGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldVariableID, v))
}

// VariableIDGTE applies the GTE predicate on the "variable_id" field.
func VariableIDGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldVariableID, v))
}

// VariableIDLT applies the LT predicate on the "variable_id" field.
func VariableIDLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldVariableID, v))
}

// VariableIDLTE applies the LTE predicate on the "variable_id" field.
func VariableIDLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldVariableID, v))
}

// VariableIDContains applies the Contains predicate on the "variable_id" field.
func VariableIDContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldVariableID, v))
}

// VariableIDHasPrefix applies the HasPrefix predicate on the "variable_id" field.
func VariableIDHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldVariableID, v))
}

// VariableIDHasSuffix applies the HasSuffix predicate on the "variable_id" field.
func VariableIDHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldVariableID, v))
}

// VariableIDEqualFold applies the EqualFold predicate on the "variable_id" field.
func VariableIDEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldVariableID, v))
}

// VariableIDContainsFold applies the ContainsFold predicate on the "variable_id" field.
func VariableIDContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldVariableID, v))
}

// ProcessInstanceIDEQ applies the EQ predicate on the "process_instance_id" field.
func ProcessInstanceIDEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDNEQ applies the NEQ predicate on the "process_instance_id" field.
func ProcessInstanceIDNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldProcessInstanceID, v))
}

// ProcessInstanceIDIn applies the In predicate on the "process_instance_id" field.
func ProcessInstanceIDIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDNotIn applies the NotIn predicate on the "process_instance_id" field.
func ProcessInstanceIDNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldProcessInstanceID, vs...))
}

// ProcessInstanceIDGT applies the GT predicate on the "process_instance_id" field.
func ProcessInstanceIDGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDGTE applies the GTE predicate on the "process_instance_id" field.
func ProcessInstanceIDGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLT applies the LT predicate on the "process_instance_id" field.
func ProcessInstanceIDLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldProcessInstanceID, v))
}

// ProcessInstanceIDLTE applies the LTE predicate on the "process_instance_id" field.
func ProcessInstanceIDLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldProcessInstanceID, v))
}

// ProcessInstanceIDContains applies the Contains predicate on the "process_instance_id" field.
func ProcessInstanceIDContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldProcessInstanceID, v))
}

// ProcessInstanceIDHasPrefix applies the HasPrefix predicate on the "process_instance_id" field.
func ProcessInstanceIDHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldProcessInstanceID, v))
}

// ProcessInstanceIDHasSuffix applies the HasSuffix predicate on the "process_instance_id" field.
func ProcessInstanceIDHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldProcessInstanceID, v))
}

// ProcessInstanceIDEqualFold applies the EqualFold predicate on the "process_instance_id" field.
func ProcessInstanceIDEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldProcessInstanceID, v))
}

// ProcessInstanceIDContainsFold applies the ContainsFold predicate on the "process_instance_id" field.
func ProcessInstanceIDContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldProcessInstanceID, v))
}

// TaskIDEQ applies the EQ predicate on the "task_id" field.
func TaskIDEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldTaskID, v))
}

// TaskIDNEQ applies the NEQ predicate on the "task_id" field.
func TaskIDNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldTaskID, v))
}

// TaskIDIn applies the In predicate on the "task_id" field.
func TaskIDIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldTaskID, vs...))
}

// TaskIDNotIn applies the NotIn predicate on the "task_id" field.
func TaskIDNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldTaskID, vs...))
}

// TaskIDGT applies the GT predicate on the "task_id" field.
func TaskIDGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldTaskID, v))
}

// TaskIDGTE applies the GTE predicate on the "task_id" field.
func TaskIDGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldTaskID, v))
}

// TaskIDLT applies the LT predicate on the "task_id" field.
func TaskIDLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldTaskID, v))
}

// TaskIDLTE applies the LTE predicate on the "task_id" field.
func TaskIDLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldTaskID, v))
}

// TaskIDContains applies the Contains predicate on the "task_id" field.
func TaskIDContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldTaskID, v))
}

// TaskIDHasPrefix applies the HasPrefix predicate on the "task_id" field.
func TaskIDHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldTaskID, v))
}

// TaskIDHasSuffix applies the HasSuffix predicate on the "task_id" field.
func TaskIDHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldTaskID, v))
}

// TaskIDIsNil applies the IsNil predicate on the "task_id" field.
func TaskIDIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldTaskID))
}

// TaskIDNotNil applies the NotNil predicate on the "task_id" field.
func TaskIDNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldTaskID))
}

// TaskIDEqualFold applies the EqualFold predicate on the "task_id" field.
func TaskIDEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldTaskID, v))
}

// TaskIDContainsFold applies the ContainsFold predicate on the "task_id" field.
func TaskIDContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldTaskID, v))
}

// VariableNameEQ applies the EQ predicate on the "variable_name" field.
func VariableNameEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldVariableName, v))
}

// VariableNameNEQ applies the NEQ predicate on the "variable_name" field.
func VariableNameNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldVariableName, v))
}

// VariableNameIn applies the In predicate on the "variable_name" field.
func VariableNameIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldVariableName, vs...))
}

// VariableNameNotIn applies the NotIn predicate on the "variable_name" field.
func VariableNameNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldVariableName, vs...))
}

// VariableNameGT applies the GT predicate on the "variable_name" field.
func VariableNameGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldVariableName, v))
}

// VariableNameGTE applies the GTE predicate on the "variable_name" field.
func VariableNameGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldVariableName, v))
}

// VariableNameLT applies the LT predicate on the "variable_name" field.
func VariableNameLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldVariableName, v))
}

// VariableNameLTE applies the LTE predicate on the "variable_name" field.
func VariableNameLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldVariableName, v))
}

// VariableNameContains applies the Contains predicate on the "variable_name" field.
func VariableNameContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldVariableName, v))
}

// VariableNameHasPrefix applies the HasPrefix predicate on the "variable_name" field.
func VariableNameHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldVariableName, v))
}

// VariableNameHasSuffix applies the HasSuffix predicate on the "variable_name" field.
func VariableNameHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldVariableName, v))
}

// VariableNameEqualFold applies the EqualFold predicate on the "variable_name" field.
func VariableNameEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldVariableName, v))
}

// VariableNameContainsFold applies the ContainsFold predicate on the "variable_name" field.
func VariableNameContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldVariableName, v))
}

// VariableTypeEQ applies the EQ predicate on the "variable_type" field.
func VariableTypeEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldVariableType, v))
}

// VariableTypeNEQ applies the NEQ predicate on the "variable_type" field.
func VariableTypeNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldVariableType, v))
}

// VariableTypeIn applies the In predicate on the "variable_type" field.
func VariableTypeIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldVariableType, vs...))
}

// VariableTypeNotIn applies the NotIn predicate on the "variable_type" field.
func VariableTypeNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldVariableType, vs...))
}

// VariableTypeGT applies the GT predicate on the "variable_type" field.
func VariableTypeGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldVariableType, v))
}

// VariableTypeGTE applies the GTE predicate on the "variable_type" field.
func VariableTypeGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldVariableType, v))
}

// VariableTypeLT applies the LT predicate on the "variable_type" field.
func VariableTypeLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldVariableType, v))
}

// VariableTypeLTE applies the LTE predicate on the "variable_type" field.
func VariableTypeLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldVariableType, v))
}

// VariableTypeContains applies the Contains predicate on the "variable_type" field.
func VariableTypeContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldVariableType, v))
}

// VariableTypeHasPrefix applies the HasPrefix predicate on the "variable_type" field.
func VariableTypeHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldVariableType, v))
}

// VariableTypeHasSuffix applies the HasSuffix predicate on the "variable_type" field.
func VariableTypeHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldVariableType, v))
}

// VariableTypeEqualFold applies the EqualFold predicate on the "variable_type" field.
func VariableTypeEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldVariableType, v))
}

// VariableTypeContainsFold applies the ContainsFold predicate on the "variable_type" field.
func VariableTypeContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldVariableType, v))
}

// VariableValueEQ applies the EQ predicate on the "variable_value" field.
func VariableValueEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldVariableValue, v))
}

// VariableValueNEQ applies the NEQ predicate on the "variable_value" field.
func VariableValueNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldVariableValue, v))
}

// VariableValueIn applies the In predicate on the "variable_value" field.
func VariableValueIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldVariableValue, vs...))
}

// VariableValueNotIn applies the NotIn predicate on the "variable_value" field.
func VariableValueNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldVariableValue, vs...))
}

// VariableValueGT applies the GT predicate on the "variable_value" field.
func VariableValueGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldVariableValue, v))
}

// VariableValueGTE applies the GTE predicate on the "variable_value" field.
func VariableValueGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldVariableValue, v))
}

// VariableValueLT applies the LT predicate on the "variable_value" field.
func VariableValueLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldVariableValue, v))
}

// VariableValueLTE applies the LTE predicate on the "variable_value" field.
func VariableValueLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldVariableValue, v))
}

// VariableValueContains applies the Contains predicate on the "variable_value" field.
func VariableValueContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldVariableValue, v))
}

// VariableValueHasPrefix applies the HasPrefix predicate on the "variable_value" field.
func VariableValueHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldVariableValue, v))
}

// VariableValueHasSuffix applies the HasSuffix predicate on the "variable_value" field.
func VariableValueHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldVariableValue, v))
}

// VariableValueIsNil applies the IsNil predicate on the "variable_value" field.
func VariableValueIsNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIsNull(FieldVariableValue))
}

// VariableValueNotNil applies the NotNil predicate on the "variable_value" field.
func VariableValueNotNil() predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotNull(FieldVariableValue))
}

// VariableValueEqualFold applies the EqualFold predicate on the "variable_value" field.
func VariableValueEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldVariableValue, v))
}

// VariableValueContainsFold applies the ContainsFold predicate on the "variable_value" field.
func VariableValueContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldVariableValue, v))
}

// ScopeEQ applies the EQ predicate on the "scope" field.
func ScopeEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldScope, v))
}

// ScopeNEQ applies the NEQ predicate on the "scope" field.
func ScopeNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldScope, v))
}

// ScopeIn applies the In predicate on the "scope" field.
func ScopeIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldScope, vs...))
}

// ScopeNotIn applies the NotIn predicate on the "scope" field.
func ScopeNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldScope, vs...))
}

// ScopeGT applies the GT predicate on the "scope" field.
func ScopeGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldScope, v))
}

// ScopeGTE applies the GTE predicate on the "scope" field.
func ScopeGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldScope, v))
}

// ScopeLT applies the LT predicate on the "scope" field.
func ScopeLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldScope, v))
}

// ScopeLTE applies the LTE predicate on the "scope" field.
func ScopeLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldScope, v))
}

// ScopeContains applies the Contains predicate on the "scope" field.
func ScopeContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldScope, v))
}

// ScopeHasPrefix applies the HasPrefix predicate on the "scope" field.
func ScopeHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldScope, v))
}

// ScopeHasSuffix applies the HasSuffix predicate on the "scope" field.
func ScopeHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldScope, v))
}

// ScopeEqualFold applies the EqualFold predicate on the "scope" field.
func ScopeEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldScope, v))
}

// ScopeContainsFold applies the ContainsFold predicate on the "scope" field.
func ScopeContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldScope, v))
}

// IsTransientEQ applies the EQ predicate on the "is_transient" field.
func IsTransientEQ(v bool) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldIsTransient, v))
}

// IsTransientNEQ applies the NEQ predicate on the "is_transient" field.
func IsTransientNEQ(v bool) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldIsTransient, v))
}

// SerializationFormatEQ applies the EQ predicate on the "serialization_format" field.
func SerializationFormatEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldSerializationFormat, v))
}

// SerializationFormatNEQ applies the NEQ predicate on the "serialization_format" field.
func SerializationFormatNEQ(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldSerializationFormat, v))
}

// SerializationFormatIn applies the In predicate on the "serialization_format" field.
func SerializationFormatIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldSerializationFormat, vs...))
}

// SerializationFormatNotIn applies the NotIn predicate on the "serialization_format" field.
func SerializationFormatNotIn(vs ...string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldSerializationFormat, vs...))
}

// SerializationFormatGT applies the GT predicate on the "serialization_format" field.
func SerializationFormatGT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldSerializationFormat, v))
}

// SerializationFormatGTE applies the GTE predicate on the "serialization_format" field.
func SerializationFormatGTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldSerializationFormat, v))
}

// SerializationFormatLT applies the LT predicate on the "serialization_format" field.
func SerializationFormatLT(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldSerializationFormat, v))
}

// SerializationFormatLTE applies the LTE predicate on the "serialization_format" field.
func SerializationFormatLTE(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldSerializationFormat, v))
}

// SerializationFormatContains applies the Contains predicate on the "serialization_format" field.
func SerializationFormatContains(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContains(FieldSerializationFormat, v))
}

// SerializationFormatHasPrefix applies the HasPrefix predicate on the "serialization_format" field.
func SerializationFormatHasPrefix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasPrefix(FieldSerializationFormat, v))
}

// SerializationFormatHasSuffix applies the HasSuffix predicate on the "serialization_format" field.
func SerializationFormatHasSuffix(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldHasSuffix(FieldSerializationFormat, v))
}

// SerializationFormatEqualFold applies the EqualFold predicate on the "serialization_format" field.
func SerializationFormatEqualFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEqualFold(FieldSerializationFormat, v))
}

// SerializationFormatContainsFold applies the ContainsFold predicate on the "serialization_format" field.
func SerializationFormatContainsFold(v string) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldContainsFold(FieldSerializationFormat, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v int) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldTenantID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProcessVariable) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProcessVariable) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProcessVariable) predicate.ProcessVariable {
	return predicate.ProcessVariable(sql.NotPredicates(p))
}
